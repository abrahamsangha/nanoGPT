


































 

  

 
 

Rally®

 

  

 

  



 Rally®

Table of Contents

Release Notes.....................................................................................................................................21
Q1 2023 Release Notes................................................................................................................................................. 22

Q1 2023 Closed Defects.......................................................................................................................................... 22
Q4 2022 Release Notes................................................................................................................................................. 22

Q4 2022 Closed Defects.......................................................................................................................................... 24
Q3 2022 Release Notes................................................................................................................................................. 24
Q2 2022 Release Notes................................................................................................................................................. 26
Rally Deprecation Notices.............................................................................................................................................28
Product Accessibility Features.....................................................................................................................................28

Getting Started................................................................................................................................... 31
Log into Rally................................................................................................................................................................. 31
Choose a Role................................................................................................................................................................ 31
Set Up Your Profile........................................................................................................................................................ 33

Edit Your Profile........................................................................................................................................................ 33
Change Your Password............................................................................................................................................ 34
Configure Your Settings............................................................................................................................................ 35
Choose a Workspace or Project...............................................................................................................................35
Disable Sessions.......................................................................................................................................................36

Set Up Notifications....................................................................................................................................................... 36
Set Up Email Notifications........................................................................................................................................ 36
Add the My Notifications App....................................................................................................................................37

Set up an RSS Feed for Change Notification...................................................................................................37
Creating Notification Rules....................................................................................................................................... 37

Enable a Work Item Type Notification........................................................................................................... 39
Create a New Notification Rule......................................................................................................................... 40
Delete a Notification Rule..................................................................................................................................43
Make a Notification Rule Inactive...................................................................................................................... 44

Set Your Display Preferences....................................................................................................................................... 44
Using Your Dashboard...................................................................................................................................................45
Create Custom Pages.................................................................................................................................................... 46

Create a Custom Page............................................................................................................................................. 48
Edit a Custom Page..................................................................................................................................................49
Delete a Custom Page............................................................................................................................................. 51
Copy a Custom Page............................................................................................................................................... 51
Using a Shared Custom Page..................................................................................................................................51
Filter a Custom Page by an Iteration, Release, or Milestone.................................................................................. 52

 2



 Rally®

View a Custom Page Full Screen............................................................................................................................ 53

Learning Rally.....................................................................................................................................54
Rally Video Tutorials...................................................................................................................................................... 54
Rally Page Help.............................................................................................................................................................. 57
Role-Based Help............................................................................................................................................................. 60
Tutorial: Learn Rally in Five Easy Steps..................................................................................................................... 65
Rally Quick Start for Team Members........................................................................................................................... 70

I Just Need to Update My Tasks..............................................................................................................................70
How Do I Find My Work to Update?........................................................................................................................ 71
I Found a Bug While Working!................................................................................................................................. 72
I Have an Idea to Help Meet Our Team and Organization Goals............................................................................ 73
What Settings Can I Configure?...............................................................................................................................73

Rally Scrum Master Quick Start................................................................................................................................... 73
Setting Up Your Agile Team..................................................................................................................................... 73
Customizing Your Scrum Master Dashboard........................................................................................................... 74
Facilitating Team Standups with Rally......................................................................................................................75
Facilitating Planning Meetings.................................................................................................................................. 75
Facilitating Retrospectives........................................................................................................................................ 76

Learning Agile.................................................................................................................................... 77
Agile Video Tutorials......................................................................................................................................................77
The Agile Primer.............................................................................................................................................................78
The Daily Standup..........................................................................................................................................................81
Definition of Done.......................................................................................................................................................... 82
Create Meeting Agendas............................................................................................................................................... 83
The Product Backlog..................................................................................................................................................... 83
Agile FAQ........................................................................................................................................................................ 84
Top 10 Mistakes Made by New Agile Teams...............................................................................................................86
Story Estimation Timeline............................................................................................................................................. 88
Agile Practices................................................................................................................................................................ 88

Write a Great User Story.......................................................................................................................................... 89
Break Down Stories.................................................................................................................................................. 91
Prioritize the Backlog................................................................................................................................................ 93
Design a Portfolio Kanban Board............................................................................................................................. 93
Iteration Demo and Review Meetings...................................................................................................................... 97
Retrospect Your Iterations.........................................................................................................................................97
Cancel an Iteration....................................................................................................................................................98

Enterprise Scale Agile................................................................................................................................................... 99
Agile Release Train (ART) Team Planning Dashboard............................................................................................ 99
PSI Program / Portfolio Dashboard........................................................................................................................ 105

 3



 Rally®

Release Train Backlog Dashboard......................................................................................................................... 108
Weighted Shortest Job First (WSJF) Dashboard................................................................................................... 112

Administration.................................................................................................................................. 115
IT Administration.......................................................................................................................................................... 116

How Users Authenticate......................................................................................................................................... 117
Set Up Single Sign-On (SSO)......................................................................................................................... 117
Using Rally Application Manager.....................................................................................................................122

Browser Support......................................................................................................................................................126
Configuring Your Windows DNS Server to Use Your Local ISP's DNS Server......................................................126

Rally Administrator Video Tutorials........................................................................................................................... 128
Configure Your Subscription...................................................................................................................................... 129

View Your Subscription........................................................................................................................................... 129
Customize Your Subscription.................................................................................................................................. 131

Subscription Context Settings..........................................................................................................................132
Subscription Email Settings............................................................................................................................. 135
Subscription Admin Capabilities Settings........................................................................................................ 135
Subscription Password Policies.......................................................................................................................136

Customizing User Fields......................................................................................................................................... 137
Using Authentication............................................................................................................................................... 143

SSO Authentication With Exceptions.............................................................................................................. 143
Custom Log Out Landing Page.......................................................................................................................145

Manage Webhooks................................................................................................................................................. 145
View or Delete Webhooks............................................................................................................................... 146
Enable or Disable Webhooks.......................................................................................................................... 147
Set Up an HMAC Secret................................................................................................................................. 147

Share Custom Pages..............................................................................................................................................148
Managing Workspaces in Your Subscription.......................................................................................................... 149

Print a Report of all Workspaces.................................................................................................................... 150
Create a New Workspace................................................................................................................................150
Timebox Administration....................................................................................................................................153

Managing Apps in Your Subscription......................................................................................................................154
Enable Custom URL or Custom HTML Apps................................................................................................. 154
Enable Community Apps in the App Catalog..................................................................................................155
Managing Subscription Apps........................................................................................................................... 156

Customer Managed Keys (CMK)............................................................................................................................158
Maintaining CMK..............................................................................................................................................161

Using Mutual TLS (mTLS) with Rally..................................................................................................................... 166
Using Cross-Origin Resource Sharing....................................................................................................................167

Managing Your Workspace......................................................................................................................................... 168
View the Workspace Summary Page..................................................................................................................... 169

 4



 Rally®

Print Workspace Details..........................................................................................................................................170
Customizing a Workspace...................................................................................................................................... 170
Work Rules..............................................................................................................................................................174

Create a Work Rule.........................................................................................................................................176
Edit a Work Rule............................................................................................................................................. 178
Disable a Work Rule........................................................................................................................................178
Delete a Work Rule......................................................................................................................................... 179
View Revision History for Work Rules.............................................................................................................179

Creating and Customizing Work Item Fields..........................................................................................................179
View Fields.......................................................................................................................................................180
Edit Fields........................................................................................................................................................ 182
Delete Fields.................................................................................................................................................... 183
Manage Field Visibility for Workspaces and Projects..................................................................................... 184
Create Custom Fields...................................................................................................................................... 186
Auditing Custom Field Usage..........................................................................................................................187

Configuring Objectives for Your Workspace...........................................................................................................189
Enable OKRs for Your Workspace.................................................................................................................. 190
Create OKR Administrators............................................................................................................................. 191
Customize Objective Levels............................................................................................................................ 192
Customize the State Field for Objective Hierarchy Levels..............................................................................193
Create Custom Fields for Objectives.............................................................................................................. 195

Customizing Portfolio Item Types........................................................................................................................... 196
Portfolio Item Types......................................................................................................................................... 196
Rename Portfolio Item Types.......................................................................................................................... 197
Customizing Fields for Portfolio Item Types....................................................................................................198

Managing Tags........................................................................................................................................................ 206
Modifying Schedule States..................................................................................................................................... 207
Close Projects and Workspaces.............................................................................................................................209
Enable Build and SCM Traceability........................................................................................................................ 211
Automatically Unblock Portfolio Items.................................................................................................................... 212

Understanding the Rally Project Hierarchy...............................................................................................................212
Set Up Your Projects (Teams).....................................................................................................................................221

View a Single Project..............................................................................................................................................223
View All Projects as a Workspace Administrator or Subscription Administrator.................................................... 223
Create a Project...................................................................................................................................................... 224
Edit a Project...........................................................................................................................................................224
Create a Child Project............................................................................................................................................ 225
Change an Existing Project to a Child Project....................................................................................................... 226
Managing Project (Team) Membership...................................................................................................................226

Change Project Permissions for an Existing User.......................................................................................... 227

 5



 Rally®

Add an Existing User to a Project...................................................................................................................228
Copy a Set of Users From an Existing Project............................................................................................... 228

Project Fields...........................................................................................................................................................229
Administer Programs................................................................................................................................................... 230

Use Project Scoping and Rollups...........................................................................................................................230
Use Portfolio Items..................................................................................................................................................233

Managing Users............................................................................................................................................................234
Viewing Users......................................................................................................................................................... 234
Creating and Editing Users.....................................................................................................................................237

Create a New User..........................................................................................................................................237
User Fields....................................................................................................................................................... 238
Set User Access Permissions......................................................................................................................... 239
Change a User Name......................................................................................................................................241
Copy a User.....................................................................................................................................................241
Bulk Edit Multiple Users.................................................................................................................................. 241
Disable, Delete, or Unlock a User...................................................................................................................242

Resetting User Passwords......................................................................................................................................244
Monitoring Usage and Licenses............................................................................................................................. 245
Resolve User Name Conflicts in Rally................................................................................................................... 245
Invite Users............................................................................................................................................................. 247

Administer Rally Integrations..................................................................................................................................... 247
Data Moves....................................................................................................................................................................247

Subscription Merge................................................................................................................................................. 247
Workspace Move.....................................................................................................................................................251

Sandbox Requests....................................................................................................................................................... 254
Using..................................................................................................................................................255

Work Efficiently in Rally.............................................................................................................................................. 255
Keyboard Navigation............................................................................................................................................... 255

Keyboard Shortcuts.......................................................................................................................................... 256
Customizing Pages and Views............................................................................................................................... 258

Controlling What Projects You See................................................................................................................. 258
Customizing How a Board Displays................................................................................................................ 260
Customizing How a List Displays.................................................................................................................... 265
Customize Navigation...................................................................................................................................... 268
Saving and Sharing Views...............................................................................................................................274

Common Tasks........................................................................................................................................................276
Common Actions..............................................................................................................................................276
Bulk Actions..................................................................................................................................................... 280
Using Filters..................................................................................................................................................... 282
Convert Work Items......................................................................................................................................... 286

 6



 Rally®

Search Work Items.......................................................................................................................................... 286
Watching Work Items.......................................................................................................................................291
Using HTML Tags in Text Fields..................................................................................................................... 297

Common Pages and Elements...............................................................................................................................299
Using the Work Item Toolbar to Create and Delete Work Items.....................................................................300
Using the Toolbar to Modify Work Items......................................................................................................... 302
Pinned and Recent Item Lists......................................................................................................................... 308
Recycle Bin...................................................................................................................................................... 310
Detail Editor......................................................................................................................................................313
Work Views Page.............................................................................................................................................321
Work Item Templates....................................................................................................................................... 324
Viewing Collections.......................................................................................................................................... 327

Missing Work Items.................................................................................................................................................331
File a Feature Request........................................................................................................................................... 333

Building Your Backlog.................................................................................................................................................333
Managing the Backlog............................................................................................................................................ 334

Customizing the Backlog Page........................................................................................................................335
Creating Backlog Items....................................................................................................................................336
Editing Backlog Items...................................................................................................................................... 338

Sizing and Estimates Overview.............................................................................................................................. 339
Size and Estimate for Your Team....................................................................................................................342

User Stories.............................................................................................................................................................349
Viewing User Stories....................................................................................................................................... 350
Creating User Stories...................................................................................................................................... 351
Creating Child User Stories.............................................................................................................................352
User Story Fields............................................................................................................................................. 355

Prioritizing Work...................................................................................................................................................... 356
Drag-and-Drop Ranking................................................................................................................................... 357
Rank a List with a Toolbar Action................................................................................................................... 358
Manual Ranking............................................................................................................................................... 358
Change Your Ranking Method........................................................................................................................ 359

Creating Parent-Child Relationships Between Stories........................................................................................... 359
Manage Parent-Child Story Hierarchies.......................................................................................................... 360
View Parent-Child Hierarchies.........................................................................................................................362
Track Hierarchy Completion............................................................................................................................ 364

Identifying Dependencies........................................................................................................................................ 365
Parent-Child Relationships...............................................................................................................................366
Predecessor-Successor Relationships (Dependencies)..................................................................................367

Team Planning Page...............................................................................................................................................371
Changing Your View of the Team Planning Page........................................................................................... 371

 7



 Rally®

Reviewing the Backlog on the Team Planning Page...................................................................................... 372
Scheduling Work Into Iterations Using the Team Planning Page....................................................................374
Identify Issues on the Team Planning Page....................................................................................................377
View Dependencies in the Team Planning Page............................................................................................ 377
Manage Tasks in the Team Planning Page.....................................................................................................378

Defining Tasks......................................................................................................................................................... 378
Task State Updates Parent Schedule State....................................................................................................379
Viewing Your Tasks..........................................................................................................................................379
Creating Tasks................................................................................................................................................. 380
Editing Tasks.................................................................................................................................................... 384
Copying Tasks..................................................................................................................................................384
Assign Tasks.................................................................................................................................................... 386
Importing Tasks................................................................................................................................................ 387
Task Fields....................................................................................................................................................... 388

Using Tags...............................................................................................................................................................389
Create a New Tag............................................................................................................................................389
Using Tags in Saved Views.............................................................................................................................391
Tagging Multiple Items at Once.......................................................................................................................391

Use Timeboxes............................................................................................................................................................. 391
Timebox-Based Planning........................................................................................................................................ 393

Working with Iterations.................................................................................................................................... 393
Working with Releases.................................................................................................................................... 403
Working with Milestones.................................................................................................................................. 411

Timebox-Based Tracking.........................................................................................................................................420
Iteration Status Page....................................................................................................................................... 420
Release Tracking Page....................................................................................................................................427
Release Status Page....................................................................................................................................... 438
Work Product Status Page.............................................................................................................................. 439
Release Metrics Page......................................................................................................................................439
Managing Unfinished Work..............................................................................................................................440

Use Flow-Based Boards (Kanban)............................................................................................................................. 444
Kanban Metrics....................................................................................................................................................... 449
Kanban Principles................................................................................................................................................... 451
Additional Concepts................................................................................................................................................ 451
Flow-Based Planning.............................................................................................................................................. 452
Flow-Based Tracking...............................................................................................................................................455

Team Board Page............................................................................................................................................ 455
Portfolio Kanban Board....................................................................................................................................466
View Charts......................................................................................................................................................473

Using Portfolio Items................................................................................................................................................... 499

 8



 Rally®

Finding Portfolio Items............................................................................................................................................ 500
Portfolio Best Practices...........................................................................................................................................500

Structuring Your Project Tree.......................................................................................................................... 500
Managing Your Portfolio Items........................................................................................................................ 508

Portfolio Item Planning............................................................................................................................................509
Creating Portfolio Items................................................................................................................................... 510
Manage Portfolio Dependencies......................................................................................................................517
Release Planning Page................................................................................................................................... 519
Capacity Planning Page.................................................................................................................................. 522
Using Investments............................................................................................................................................535

Portfolio Item Tracking............................................................................................................................................ 538
Using the Portfolio Items Page........................................................................................................................538
Using the Portfolio Kanban Board...................................................................................................................541
Using the Custom List App to Track Portfolio Items....................................................................................... 542

Using the Timeline Page.........................................................................................................................................542
View Portfolio Item Progress on the Timeline Page........................................................................................547
Filter the Timeline Page...................................................................................................................................549
Adjust Portfolio Item Date Ranges on the Timeline Page...............................................................................551
Adjusting Your Timeline Page View.................................................................................................................552
View Milestones on the Timeline Page........................................................................................................... 553
View Dependencies on the Timeline Page..................................................................................................... 554
Use Edit Mode on the Timeline Page............................................................................................................. 555
Move Portfolio Items on the Timeline Page.................................................................................................... 556

Using Objectives and Key Results (OKRs) in Rally.................................................................................................556
Associating OKRs with Work.................................................................................................................................. 558
Creating OKRs........................................................................................................................................................ 558

Create an Objective......................................................................................................................................... 559
Add Key Results to an Objective.................................................................................................................... 560
Enter a Confidence Score............................................................................................................................... 560

Viewing OKRs......................................................................................................................................................... 561
Associate Work with an OKR.......................................................................................................................... 562
Add a Sub-Objective to an Objective.............................................................................................................. 563
Manage Objectives from the Toolbar.............................................................................................................. 564
Add a Discussion to an Objective................................................................................................................... 566
Import Objectives for OKRs.............................................................................................................................567

Creating an OKR Hierarchy in Rally.......................................................................................................................569
Examples of OKR Hierarchies.........................................................................................................................572

Check Status.................................................................................................................................................................574
Collaborate With Team Members........................................................................................................................... 575

@mentions....................................................................................................................................................... 575

 9



 Rally®

Discussions...................................................................................................................................................... 575
Attachments......................................................................................................................................................579
Dashboards...................................................................................................................................................... 580
Shared Views, Pages, and Apps.....................................................................................................................581

Report Blocked Work.............................................................................................................................................. 581
Mark a Work Item or Portfolio Item as Blocked.............................................................................................. 581
View Blocked Work Items................................................................................................................................583

View Build Status.................................................................................................................................................... 584
View Changesets Associated with a Work Item..............................................................................................584
Display Build Reports on Your Dashboard or Custom Page.......................................................................... 585
Build Status Analytics...................................................................................................................................... 587

View Revision History............................................................................................................................................. 590
View Team Status Page..........................................................................................................................................590

Managing Defects and Defect Suites.........................................................................................................................592
Defects.....................................................................................................................................................................593

Viewing Defects............................................................................................................................................... 593
Creating Defects.............................................................................................................................................. 593
Editing Defects................................................................................................................................................. 594
Managing Duplicate Defects............................................................................................................................595
Delete a Defect................................................................................................................................................ 596
Defect Fields.................................................................................................................................................... 596

Defect Suites........................................................................................................................................................... 598
Viewing Defect Suites......................................................................................................................................598
Create a Defect Suite...................................................................................................................................... 599
Adding Defects to a Defect Suite....................................................................................................................599
Editing Defect Suites....................................................................................................................................... 600
Delete a Defect Suite...................................................................................................................................... 601
Defect Suite Fields...........................................................................................................................................601

Managing Tests.............................................................................................................................................................602
Rally Test Management Overview.......................................................................................................................... 603

Test Management Related Rally Pages.......................................................................................................... 604
Test Cases...............................................................................................................................................................605

Creating Test Cases........................................................................................................................................ 606
Add Test Case Details..................................................................................................................................... 609
Adding Defects to Test Cases......................................................................................................................... 609
Edit a Test Case.............................................................................................................................................. 610
Delete a Test Case.......................................................................................................................................... 611
Import Test Cases............................................................................................................................................611
Export Test Cases............................................................................................................................................613
Test Case Fields.............................................................................................................................................. 614

 10



 Rally®

Test Plans................................................................................................................................................................615
Creating Test Folders.......................................................................................................................................615
Edit a Test Folder............................................................................................................................................ 617
Delete Test Folders..........................................................................................................................................617
Adding Test Cases to Test Folders................................................................................................................. 617
Rank Test Cases in a Test Folder...................................................................................................................618
Remove a Test Case from a Test Folder........................................................................................................ 619
View the Status of Test Cases in a Test Folder..............................................................................................619
View a Test Run from a Plan.......................................................................................................................... 620

Test Case Results................................................................................................................................................... 620
Set Up the Test Cases Page to View Test Case Results............................................................................... 621
Add a New Test Case Result.......................................................................................................................... 621
Edit a Test Case Result...................................................................................................................................622
Delete a Test Case Result...............................................................................................................................622
Test Case Result Fields...................................................................................................................................623

Test Runs................................................................................................................................................................ 623
View a Test Run Associated with a Work Item............................................................................................... 623
View a Test Run Associated with a Test Case............................................................................................... 624
View a Test Run from a Test Set.................................................................................................................... 625
View a Test Run from a Test Plan.................................................................................................................. 626

Test Sets..................................................................................................................................................................628
Create a Test Set.............................................................................................................................................628
Add Test Cases to a Test Set......................................................................................................................... 629
Edit a Test Set................................................................................................................................................. 629
Re-Order Test Cases in a Test Set................................................................................................................. 630
Copy a Test Set............................................................................................................................................... 631
View a Test Run.............................................................................................................................................. 632
Delete a Test Set............................................................................................................................................. 632
Remove a Test Case From a Test Set............................................................................................................633
Test Set Fields................................................................................................................................................. 633

Quality Management............................................................................................................................................... 634
Using the Quality Management Page............................................................................................................. 634
Test Folders......................................................................................................................................................637
Test Cases....................................................................................................................................................... 638

Managing Risks............................................................................................................................................................ 639
Create a Risk in Work Views..................................................................................................................................640
Create a Risk on a Work Item................................................................................................................................640
Link a Risk to a Work Item.....................................................................................................................................641
Risk Fields...............................................................................................................................................................641
Viewing and Editing Risks...................................................................................................................................... 643

 11



 Rally®

How to ROAM Risks With a Custom Board...........................................................................................................643
Importing and Exporting Data.................................................................................................................................... 644

Import Data..............................................................................................................................................................645
Export Data............................................................................................................................................................. 647
Exporting Data as XML...........................................................................................................................................647

Reporting...........................................................................................................................................649
Rally Reports and Charts............................................................................................................................................649

Burndown / Burnup Charts......................................................................................................................................649
Iteration Burndown Chart.................................................................................................................................650
Iteration Burnup Chart..................................................................................................................................... 650
Release Burnup Chart..................................................................................................................................... 651
Story Burnup Chart.......................................................................................................................................... 652
Story Burndown Chart..................................................................................................................................... 653
Tagged Story Burndown Chart........................................................................................................................ 655

Cumulative Flow Charts..........................................................................................................................................656
Iteration Cumulative Flow Diagram Chart....................................................................................................... 656
Release Cumulative Flow Diagram Chart....................................................................................................... 657
Story Cumulative Flow Diagram Chart............................................................................................................658

Throughput and Velocity Charts............................................................................................................................. 659
Cycle/Lead Time Chart.................................................................................................................................... 660
Throughput Chart............................................................................................................................................. 661
Velocity Chart................................................................................................................................................... 662

Defect Analysis Charts............................................................................................................................................663
Iteration Defects by Priority Chart................................................................................................................... 664
Iteration Defects by State Chart...................................................................................................................... 664
Defects by Priority Chart................................................................................................................................. 665
Defects by State Chart.................................................................................................................................... 666
Defect Trend Chart.......................................................................................................................................... 667
Release Defect Trend Chart............................................................................................................................668
Top Files by Defects Chart..............................................................................................................................669

Build Health Charts................................................................................................................................................. 669
Build Health Chart............................................................................................................................................670
Build Health by Iteration Chart........................................................................................................................ 670
Top Files by Changes Chart............................................................................................................................671

Custom Reports...................................................................................................................................................... 672
How to Troubleshoot Chart-Related Issues............................................................................................................674

Track and Report Billable Time.................................................................................................................................. 675
Enter Your Time...................................................................................................................................................... 675

Add Timesheet Entries.....................................................................................................................................676
Enter Hours on a Timesheet........................................................................................................................... 679

 12



 Rally®

Remove Timesheet Entries..............................................................................................................................679
Generate Timesheet Reports..................................................................................................................................679

Generate a Timesheet Report......................................................................................................................... 680
Save a Timesheet Report................................................................................................................................681
Generate a Capitalization Report.................................................................................................................... 681
Generate a Billing Report................................................................................................................................ 681
Report Time Spent on Top-Level Stories........................................................................................................ 682
Generate Weekly Time Cards......................................................................................................................... 683
Export Timesheet Reports............................................................................................................................... 683

Rally Insights................................................................................................................................................................ 683
Tour of Rally Insights.............................................................................................................................................. 685
Rally Insights Metrics.............................................................................................................................................. 687
Make Data Work for You........................................................................................................................................ 688
Set Up Rally Insights.............................................................................................................................................. 689

Viewing Metrics................................................................................................................................................ 691
Virtual Workspaces within the Rally Insights Page......................................................................................... 696

View Your Overall Performance..............................................................................................................................697
View the Different Dimensions................................................................................................................................697

View Full Time Equivalent (FTE) Values on the Insights Page.......................................................................698
Use the Individual Dimensions............................................................................................................................... 699
Performance Index Calculation...............................................................................................................................705

SDPI Measurements........................................................................................................................................ 707
Insights Frequently Asked Questions..................................................................................................................... 713

Capturing Data Correctly for Insights.............................................................................................................. 714
How to View Rally Insights..............................................................................................................................716
Differences in Quarterly Percentile Scores and Monthly Scores.................................................................... 716
Closed or Reparented Projects and Historical Data....................................................................................... 717
Expected Differences in the Number of Items in Throughput and Time In Process Drill Downs.....................717

Integrating with Rally.......................................................................................................................718
Rally Integrations Best Practices............................................................................................................................... 718

Getting Started with Enterprise Integration Framework......................................................................................... 718
Using Create and Update Services........................................................................................................................ 718
Managing the Logger and Log Files.......................................................................................................................720
Multiple Configuration Files.....................................................................................................................................721
Using Field Handlers...............................................................................................................................................723
Upgrading a Rally Connector on a Windows Machine...........................................................................................725
Upgrading a Rally Connector on a Non-Windows Machine...................................................................................725
How to Map Fields..................................................................................................................................................725
Connector Lockfile...................................................................................................................................................734
Running as a Scheduled Task on Windows...........................................................................................................735

 13



 Rally®

Email Notification of Errors and Warnings..............................................................................................................735
Finding XML Syntax Errors.....................................................................................................................................736
Known Limitations of the EIF Connectors.............................................................................................................. 737
Generic Errors Generated by the EIF Connectors.................................................................................................737

Supported Versions for Rally Connectors................................................................................................................ 738
Download Rally Connectors....................................................................................................................................... 738
Deprecated Connectors............................................................................................................................................... 738
Rally Integrations......................................................................................................................................................... 739

Agile Requirements Designer................................................................................................................................. 742
Applitools Eyes (Third-Party Integration)................................................................................................................ 743
Atlassian Jira (OpsHub).......................................................................................................................................... 743
Blueprint (OpsHub)..................................................................................................................................................744
BMC Release Process Management (Third-Party Integration).............................................................................. 744
BMC Remedy (Kovair Omnibus)............................................................................................................................ 744
BMC Remedy (OpsHub)......................................................................................................................................... 745
Caliber (OpsHub).................................................................................................................................................... 745
Centrify.................................................................................................................................................................... 746
Clarity™.....................................................................................................................................................................746
CloudBees (Third-Party Integration)....................................................................................................................... 746
Digite SwiftKanban (OpsHub)................................................................................................................................. 747
Enterprise Integration Framework (EIF) Connectors..............................................................................................747
Enterprise Tester (Third-Party Integration)............................................................................................................. 756
Fog Creek FogBugz (OpsHub)...............................................................................................................................757
Git............................................................................................................................................................................ 757

Rally VCS Connector for Git Installation and User Guide...............................................................................758
Git (OpsHub).................................................................................................................................................... 766

IBM ClearQuest (OpsHub)......................................................................................................................................767
IBM DOORS (OpsHub)...........................................................................................................................................767
IBM Rational ClearCase (OpsHub).........................................................................................................................769
IBM Rational Team Concert (OpsHub)...................................................................................................................769
IBM RequisitePro (OpsHub)................................................................................................................................... 770
Jama Connect (Jama Connect Integrations).......................................................................................................... 770
Jenkins.....................................................................................................................................................................772

Rally Build Connector for Jenkins Installation and User Guide...................................................................... 774
Jenkins Integration with Rally Software and GitHub (OpsHub)..............................................................................783
Mercurial.................................................................................................................................................................. 783

Rally VCS Connector for Mercurial Installation and User Guide.................................................................... 784
Micro Focus.............................................................................................................................................................791
Micro Focus ALM/QC Integration with Rally Software (OpsHub)...........................................................................791
Micro Focus ALM/Quality Center............................................................................................................................792

 14



 Rally®

Installation and User Guide for the Rally Connector for Micro Focus ALM/Quality Center............................. 793
Sample Configuration Files for Micro Focus ALM/Quality Center...................................................................848

Microsoft Team Foundation Server (Team Foundation Version Control)................................................................849
Rally VCS Connector for TFS (TFVC) Installation Guide............................................................................... 849
Sample Configuration Files for VCS TFS....................................................................................................... 860

Microsoft TFS/VSTS for Work Items...................................................................................................................... 860
Work Item Connector for Microsoft TFS/VSTS Installation and User Guide...................................................860

Okta......................................................................................................................................................................... 890
Ping Identity.............................................................................................................................................................890
piplanning App (Third-Party Integration).................................................................................................................890
Planisware (Third-Party Integration)....................................................................................................................... 890
Policy-Based VCS Connectors............................................................................................................................... 891

Azure DevOps Server (OpsHub).....................................................................................................................893
Rally VCS Connector for Bitbucket................................................................................................................. 893
Rally VCS Connector for GitHub and GitHub Enterprise................................................................................901
Rally VCS Connector for TFS/VSTS (Git).......................................................................................................908

PractiTest (Third-Party Integration)......................................................................................................................... 915
ProdPad (Third-Party Integration)...........................................................................................................................916
QMetry (Third-Party Integration)............................................................................................................................. 916
qTest (Third-Party Integration)................................................................................................................................ 916
Rally Adapter for Jira.............................................................................................................................................. 916

Rally Adapter for Jira Functionality................................................................................................................. 919
Rally Adapter for Jira Release Notes..............................................................................................................929
Rally Adapter for Jira Release and Support Lifecycle Dates.......................................................................... 932
Installing the Rally Adapter for Jira................................................................................................................. 933
Setting Up the Rally Adapter for Jira.............................................................................................................. 935
Maintaining the Rally Adapter for Jira............................................................................................................. 935
Rally Adapter for Jira Configuration Guide..................................................................................................... 942
Troubleshooting the Rally Adapter for Jira......................................................................................................951

Rally-Jira Work Item Connector (WIC)................................................................................................................... 952
Rally-Jira Work Item Connector Installation and User Guide..........................................................................953

Rally Add-in for Excel 2016 and Excel for Microsoft 365.......................................................................................998
Rally Add-In for Excel 2016 and Excel for Microsoft 365 Installation and User Guide....................................998

Rally Add-in for Microsoft Excel 2010 and 2013.................................................................................................. 1008
Rally Add-in for Excel 2010 and 2013 Installation and User Guide..............................................................1008

Rally Bot GitHub App Integration......................................................................................................................... 1035
Install the Rally Bot GitHub App Integration................................................................................................. 1038
Update the Rally Bot GitHub App Integration Settings................................................................................. 1040
Remove the Rally Bot GitHub App Integration..............................................................................................1040
Using the Rally Bot GitHub App Integration..................................................................................................1041

 15



 Rally®

Rally Build Connector for Bamboo....................................................................................................................... 1044
Rally Build Connector for Bamboo Operation............................................................................................... 1045
Troubleshooting the Rally Build Connector for Bamboo............................................................................... 1046
Appendix A - Editing the Rally Build Connector for Bamboo Configuration File........................................... 1046
Appendix B - Bamboo Plan Specification..................................................................................................... 1048
Appendix C - AgileCentral Project Specification........................................................................................... 1048
Appendix D - Protect Credentials..................................................................................................................1049
Rally Build Connector for Bamboo Revision History.....................................................................................1049

Rally Database Connector (Microsoft SQL Server)..............................................................................................1049
Install the Rally Database Connector (Microsoft SQL Server)......................................................................1051
Setup the Rally Database Connector (Microsoft SQL Server)......................................................................1051
Rally Database Connector (Microsoft SQL Server) Operation......................................................................1052
Troubleshooting the Rally Database Connector (Microsoft SQL Server)......................................................1054
Appendix A - Rally Database Connector (Microsoft SQL Server) Configuration File....................................1055
Appendix B - Rally Project Specification for the Rally Database Connector (Microsoft SQL Server)............1057
Rally Database Connector (Microsoft SQL Server) Revision History........................................................... 1058

Rally Database Connector (Postgres).................................................................................................................. 1058
Install the Rally Database Connector (Postgres).......................................................................................... 1060
Setup the Rally Database Connector (Postgres).......................................................................................... 1060
Rally Database Connector (Postgres) Operation.......................................................................................... 1061
Troubleshooting the Rally Database Connector (Postgres).......................................................................... 1063
Appendix A - Rally Database Connector (Postgres) Configuration File........................................................1064
Appendix B - Rally Project Specification for the Rally Database Connector (Postgres)............................... 1066
Appendix C - Postgres Database User Privileges........................................................................................ 1067
Rally Database Connector (Postgres) Revision History................................................................................1068

Rally Integration with ServiceNow DevOps (Third-Party Integration)...................................................................1068
Salesforce (OpsHub).............................................................................................................................................1068
SD Elements (Third-Party Integration)..................................................................................................................1069
Serena Business Manager (OpsHub)...................................................................................................................1069
ServiceNow (OpsHub)...........................................................................................................................................1070
Silk Central Test Manager (Third-Party Integration)............................................................................................. 1070
Subversion to Rally............................................................................................................................................... 1071

Rally VCS Connector for Subversion Installation and User Guide............................................................... 1071
TestRail (Third-Party Integration).......................................................................................................................... 1084
Testuff (Third-Party Integration)............................................................................................................................ 1084
Third-Party Context............................................................................................................................................... 1085
UX360 (Third-Party Integration)............................................................................................................................1085
ValueOps Connectors Powered by Tasktop......................................................................................................... 1085
Vim (Third-Party Integration).................................................................................................................................1086
Work Item Connector API Key Support................................................................................................................1087

 16



 Rally®

ZAPTEST (Third-Party Integration).......................................................................................................................1088
Zendesk (OpsHub)................................................................................................................................................ 1088

Building Rally Integrations........................................................................................................................................1088
Web Services API (WSAPI)..................................................................................................................................1089

Advanced WSAPI Rally Topics......................................................................................................................1089
Java Toolkit for Accessing the Rally Web Services API............................................................................... 1093
.NET Toolkit for Accessing the Rally Web Services API...............................................................................1093
Node.js Toolkit for Accessing the Rally Web Services API...........................................................................1093
Python Toolkit for Accessing the Rally Web Services API............................................................................1093
Ruby Toolkit for Accessing the  Rally Web Services API............................................................................. 1093

Idea Manager...............................................................................................................................................................1093
Rally Idea Manager for End Users.......................................................................................................................1094

Find Ideas...................................................................................................................................................... 1096
View Others' Ideas.........................................................................................................................................1098
View Idea Status............................................................................................................................................1099
Comment on an Idea.....................................................................................................................................1101
Vote on a Idea............................................................................................................................................... 1101
Select Favorite Ideas..................................................................................................................................... 1102
Subscribe to an Idea..................................................................................................................................... 1103

Rally Idea Manager for Administrators................................................................................................................. 1104
Manage Ideas................................................................................................................................................ 1105
Manage Your Site and Users........................................................................................................................ 1117
Rally Idea Manager Integration Setup...........................................................................................................1129
Manage Multiple WebStorms.........................................................................................................................1134
Set Up Site Features..................................................................................................................................... 1145
API Access.....................................................................................................................................................1148

Extending Rally with Apps............................................................................................................1149
Using Rally Apps........................................................................................................................................................1149

App Basics............................................................................................................................................................ 1150
Customizable Apps............................................................................................................................................... 1153
Apps Not Available for Rally On-Premises...........................................................................................................1153
App Catalog...........................................................................................................................................................1154

Agile EVM...................................................................................................................................................... 1159
Blocked Work................................................................................................................................................. 1160
Build Health....................................................................................................................................................1160
Build Health by Iteration................................................................................................................................ 1161
Clarity Timesheet........................................................................................................................................... 1161
Cross-Workspace Release Status.................................................................................................................1164
Custom Board................................................................................................................................................ 1165
Custom HTML................................................................................................................................................ 1172

 17



 Rally®

Custom List.................................................................................................................................................... 1174
Custom List 2.0 App...................................................................................................................................... 1184
Custom URL...................................................................................................................................................1188
Cycle/Lead Time............................................................................................................................................ 1188
Defect Summary Matrix................................................................................................................................. 1189
Defect Trend...................................................................................................................................................1190
Defects by Priority..........................................................................................................................................1191
Defects by State............................................................................................................................................ 1192
Dependency Status Dashboard.....................................................................................................................1192
Dependency Status Dashboard #2................................................................................................................1193
Estimation Board............................................................................................................................................1195
Getting Started for Contributors.....................................................................................................................1196
Getting Started for Executives.......................................................................................................................1196
Getting Started for Organizers.......................................................................................................................1196
Incomplete Stories for Current Iteration........................................................................................................ 1197
Iteration Burndown......................................................................................................................................... 1198
Iteration Burnup..............................................................................................................................................1199
Iteration Cumulative Flow.............................................................................................................................. 1200
Iteration Dashboard........................................................................................................................................1200
Iteration Defects by Priority........................................................................................................................... 1202
Iteration Defects by State.............................................................................................................................. 1202
Iteration Planning Board App.........................................................................................................................1203
Iteration Scope Change................................................................................................................................. 1216
Iteration Summary..........................................................................................................................................1217
Iteration Tracking............................................................................................................................................1219
Kanban Board................................................................................................................................................ 1225
Milestone Burnup........................................................................................................................................... 1239
Milestone Cumulative Flow............................................................................................................................1240
My Availability................................................................................................................................................ 1241
My Defects..................................................................................................................................................... 1242
My Notifications..............................................................................................................................................1243
My Tasks........................................................................................................................................................ 1244
My Test Cases............................................................................................................................................... 1245
Open Defect Age........................................................................................................................................... 1246
Planned vs. Actual Burndown Chart............................................................................................................. 1247
Portfolio Hierarchy..........................................................................................................................................1248
Portfolio Item Burnup..................................................................................................................................... 1249
Portfolio Item Cumulative Flow......................................................................................................................1252
Portfolio Item Timeline................................................................................................................................... 1255
Portfolio Kanban Board App..........................................................................................................................1257

 18



 Rally®

Print Story Cards........................................................................................................................................... 1266
Print Task Cards............................................................................................................................................ 1267
Project Cumulative Flow................................................................................................................................ 1268
Ready to Accept............................................................................................................................................ 1269
Recent Activity............................................................................................................................................... 1270
Release & Iteration Burndown.......................................................................................................................1271
Release Burnup............................................................................................................................................. 1274
Release Cumulative Flow.............................................................................................................................. 1274
Release Dashboard....................................................................................................................................... 1275
Release Defect Trend....................................................................................................................................1277
Release Dependencies.................................................................................................................................. 1278
Release Planning Board................................................................................................................................ 1278
Release Scope Change.................................................................................................................................1287
Release Summary..........................................................................................................................................1288
Source Code Check-In.................................................................................................................................. 1288
Story Deep Copy........................................................................................................................................... 1289
Story Hierarchy.............................................................................................................................................. 1291
Story Map.......................................................................................................................................................1292
Super Customizable Iteration Chart.............................................................................................................. 1293
Super Customizable Release Chart.............................................................................................................. 1294
System Requirement Validation Document................................................................................................... 1295
Task Board..................................................................................................................................................... 1296
Team Member Board..................................................................................................................................... 1303
Throughput..................................................................................................................................................... 1305
Tip of the Day................................................................................................................................................ 1306
Traceability Matrix.......................................................................................................................................... 1306
Unassigned Tasks for Current Iteration.........................................................................................................1307
User Lookup...................................................................................................................................................1308
Velocity Chart................................................................................................................................................. 1310

Build App Queries................................................................................................................................................. 1311
Dates in App Queries.....................................................................................................................................1313
General Query Examples.............................................................................................................................. 1315
Portfolio Item Query Examples......................................................................................................................1317

Community App Catalog....................................................................................................................................... 1321
Subscription Level App Catalog............................................................................................................................1322
App Deprecation....................................................................................................................................................1322

Building Apps for Rally............................................................................................................................................. 1324
Rally Apps on GitHub........................................................................................................................................... 1326
Standards and Policies for App Sharing.............................................................................................................. 1327

Rally On-Premises Edition............................................................................................................ 1329

 19



 Rally®

What's New in Rally On-Premises............................................................................................................................1329
Saved and Shared Views Migration..................................................................................................................... 1332

Quick Views................................................................................................................................................... 1332
Shared and Saved Views.............................................................................................................................. 1340
Migration Issues............................................................................................................................................. 1340

Rally On-Premises versus SaaS...............................................................................................................................1342
Rally On-Premises Release Notes............................................................................................................................1345

Rally On-Premises Version 2.1.0 Release Notes.................................................................................................1345
Rally On-Premises Version 2.1.1 Patch Notes..............................................................................................1350

Rally On-Premises Version 2.0 Release Notes....................................................................................................1354
Rally On-Premises Version 2.0.2 Patch Notes..............................................................................................1358
Rally On-Premises Version 2.0.1 Patch Notes..............................................................................................1362

Rally for FedRAMP.........................................................................................................................1365
Glossary.......................................................................................................................................... 1367
Documentation Legal Notice........................................................................................................ 1383

 20



 Rally®

Release Notes
Rally provides quarterly release notes that include pertinent information regarding features, changes, and defect fixes that
were released.

Unless otherwise specified, these release notes apply to all Rally Production Environments: Commercial, EMEA, and
FedRAMP.

NOTE
There are two versions of navigation that you might see in screenshots or steps in the help - standard (or
"classic") navigation, and personalized navigation. To learn more:

• Personalized Navigation

Hardware and Software Requirements

We at Rally are committed to making our software easily accessible. You can access Rally wherever you have an Internet
connection using a PC, Linux, or Macintosh computer. Because this software is available through the World Wide Web,
many of the constraints regarding which computer and software you use to access this material have been removed.

Nevertheless, it is not possible or practical for us to support every operating system and browser combination that is
available. To take advantage of the newest Rally features, you should follow these recommendations:

Browser Support

PDF Reader:

• Minimum Adobe Reader 5.0 Microsoft Windows platforms (not Linux)
• Adobe Reader 7.0 or higher recommended

Monitor display:

• Minimum 1024 x 768 x 256-color video resolution, 1280 x 1024 recommended.

Supported Languages

Rally supports the following languages:

• On-Premises Edition supports English.
• SaaS supports English and German.
• Help is available in English. You can use automated translation tools, such as Google Translate or The Free Dictionary,

to view the content in a different language.

Customer Support

Questions or problems? Contact Rally Technical Support.

NOTE
Rally maintains a website where you can get information about the latest status of the application as well as any
service events or outages. You can view the Rally status page here: https://rally.status.broadcom.com.

Rally On-Premises

Information about updates to the Rally On-Premises software may be found in the On-Premises Release Notes for your
version. Learn more.

 21

https://support.broadcom.com
https://rally.status.broadcom.com/


 Rally®

Q1 2023 Release Notes
These notes provide pertinent information regarding features, changes, and defect fixes that were periodically released to
Rally from January 1, 2023 to March 31, 2023.

Hardware and software requirements, compatibility, and known issues for the Rally Enterprise and Unlimited Editions
during this time period are also provided in the main Release Notes.

FedRAMP Support for Capacity Planning

Rally for FedRAMP was enhanced to support Capacity Planning functionality.

• Learn more about Capacity Planning.
• Learn more about FedRAMP.

Q1 2023 Closed Defects
These notes provide pertinent information regarding defects that were resolved from January 1, 2023 to March 31, 2023.

Defect Description

DE67422 Milestones: Project selection does not work after a user selects
more than 100 projects.

Q4 2022 Release Notes
These notes provide pertinent information regarding features, changes, and defect fixes that were periodically released to
Rally from October 1, 2022 to December 31, 2022.

Hardware and software requirements, compatibility, and known issues for the Rally Enterprise and Unlimited Editions
during this time period are also provided in the main Release Notes.

Cycle Time Chart Visualization Graphs

Updated the Cycle Time Chart for the Team Board and Portfolio Kanban pages to include interactive visualization graphs
in addition to the existing table-based data. These graphs make it easier to consume the data in these charts and to
identify cycle time trends at a glance. Learn more.

Rally Adapter for Jira

The Rally Adapter for Jira version 3.6 has been released. Learn more.

Custom List 2.0 Enhancements

The Custom List 2.0 app was updated with the following enhancements:

• The data in this app now follows the project scoping and the filter options for Iterations, Releases, and Milestones that
are defined for the page where the app displays. Learn More.

• The App Settings page now includes a Query field that lets you use multiple criteria to filter the data that displays. You
can enter SQL-style queries into the field to find specific work items based on their state, owner, or other fields. For
example, you can filter all user stories in project X, completed in iteration Y, owned by user Z, with a tag of A. Learn
more.

 22



 Rally®

Enhancements to the Timeline Page Milestones View

The Milestones section of the Timeline page was updated so that when you collapse the Milestones section, all milestone
icons display in the single row of the Milestones header. This behavior lets you see where the milestones fall on the
timeline and provides access to the details of a milestone, even when the Milestones section is collapsed to provide more
room on the page for viewing your portfolio items. Learn more.

General Availability for Objectives and Key Results (OKRs)

The Objectives and Key Results (OKRs) feature is now available in Rally.

The Objectives and Key Results  feature in Rally provides a goal-setting framework for your organization and teams to
align around the same goals. This alignment creates clarity and focus, and helps ensure that the most important work gets
prioritized.

For more information on administering OKRs, see Configuring Objectives for Your Workspace.

For more information on using OKRs, see Using Objectives and Key Results (OKRs) in Rally.

Enhancements to Search Features

The Search Results page was updated to use the latest user interface elements that match the overall user experience
in Rally. Work items that match the search criteria continue to be grouped under Open Projects, Recycle Bin, and Closed
Projects. Additional filtering capabilities were added to this page to help narrow the result set and to make it easier to find
exactly what you are looking for. You can also select Show Fields to define the fields that display in the Search Results
page. Learn more.

Defect Trend Chart Enhancement

The Defect Trend Chart was updated to ignore any defects that have been deleted when calculating the current set of
defects. Previously, if you deleted a defect ten days ago, it was included in the report until the date that it was deleted.
However, if that defect was deleted while in an Open status, it remained Open in the calculation forever, because it
never reached a Closed status. This issue could lead to inaccurate counts of activated defects. Now, deleted defects are
completely ignored by this report. Learn more.

Enhancements to Timeline Configuration

Added a new configuration dialog to the Timeline page. This dialog includes several new display options that provide
greater flexibility in refining what you see in this page and how the data displays. Some of the highlights:

• Add/Remove Columns
• Sorting
• Milestone Filtering
• Show/Hide Actuals
• Group by Project
• Calculate Progress by Story Points or Story Count

Learn more.

Removal of Rally Labs

In an effort to simplify Rally and focus our efforts on core functionality, we are announcing the deprecation removal of the
Labs features.

With the exception of the Responsive Quick Detail feature under Labs, all features under Labs have been removed from
the product. The Responsive Quick Detail feature will be incorporated into core Rally, available to all users.

 23



 Rally®

Q4 2022 Closed Defects
These notes provide pertinent information regarding defects that were resolved from October 1, 2022 to December 31,
2022.

Defect Description

DE63942 Peer created for a Portfolio Item with a parent in Milestone-
Artifacts does not associate the peer with the Milestone.

DE64789 Iteration Summary app not loading iterations correctly when
switching projects.

DE64966 Unable to permanently delete some tags from a Workspace or
Projects.

DE66585 Intermittent inconsistent data population on iteration burnup,
iteration burndown, velocity, iteration cumulative flow diagram,
iteration defects by priority, release cumulative flow diagram,
release burnup, and iteration defects by state.

DE66708 Error creating work rule using project-level, visible custom field.

DE66979 In Apps that are based on AppSDK, filtering is not returning the
correct items for custom dropdowns.

DE67272 Unable to import Portfolio Items with a blank parent.

Q3 2022 Release Notes
These notes provide pertinent information regarding features, changes, and defect fixes that were periodically released to
Rally from July 1, 2022 to September 30, 2022.

Hardware and software requirements, compatibility, and known issues for the Rally Enterprise and Unlimited Editions
during this time period are also provided in the main Release Notes.

Announcing Rally for FedRAMP

On September 26, 2022, Rally officially obtained the FedRAMP Authorization to Operate (ATO) designation, at the
Moderate level.

The Federal Risk and Authorization Management Program (FedRAMP) program provides a standard approach to security
assessment, authorization, and continuous monitoring for cloud products and services. This approach uses an efficient
framework saving time and costs previously associated with performing redundant agency security assessments. Learn
more.

Removal of Portfolio Timeline

With the new Timeline experience now available to provide a richer user experience and additional features than the initial
Portfolio Timeline, the Portfolio Timeline page has been deprecated and removed from the product.

For more information about the new Timeline experience, see Using the Timeline Page.

NOTE
The Portfolio Timeline App in the App Catalog is not impacted by the deprecation.

 24



 Rally®

Enhancements for the Team Planning Page

Replaced the collection dialog box that displays when you click the Tasks, Defects, Dependencies, or Test Cases columns
for a work item. This page now uses the same collections dialog box that is used in other Rally pages. Learn more.

Work Rules for Project Administrators

Rally has added the ability for project administrators to create work rules that apply only to their projects and
cascade the work rules to lower-level projects, if they have the appropriate permissions for those projects. Project
administrators cannot create work rules for workspaces and portfolio items.

For more information on work rules for project administrators, see Work Rules.

Open Beta for Objectives and Key Results (OKRs)

The Objectives and Key Results (OKRs) feature in Rally provides a goal-setting framework for your organization and
teams to align around the same goals. This alignment creates clarity and focus, and helps ensure that the most important
work gets prioritized.

For more information on administering OKRs, see Configuring Objectives for Your Workspace.

For more information on using OKRs, see Using Objectives and Key Results (OKRs) in Rally.

New View for the Test Run Page

The Test Run page was updated with new views to enhance the usability of this page. This change includes a toggle that
lets you switch between the new view for the page and the original (classic) view. Learn more.

New View for the Notification Rules Page

The The Notification Rules page was updated with new views to enhance the usability of this page. Learn more.

Deprecation of Risk Ready/Block State

The Risk Ready, Blocked, and Blocked Reason fields have been deprecated and will be removed from the Risk object
by September 6, 2022.

Milestone Selection on the Timeline

Enhanced the Timeline page to allow users to select multiple milestones when viewing a timeline. Learn more.

Editable Discussion Posts

Added the ability to edit existing discussion posts. Only the original author and administrators can edit or delete a
discussion post. Learn more.

Enhancements for Work Rules

The overview page for Work Rules has added new fields for Source, Created By, and a toggle for Show Inherited for
better traceability and conflict resolution for work rules.

For more information on Work Rules, see Learn more.

Work Rules for Portfolio Items

The Work Rules feature in Rally now applies to Portfolio Items in addition to Work Items. Work rules for Portfolio Items can
apply to any portfolio items defined in your Rally subscription.

 25



 Rally®

Rally has also added the ability to view work rules on the Portfolio Kanban page. For more information on Work Rules,
see Learn more.

Instant Messaging Deprecation

The ability to call or chat with existing messaging services has been deprecated and removed from Rally.

Find My Admin

Rally has added a Find My Admin option to the Help menu. The  Find My Admin feature allows an individual user to find
their project administrators and get assistance with project access requests. Selecting Find My Admin displays a list of
administrators for the current project, along with their email addresses. Learn more.

Improved Reports

Enhanced each report that is available from the main Reports menu to improve the overall appearance and usability,
and to provide clearer visualization of the data that each report presents. The Reports landing page was also redesigned
to have the reports grouped by function, and each report tile includes a detailed description to help you find the specific
report that you are looking for. If you're familiar with the reports, you can also hide these descriptions to reduce scrolling.
You can search for a specific report by name as well. Learn more.

NOTE
As part of this development, the ability to print or export a report from a menu on the report was removed.

Rally-Jira Work Item Connector (WIC)

The Rally-Jira Work Item Connector (WIC) version 5.0.18 has been released. Learn more.

Q2 2022 Release Notes
These notes provide pertinent information regarding features, changes, and defect fixes that were periodically released to
Rally from April 1, 2022 to June 30, 2022.

Hardware and software requirements, compatibility, and known issues for the Rally Enterprise and Unlimited Editions
during this time period are also provided in the main Release Notes.

Improved Timeline Page

Modified the Timeline page to enhance usability and make it easier to review your portfolio items in a time-based view.
The specific changes include the following:

• Moved the portfolio item name and progress indicator out of the timeline bars and into a column to the left of the
timeline view. This change makes it easier to read your portfolio item information, especially in zoomed views that do
not provide enough room to clearly display this information.

• Split the Actual and Planned time into two separate bars for each portfolio item. This change makes it easier to
compare the Actual time to the planned time. It also more clearly indicates situations where the Actual work started
before or extended past the Planned time.

• Added the ability to filter the Timeline page by project so you can hide any projects that you do not want to view.

NOTE
In this initial implementation, the Timeline page no longer supports Timeboxes. But Timeboxes are coming soon
to this page.

For more information about the improved Timeline page, see Using the Timeline Page.

 26



 Rally®

The Cycle Time Chart on the Portfolio Kanban Board

The Cycle Time chart capability is now available from the Portfolio Kanban Board (for users in the US environment). It
helps you use historical information to estimate how long it might take for work to pass through your defined flow states to
acceptance. Learn more.

Work Rules

Added the Work Rules feature that lets you create required or read-only field level rules for a chosen set of project-level
artifacts. You can create work rules for stories, defects, defect suites, and test cases.

• For information about creating and managing work rules, see Work Rules.
• For more information about viewing work rules, see View Work Rules.

New View for the Users and Recycle Bin Pages

The Users page and Recycle Bin page were updated with new views to enhance the usability of these pages.

• Learn more about the Users page.
• Learn more about the Recycle Bin page.

Rally Adapter for Jira

The Rally Adapter for Jira version 3.5 has been released. Learn more.

Rally-Jira Work Item Connector (WIC)

Replaced the existing Rally Connector for Atlassian Jira with a new Rally-Jira Work Item Connector (WIC). The Rally-
Jira WIC provides bi-directional reflection of updated stories, defects, tasks, and attach between Rally and Jira. This
integration lets team and project members work in the system that is best suited to their needs while providing the ability
to view activity that is recorded in another system. Learn more.

Removed the Ability to Email Charts from the Reports pages.

On April 13, we removed the ability to directly email charts from the Reports pages. As part of a modernization effort
around Rally reporting capabilities, we reviewed the usage of various product features and determined that the
functionality for emailing from the Reports page is rarely used. This feature was removed in favor of other priorities that
are driving the overall reports modernization effort. This change does not affect the ability of Rally users to export Reports
page views or take screenshots. Decisions around functionality changes are made with customer and product interests in
mind, and we welcome feedback that you may have on this change.

Rally Help URLs

On March 31, we updated the infrastructure of our help system. While the content remains mostly the same, there are
key changes to the architecture to improve the stability, searchability, and overall user experience. You may notice the
following when using the updated help system:

• Improved searchability when searching from Google and other external sites.
• Improved searchability inside the help system itself.
• Improved navigation and user experience, with shorter help pages that require less scrolling.

IMPORTANT
As a byproduct of this necessary update, the URLs for most help pages have changed. If you have existing
bookmarks to specific help pages, you must update those bookmarks to use the new URLs. Help links from
the Rally UI are unaffected, and we have added temporary redirects for the most frequently visited pages to
minimize the direct impact of these changes.

 27



 Rally®

Restrict Timebox Management

Rally has added the ability to restrict timebox management to specific users (besides subscription and workspace
administrators). It can be enabled at the workspace level, and then you can add the timebox admin permission to specific
users. Learn more.

Rally Deprecation Notices
These notes provide pertinent information regarding Rally features that have been deprecated. When appropriate, this
information also includes information about the scheduled removal of the feature from Rally.

There are no scheduled deprecations at this time.

Product Accessibility Features
Broadcom is committed to ensuring that all customers, regardless of ability, can successfully use its products and
supporting documentation to accomplish vital business tasks.

Broadcom used a variety of browsers, screen reader software (including NVDA and JAWS on Windows, and VoiceOver
on macOS), as well as accessibility-testing tools such as aViewer, the Color Contrast Analyser, and developer tools and
accessibility extensions for Google Chrome, Firefox, and Edge. This document summarizes the accessibility of Rally as
tested for Section 508 compliance.

NOTE

• For optimal performance of product accessibility features, Rally recommends that you use Google Chrome or
Edge as your browser.  

• Web Content Accessibility Guidelines (WCAG) 2.0
• Revised Section 508

• Many functions can be performed using the keyboard only. However, there are exceptions. For example, the following
functions cannot be accessed using the keyboard only:
– Selecting a page layout on the Home page.
– Opening the defect details tooltip on the Backlog page.

• The Rally website features time limits, but provides a mechanism for users to turn off, adjust, or extend the time limit.
• Text can be resized or zoomed without assistive technology up to 200% without loss of content or functionality.
• Keyboard operable user interface components do not provide a visible keyboard focus indicator.
• The website includes text or images of text with a contrast ratio below 4.5:1.
• Textual information is provided through operating system functions for displaying text.
• Electronic forms in the product can be completed using the keyboard. However, a screen reader is unable to prompt

users to fill in form fields, requiring the screen reader user to examine the textual screen content to determine what
fields are present.

• This product supports the use of Assistive Technology screen readers by blind and visually impaired users. However,
screen readers do not have access to user interface element semantics, requiring the user to examine the textual
screen content to determine available options, entry fields, keyboard shortcuts, and application responses.

• This product does not require user hearing or speech.
• This product can be used in a mouseless, keyboard-only mode. In addition, the product supports operating system

accessibility features.

Display

To increase visibility on your computer display, you may be able to use the browser’s configuration or plugins to adjust the
following options:

 28

http://www.w3.org/TR/WCAG20/
https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/final-rule/text-of-the-standards-and-guidelines/


 Rally®

• Font style, color, and size of items: Defines font color, size, and other visual combinations.
• Screen resolution: Defines the pixel count to enlarge objects on the screen.
• Cursor width and blink rate: Defines the cursor width or blink rate, which makes the cursor easier to find or minimize

its blinking.
• Icon size: Defines the size of icons. You can make icons larger for visibility or smaller for increased screen space.
• High contrast schemes: Defines color combinations. You can select colors that are easier to see.

Sound

Use sound as a visual alternative or to make computer sounds easier to hear or distinguish by adjusting the following
options:

• Volume: Sets the computer sound up or down.
• Text-to-Speech: Sets the computer's hear command options and text read aloud.
• Warnings: Defines visual warnings.
• Notices: Defines the aural or visual cues when accessibility features are turned on or off.
• Schemes: Associates computer sounds with specific system events.
• Captions: Displays captions for speech and sounds.

Keyboard

You can make the following keyboard adjustments:

• Repeat Rate: Defines how quickly a character repeats when a key is struck.
• Tones: Defines tones when pressing certain keys.
• Sticky Keys: Defines the modifier key, such as Shift, Ctrl, Alt, or the Windows Logo key, for shortcut key combinations.

Sticky keys remain active until another key is pressed.

Keyboard Shortcuts

You can also save time by using keyboard shortcuts to invoke the most common supported commands.

Mouse

You can use the following options to make your mouse faster and easier to use:

• Click Speed: Defines how fast to click the mouse button to make a selection.
• Click Lock: Sets the mouse to highlight or drag without holding down the mouse button.
• Reverse Action: Sets the reverse function controlled by the left and right mouse keys.
• Blink Rate: Defines how fast the cursor blinks or if it blinks at all.
• Pointer Options: Let you complete the following actions:

– Hide the pointer while typing
– Show the location of the pointer
– Set the speed that the pointer moves on the screen
– Choose the pointer's size and color for increased visibility
– Move the pointer to a default location in a dialog box

Product Documentation and Support

Rally documentation and support are provided as follows:

• Product documentation is available online.
• Support is available as follows:

 29



 Rally®

– Online and email support for customers with hearing disabilities.
– Telephone support for customers with visual disabilities.

 30



 Rally®

Getting Started
This section introduces your first few actions as a new user in Rally and provides additional learning resources.

When you first log in, you will have the opportunity to customize your Rally experience by completing your user profile and
creating custom pages for quick access to data you need most. You can update most settings later as your needs or your
role changes.

• Log into Rally
• Choose a Role
• Set Up Your Profile
• Set Up Notifications
• Set Your Display Preferences
• Using Your Dashboard
• Create Custom Pages

Log into Rally
Before you can log in to Rally, your subscription administrator must add you as a user of the subscription.

Your subscription administrator will then notify you of your login information consisting of:

• Username – The username is in email address format, and is not case-sensitive.
• Password – The password is case-sensitive.

You can easily change your password from your user profile page or from the Rally login page if you have forgotten it.

Your subscription administrator can confirm your username if you have forgotten it.

NOTE
If you are not sure who your administrator is, select Find My Admin from the Help Menu to see a list of a list of
administrators for the current project, along with their email addresses.

Choose a Role
When you log in for the first time you will be asked to choose a role. Selecting a role helps you set up your default
dashboard with apps that help you track your work.

You can customize your dashboard at any time by installing apps that provide the data you need.

 31



 Rally®

If you serve in more than one role in your organization, you can create a new custom dashboard page for each role you
have.

Choose from one of the following options.

I focus on contributing work to the team goals

You might have the title developer, tester, tech writer, or designer. You want to manage your tasks as quickly and
efficiently as possible.

The following default apps display with this option:

• Getting Started for Contributors
• My Tasks
• Unassigned Tasks for Current Iteration
• My Test Cases
• My Defects
• Blocked Work
• Iteration Burndown
• Incomplete Stories for Current Iteration
• My Notifications
• Recent Activity

I organize and track the work for a team

You might have the title project manager, product owner, or Scrum Master. You are responsible for planning and
tracking work and helping a team.

The following default apps display with this option:

 32



 Rally®

• Getting Started for Organizers
• Ready to Accept
• Blocked Work
• Iteration Summary
• Iteration Burndown
• Release Burnup
• Release Defect Trend

I focus on the big picture

You might have the title program manager, portfolio manager, director, or executive. You want to know what's going on
at a glance across one or more initiatives or teams.

The following default apps display with this option:

• Getting Started for Executives
• Release Dashboard
• Defect Trend
• Portfolio Item Timeline
• Throughput

Set Up Your Profile
Your user profile contains the default settings for your account login and session. It also contains the information that
dictates how Rally, and other users, interact with you.

You typically set up your user profile during your first few minutes in Rally. However, you can configure your user profile at
any time.

Watch a short YouTube tutorial on how to set up your user profile in Rally.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

Edit Your Profile
You can edit your profile from any page.

Your user profile settings override any settings that have been applied to the entire workspace. Customize your
experience with Rally by editing those profile settings that are relevant to you.

The following alphabetized list describes a few of the many options that you can edit for your profile:

Date Format,
Date/Time Format

Set the date and time format to your preference. The date and time format that you choose here also
determines the date and time format for any CSV or Rally exports that you perform. The time zone is set by
your workspace or subscription administrator.

NOTE
The date and time format cannot be set for the Rally Add-in for Excel.

Default Workspace /
Project

Select a default workspace and project for your initial context upon logging into Rally so that you can focus
immediately on your primary team.

 33



 Rally®

Display Name Specify the name that you want to display in Rally.
Email Address Required. Keep your email address up to date so that you can receive administrative messages and

change notifications.
Email Notification

Enabled
Optional. Enable if you want to receive email notifications when items that interest you have changed.
Notifications are disabled by default.

Language, Locale Select to view Rally in one of the supported languages/locales.
Password Expires Configured by your subscription administrator.

Profile Image Upload an image that displays when anyone hovers over your user name.
To upload an image for the Profile Image, select Browse and upload an
image from your desktop. To change or remove the image, select Trash

and then add a new image.
Session Timeout The default session timeout is four hours. You can change this period of time and specify whether you want

to be warned when your session is about to expire.
Timebox Admin The check box indicates if you are enabled as a timebox administrator. A timebox administrator has

permissions to create, edit, or delete release or iteration timeboxes. The timebox administrator role is
configured by your subscription administrator. For more information, see Timebox Administration.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select Edit Profile.

3. Edit your profile as needed.

4. Select Save.

Change Your Password
You can change your password at any time.

Your subscription administrator can also initiate a change to your password. If your subscription administrator prompts a
password change for you, you will receive an email guiding you to choose a new password.

If your subscription has password expiration enabled, you will be forced to change your password upon login when your
password has expired. Each day for seven days before the expiration date, you will receive a notification email that
directs you to change your password. To ensure that all of your integrations and Web Services API connections remain
uninterrupted, change your password before it expires.

When you change your password, you cannot reuse previous passwords as the current password. The number of
previous passwords that you cannot reuse is determined by the subscription administrator.

Any open sessions to Rally are terminated when your password is reset either through the forgotten password process or
by an administrator. If you suspect someone has gained unauthorized access to your account, resetting your password
will immediately end the session. Resetting your own password while you are logged in does not log you out of Rally.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select Edit Profile.

3. Select

and then select Change Password.

4. Follow the prompts to change your password, then select Save.

 34



 Rally®

Configure Your Settings
You can configure more settings in Rally using the My Settings pane.

1. Select your profile image located in the upper-right corner of the Rally display, and then select My Settings.

2. From the toolbar at the top of the page, select the desired settings tab:

• Permissions: View your permissions for all the projects in your workspace.
• Watches: Set up watches to follow the status of an individual work item.
• Preference Viewer: View your preferences.

NOTE
You can delete preferences on the Preference Viewer page but you cannot undo the deletion.

• Notification Rules: Set up notifications to stay informed about changes to the work items that are important to you.

Choose a Workspace or Project
A single Rally subscription can hold multiple workspaces. If you have access to multiple workspaces in your subscription,
you can easily move from one to another by selecting a target workspace using the workspace drop-down menu in the
upper-left corner of the Rally screen.

 35



 Rally®

You can select a project as an initial context when you enter Rally.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select Edit Profile.

3. Scroll to the Default Project drop-down list and select your project.

4. Select Save.

Disable Sessions
In case you have lost your computer or logged in on a public computer and are not sure if you logged off, you can
remotely log out of all devices except the one you are currently using.

1. Select your profile image, then select Disable Sessions.

2. Select Confirm.

Set Up Notifications
You can set up notifications to keep you informed of changes to work items that affect work in which you are actively
engaged. Related work items are often changed and updated during the course of development, and it is important these
changes are known to all involved team members.

You can configure custom notification rules as well as set up general notification rules for most work item types.
Notifications set on work item types are triggered by any change in the revision history for that work item, including
changes in associated work items such as tasks, defects, and dependencies. You will receive a notification if you own the
item or any of the associated work items. You can also create custom notifications using rules that you define. A change
can be triggered by a user's edit to a work item or by a system event. In some cases, as the owner of the changed work
item, you will see your work item displayed. In other cases, you will see work items that have changed that you do not
own, but that impact a related work item that you do own.

You can view notifications multiple ways. You can add an app to your dashboard that shows you notifications or set up
an RSS feed. If your subscription administrator has enabled email-dependent features of Rally, you can set up email
notifications to have Rally send updates directly to your email account.

Viewing Your Notifications

Rally provides three ways for you to view the notifications you create. You can view them via an email notification, the My
Notifications app, or an RSS feed.

This section includes the following topics:

• Set Up Email Notifications
• Add the My Notifications App
• Creating Notification Rules

Set Up Email Notifications
Use email notifications to alert you to a change of any work item that impacts your work.

You can easily subscribe or unsubscribe to this service by editing your user profile.

NOTE
Your subscription administrator must have email functionality enabled in order for you to receive email
notifications.

After you enable email notifications, you will receive emails based on the rules you have configured. Notifications emails
contain:

 36



 Rally®

• The changed work item ID and Name
• The author of the change to the work item
• The new revision number
• A description of the change
• The name of the notification rule that triggered the email
• The URL link to the work item that has changed

– Select this hyperlink to navigate directly to the changed work item. You are presented with the Rally login page if
you are not currently logged in to Rally.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select Edit Profile.

3. Mark the Email Notifications Enabled check box.

4. Ensure that the email address that is associated with your account is entered correctly. This value is separate from the
username you use to access Rally, and can be different.

5. Select Save.

Add the My Notifications App
The My Notifications app displays all notifications set up in your notification rules.

You can add the My Notifications app from your dashboard.

Learn more about the My Notifications app.

1. Select Home, Dashboard.

2. From the Dashboard gear menu, select Add App.

3. Select My Notifications from the app list, then select Add.

Set up an RSS Feed for Change Notification

RSS (Really Simple Syndication) is a lightweight XML format designed for sharing web content. Anything that can be
broken down into clearly defined items can be shared through RSS, such as revisions or changes made to a Rally work
item. Once information about each item is in RSS format, an RSS-aware program can check the feed for changes and
react to the changes in an appropriate way.

You can set up an RSS feed for change notifications by installing and configuring an RSS reader.

Your client must support SSL and HTTP Basic Authentication.

1. Install an RSS reader and paste the following news feed link into your RSS reader: https://
rally1.rallydev.com/slm/rss/notifications/All.rss

2. Your client should automatically prompt you to log in, at which point you should enter your Rally user name and
password.

After you have completed the setup, you will receive Rally change notifications through your RSS reader.

Creating Notification Rules
You can set up general notifications on a work item type as well as create custom notification rules. You can use both
types of rules at the same time. In all cases, notifications are sent to the owners of the work items that are affected by the
change.

All notification rules are for a single Rally user and cannot be shared globally.

 37



 Rally®

Work item type
notifications

Notifications by work item type are defined by default in the notifications page. You can enable or disable
these notification rules, but you cannot edit or delete them.

When you enable a notification for a work type, you are notified every time a work item of the selected type
changes for every work item that you own. For example, if you enable the User Story Changes notification
rule, you are notified anytime there is a change to a user a story where you are defined as the owner.

These default notifications also apply to any associations or dependencies for the impacted work items.
For example, a notification is also sent if there is a change to a task, defect, or defect suite that is
associated with a user story that you own. The additions or removal of associated work items also triggers
a notification to your work item.

Custom notifications These rules notify you of changes to impacted work items that meet the specified criteria of a custom
rule. For example, you can set up a rule to notify you if a work item has been moved to or removed from the
Recycle Bin.

Use the following table to determine who is notified by specific notifications.

When changes occur in a ... Notify owners of ...

User story • The user story
• Any predecessor or successor of the user story
• All related test cases
• All related tasks
• All related tasks for any predecessor or successor

Test case • The test case

Defect • The defect
• All related tasks
• Submitter of the defect

Defect suite • The defect suite
• All related defects
• Submitter of the defect

Task • The task
• The related user story

View Notification Rules

To view the notification rules that you have defined:

1. Select your profile image, located in the upper-right corner of the Rally display.
2. Select My Settings.
3. Select Notification Rules.

The Notification Rules page opens.
– Select a column header to sort the notification rules by that column in ascending order. Select the column header

again to sort in descending order.
– Select Show Filters to filter the list of rules by the columns that display on the Notification Rules page. For more

information about using filters, see Use Quick Filters .
– Select the Notification Rule Name to open the detail editor for the selected rule. You cannot edit or delete the

default work item type notification rules.

 38



 Rally®

Enable a Work Item Type Notification
Notifications by work item type are defined by default in the notifications page. You can enable or disable these notification
rules, but you cannot edit or delete them.

When you enable a notification for a work type, you are notified every time a work item of the selected type changes
for every work item that you own. For example, if you enable the User Story Changes notification rule, you are notified
anytime there is a change to a user a story where you are defined as the owner.

These default notifications also apply to any associations or dependencies for the impacted work items. For example, a
notification is also sent if there is a change to a task, defect, or defect suite that is associated with a user story that you
own. The additions or removal of associated work items also triggers a notification to your work item.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select My Settings.

3. Select Notification Rules. The following default work items are listed at the top of the Notification Rules page:

• Defect Changes
• Defect Suite Changes
• User Story Changes
• Task Changes
• Test Case Changes

4. Select the check box in the Active column for each work item type that you want to receive notifications for.

 39



 Rally®

To disable a notification, clear the check box in the Active column for the work item type.

5. When you are finished with notification rules, select Exit at the top-left of the page.

Create a New Notification Rule
You can create custom notification rules in Rally by defining condition expressions that alert you of a change when the
criteria that you have specified is changed for a work item.

NOTE

Conditions that you specify in your notification rule criteria are tested to ensure that all criteria exist. For
example, Condition 1 AND Condition 2 AND Condition 3 must all exist to satisfy the criteria for that notification
rule for a notification to be sent.

When you create multiple notification rules, any of the rules whose criteria is satisfied generates a notification.
For example, satisfied criteria for rule 1 OR rule 2 OR rule 3 sends a notification.

If you have created a notification rule that references a value or custom field that has since been removed or
updated, the rule no longer executes and registers a False state in the Is Valid column. You must edit your rule
and correct the invalid field before the rule can be performed.

If your rule has multiple conditions, all of those conditions must be met for a notification to be sent.

If your notification rule contains a field that is hidden, you do not receive notifications on that field. You can include
references to inactive users in your conditions when you create notification rules.

The change description displays in both the Revision History of the work item and in the notification to help you
understand and manage changes to work items.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select My Settings.

3. Select Notification Rules.

4. Select Add New.
The detail editor opens

 40



 Rally®

.

5. Enter a name for the notification rule in the Name field.

This is a required field and appears in red. This name displays at the bottom of your notification email, indicating the
rule that generated the notification.

6. Select the appropriate Work Product Type from the drop-down list.

7. The Active check box is selected by default. If you do not want this to be an active rule, clear the Active check box.
Only active rules are processed for notifications. Inactive rules remain in your list and can be re-activated for execution
at any time.

 41



 Rally®

8. Complete the following Condition fields:

• Field: Select a field value that you want to filter. This list reflects the values of the selected work product type. Any
custom fields that have been defined for this work product type are also included in the list.

• Operators: Select an operator to return only those records that match your criteria. The operators that are available
depend on the type of field that you selected. The following operators are available:

Operator Action Description Valid For Field Type

= Equal Numeric, String, Enumeration, Boolean,
Date

!= Not equal to Numeric, String, Enumeration, Boolean, Date 

> Greater than Numeric, Enumeration, Date

< Less than Numeric, Enumeration, Date

>= Greater than or equal to Numeric, Enumeration, Date

<= Less than or equal to Numeric, Enumeration, Date

contains Contains the specified characters that
are entered in the Value field

String

!contains Does not contain the specified
characters that are entered in the
Value field

String

changed Any change to the field Numeric, String, Enumeration,
Boolean, Date

changed-from Any value changed from
the characters that are entered in the
Value field

Numeric, String, Enumeration,
Boolean, Date

changed-to Any value changed from the
characters that are entered in the
Value field

Numeric, String, Enumeration,
Boolean, Date

• Value: Specify a value for the operator to act upon. The values that are listed are based on the field that you
selected.

Type of column selected Resulting value display

Numeric Text box that only allows numeric characters to be entered

String Fields Text box

Enumeration Fields A drop-down listing with the valid values

Boolean Fields A drop-down listing with the valid values

Date Fields Select the icon and select a date from the displayed
calendar

9. Select Add Condition to add another condition to this rule. Continue adding conditions until you have defined all
parameters for your notification rule.
Conditions that you specify in your notification rule criteria are tested to ensure that all criteria exist. If you add multiple
conditions to a rule, all conditions must be met for a notification to be sent. For example, Condition 1 AND Condition
2 AND Condition 3 must all be met for a notification to be sent. To create OR conditions, you must create separate
rules. For example, satisfied criteria for rule 1 OR rule 2 OR rule 3 sends a notification.

 42



 Rally®

10. Select Save.
Your new rule appears in the list of notification rules. You can make this rule active or inactive at any time by selecting
or clearing the checkbox in the Active column.

Delete a Notification Rule
If you delete a notification rule, you cannot recover it.

NOTE
Rather than deleting a notification rule, you can make the rule inactive. An inactive rule remains in your list of
notification rules, but it is not processed until you activate it.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select My Settings.

3. Select Notification Rules.

4. Locate the notification rule that you want to delete in the Notification Rules page.

• Select a column header to sort the notification rules by that column in ascending order. Select the column header
again to sort in descending order.

• Select Show Filters to filter the list of rules by the columns that display on the Notification Rules page. For more
information about using filters, see Use Quick Filters .

5. Select Delete

at the end of the row.
A Permanent Delete Warning opens.

6. Select Delete.
The notification rule is removed from the list of rules.

 43



 Rally®

Make a Notification Rule Inactive
When you create a notification rule, it is active by default. You can make a rule inactive at any time.

An inactive rule remains in your summary display, but it is not processed until you activate it.

1. Select your profile image located in the upper-right corner of the  Rally display.

2. Select My Settings.

3. Select Notification Rules.

4. Locate the notification rule that you want to make inactive.

• Select a column header to sort the notification rules by that column in ascending order. Select the column header
again to sort in descending order.

• Select Show Filters to filter the list of rules by the columns that display on the Notification Rules page. For more
information about using filters, see Use Quick Filters .

5. Clear the check box in the Active column for the notification rule that you want to make inactive.

Set Your Display Preferences
You can choose between three page display preferences. Your selection applies to all pages in Rally with a board or list.

Consider Roomy when you want to see as much of the information about one work item at a time, such as when you're
discussing the details of a specific story. Try Compact for times when you're scanning a list of work items, such as when
you're checking the schedule state of all stories in a release. Comfortable is helpful when you're sharing your view with a
group of people and it's important to be able to read the display. Try each to see what works best for your current needs
and the size of the display you’re using.

NOTE
You can set your display preferences from the Display Preferences menu or the button at the top right corner of
each page. The button displays your current display preference. Select it to choose a different option.

 44



 Rally®

1. Select your profile image, then select Display Preferences.

2. Select one of the options. When you select an option, you can see a preview of the setting.
Roomy Individual row heights adapt to your data to display everything with lots of padding for optimal readability.

This is the default setting.

Comfortable Standardizes row heights and truncates data when necessary for a balance between space and data
density.

Compact Maximizes real estate for data density by making things smaller, reducing padding and truncating data.

3. Select Save.

Using Your Dashboard
Your dashboard shows you, at a glance, the information that is most important to you across projects, teams, and
workspaces.

You may use your dashboard as your primary place to work in Rally. You can use apps to make updates, get status
information, and view charts. Select Home, Dashboard to get started.

 45



 Rally®

Your dashboard helps you quickly see:

• What has changed that's relevant to you
• If you are going to meet your commitment
• If you need to adapt your plan
• Who may need your help
• If any work items need your attention

When you first logged into Rally, you may have been asked to identify your role. Rally uses this information to set up a
default dashboard for you. You can always add apps from other roles to your dashboard, and you can customize your
dashboard with available apps at any time. Learn more.

Customizing your dashboard with apps works like using a custom page. Learn more.

You can access your dashboard at any time to view or update your project, team, or workspace data. You can also edit
your profile to set your dashboard as your default login page. Learn more.

Create Custom Pages
Custom pages allow you to create views that provide quick access to the data you need. You can build a custom page
that summarizes Rally data in list, chart, or board form, and you can also include data from additional web sites that
support your collaborative development processes such as a common wiki, calendar, source code repository, continuous
integration server, related blogs, or sites on your own intranet.

Standard Navigation Personalized Navigation

You can group a selection of Rally apps into a customized page display. If your subscription administrator has enabled the
feature, you may create custom apps using HTML and JavaScript to display reports, graphs, and other information. Learn
more.

Create custom pages for individual user environments, or share them across projects for multiple Rally users. Shared
custom pages require administrator permissions.

The number of custom pages you can create are defined by the Rally edition you are using. Once created, you can edit or
delete custom pages as your collaborative needs evolve.

Watch a short YouTube tutorial on how to create custom pages and use your dashboard.

This section includes the following topics:

 46



 Rally®

• Create a Custom Page
• Edit a Custom Page
• Delete a Custom Page
• Copy a Custom Page
• Using a Shared Custom Page
• Filter a Custom Page by an Iteration, Release, or Milestone
• View a Custom Page Full Screen

Custom Page Fields
Name Enter the name of the custom page. The name is limited to 48 characters. The red highlight indicates that

this is a required entry field.
Show Filter Select the appropriate option to define timebox parameters on your custom page:

• None: Apps will display data according to their individual settings.
• Iteration: Compatible apps will display data according to the selected iteration.
• Release: Compatible apps will display data according to the selected release.
• Milestone: Compatible apps will display data according to the selected milestone.

 47



 Rally®

Create a Custom Page
You can create a custom page in any of the menus.

Any user may create individual custom pages, although only administrators can create a custom page that is shared with
one or more projects. Learn more.

Standard Navigation Personalized Navigation

1. In the menu where you would like to put the new page, select the

.

2. The Custom Page editor window displays.

3. Enter the name of your custom page.

4. If you would like to filter the contents of apps on the page, select one of the Show Filter options.

5. Select one of the Save options to create your page.

6. Select a page layout option. You can always change this setting later.

7. Select the Start adding apps link.

 48



 Rally®

8. Add apps from the App Catalog. When you have finished adding apps, your custom page displays with the apps you
selected.

Edit a Custom Page
You can edit a custom page and make changes to the name, sharing, or filtering options.

 49



 Rally®

WARNING
Any user may create individual custom pages. Only administrators can share a custom page with one or more
projects. Learn more.

Standard Navigation Personalized Navigation

1. (Standard Navigation) In the menu containing the custom page, select Edit

.

2. Select the Gear

next to the page to be edited.

3. Select Edit or Page Settings. An editor window displays.

4. Make necessary changes inside the editor window, and select one of the Save options to confirm.

You may also access the editor window by selecting the Edit Page option from the Gear

in the upper-right corner of the page.

 50



 Rally®

Delete a Custom Page
As the owner of a personal custom page, you can delete any custom pages that you have created.

Standard Navigation Personalized Navigation

1. Select the menu the custom page resides in.

2. (Standard Navigation) Select Edit

on the tab to edit.

3. Select the Gear

next to the page to be deleted.

4. Select Delete or Delete Page.

5. Select Delete on the confirmation message.

Copy a Custom Page
You may make copies of a custom page. This is useful for setting up multiple personal custom pages with similar apps, or
for personal customization of a shared custom page.

1. Go to the existing custom page and select the Gear

.

2. Select Copy Page.

The copied page is moved underneath the same menu as the shared page, with (Copy) before the name.

3. To edit the name of the copied page, select the Gear

and then select Edit Page.

Using a Shared Custom Page

 51



 Rally®

WARNING
Any user may create individual custom pages. Only administrators can share a custom page with one or more
projects. Learn more.

When a custom page is shared, all users in selected projects will see the page available in their menus.

Users of a shared custom page can:

• View, edit, and interact with data displayed in each app
• View the settings of apps
• Copy the shared page as a private page
• Re-size, move, and sort app columns

NOTE

• Data displayed in a shared custom page is dependent on the user permissions you have been assigned for
the workspace.

• Column size, position, and sort order changes made by users are not stored in the custom page. Leaving the
page will reset the columns in each app to their original positions.

Filter a Custom Page by an Iteration, Release, or Milestone
You can create a custom page that contains apps linked to a specific iteration, release, or milestone.

The following apps will display data specific to the release or iteration:

• Custom List
• Custom HTML
• Iteration Burndown
• Iteration Burnup
• Iteration Cumulative Flow
• Iteration Defects by Priority
• Iteration Defects by State
• Iteration Summary
• Kanban Board
• Release Burnup
• Release Cumulative Flow
• Release Defect Trend

The following apps will display data specific to milestones:

• Custom List
• Custom Board
• Custom HTML

NOTE

• Apps that are not affected by an iteration, release, or milestone filter may also be installed on filtered custom
pages.

• If a custom page is created to show multiple projects across the same app (for example, three instances of
Iteration Burndown set to depict the burndown for three different parent/child projects), then configured to
show filters for iteration or release, the apps lose their scope to the individual projects and the global project

 52



 Rally®

scoping takes precedence. The result is all the apps will then scope to the single global project, and all three
charts become identical.

1. When you create or edit a custom page, select the Iteration, Release, or Milestone options in the Show Filter field in
the custom page editor to enable filtering.

2. When you display the custom page, an iteration, release, or milestone drop-down menu displays at the top of the
page. Use the

and

icons to move the release, iteration, or milestone backward or forward. This determines the timeframe from which the
apps are collecting data.

View a Custom Page Full Screen
You can view all apps on a custom page without the Rally menus and navigation.

1. Go to the existing custom page and select the Gear

.

2. Select View Full Screen.

The display will expand to the size of your browser window.

3. To exit full screen, select the Gear

and select Exit Full Screen.

 53



 Rally®

Learning Rally
Rally provides free online courses, short video tutorials, and a guide to using our help topics.

Access the Rally Learning Portal

The Rally learning portal gives you direct, free access to online courses. These courses are designed to get you up and
running in Rally and teach you how to use specific Rally features.

1. From the Help menu, select Rally Learning Portal.

2. Follow the appropriate login or registration instructions in the dialog box for New Users, Existing Users, or SSO Users
(Broadcom account).

Rally Video Tutorials
Watch these video tutorials to learn how to perform specific actions in Rally.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

 54



 Rally®

and then select Rally Learning Portal.

Many of our tutorials are available on YouTube.

• All Roles
• Developers and Testers
• Product Owners

Administrator Video Tutorials are located in the Rally Administrator Guide.

All Roles

Tutorial Description

Rally Basics (13 minutes) Learn how to use the basic functions of Rally.

Use Rally’s Work Views to Focus on Your Work and Teams (7
minutes)

Learn how to effectively use the Work Views page.

Use Rally’s Team Planning to Schedule Work in Iterations (7
minutes)

Learn how to use the Team Planning page to plan your iterations.

Set Up Your User Profile in Rally (6 minutes) Learn how to set up your Rally profile, configure display settings
and more.

Use Rally to Track the Resolution of Risks in Your Plan (8
minutes)

Learn how to track and resolve Risks in your plan.

How to Use Dashboards, Custom Pages, and Apps (7 minutes) Learn how to work with multiple data sets from a single location by
setting up custom pages and apps.

Import and Export with the Rally Add-in for Excel for Microsoft 365
(9 minutes)

Learn how to use the Rally Add-in for Excel for Microsoft 365 to
make import and exports easier. The add-in runs natively from
Excel, and supports advanced importing actions, including the
association of tasks and other child work items to existing work
items in a subscription.

Import and Export with the Rally Add-in for Microsoft Excel 2010
and 2013 (11 minutes)

Learn how to use the Rally Add-in for Microsoft Excel 2010 and
2013 to make import and exports easier. The add-in runs natively
from Excel, and supports advanced importing actions, including
the association of tasks and other child work items to existing work
items in a subscription.

Import and Export Rally Data (4 minutes) Learn how to use the import and export commands found on
pages such as Backlog, User Stories, and Defects to create
or archive several Rally work items. You can import data with
formatted CSV files, and export data to CSV or XML files.

Portfolio Management Overview (10 minutes) Learn how you can help connect your team-level execution work
to long-term vision and strategy. Rally provides executives and
other strategists with overall status indicators, feature progress,
timeline views, and more. Rally portfolio management allows you
to perform multi-team planning, portfolio and program planning,
and to follow the practices of a Scaled Agile Framework.

Update Your Iteration Tasks (5 minutes) Learn how to review and update your tasks for an iteration.

Creating and Sharing Views in Rally (7 minutes) Learn how to save and share views in Rally.

Use Rally's Team Board to Track Daily Progress (6 minutes) Learn how to use the Team Board page.

 55

https://www.youtube.com/playlist?list=PLynEdQRJawmzUQCBNZROx4cDIAc6ytjFO
https://youtu.be/Q9Qd0LmjqqM
https://youtu.be/WrqN5mFr9pw
https://youtu.be/WrqN5mFr9pw
https://youtu.be/WtC4KQvhbU4
https://youtu.be/WtC4KQvhbU4
https://youtu.be/JGkM-y7BUy0
https://youtu.be/yT7UDERFLDY
https://youtu.be/yT7UDERFLDY
https://youtu.be/u9u34Ta6opg
https://youtu.be/enOyEsPJP1g
https://youtu.be/enOyEsPJP1g
https://youtu.be/_J1fwF-aVGU
https://youtu.be/_J1fwF-aVGU
https://youtu.be/aDdRAjlmR6k
https://youtu.be/GUY7TjXLMmI
https://youtu.be/DgHNeTQM9tk
https://youtu.be/EeGxs4JPwDU
https://youtu.be/NQXybhmrW_Q


 Rally®

Tutorial Description

Track Iteration Progress with Rally (3 minutes) Learn how to use the Iteration Status page to track the progress of
your iterations.

Use Rally Test Cases for Acceptance Testing (7 minutes) Learn how to use Rally test cases for acceptance testing.

Use Rally Test Cases and Test Sets for Regression Testing (6
minutes)

Learn how to use Rally test cases and test sets for regression
testing.

Test Planning in Rally (5 minutes) Learn how to use Rally test folders when doing test planning.

Developers and Testers

Tutorial Description

Create and Manage Defects (10 minutes) Learn how to create and manage defects. Defects can record and
track the status of both types of bugs. Issues found related to a
current user story can be associated with that work, preventing
accidental acceptance until the problem is resolved. Regression
defects found by customers or support staff can be created as
standalone work items and prioritized on the team backlog along
with stories.

A Tester's Role in Planning (3 minutes) Watch a discussion about the meetings a tester will attend as part
of a scrum team, and his or her role in each.

Use Rally Test Cases for Acceptance Testing (7 minutes) Learn how to use Rally test cases for acceptance testing.

Test Planning in Rally (5 minutes) Learn how to use Rally test folders when doing test planning.

Use Rally Test Cases and Test Sets for Regression Testing (6
minutes)

Learn how to use Rally test cases and test sets for regression
testing.

Track Iteration Progress with Rally (3 minutes) Learn how to use the Iteration Status page to track the progress of
your iterations.

Product Owners

Tutorial Description

Build Achievable Plans with Rally’s Capacity Planning (12
minutes)

Learn the value of Capacity Planning, and the steps in Rally to
create a simple capacity plan.

Use Rally’s Team Planning to Schedule Work in Iterations (7
minutes)

Learn how to use the Team Planning page to plan your iterations.

Use Rally to Track the Resolution of Risks in Your Plan (8
minutes)

Learn how to track and resolve Risks in your plan.

Steer and Monitor Progress with Rally’s Plan Progression (4
minutes)

Learn how to track the progress of a published Capacity Plan with
the Plan Progression page.

Plan and Work Towards Key Events with Rally Milestones (8
minutes)

Learn how to use milestones within Rally.

Build Your Backlog (8 minutes) Learn how to use the Backlog page to organize new requirements
and work that needs to be scheduled. Team members can enter
new stories and defects on the page, while product owners can
further edit details and change priority.

 56

https://youtu.be/fbP-A6rkrW0
https://youtu.be/EGAn7WyEbp4
https://youtu.be/Uqn0tsW8sq8
https://youtu.be/Uqn0tsW8sq8
https://youtu.be/u7O-NSoj_8g
https://youtu.be/XD_3KWOmKu4
https://youtu.be/cWxZ4WxX9i4
https://youtu.be/EGAn7WyEbp4
https://youtu.be/u7O-NSoj_8g
https://youtu.be/Uqn0tsW8sq8
https://youtu.be/Uqn0tsW8sq8
https://youtu.be/fbP-A6rkrW0
https://youtu.be/3tNVR-f2Jd4
https://youtu.be/3tNVR-f2Jd4
https://youtu.be/WtC4KQvhbU4
https://youtu.be/WtC4KQvhbU4
https://youtu.be/yT7UDERFLDY
https://youtu.be/yT7UDERFLDY
https://youtu.be/99lTH4BkLYg
https://youtu.be/99lTH4BkLYg
https://youtu.be/wLaCRd3flNo
https://youtu.be/wLaCRd3flNo
https://youtu.be/yu_MYFlIIps


 Rally®

Tutorial Description

Rally Idea Manager for Users (6 minutes) Learn how to post new feedback ideas on your organization's
Rally Idea Manager website. Set up your user profile and contact
details, then post and vote on other ideas.

Rally Page Help
The Rally menus organize pages by functions within the Agile process. The Rally menus are Home, Plan, Track, Quality,
Portfolio, and Reports.

The following tables provide guides to the Rally pages, organized by menu, with links to the topics that can help you
understand how to use the page.

Home Menu

Page Description Help

Dashboard Use your Dashboard to see the information that is most important
to you across projects, teams, and workspaces. You may use your
dashboard as your primary place to work.

Using Your Dashboard

Recycle Bin Use the Recycle Bin to restore user stories, tasks, defects, and
test cases after they are deleted.

Recycle Bin

Timesheet Use your Timesheet to capture the time you spend on projects,
user stories, defects, or tasks. This menu item does not appear if
Rally Time Tracker is not enabled.

Enter Your Time

Plan Menu

Page Description Help

Backlog Use the Backlog page to see all work items that can be scheduled
such as defects, test sets, and user stories.

Managing the Backlog

User Stories Use the User Stories summary page to see a summary listing of
all user stories.

User Stories

Timeboxes Use the Timeboxes page to manage iterations, releases, and
milestones.

Timeboxes

Team Planning Use the Team Planning page to pull work from the backlog and
schedule work into iterations.

Team Planning Page

Work Views Use the Work Views page to see all of the work items relevant to
you from across one or more projects (teams). You create a work
view by selecting the work item types you want to include, adding
filters, and customizing the fields that display in your list.

Work Views Page

 57

https://youtu.be/mP8HyNN0Xcg


 Rally®

Track Menu

Page Description Help

Iteration Status Use the Iteration Status page to view work items in an iteration,
organized by schedule state.

Iteration Status Page

Team Board Use the Team Board to see a visualization of your work flow,
displaying all of your team's work in one place.

Team Board Page

Team Status Use the Team Status page to see all project team members, with
their assigned tasks and individual capacity by project for the
selected iteration.

View Team Status Page

Release Status Use the Release Status page to display tasks, test cases, or
defects on work items scheduled for the selected release.

Release Status Page

Work Product Status Use the Work Product Status summary page to display user
stories and any associated defects or defect suites for a specific
release.

Work Product Status Page

Release Metrics Use the Release Metrics page to summarize work items that
directly impact your progress toward achieving your milestones.
This information helps you plan possible future resource needs,
identify trends, determine software quality, and help predict
velocity.

Release Metrics Page

Tasks Use the Tasks page to see basic information regarding all tasks
that have been created. You can customize the view, or filter or
sort the list to find the tasks of interest.

Defining Tasks

Quality Menu

Page Description Help

Defects Use the Defects page to create, manage, and track defects. Defects

Defect Suites Use Defect Suites page to compile and schedule a logical
collection of defects as a single unit for resolution in an iteration or
release. This allows tracking associated defects as a group rather
than separately.

Defect Suites

Test Cases Use the Test Cases page to define and track test information for
your work items.

Test Cases

Test Plan Use the Test Plan page to organize and manage test cases.
When planning your test effort, use test plans (test folders) to
assemble your test cases in a hierarchy of folders, and to view the
summarized results of all the tests in a group.

Test Plans

Quality Management Use the Quality Management page to organize and manage test
cases. When planning your test effort, assemble test cases in a
hierarchy of folders, and then see the summarized results.

Quality Management

 58



 Rally®

Portfolio Menu

Page Description Help

Portfolio Items Use the Portfolio Items page to visually track your portfolio's
progress (Percent Done) and status (green, yellow, red, blue) with
respect to planned end dates.

Portfolio Item Tracking

Release Planning Use the Release Planning page to view portfolio items ready to be
scheduled to a release. Use the board to prepare for and carry out
mid-range planning.

Release Planning Page

Capacity Planning Use the Capacity Planning page to model backlogs, teams,
capacity, and portfolio items to team allocation for a given release,
or a start and end release.

Capacity Planning Page

Plan Progression Use the Plan Progression page to see which features (the lowest-
level portfolio items) were added, removed, and completed after a
plan is published on the Capacity Planning page.

Viewing Plan Progression

Timeline Use the Timeline page to manage priorities and to help determine
where work fits into the schedule, based on the information you
currently have. It provides you with plan data across multiple
teams and helps you to visualize how the work relates across
those teams and schedules.

Using the Timeline Page

Objectives Use the Objectives and Key Results (OKRs) feature in Rally to
provide a goal-setting framework for your organization and teams
to align around the same goals. This alignment creates clarity
and focus, and helps ensure that the most important work gets
prioritized.

Using Objectives and Key
Results (OKRs) in Rally

Investments Use the Investments page to see a business-centric view of work
across projects and timeboxes. You can associate and track
financial information with a collection of work.

Using Investments

Release Tracking Use the Release Tracking page to track the status of teams and
features in a common release.

Release Tracking

Portfolio Kanban Use the Portfolio Kanban Board cards and columns to visualize
and manage work during each stage of development. The
Portfolio Kanban Board gives you a view into the flow of work at
the organization level, instead of the team level.

Portfolio Kanban Board

Reports Menu

Page Description Help

Reports Use the Reports page to access a number of reports and charts
to help you track progress and obtain insights about your agile
practices.

Rally Reports and Charts

Custom Reports Use the Custom Reports page to create and manage your custom
reports.

Custom Reports

Insights Use the Rally Insights Solution to benchmark data and get
detailed, diagnostic analytics to help understand and improve
software development performance.

Rally Insights

 59



 Rally®

Role-Based Help
This page maps Rally's help topics, Chalk Talk videos, and demonstrations to topics that are organized by role. Find the
topic you want to learn about then select the icon of the content you would like to view.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

Role-based help consists of the following:

• All Roles
• Administrator
• Product Owner
• Product Manager
• Scrum Master
• Developer
• Tester
• Reporting

All Roles

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Understanding Work Item
Details

Importing and Exporting Work
Items

Import and Export Rally Data (4
minutes)

Customize Your Dashboard How to Use Dashboards,
Custom Pages, and Apps (7
minutes)

How to Save and Share Custom
Views

Creating and Sharing Views in
Rally (7 minutes)

How to Set Up Notifications

How to Use the Recycle Bin

Bulk Delete and Edit

The Daily Standup The Daily Meeting (4 minutes)

 60

https://youtu.be/aDdRAjlmR6k
https://youtu.be/aDdRAjlmR6k
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/EeGxs4JPwDU
https://youtu.be/EeGxs4JPwDU
https://youtu.be/x0ihXNQ4E7s


 Rally®

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Definition of Done

Sizing and Estimating Sizing and Estimating (6
minutes)

Administrator

Topic Rally Help Chalk Talk Video RallyTutorial Video

Configure Your Subscription

Set Up Your Teams Agile Teams (3 minutes)

Administer Projects

Administer Users

Customize Your Workspace Configure Your Workspace (7
minutes)

Create and Customize Fields

Product Owner

Topic Rally Help Chalk Talk Video Rally Video Tutorial

User Stories Writing Good User Stories (4
minutes)

Writing User Stories Writing Good User Stories (4
minutes)

Story Points Story Points (5 minutes)

User Story Hierarchy

How to Build Your Backlog Build Your Backlog (8 minutes)

Backlog Refinement Session

 61

https://youtu.be/9qoS4iw0PNY
https://youtu.be/9qoS4iw0PNY
https://youtu.be/WKMHrgXnDnI
https://youtu.be/jgTdgaBPBDc
https://youtu.be/jgTdgaBPBDc
https://youtu.be/EYD95IWPp_I
https://youtu.be/EYD95IWPp_I
https://youtu.be/EYD95IWPp_I
https://youtu.be/EYD95IWPp_I
https://youtu.be/1280j_cJnb8
https://youtu.be/yu_MYFlIIps


 Rally®

Topic Rally Help Chalk Talk Video Rally Video Tutorial

Create Releases

Create Iterations

Iteration Planning Iteration Planning (4 minutes)

Predecessor and Successor
Stories

Dashboard Apps for Product
Owners

How to Use Dashboards,
Custom Pages, and Apps (7
minutes)

Iteration Summary App

Track Iteration Status Track Iteration Progress with
Rally (3 minutes)

Track Release Status

Iteration Demo and Review
Meetings

Iteration Demo and Review (5
minutes)

Retrospectives Iteration Retrospective (9
minutes)

Rally Idea Manager

Product Manager

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Rally Portfolio Manager

Rally Portfolio Manager Best
Practices

Manage Rally Portfolio Manager

Create a Portfolio Hierarchy

Create and Manage Portfolio
Items

 62

https://youtu.be/4t-PlaL2CRM
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/fbP-A6rkrW0
https://youtu.be/fbP-A6rkrW0
https://youtu.be/8FkRTdLjMf8
https://youtu.be/8FkRTdLjMf8
https://youtu.be/SET-R3uwjsk
https://youtu.be/SET-R3uwjsk


 Rally®

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Rally Idea Manager for
Administrators

Rally Idea Manager for Users Rally Idea Manager for Users (6
minutes)

Connect to PPM Tools

Scrum Master

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Rally Scrum Master Guide

Preparing for Release Planning Release Planning (5 minutes)

Preparing for Iteration Planning Iteration Planning (4 minutes)

Meeting Agendas

Backlog Refinement Session

Create Releases

Create Iterations

Team Capacity

Iteration and Release Planning Why We Do Release Planning
(5 minutes)

Predecessor and Successor
Stories

Dashboard Apps for Scrum
Masters

How to Use Dashboards,
Custom Pages, and Apps (7
minutes)

Iteration Summary App

 63

https://youtu.be/mP8HyNN0Xcg
https://youtu.be/mP8HyNN0Xcg
https://youtu.be/gYX19iIzECQ
https://youtu.be/4t-PlaL2CRM
https://youtu.be/ETr2A-iH70s
https://youtu.be/ETr2A-iH70s
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg


 Rally®

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Track Teams in Rally Agile Teams (4 minutes) Use Rally's Team Board
to Track Daily Progress (6
minutes)

Track Iteration Status Track Iteration Progress with
Rally (3 minutes)

Track Release Status

Canceling an Iteration

Iteration Demo and Review
Meetings

Iteration Demo and Review (5
minutes)

Retrospectives Iteration Retrospective (9
minutes)

Kanban and Scrum Kanban and Scrum (4 minutes)

Developer

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Defining Tasks

How to Create and Manage
Defects

Create and Manage Defects (10
minutes)

Connect IDE, Continuous Build,
and Source Code Tools to Rally

App SDK

Rally Apps

Web Services API

 64

https://youtu.be/WKMHrgXnDnI
https://youtu.be/NQXybhmrW_Q
https://youtu.be/NQXybhmrW_Q
https://youtu.be/NQXybhmrW_Q
https://youtu.be/fbP-A6rkrW0
https://youtu.be/fbP-A6rkrW0
https://youtu.be/8FkRTdLjMf8
https://youtu.be/8FkRTdLjMf8
https://youtu.be/SET-R3uwjsk
https://youtu.be/SET-R3uwjsk
https://youtu.be/h5Nc9VlueCQ
https://youtu.be/XD_3KWOmKu4
https://youtu.be/XD_3KWOmKu4
https://rally1.rallydev.com/slm/doc/webservice/


 Rally®

Tester

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Defining Tasks Update Iteration Tasks (5
minutes)

How to Create and Manage
Acceptance Tests

Use Rally Test Cases for
Acceptance Testing (7 minutes)

Scheduling Tests with Test Sets

How to Create Test Plans

How to Create and Manage
Regression Tests

How to Create and Manage
Defects

Create and Manage Defects (10
minutes)

Dashboard Apps for Testers How to Use Dashboards,
Custom Pages, and Apps (7
minutes)

Connect Defect Tools to Rally

Reporting

Topic Rally Help Chalk Talk Video Rally Tutorial Video

Rally Reports and Charts

Rally Add-in for Excel Import and Export with the Rally
Add-in for Excel for Microsoft
365 (9 minutes)

Rally Apps

Tutorial: Learn Rally in Five Easy Steps
This tutorial guides you through planning an Agile project five easy steps using the Rally application.

You will learn how to:

• Create a backlog of user stories
• Plan an iteration
• Track progress during an iteration
• View iteration status with a burndown chart

 65

https://youtu.be/DgHNeTQM9tk
https://youtu.be/DgHNeTQM9tk
https://youtu.be/EGAn7WyEbp4
https://youtu.be/EGAn7WyEbp4
https://youtu.be/XD_3KWOmKu4
https://youtu.be/XD_3KWOmKu4
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/u9u34Ta6opg
https://youtu.be/enOyEsPJP1g
https://youtu.be/enOyEsPJP1g
https://youtu.be/enOyEsPJP1g


 Rally®

Agile software development refers to a set of principles and practices centered on small, self-organized, and cross-
functional teams who work with the business daily to evolve requirements and to iteratively and incrementally deliver
solutions. Scrum, XP, and Lean Software Development are all well-known Agile frameworks.

Sprinting Safaris, Inc. Roars

Sprinting Safaris is a thriving adventure travel company, but their
current reservation system is manual and out of date. Sprinting
Safaris wants to modernize with an online reservation and booking
system before the next rainy season hits.

What characteristics of the Sprinting Safaris team make it Agile?

• Small (5-9 team members)
• Full-time team members (no changing team structure every quarter)
• Co-located (or using software to communicate - Skype, IM, Rally)
• Self-organizing
• Cross-functional
• No egos

NOTE

• A product owner is the person on the team who defines the value, holds the vision, and identifies the
acceptance criteria for the product. The product owner owns and manages the product backlog and seeks
guidance from architects, testers and developers to appropriately size backlog items, and to rank these items
on behalf of the customer.

1. Create Your Backlog of User Stories

A new online payment and reservation system contains several new features. The Safaris team needs to create a list of all
the features and requirements for the new system, so they know what to build first. This list of requirements is known as a
backlog. Requirements on the backlog are known as user stories. Sprinting Safaris wants their new reservation system to
accept credit cards. Let’s create a user story that captures this requirement, and rank it on the backlog:

NOTE

• The product backlog is the list of all user stories the team will do for the product.
• A user story describes what the system should do, in a way that emphasizes value to a user or customer. It

is usually written in one or two sentences of everyday language.
• A best practice for user stories is to write them from the point of view of the user. This template is often used:

As who, I want what, so that why.
• Story points are a unit of measure for expressing the overall size of a user story. Story points are relative. A

story that is assigned four points should require twice as much effort as a story that is assigned two points.

 66



 Rally®

2. Create Your First Iteration

An iteration is a short (1 to 4 week) development cycle focused on delivering working, quality software. Each iteration
delivers another increment of tested product functionality. The term sprint is also used by some teams to represent
this timebox.Iterative development is the essence of Agile. We produce working, fully tested software every iteration and
demonstrate and confirm value with the product owner or customer. This check-in ensures that we build the right features
incrementally, while working towards our larger goals.

 67



 Rally®

 68



 Rally®

Now, let’s create the first iteration to schedule work in.

NOTE

• Planned Velocity represents the number of story points your team can complete within an iteration.
• The making and meeting of commitments is a critical success factor in Agile development. Agile teams do

not commit to more work than they can get accepted within an iteration.

3. Plan Your First Iteration

As we start planning the contents of the first iteration, we increase the accuracy of our estimates by decomposing the
scheduled user stories into tasks. Let’s schedule the work in our backlog that we need to complete in our first iteration,
and “task out” the scheduled user stories.

NOTE

• The general steps for iteration planning are:
a. Identify a goal or theme for the iteration.
b. Select user stories to be developed.
c. Split the user stories into tasks.

• A task is a small item of work that represents how the team can finish a user story. For the credit card
payments story, a sample task could read, “Create credit card entry form.” Tasks should take between one
hour to one development day to complete.

4. Track Progress During Your Iteration

During the iteration, your development team provides updates on task progress as they begin work and complete
activities. This is often done in a daily standup meeting. Progress should be recorded by the team in the Rally application.
The status of the most-complete task will also rollup to its assigned user story. When all tasks are finished, the user
story reaches the Completed state. The product owner then reviews the story, and if it meets all criteria, marks it with the
Accepted state. All scheduled stories in an iteration should be completed and accepted before the last day of the iteration.
Let’s record progress for tasks and user stories in the iteration.

NOTE

• Rally's State icons:
– D = Defined
– P = In-Progress
– C = Completed
– A = Accepted

• A standup meeting, also called a Daily Scrum, is a 15-minute status meeting. Members actually stand up as
each person answers three questions:
a. What did I do yesterday?
b. What do I plan to do today?
c. What is getting in my way?

5. Hold an Iteration Retrospective and View Reports

At the end of an iteration, your team demonstrates accepted user stories to other departments and stakeholders in the
organization. The team also holds an important meeting, the iteration retrospective. The team discusses what went well
in the iteration, what didn’t go well, and assigns action items to correct any problems. This meeting allows your team to
determine if they overestimated or underestimated the number of story points that can be completed each iteration.Rally
provides reports and charts to assist your team with determining estimation success and working velocity. The most
helpful indication of team progress is the Iteration Burndown chart. Let’s view two different burndown charts that may have
resulted from Sprinting Safaris iterations:

 69



 Rally®

NOTE

• A burndown chart visually indicates the amount of task work that is left to do and the number of accepted
story points for the iteration.

• Burndown charts may fluctuate early on, but as the team matures, they provide a good indication of the
team's velocity.

Review

Our introductory tour of Rally is complete. You now know how to:

• Create a user story
• Plan an iteration
• Track progress during an iteration
• View iteration status with a burndown chart

Rally Enterprise and Unlimited Editions offer many more features that can assist your team with release planning, time
tracking, high-level portfolio planning, customer feature requests, and quality management. Need help while using Rally?
Select the question mark icons found in the upper-right corner of Rally pages to learn more about the features provided.

Rally Quick Start for Team Members
Five minutes, twice a day. That's all the time you need to update your progress in Rally as a developer, tester, writer, or
other contributor to a team.

Start reading the following sections to learn the essentials to start working immediately, then read further to improve your
workflow.

• I Just Need to Update My Tasks
• How Do I Find My Work to Update?
• I Found a Bug While Working!
• I Have an Idea to Help Meet Our Team and Organization Goals
• What Settings Can I Configure?

I Just Need to Update My Tasks
The Iteration Status page in Rally provides you with a view of all work in the current iteration or sprint. You can update the
status of items you own here.

You can view the page as a board or list view. The board view is good for getting a sense of if the team will meet their
commitments in time, while the list view is good for updating the status of multiple work items. You can customize what
work item fields are displayed.

Learn more about the Iteration Status page.

Update Tasks from the Iteration Status Page

You can update tasks from either the board or list view of the Iteration Status page. You must first display the Tasks field
on your cards or within the list view if you have not already.

Learn more about customizing how a board view displays.

Learn more about customizing how a list view displays.

1. Select Track, Iteration Status.
2. Select Tasks

.

 70



 Rally®

3. In the in-context editor, select a field to edit.
4. Enter a new value for a field or select a new value from a drop-down list.
5. Select another field to save the previous edit, or use the tab key to edit the next field to the right.
6. When finished, select the X in the right corner to close the in-context editor.

Update Stories or Defects From a Board or List

If you need to edit the contents of the user story or defect that is associated to your tasks, you can access the item’s detail
editor to edit all available fields.

1. Select the FormattedID of the work item.
2. Within the detail editor, make any changes.
3. Select Save.
4. Select the X (Close detail editor) at the top right.

How Do I Find My Work to Update?
Teams using iterations (also known as sprints) will be able to navigate to the Iteration Status page to see and update all
work items in the current timebox.

You can also use apps, custom queries, and filters in Rally to find what you’re responsible for.

My Tasks App

The My Tasks app is added to your dashboard by default when you select the contributor role upon your first login. If you
chose a different role, or have previously deleted the app, you can add it back.

Learn how to add an app to a dashboard or custom page.

The My Tasks app is a pre-configured Custom List app with a default query:

((State != Completed) AND ((Owner = {user}) AND ((Iteration.StartDate <= today) AND (Iteration.EndDate >=

 today))))

By default, the app will show you any owned tasks in the current iteration that are not complete. If a task is marked
completed, or moved to another owner, it will disappear from the app.

You can modify this query if your team doesn’t use iterations:

((State != Completed) AND (Owner = {user})

The query above will show you all of the tasks you own that are not completed, regardless of timebox. You may modify the
query further to find a specific set of tasks you own.

When you have your app configured with the filters and columns you need, you can inline edit most fields that are
displayed.

Notifications

You can set up rules that will notify you when specific work items you care about are created or changed. Notifications can
be sent to your email or displayed in an app on your dashboard.

You need to specifically enable email notifications if you want them to be sent. Learn more.

Here are a few sample rules you can use and modify to find your work items:

 71



 Rally®

• New defects assigned to me: Object ID=Changed; Owner=me
• New high priority defects: Object ID=Changed; Priority=Resolve Immediately; Priority=High Attention
• My new tasks: Owner=Changed to me
• Failing test cases: Owner=me; Last Verdict=Fail

1. Select your profile image located in the upper-right corner of the Rally display.
2. Select My Settings.
3. Select Notification Rules.
4. Select a work item from the Work Product Type drop-down list.
5. Select Actions, New Notification Rule.
6. Give your rule a name, and use the Add Condition button to add notification rule criteria.
7. Select Add Condition again to continue adding rule criteria.

You can add as many conditions as you need.
8. Select Save & Close.

I Found a Bug While Working!
Defects are work items that address and track quality issues, and are also managed within a sprint from the Iteration
Status page. Some types of defects are entered on another page in Rally first, as they need to be reviewed and scheduled
by the team before entering an iteration.

I Discovered a Defect Related to Work Done in a Current User Story

When you find a defect related to a user story currently in development, you should create the defect with an association
to the story. You can do this automatically from the board or list view of the Iteration Status page.

1. Select Track, Iteration Status.
2. Select the FormattedID of the work item.
3. Select Defects

to open the Defects page.
4. Select Add New from the toolbar.
5. Use the Name field to enter a name for the work item.
6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).
7. Select Create.

I Discovered a Regression Defect Unrelated to Current Work

When you find a defect unrelated to current iteration work, you should create the defect as a stand-alone work item. This
new defect is not addressed in the current iteration, unless there is a critical issue that causes the rest of the team to halt
work. The new defect resides on the backlog, and is ranked and scheduled by the team during regular planning meetings.

Create standalone defects from the Backlog page to ensure product owner review and ranking.

1. Select Plan, Backlog.
2. Select Add New from the toolbar.
3. Select Defect from the work item type drop-down list.
4. Use the Name field to enter a name for the work item.
5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 72



 Rally®

6. Select Create.

I Have an Idea to Help Meet Our Team and Organization Goals
Great! Team members are encouraged to create new user stories on the backlog, so they may be reviewed, estimated,
and prioritized in team meetings. You can create new stories from the Backlog page.

During backlog refinement meetings, and when extra time allows in other planning meetings, the product owner reviews
newly entered stories with the team and opens discussion.

1. Select Plan, Backlog.

2. Select Add New from the toolbar.

3. Select User Story from the work item type drop-down list.

4. Use the Name field to enter a name for the work item.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

What Settings Can I Configure?
Set up your profile to help others identify who is creating and editing work items in a project. Listing your contact details in
your profile helps your teams and your Rally administrator deal with issues between different sites.

See Set Up Your Profile for more information about how to set up and edit your profile, and your settings.

NOTE
Not all fields that you see on your profile page can be edited. Some fields are configured by your subscription
administrator.

Rally Scrum Master Quick Start
This content provides an introduction to some of the most useful Rally features for scrum masters.

As a scrum master, you'll help to:

• Remove impediments and protect the team
• Facilitate team ceremonies
• Enforce team values

This section includes the following topics:

• Setting Up Your Agile Team
• Customizing Your Scrum Master Dashboard
• Facilitating Team Standups with Rally
• Facilitating Planning Meetings
• Facilitating Retrospectives

Setting Up Your Agile Team
Rally will help you organize your teams to be productive and efficient; however, much of this set-up process comes from
discussions with the team members.

Based on research around effective teams, the ideal Agile team size is 7 ± 2. Agile teams are generally composed of
software engineers, quality engineers, a product owner, and a scrum master. Full-stack development teams are desirable
because fewer dependencies on other teams exist.

 73



 Rally®

You, as a scrum master, help teams to define several key artifacts for the team.

Working Agreements

It is common to have team policies or working agreements. The team develops and uses these guidelines to work
together productively.

As part of the working agreements, the team can define exit agreements to determine when a story moves to a new
column on the Team Board page. As the story card moves across the board, different team members may be engaged to
work on the item. Learn more about exit agreements.

Iterations

An iteration, or sprint, is a timebox when development happens. The length is determined by the team but is typically
between one and four weeks. An iteration includes planning, daily standups, the development work, the iteration review,
and the iteration retrospective.

As part of the working agreements, the team can define exit agreements to determine when a story moves to the next
state on the board. As the story card moves across the board, you can view the team's work for an iteration is the Team
Board page. Learn more.

Ceremonies

Ceremonies include iteration planning, daily standups, iteration planning, iteration reviews, and iteration retrospectives.
With the scrum master's help, the team determines if all of these are wanted, when they occur, and who should attend.

Ceremony Description

Planning During planning, the team scopes the work to be performed during the iteration.

Daily standup During the 15-minute daily standup, the team discusses work planned for the day. The scrum master ensures
that the team has the meeting, but the team is responsible for conducting the meeting.

Review During the iteration review, the team and stakeholders collaborate about what was done during the iteration and
adjust the product backlog, if needed. The scrum master makes sure the meeting takes place, understands its
purpose, and guides everyone to maintain the designated time box.

Retrospective During the iteration retrospective, the team discusses what worked well and what can be improved for the
next iteration. The scrum master makes sure the meeting happens and that everyone understands its value.

Definition of Done

In Agile, being done means that the team has completed and delivered the set of items that must be completed before a
project or work item can be considered complete. With a common definition of done, everyone on the team knows what
"done" means and when that happens in the workflow. This eliminates confusion and sets the expectation that everyone
on the team can count on. Learn more.

You help the team create a definition of done. When work is considered done, the work item is put into the Released
schedule state in Rally.

Once your team has created their own definition of done, you can create work item templates within Rally for user stories
and defects that will help the team write stories that align well with the team's story acceptance criteria. Learn more.

Customizing Your Scrum Master Dashboard
As a scrum master, you may want to collate important information onto a single custom page or on your dashboard.
Having one location to view important information about your team, especially information on how the team performs over
time, can help you save time and improve your team's efficiency.

 74



 Rally®

Consider adding the following apps to your dashboard or a custom page in Rally:

• Cycle/Lead Time App
• Throughput App
• Velocity Chart App
• Portfolio Item Cumulative Flow

For more information about how to customize your dashboard, see the following topics:

• Using Your Dashboard
• Create Custom Pages

Facilitating Team Standups with Rally
The standup provides a space for communication, clarity around the work, and knowledge sharing. The intention is that
team members review with each other how they will work together toward the iteration goal during the next day.

The 15-minute daily standup is time-boxed event for the development team to discuss work for the day and identify any
possible concerns.

The scrum master ensures that the team has the standup meeting and helps the team maintain the time box and mitigates
disruptions so that the team efficiently shares their plans, communicates impediments, and quickly makes decisions.

You, as the scrum master, can set up the Team Board page or Iteration Status page in Rally to help make the daily
standup more efficient.

During an iteration, you can use the built-in reporting on the Iteration Status page for a quick view of metrics associated
with the selected iteration. You can customize the Iteration Status page for your needs and work directly from this page to
edit work items. When viewing work items for your iteration, you can switch between a board view with cards representing
work items or a list view that organizes work items so you can easily view relationships and dependencies.

The Team Board page represents the flow state of work within an iteration. These flow states (columns) can be mapped
to a schedule state which ensures that moving a card between columns updates its schedule state. You can also filter the
board so it only displays work items associated with the current iteration. The scrum master can codify everything that that
team agreed to on the Team Board page.

For more information, see the following topics:

• The Daily Standup
• Team Board Page
• Iteration Status Page

Facilitating Planning Meetings
At the beginning of the iteration, the work to be performed in the iteration is planned during iteration planning. Scrum
masters play key roles to help with planning but the product owner determines the final plan.

Iteration planning is a collaborative meeting so that everyone on the team understands the work needed to
accomplish the iteration goal. The product owner discusses the iteration objective and the work items needed to
meet the iteration goal. During planning, the team identifies the work they'll address during the iteration. The scrum
master helps to provide information on team capacity so teams can determine what is realistic to accomplish in the
upcoming iteration.

During planning meetings, scrum masters can use reports and charts to point out past team performance.

For more information, see Team Planning Page

 75



 Rally®

Facilitating Retrospectives
The retrospective, facilitated by a scrum master, is an opportunity for the team to reflect on how the iteration went and
create a plan for improvements during the next iteration.

The retrospective occurs after the iteration review and before planning for the upcoming iteration. The scrum master
makes sure that everyone appropriate attends and that everyone understands the purpose of the meeting.

The intent of the retrospective is to:

• Review how the last iteration went. Were individuals successful? Were the relationships successful? Did the processes
and tools meet the team's needs?

• Identify and acknowledge what did and did not go well.
• Create a plan for improvements. The scrum master encourages the team to work on improvements for the

next iteration.

You have access to several reports and charts in Rally to help teams visualize how work progressed during an iteration.

 76



 Rally®

Learning Agile
Whether you are starting your first agile pilot or scaling across an enterprise, Rally provides a framework to help you
successfully scale and mature agile practices in a step-wise fashion.

This section connects you with just a few of our available resources for both Agile and scaled Agile.

• Agile Video Tutorials
• The Agile Primer
• The Daily Standup
• Definition of Done
• Release Planning
• Iteration Planning
• Meeting Agendas
• The Product Backlog
• Top 10 Mistakes Made by New Agile Teams
• Agile FAQ
• Story Estimation Timeline
• Enterprise Scale Agile

Agile Video Tutorials
Watch these Agile videos for guidance on Agile and Lean practices.

Our videos are available on our Rally Chalk Talks YouTube Playlist.

Lean and Agile Practices

Lean and Agile Practices

Kanban and Scrum Practices

Agile Values

Agile Teams

Scrum Framework

Writing User Stories

Writing Good User Stories

Sizing and Estimating

Story Points

Working in the Iteration or Sprint

Iteration Planning

The Daily (Standup) Meeting

Iteration Demo and Review

Iteration Retrospective

 77

https://www.youtube.com/playlist?list=PLynEdQRJawmwBASRqvomloyw3a_VLGXXk


 Rally®

Release Planning

Why We Do Release Planning

Release Planning

How We Do Release Planning at Rally

The Agile Primer
Agile projects build software incrementally, typically using short iterations of 1–4 weeks, to keep development aligned with
changing business needs.

How is Agile Development Different from Other Methodologies?

Instead of a single pass, 6–18 month release that predicts all requirements and risks up front:

Agile adapts to frequent feedback by delivering working, tested code every 1–4 week iteration:

What are the Different Roles in an Agile Team?

The scrum master is a facilitative servant leader who helps the team stay true to their practices so they can make and
meet commitments. Responsibilities include:

• Enable close cooperation across all roles and functions
• Remove blocks and shield the team from disturbances
• Work with the organization to track progress and re-factor structures and processes of the organization
• Ensure agile's inspect and adapt processes are leveraged, including daily stand-ups, planning meetings, demo and

review, and retrospectives
• Facilitate team meetings and decision-making sessions

The product owner drives the product from the business perspective. Responsibilities include:

• Define the requirements and prioritize their value
• Determine the release date and content
• Take an active role in iteration and release planning meetings
• Ensure the team is always working on the most valuable requirements
• Represent the voice of the customer
• Accept stories that meet the team's definition of done and defined acceptance criteria

 78



 Rally®

How Does an Agile Team Plan Their Work?

An agile team works in iterations to deliver user stories.

The team plans stories into their iteration, based on each story's backlog prioritization and size.

The team uses their capacity (how many ideal hours available to work on tasks), to decide how much scope to plan into
the iteration.

Why should I care about story points?

• Points: Define how much the team can commit to
• Capacity: Defines how much an individual can commit to

What is a User Story?

A user story is a requirement that defines what functionality a user needs. A user story can take two formats:

• As a <User Role> I want <Functionality> so that <Business Value>
• In order to <Business Value> as a <User Role> I want <Functionality>

During release planning, user stories are given a rough size estimate using a relative scale like points.

 79



 Rally®

During iteration planning, the story is broken down into tasks.

Agile is very disciplined about producing useful, realistic estimates.

What is the Relationship between a User Story and Tasks?

A user story talks about the what–it defines what a user needs.

A task is how the functionality will be implemented. Stories are implemented by tasks. Real work is more granular than
stories. Each story is really a collection of tasks.

You wait to break stories into tasks until the story is planned for the current iteration. Elaborating details just-in-time takes
advantage of learning and feedback.

Tasks are estimated in hours, typically sized between 2–12 hours.

Stories are validated with acceptance tests.

 80



 Rally®

When is a Story Done?

Teams determine what done means. Criteria can include:

• All tasks completed (dev, test, doc)
• All acceptance tests running and passing
• Zero open defects
• Accepted by the product owner
• Could be delivered to users

Teams define their definition of done and commit to completing all stories to that definition during each iteration.

What is Acceptance Criteria?

The criteria which define the functionality, behavior, and performance required by the feature for it to be accepted by the
product owner or customer.

The role of acceptance criteria is to define what done is, so that development knows when they have completed the story.
If there are areas of the story you don't want to leave for development to define, then write an acceptance criteria. For
example, if you feel strongly about how error messages should be worded, you may provide a design document to explain
the format and wording of error messages, or you can write acceptance criteria for each story that may generate an error
message to specify the message wording.

How are Requirements Defined?

Requirements are defined as a user story with acceptance criteria and tasks to implement the story.

The Daily Standup
The practice of the daily stand-up not only provides a forum for regular status updates, but brings problems immediately
into focus for quick action.

It is this fast feedback that helps the teams react to change successfully, and makes it imperative that the daily stand-up
be one of the first essential routines that any Agile team establish, regardless of office locations.

What is a Standup?

• Daily status meeting that lasts 15 minutes or less
• Uses three key questions to create commitment and remove blocks

 81



 Rally®

– What I did yesterday
– What I will do today and
– I am blocked by…

• NO problem solving occurs in the daily stand-up; it is for status only, not discussion
– If a team member wants to discuss something, they can propose a discussion for a time in the future

• Participants usually stand rather than sit to ensure the meeting is over quickly

Why are Standups Important?

• Team evaluates how they are delivering to the iteration plan
• Team members inform each other of their commitment for the day
• Provides visibility on delays and obstacles

Who Attends Standup?

• The scrum master, product owner, and the delivery team
• Stakeholders and customers can observe and are encouraged to attend, but they do not participate
• The scrum master takes notes on each team member's obstacles

Tips for Geographically Dispersed Teams

Within workday time zones: If the team members are within eight hours of each other, the team should determine the
best time of day to hold their stand-up. For example, a daily conference call could be scheduled at 8am Pacific time,
which would allow other team members in the Mountain, Central, and Eastern time zones to dial in and participate at 9am,
10am, and 11am respectively.

Beyond an 8-hour time difference: When it becomes unreasonable to have all team members attend the same
meeting, have multiple standups. Try to keep the number of stand-ups limited, as there still must be coordination and
communication among the geographically dispersed teams. This communication can take several different forms:

• A single member from Team A is selected (on a rotating basis if preferred) to attend Team B's stand-up, or vice versa.
This usually means that the individual ambassador has to join these meetings outside normal work hours.

• Team A and Team B have separate stand-up, and record their status in an online tool (Rally, SharePoint, wikis) that is
reviewed during each team's stand-up. For example, Team A could update their task status in Rally during the stand-
up, as well as post notes on blocking issues. Team A would also view the results of Team B's stand-up in the same
tool.
Note: Never let the tool replace human contact! Pick up the phone every few days to keep the lines of communication
open.

• Be sure to make use of the wide variety of communication tools available: conference calling, video conferences, wikis,
and other third-party knowledge sharing tools.

Definition of Done
The Definition of Done is an agreed upon set of items that must be completed before a project or user story can be
considered complete.

Story

A story is a software system requirement that is formulated as a few sentences in the everyday language of the user that
can be completed within an iteration.

A story is done when:

 82



 Rally®

• All code is checked in
• All developer tests pass
• All acceptance tests pass
• Help text is written
• Product Owner accepted

Iteration

An iteration is a theme-driven timebox of requests to be worked on and accepted within a release of a product. An
iteration is defined in an iteration planning meeting and is completed with an iteration demo and review meeting. The
terms iteration and sprint are used synonymously.

An iteration is done when:

• Product backup is complete
• Performance tested
• Defects are fixed or postponed

Release

A release is a milestone representing the internal or external delivery of a working, tested version of the system.

A release is done when:

• Stress tested
• Performance tuned
• Security validation passes
• Disaster recovery plan tested

Create Meeting Agendas
The release and iteration planning pages provide information, checklists, and agendas to help prepare you for release and
iteration planning meetings.

Iteration Planning

Release Planning

The Product Backlog
The product backlog is a ranked list of work that is yet to be done.

What is a Product Backlog?

• A list of all the work yet to be done.
• A ranked list of briefly-described feature requests. Ideally, these feature requests should be broken down into user

stories. Learn more.

Why is the Product Backlog Important?

• It is constructed and designed so a delivery team can provide estimates for each feature. Learn more.
• It helps guide roadmap planning. Having a list of features whose rank can be changed allows us to welcome new ideas

and changes in direction. Learn more.
• It helps teams focus on delivering the highest value first; teams rank and re-rank for value.

 83



 Rally®

Characteristics of the Product Backlog

• One backlog per product, seeded by large to very large features
NOTE
Backlogs can be worked on by a single team or by multiple teams.

• Feature ranking is based on business value, technical value, risk management, and strategic fit.
• Highest ranked backlog items are decomposed during release planning into stories that can be completed inside an

iteration.

Agile FAQ
The following is a collection of 10 frequently asked questions about Agile methodology.

Here you’ll find suggested best practices. Select a question from the list below to jump directly to a topic:

• How do we know if a transition to Agile will work? Has anyone else like us done this successfully?
• What about documentation?
• Does Agile work for distributed teams?
• What is the right size for stories?
• What is the right team size?
• What if we can’t break down our stories?
• Can we change a story or task after the iteration has started?
• How do we write stories from the users’ perspective if we are delivering internally?
• How do we estimate delivery date and cost?
• We are really struggling to dedicate people for the iteration, any suggestions?

How do we know if a transition to Agile will work? Has anyone else like us done this successfully?

Software development is very difficult, so a methodology transition is not a guarantee of success. Many products fail to
be delivered on time and within budget, and others fail to meet expectations. Agile is not a silver bullet. A fatally flawed
initiative will still fail, but with an empirical approach like Agile, you will either fail sooner or use feedback to change
course.

There are many who have experienced success with Agile. While every individual, team, or organization is unique, they all
face similar challenges. Regardless of the business or technology domain, we all want to deliver early and often, and pull
quality forward. The question is not, “How Agile can we be?”, but, “How good do we want to get at building software?”.

What about documentation?

One of the popular myths about Agile teams is that they don’t produce documentation. The reality is that Agile teams
know that face-to-face conversations are the most effective means of communication. Documentation is produced when
there is business value, not because “we always did it that way before.”

You don’t often see Agile teams creating detailed requirements documentation upfront. With business and development
working more closely together there is less dependence on the written word, allowing teams to defer commitment until
the maximum amount of information is available. Where documentation is necessary, you should make time within the
iteration to complete it. If you wait till later, you will accumulate technical debt that will impede your ability to release.

Does Agile work for distributed teams?

Absolutely. We have many customers who are very happy and successful with their distributed teams. Although face-to-
face communication is the most effective means of communication, it is often not feasible to have co-located teams. In our
ever-changing world, where companies are offering employees a better work/life balance and are conscientious about the
environment, we see more and more distributed teams.

 84



 Rally®

What is the right size for stories?

Stories should be the right size for their purpose. If you are planning an iteration, you need to ensure your stories are
small enough to be completed in an iteration. On the other hand, stories appearing on a product roadmap might span
multiple iterations, and to spend time breaking those down may not be economical. Sometimes we see teams breaking
down stories towards the end of the iteration as they try and de-scope to meet their iteration commitments; this is usually
a sign that stories are too large. So, create stories small enough that you can correctly prioritize scope, but not so far in
advance that you risk wasting effort.

What is the right team size?

The magic range we like to use is between five and nine people. Once a team grows, meetings last longer and the
amount of not-directly-relevant information increases. There is also a danger that individuals will start to question the
value of everyone attending daily stand-ups and planning meetings. Of course, it may not be that easy to split the team,
and it can add overhead. Use the retrospective meeting to generate ideas for how to proceed with the larger team or what
the best split options are.

What if we can’t break down our stories?

Although many new to story writing anticipate difficulties with this in reality it usually sorts itself out. For example, close
your eyes and think about what you are going to do immediately after reading this. You just broke down a story. Yes it’s
probably a very small task that you don’t need to detail on a backlog, but it is part of something larger and has identity.

We are good at breaking down stories, we just need to get accustomed to doing it at the right time and at the appropriate
level of detail. We don’t do it all upfront; it is a continuous process. As we descend through the levels of Agile planning
and discuss our stories, our dialog drives the story breakdown. For example, as we prepare for planning our next iteration
we will have discussions about some of the choices for the stories we have slated for that iteration. The decisions we
make will yield either acceptance criteria for the stories or new smaller stories that can be independently scheduled.

Can we change a story or task after the iteration has started?

The tasks in your iteration should accurately reflect the work that needs to be done. If you underestimate a task, then the
hourly estimate should be updated as soon as possible so the rest of the team has visibility into the latest status and can
offer help where needed.

Stories are not expected to change during the iteration; the process of writing the acceptance criteria, estimating the story,
and tasking out the story usually uncovers all needed information. If there is a request to add to the scope of a story, then
the team should ask the product owner to consider waiting for the next iteration. If the scope change cannot wait, then
consider the impact and if significant, cancel the iteration. Removing scope is a much easier question to address. Stop
doing something as soon as it is discovered to be unnecessary.

How do we write stories from the users’ perspective if we are delivering internally?

Think about who the story will be delivered to and what value they will get from that story. It should always be possible to
express something in a way that articulates value. Many use the "As a (type of user - who), I want (some goal - what) so
that (some reason - why)" user story template. The last part, the (why), is very important, and should not be taken lightly. If
we cannot justify the need to build a story, perhaps the story is not valuable and needs to be reconsidered.

How do we estimate delivery date and cost?

Every successful business needs to set expectations around delivery date and cost and an Agile organization is no
different. An estimate is by definition a guess, so there can never be any guarantees. A key tenet of Agile estimation is
that we estimate at the work product level, not the worker.

With an iteration-based approach like scrum, we can use the velocity of our teams to predict both the expected delivery
date and the cost of items on our backlog. With a flow-based approach, we would use cycle-time and throughput to set

 85



 Rally®

expectations. With both approaches, we need a predictable incremental delivery model. Without a stable cadence our first
cut estimates are little better than we experience with a traditional plan-based approach. However, if we can commit to
a small-batch, rapid feedback rhythm we have the ability to check-back early, and provide higher fidelity estimates a lot
sooner than a traditional approach.

We are really struggling to dedicate people for the iteration, any suggestions?

If you have people wearing multiple hats you are losing a lot of productivity and impacting throughput by context switching.
Prioritize ruthlessly and limit the work in progress to force one thing to be completed before people start on something
else.

It is okay, and even expected, that from time to time the group will need rely on the expertise of specialists outside the
team. The work of the specialist should be planned and managed just like other members of the team.

Top 10 Mistakes Made by New Agile Teams
This page describes the 10 most common mistakes that a new Agile team can make.

Here you will find suggested remedies that come directly from us. If you are new to Agile, Rally, or just need a refresher,
select an item in the list to jump directly to a topic:

• Fear
• Poor Communication
• Poor Team Structure
• Poor Estimation
• Poor Planning
• Poor Testing
• Ignoring Customer Feedback
• Lack of Team Empowerment
• Lack of Retrospective and Demo Meetings
• No Plan to Address Employee Resistance

Fear

Fear is a powerful emotion that is encountered in many forms. It drives bad decisions and practices that can frustrate your
new Agile team. Fear's mortal enemy is trust. Counter fear by instilling trust at all levels. Start by letting the team know
that the organization trusts them to make the right commitments and decisions. The team should be trusted to learn, grow,
and make choices as a group, instead of taking directives from management.

A common example of fear stifling team growth is the issue of commitment. Teams often under commit or pad their
estimates, due to fear of being responsible or blamed for failure. Initially, allow your team to give themselves permission
to miss in their estimation. Foster an environment of trust, such that the team can explore the causes of a miss without
finger-pointing. This helps you find the true upper limit of your velocity. A single miss can translate into dozens of future
successes.

Poor Communication

If your team members don't talk to each other regularly each day, trouble lies ahead. Even with the most meticulous
documentation, the best way to discover issues and blockers is through face-to-face communication. Foster collaboration
by setting up a dedicated team area, where all team members work within reach of each other. Use video conference
and instant messenger software to create a virtual room for global teams. In Rally, you can use notifications, dashboard
panels, and discussions to enhance team communication.

Host a standup meeting, every day. A brief, face-to-face meeting among all team members serves to let everyone know
what work happened yesterday, what work is planned for today, and what issues may prevent work from happening.

 86



 Rally®

Choose quality over quantity regarding the information being shared. By physically standing up in the meeting, team
members get uncomfortable if the discussion becomes unnecessarily long. Don't give in to the temptation to problem
solve in a standup. Let your scrum master discuss the details of blocking issues with individuals later.

Poor Team Structure

Great Agile teams have two common characteristics: they are cross-functional and stable.

A truly cross-functional team has all the necessary skills to move a user story to completion. For example, if your team's
definition of done includes fully documented code, include a tech writer in your team structure. Also, include a tester
to ensure that the code is of high quality. The team must see a user story with a wide lens, so that they can correctly
estimate the scope.

Stable means team members have time to grow with each other. Challenge yourself to keep teams together through
each month, quarter, or even year. Consider keeping the team together as one project ends and another begins. Team
members benefit by learning across their roles, and can challenge each other to provide accurate estimates as they
become familiar with everyone’s skills. These mature teams have well-defined velocities that provide better predictability
to product owners and stakeholders.

Poor Estimation Habits

Estimating the size and scope of new work can be difficult, especially with a new team. Hang in there. Estimation gets
easier with time. Let management know that the team will need two to three inception sprints to learn their initial velocity.
Don't accept projected deadlines for the feature set until your team knows how quickly they can complete work.

Some teams may relate user story points with actual work hours. Avoid this mistake! Use abstract values such as t-shirt
sizes, colors, or points to represent the size of new work. This is important. Abstraction helps us track the complexity of
the story instead of an individual's availability. Point estimation reflects the abilities of the team as a whole. Once user
stories are sized and committed to in an iteration, individual capacity comes into play in the form of hourly task estimates.

Poor Planning Habits

Compared to waterfall and other approaches, some may believe that there is little to no planning with Agile. In fact, there
is even more planning. The difference with Agile is that this critical action is ongoing instead of a one-time event that
gets checked off at the beginning of the development cycle. Think of it as a continual process that occurs at varying
levels of complexity and granularity. Expect and commit to spending 20% of available work hours planning in order to be
successful.

Schedule backlog refinement, daily standup, iteration planning, and release planning meetings. Develop a consistent
rhythm for these meetings so team members can develop “muscle memory” to better plan for the upcoming timebox. Build
the planning cadence such that the team is looking one to two iterations ahead.

Poor Testing

Agile is not about delivering software faster. Agile is about delivering quality software faster. Your product owner should
not accept completed work until it has been tested and meets the team's acceptance criteria. One way to combat poor
testing habits is to place an emphasis on developing automatic testing. Test every single build until it passes.

You may believe testing is done last, after developers complete coding. Not so! With testers sitting on your cross-
functional team, testing can begin immediately. After iteration planning, the requirements of the user story are known.
Start building tests against the value the stories provide so that they can be verified as soon as code is ready. This
removes a potential bottleneck.

Ignoring Customer Feedback

Customers are your most important stakeholder. Let them help your organization craft the vision for features and
functionality. Review the most popular requests when refining the backlog and planning. Consider including a customer

 87



 Rally®

support agent as a member of the team to provide data and trends. Check this feedback loop every iteration so you don't
continue building something that is not meeting customer needs.

Rally provides an easy way to manage customer feedback with Rally Idea Manager. You can set up a customized voting
site where new feature requests can be collected, organized, and voted on by external and internal stakeholders. You can
even communicate back to your customers by posting feedback and status updates on each request. Rally Idea Manager
is included in the Rally Unlimited Edition.

The Team is Not Empowered

There are three steps to ensuring your team is empowered in the Agile process. First, you must engage the team by
inviting members to participate in planning. Next, ask the team for their insights on the proposed set of work. Finally,
the value of these insights must be respected. True empowerment means the team makes the decisions that impact
commitment. The business does not tell the team what to do, but instead provides data on what is most important.

When the team has a prioritized list of requests, instead of a set of directives, they become part of the process. The team
can return feedback to the organization such as, “We can complete story A, but this will mean story B must be dropped,”
or, “If you must have story C done this iteration, quality is at risk.” Some teams will shy away from this responsibility; they
just want to follow along. Challenge the team to grow, and foster an environment of trust to provide empowerment.

Lack of Retrospective and Demo Meetings

You thought we were done recommending more meetings? Not yet. Meetings that conclude iterations and
releases are the necessary bookends that complete the inspect-and-adapt cycle. This happens at all levels. Your
daily standup meetings should include a retrospective aspect. At the end of an iteration, host a demo meeting with the
organization to show the work your team has completed. Other teams can provide you with valuable insight (plus a nice
pat on the back).

Host iteration and release retrospective meetings with your team. In these meetings, the team can discuss what went
well, what problems they encountered, and what action items are needed to prevent issues in the next timebox. But don't
focus on just the work that was committed to. Retrospect on the Agile process as a whole. What aspects of planning are
working? Is the team encountering any of the mistakes in this list? What adjustments can be made?

No Plan for Resistance

Change is tough, and some people may resist the switch to Agile. Be prepared for this scenario by starting with
communication from management. The organization must make it very clear that it supports the notion of team successes
over individual performance. Eliminate personal metrics; you win and lose as a group. This combats a potential cultural
problem — that the transparency Agile provides will result in judgment by peers. Again, this goes back to providing an
environment of trust.

Story Estimation Timeline
This example timeline follows a new story from the bottom of the backlog to iteration planning. You will be able to see who
performs various estimation activities and what meetings are used to discuss the story.

Watch a short YouTube tutorial on the process for estimating stories. .

Agile Practices
Whether you are just getting started with Agile development or learning how to apply Agile practices to an entire
enterprise, this section offers comprehensive techniques for creating the Agile organization.

More great advice like this is available from our partners at Enterprise Studio to Rally customers who would like to further
enhance their agile and lean processes.

 88

https://www.hcltech.com/enterprise-studio/digital-advisory-consulting/agile


 Rally®

• Write a Great User Story
• Break Down Stories
• Prioritize the Backlog
• Design a Portfolio Kanban Board
• Iteration Demo and Review Meetings
• Iteration Planning
• Retrospect Your Iterations
• Cancel an Iteration
• Kanban Board: Why are Exit Agreements/Policies Important?

Write a Great User Story
A user story represents a small piece of business value that a team can deliver in an iteration.

While traditional requirements (like use cases) try to be as detailed as possible, a user story is defined incrementally, in
three stages:

• The brief description of the need
• The conversations that happen during backlog refinement and iteration planning to solidify the details
• The tests that confirm the satisfactory completion of the story

Well-formed stories meet the criteria of Bill Wake's INVEST acronym:

Independent We want to be able to develop in any sequence.
Negotiable Avoid too much detail; keep them flexible so the team can adjust how much of the story to implement.
Valuable Users or customers get some value from the story.

Estimable The team must be able to use them for planning.
Small Large stories are harder to estimate and plan. By the time of iteration planning, the story should be able to

be designed, coded, and tested within the iteration.
Testable Document acceptance criteria, or the definition of done for the story, which leads to test cases.

Why Use User Stories?

• Keep yourself expressing business value
• Avoid introducing detail too early that would prevent design options and inappropriately lock developers into one

solution
• Avoid the appearance of false completeness and clarity
• Get to small enough chunks that invite negotiation and movement in the backlog
• Leave the technical functions to the architect, developers, testers, and so on

How Do I Write User Stories?

When getting started with stories, a template can help ensure that you don't inadvertently start writing technical tasks: As
a <user type>, I want to <function> so that <benefit>.

Examples:

• As a consumer, I want shopping cart functionality to easily purchase items online.
• As an executive, I want to generate a report to understand which departments need to improve their productivity.

Try to avoid the generic role of User when writing user stories. User stories are about all of the roles who interact with the
system or who realize some value or benefit from the system. Not all actors are end users. For example, a role could be
another system or someone who wants certain functionality in order to buy your product, but will never actually use the
product. It may be useful to create aggregate roles (such as consumer) and specialized roles (such as browser or frequent
shopper).

 89



 Rally®

In Rally, this template should be entered at the top of the Description field. This sets the tone for the details and
acceptance criteria, which will be entered in the story.

What Size Should a User Story Be?

A story should be small enough to be coded and tested within an iteration—ideally just a few days. When a story is too
large, it is called an epic. Backlog items tend to start as epics when they are lower priority. For release planning, epics
should be broken down into smaller chunks, but not so small that you have moved into detailed design.

How Detailed Should a User Story Be?

Too broad

• A team member can view iteration status.

Too detailed

• A team member can view a table of stories with rank, name, size, package, owner, and status.
• A team member can select a red button to expand the table to include detail, which lists all the tasks, with rank, name,

estimate, owner, status.

Just right

• A team member can view the iteration stories and their status with main fields.
• A team member can view the current burndown chart on the status page, and can select it for a larger view.
• A team member can view or hide the tasks under the stories.
• A team member can edit a task from the iteration status page.

When Do I Add Detail?

Acceptance criteria provide the Definition of Done for the story. As details about the story evolve, capture the critical
ones as acceptance criteria. The product owner should list as many acceptance criteria as possible to clarify the intent of
the story. Regardless of how detailed the acceptance criteria are, the team should have a conversation about them and
adjust the acceptance criteria to capture the results of the discussion. Once an iteration has begun, testers can formalize
acceptance criteria into acceptance tests.

In Rally, place the acceptance criteria directly beneath the value statement in the Description field. Delivery team
members have a single location to see all of the story info with this method. By using bullet points, you can keep each
criteria item brief and clear.

Who Uses User Stories?
Creation: The customer, customer proxy, product owner, and anyone else who identifies a need for the product can

contribute user stories.
Ownership and
maintenance:

The product owner owns the user stories and is responsible for writing, gathering, maintaining, and
prioritizing.

Usage: Developers, testers, technical writers use user stories to be able to know what to implement and when they
are done. Product owners track overall progress, based on the status of the user stories. Management
tends to track user stories that are rolled up to epics or features.

What Are the Top Mistakes That People Make?
Too formal or

too much detail.
Product owners with good intentions often try to write extremely detailed user stories. If a team sees a story
at iteration planning that looks like an IEEE requirements document, they often assume that all the details
are there and will skip the detailed conversation.

 90



 Rally®

Technical tasks
masquerading

as stories.

Much of the power of Agile comes from having a working increment of software at the end of each iteration.
If your stories are really just technical tasks, you often do not end up with working software at the end of
each iteration, and you lose flexibility in prioritization.

Skipping the
conversation.

Stories are intentionally vague before iteration planning. If you skip the acceptance criteria conversation,
you risk moving in the wrong direction, missing edge cases or overlooking customer needs.

Example User Story

Below is a sample user story in Rally. This story has been discussed by the team in several refinement and planning
meetings as it moved up the backlog, and is close to being scheduled into an upcoming iteration. The purpose of this user
story is to provide purchasers on an online site the ability to use a credit card for payment.

Break Down Stories
User stories are often large and feature-sized when they are first added to the backlog.The delivery team, or a
representative, provides gross-level estimates to help the productowner rank the backlog.

As the priority of such a feature rises and the functionality is better understood, it can be broken down into smaller stories.
Ultimately, these smaller stories will fit into a single iteration.

 91



 Rally®

When breaking large stories into smaller stories that fit into an iteration, it is important to try to write in layers, for example,
like cake slices. That is, the story should require the team to develop a function that includes the GUI or presentation
layer, the business or logic layer, and the data or persistence layer.

Developers' instincts are to develop layer by layer. However, multiple tables unconnected to methods or GUI does not
constitute potentially shippable code. Such stories will deliver no value, however small.

When we develop in cake slices, even for a thin piece of functionality that is not in itself very valuable, there is an
opportunity to learn from feedback. If we can demonstrate even a small amount of the logic or GUI, we can determine if
we are satisfying our customer.

 92



 Rally®

Prioritize the Backlog
Agile teams rely on a prioritized backlog to guide their work.

The most important work is at the top of the list, available for the team to start as soon as they are ready. Less important
work is ranked lower, and is elaborated only when it moves near the top of the list. As new work comes in that needs to
be done, the product owner adds it to the backlog in the appropriate position so that the team always knows what work to
start next.

When to Prioritize

• Rank the backlog continuously
• Once you have committed to an iteration plan, you should not change the rank of those committed items
• All other items can be re-ranked whenever you learn new information, usually in the form of feedback or information

gathered from the team or stakeholders

Techniques for Prioritization

• The product owner must rank the backlog, deciding which story is first, which is second, which is third, and so on
• Initially prioritize backlog items using a bucket scheme such as MoSCoW (must have, should have, could have, will not

have)
• Subsequently, you can individually rank each item in the backlog, so that the team can always start the prioritized

stories
• If a story contains various components that can be prioritized differently, consider breaking it down into multiple child

stories

Consider the following when prioritizing:

• The value of the feature for the masses
• The value of the feature to a few of the elite
• Story cost
• Estimated time to implement
• The impact it has on other stories
• Risk and opportunity costs

Design a Portfolio Kanban Board
How is your portfolio working today? Do you know what is going on with every project? Which ones are started? Which
ones are stalled? Are projects delivering value as fast as possible? Are your teams always putting the most energy on
your top priorities? Are you preparing just enough information to move forward steadily, with no waste?

With most portfolios, it is difficult to answer these questions well. Using a portfolio Kanban (or two) can help optimize the
flow of your portfolio. You will deliver higher-value work faster by focusing energy on the most important work.

Kanban systems work so well because they are so simple. At its heart, a Kanban system is just a visual board used to
manage the flow of work. Many software teams use Kanban boards to manage their processes. You can use the same
concept at the portfolio level.

What can you tell about this portfolio from looking at this board?

• Which projects have started? Which projects are waiting?
• Is there a bottleneck in the workflow? Which column is the slowest?
• Should Discovery work continue? Does this portfolio need more analysis?

Quickly visualizing the current state of your portfolio provides so much value. Consider these two actions to get even more
value:

 93



 Rally®

• Limiting work-in-progress enables more valuable work to be completed faster
• Pulling items when ready to work (rather than creating large inventories of work) reduces waste

Design Your Kanban

Agile organizations can use Kanban systems at many different levels. For example, an initiative Kanban can feed a
feature Kanban, which feeds a team’s story-level Kanban.

Here are a few ways you might consider starting your Kanban:

A Kanban Full of
Initiatives or Projects

If you are new to using Kanban to manage your portfolio, we recommend working at the initiative (project)
level. At Rally, an initiative is a set of work with clear success criteria that can typically be completed in a
few months. An initiative can be completed by one or more teams, and might release software in a few
increments. Each development team will probably want their own Kanban board.

Key benefits of using Kanban at the initiative level:

• Most organizations go slower than they could because they are working on too many projects
simultaneously. A Kanban at this level can help solve this problem.

• If you are constantly doing resource management and trying to keep projects moving, managing your
initiative WIP can make this activity much easier.

A Kanban Full
of Features or
Enhancements

• It is much easier to understand what is shipping soon.
• If your teams ship features frequently (daily or weekly) to a SaaS or IT system, this level of Kanban can

help track which features are toggled on for different groups of users.
• Enablement activities such as documentation, training, and marketing can be driven by feature

availability, rather than batched.
• Visibility into features in the early stages makes it easier to plan external activities just-in-time. For

example, if a new feature warrants a change to pricing or a website, this board can help start that
process at the right time.

A Kanban Full of
Implementation,

Content, or
Professional

Services Projects

What do medical research and video game development have in common? Both can involve separate
development of a core engine and implementation.

In the medical space, studies might be set up by a professional services group in a matter of a couple of
weeks.

In the video game space, once the game engine is built, a large amount of content must have many
repeatable steps applied to it such as animations, sounds, and so on.

A Kanban system at this level can help you:

• Accelerate the speed at which content or studies are completed.
• Reduce the coordination overhead by replacing cumbersome project management with a simple pull

system.

There are three key things to consider when setting up your portfolio Kanban:

• Columns on the board
• Policies that must be met for items to move
• Meeting cadence that you will use to work with the board

To get a quick start on your portfolio Kanban, gather a few key leaders of your product management team.

Discover your Initial Columns

Brainstorm all the initiatives that you have in progress right now. For example, you might think about projects that are:

 94



 Rally®

• In active maintenance mode
• Have just shipped
• About to ship
• Being tested or fixed
• Mostly done but waiting for a specialized resource
• On hold or stalled
• Fully moving
• In an earlier exploration stage
• Getting energy but you are not sure if they are worth pursuing yet
• Being done on the side or under the table

This is a great activity to do with sticky notes on the wall. Once you feel like you have almost all of the active projects
listed, start grouping together the ones that seem like they are in similar states.

These states will be the initial columns on your Kanban board. For example, at Rally, we have six states on our Initiative
board: Backlog, Initial Customer Validation, Assessing, Ready, Building, and Collecting Evidence.

Remember your Current Policies

You might have an extensive software development process already defined that prescribes what steps have to happen
as projects advance through their life cycle. In many organizations, this kind of process is extremely detailed, and people
ignore many of the steps. A simple process that people actually follow is more rigorous than a complex process
everyone avoids.

In a Kanban system, simple policies define when items can move across the board. The simpler the policies, the more
likely they are to be followed, but make sure that truly critical activities are represented. Think of each policy as a simple
checklist that must be checked off before an item moves. Here are some policy examples at the feature level:

Backlog Analysis Ready for Dev

Exit Criteria
• Pull when ready

Exit Criteria
• Story backlog defined
• Estimated
• Value and benefit clear
• Is there a P&P impact?
• Website changes needed?
• High-level designs, if appropriate
• Arch council check-in

Exit Criteria
• Detailed designs for first stories
• P&P committee notified, if needed
• Dev pulls first story

This group started with a much more extensive, idealistic list of policies: the business case was defined before customer
interviews and competitive analysis began and so on. After a few months, they realized that this did not reflect how they
were actually working, so they updated the policies to reflect their real process. Some things to note:

• The early policies are easy to meet. Before you begin customer validation, you must define a problem statement and
list the hypotheses you plan to test. In many cases, this takes only minutes.

• The customer validation stage is also simple, with the goal of creating an initial backlog for the initiative.
• The business case is not created until after someone has spoken with some customers.
• The policies are short, readable, and can be used as checklists.

Rally recommends that you attempt to capture your existing policies first, and only commit to the ones that you actually do
now.

You may not get the policies (or the columns) correct on the first try. A Kanban board is a living system that changes as
you learn about what is working and where your bottlenecks are.

 95



 Rally®

Does Policy Length Really Matter?

Up to ten simple bullet points per column are reasonable, but as soon as you have greater than five items, you reduce the
odds people will understand the policy. At Rally, we experimented with various policy lengths. At one point, policies lived
in a spreadsheet that defined activities for different groups in each column—up to 15 or 20 activities. The result? Everyone
ignored the policies and just moved items forward without discipline. A simple, brief checklist visible on the board is much
easier to work with and much more likely to be followed.

Find Time on Calendars

A continuous-flow system like Kanban does not require a fixed rhythm of meetings in the same way a batch-based
process does. Scheduling challenges may make it difficult to get your product management team together on short notice.
Since items at higher levels may take weeks, or months, to move between columns, it can help to establish a cadence to
check in on the board:

• At the initiative level, you might start with a monthly Portfolio Council to keep stakeholders in sync about that state of
your portfolio, and a biweekly review and prep cadence with the product management team to ensure the board is up
to date.

• At the feature or enhancement level, to align your review cadence with your release process. If releases happen
weekly, you might want to get product owners and marketing together each week for 10-15 minutes a few days before
the release so enablement activities can be coordinated.

Use the Portfolio Kanban to Accelerate

The key to successful Kanban use is limiting work-in-process (WIP). Reducing the number of items in-flight enables items
to be completed quickly.

Which Column
to Limit First?

Most initiative or project-level Kanbans contain one Building or In Development column where active
development effort is happening. This column is a good candidate for a first WIP limit.

If you have semi-stable, cross-functional teams that pull new initiatives when ready, consider setting your
WIP limit to the number of teams that you have as a starting point. Often you go faster if multiple teams
work together on initiatives, but it is normal for a team to be finishing one initiative as they start on another
one.

What If I Don't Have
Stable Teams?

Many organizations are not in a position where they are flowing work across cross-functional teams. In this
case, you have to start somewhere. Add up the number of developers, testers, and other team members
you have and divide by 7 (as an average team size). Use this number as your starting limit.

What if I am Over WIP? Your Kanban board is showing you that your system is out of control.

Your project pileup has been hidden. Speeding up the system does not help. What does help is stopping
the line. You need to stop more initiatives from entering the In Progress state. Generally, teams and leaders
need to know that new initiatives can only be pulled when the system is below its limits.

Most of your projects are probably going slowly because resources are spread across too many projects
at once. You need to set clear priorities in your Building column, so that people can focus their energy on
clearing out items. Sometimes, the best way to start is to focus on the items that can be finished the fastest,
regardless of business value. (See Don Reinertsen’s book, The Principles of Product Development Flow,
pg. 131.)

If your In Development column is under WIP and all items are showing daily progress, you can start to look
at other columns in your system. If you have a Ready column just to the left, where initiatives wait to move
into development, that column might be a good candidate for a WIP limit. While it is often a good idea to
have a few initiatives ready for teams to pull, this queue can imply a commitment to start on an item, which
reduces your agility.

 96



 Rally®

Iteration Demo and Review Meetings
Agile teams embrace the notion of inspect-and-adapt as a means to continually build learning and improvement in how
they work.

Running an effective iteration demonstration and review meeting is the foundation of this principle.

At the end of an iteration, the entire team meets to reflect on the iteration. Attendees include:

• Scrum master (meeting facilitator)
• Product owner
• Developers
• Testers
• Any other contributors or interested stakeholders

The goal of the meeting is to create visibility around what occurred in the course of the iteration and to amplify learning
about what could then be planned for the next iteration. The delivery team presents the done items in a demonstration.
Done items are all items that have been accepted by the product owner. The demonstration invites clarification, reflection,
and celebration with regard to the team's commitment.

The meeting also invites inspection of the metrics that show what occurred in accepting (or not accepting) items. The
attendees evaluate:

• Items were not completed
• Risks encountered
• Items more complex than originally planned
• Tests run, passed, or failed
• Defects logged
• Other measurements the team tracked

The product owner and stakeholders use this meeting to evaluate the product and release backlog priorities:

• Has one item been too costly to complete given its estimated value? Should like items be re-evaluated?
• Is another item now not worth working on at all?
• Should priorities shift higher for some items in the release backlog based this findings in this meeting?
• Should we re-allocate team resources based on the done items and metrics?
• Are there new items we need to add to the backlog?
• Should the team stop work entirely on the product based on what we have just learned?

At the end of a good meeting, all attendees have a clear understanding of the completed iteration as well as a good sense
of the value that was delivered. With this information, the product owner continues work on value definition in the form
of backlog priorities and details. The team continues its work by taking the learning and applying it to the next iteration
planning meeting. The scrum master collects action items and ensures each has an owner. The scrum master then takes
on the ownership of ensuring each action item is completed.

Retrospect Your Iterations
A retrospective meeting is held at the end of each iteration for the team to inspect and adapt their iteration, teamwork, and
methods.

A good retrospective relies on an environment in which team members are able to speak truthfully without ongoing
recriminations. The scrum master facilitates the meeting to ensure that all members participate openly. If trust is not high,
the retrospective may focus on trust as a theme and resolve to embrace new practices that increase trust.

Scrum masters can consider a few options as guidelines for facilitating the meeting. They go beyond asking what worked
well and what did not work well in helping teams gather insights about their practices and make new team agreements.

 97



 Rally®

ORID Questions

Engage the team in a series of questions that help slow down decisions and gather insights before moving to
recommendations:

• O: Ask objective questions first. "What was happening? What did you notice?" Have team members work in small
groups to gather these items.

• R: Ask reflective questions next. "What reaction did you have to that? What was challenging or helpful?"
• I: Ask interpretive questions. "What does that say about how we work? What might be some recommendations for our

work?"
• D: Ask decisional questions. "Given what we have recorded here, what new agreements or practices might we invite

into our next iterations?"

Helped, Hindered, Hypotheses

Ask each of these questions individually and have the team identify items to be scribed on a flipchart (one flipchart per
question):

• What helped us in this iteration?
• What hindered us in this iteration?
• What hypotheses (recommendations) could we make about how we work in our next iteration?

Wind Versus Anchors

To use a sailing metaphor, what put wind in your sails during this iteration versus what weighed you down? Use a flipchart
for each question. Be sure to record all the positive wind responses before moving to the anchor responses. These should
lead to open discussion about recommendations going forward.

Appreciations

An iteration retrospective is a great time to invite individual team members to appreciate other individual team members:
"Sue, I appreciate you for helping me with testing on the final story." Whatever retrospection technique you choose,
remember that the goal is to have the team make decisions. At the end of a retrospective, the scrum master guides the
team in selecting one to three new practices to adopt for the next iteration based on their insights. In this way, the team is
continually creating new, ever-improving working agreements. The team commits to continually improving Agile adoption,
trust, its safety, and value delivery.

Once the retrospection is over, the scrum master collects action items and ensures each has an owner from the team. The
scrum master then takes on the ownership of ensuring each action item is completed.

Cancel an Iteration
While the iteration represents a team's commitment to build a potentially shippable increment of work, events can occur
that can impede, or even destroy, that commitment.

Teams and management need to be prepared in advance for these types of unforeseen events.

Teams that are following the scrum methodology should be aware that:

• Iterations can be canceled before the allotted timebox of days is over
• The team can cancel the iteration if they feel they are unable to meet their iteration goal
• Management can cancel the iteration if external circumstances negate the value of the iteration goal

There are various conditions under which a team might consider canceling an iteration:

 98



 Rally®

• Business conditions change that nullify the value of the current iteration commitments
• Technology discoveries threaten the completion of most of the commitments
• Team members are unexpectedly pulled from the team or forced onto the team due to changes in other projects

It is important to understand that these conditions may not be sufficient for a team to justify canceling an iteration.
Cancelation is only for emergencies and should occur no more than twice a year. Teams that tend to cancel iterations too
easily can erode the trust of the stakeholders and impact the collaboration that is critical to have with customers on an
agile project.

Scrum provides clear guidelines for teams on how to handle these types of emergencies and to get back into the rhythm
of iterations:

• Declare the iteration canceled
• Dispose of all work in progress
• Immediately hold a retrospective to understand the conditions that led to this emergency and what impact it has on the

product backlog
• Based on team findings, conduct a new iteration planning meeting, where the reason for the termination is reviewed

and the revised product backlog is moved into iterations

The second step may seem drastic, but keeping untested code and partial designs in your code base is confusing to the
people who work with these work items. This could result in teams building new functionality on top of the untested code,
which is a disaster waiting to happen. Also, by communicating the costs of canceling an iteration (such as wasted effort
and money), teams and stakeholders will learn the importance of keeping iterations on track.

How to avoid canceling an iteration:

• Keep iterations as short as possible (1 to 2 weeks).
• Make it clear to team members and stakeholders that canceling an iteration is an option that should only be used when

there is no hope of keeping current iteration commitments.
• Let team members and stakeholders know the signals for a canceled iteration. Make it visible at the time of the

emergency and at the next iteration review. Include lessons learned from the retrospective.

Enterprise Scale Agile
You can create a dashboard with Rally to support Enterprise scale agile.

Enterprise scale agile dashboards include the following:

• Agile Release Train (ART) Team Planning Dashboard
• PSI Program / Portfolio Dashboard Setup
• Release Train Backlog Dashboard
• Weighted Shortest Job First (WSJF) Dashboard Setup

Agile Release Train (ART) Team Planning Dashboard
The Agile Release Train (ART) Team Planning Dashboard helps teams quickly break down features into stories while
maintaining a context of the features proposed for the PSI.

One of the most important activities in an Agile Release Train planning meeting is the act of teams breaking features
into stories and placing them into their respective iterations. This activity is synonymous with tasking stories (at the team
level) during an iteration planning meeting. To accomplish this in Rally, we suggest using a filtered view of the Portfolio
Hierarchy app and the Iteration Planning Board. This view should be used at a specific team level for best results, and
should help teams quickly break down features into stories while maintaining a context of the features proposed for the
PSI.

 99



 Rally®

The Portfolio Hierarchy app allows you to see the list of features that are scheduled into the PSI or release. The release-
filtered portfolio hierarchy allows users to see all the features in the release and expand to see the story hierarchy
underneath. It is also possible to add children stories in context to the feature.

As you add new child stories to the Portfolio Hierarchy on the left side, the new story displays on the top of the teams
backlog on the Iteration Planning Board. This is important, as it allows teams to plan the new stories into the iterations in
support of the PSI.

Prerequisites to Use the Portfolio Hierarchy App

• Release set up and synchronized across the Rally project structure to support all the teams contributing to the release
or PSI.

• Features have been scheduled into a release.
• The global project hierarchy is scoped to the team that is breaking the features into stories.

 100



 Rally®

Set Up the Agile Release Train Dashboard

NOTE
View the steps on creating a custom page before completing the following steps.

1. Create and configure a custom page, using the following

details:
a. Name: Enter something descriptive, such as "ART Team Planning Dashboard".
b. Sharing: Select appropriately if you want this dashboard to be available to just you or everyone in the workspace

(you must be a workspace administrator).
c. Filter: Select None. This setting is not applicable for this dashboard.
d. Specify the page layout for the custom page.

2. Add the Portfolio Hierarchy app.
a. Select the Portfolio Hierarchy app from the app catalog.

b. Configure the Portfolio Hierarchy app. From the app gear menu, select Settings.

 101



 Rally®

• Title: Enter something descriptive for the release you are working on, such as "PSI Q1 Feature List".
• Project: Select Choose Specific Project and scope to the program you are working on.
• Type: Select Feature to include all features planned for your specified program.
• Query: Specify the database query for the release name you have set up for the release you are working on:

(Release.Name = “PSI 2013.Q1”)

3. Add the Iteration Planning Board app.
a. Select the Iteration Planning Board app from the app catalog.

b. Place the app on the right side of your page and scope the Project setting to Follow Global Project Setting.
4. Add a Custom List for stories created today.

a. Add a Custom List app from the app catalog and drag it into the left column underneath the Portfolio Hierarchy.
b. Configure the settings as follows:

 102



 Rally®

• Title: Story from Today
• Project: Select Follow Global Project Setting
• Object: Select User Story to include all user stories added today in your project
• Columns: Select to display ID, Name, Feature, and Project, and any other attributes of the user stories you

are displaying
• Query: Specify the database query

(CreationDate = today)

5. Add a Custom List for Team Capacity.
a. Configure the settings as follows:

 103



 Rally®

• Title: Team Capacity
• Project: Select Choose Specific Project
• Object: Select User Iteration Capacity to include all user stories added today in your project
• Columns: Select to display User, Load, Capacity, and Task Estimates, and any other attributes of the user

iteration capacity you are displaying
• Query: Specify the database query

((Project.ObjectID = {projectOid}) and ((Iteration.StartDate <= today) AND (Iteration.EndDate >=

 today)))

 104



 Rally®

PSI Program / Portfolio Dashboard
The PSI Program / Portfolio Dashboard allows program managers, product managers, and other stakeholders in a SAFe
program and release train to readily visualize progress for a specified release being worked on, such as the current
Potentially Shippable Increment (PSI).

From this dashboard, users can see feature status and teams they are assigned to in multiple views (Kanban, Timeline,
and List), as well as the associated epics and user stories being worked on. This dashboard provides the visibility program
leaders need to steer and report on the progress of their Agile Release Trains.

Set Up the Dashboard

NOTE
View the steps on creating a custom page before completing the following steps.

1. Create and configure a custom page using the following details:

– Name: PSI Program / Portfolio Dashboard, or something descriptive for your needs
– Sharing: Select appropriately if you want this dashboard to be available to just you or everyone in the workspace
– Filter: Select None (this setting is not applicable for this dashboard)

2. Specify the page layout for the custom page

 105



 Rally®

3. Add the Portfolio Kanban Board app.
a. Select the Portfolio Kanban Board app from the app catalog.
b. From the app gear menu, select Settings.

• Title: Release 2013.Q1 - Features, or something descriptive for the release your project.
• Project: Select Choose Specific Project and scope to your project.
• Query: Specify the database query for the release name you have set up for the release:

(Release.Name = PSI 2013.Q1)

c. In the Portfolio Kanban Board app:

• Select Feature to include all features planned for your specified project and release.
• Use Show on Cards to select Actual Start Date, Parent,Percent Done By Story Count, and Percent Done

by Story PlanEstimate, and any other fields you would like to display on the feature cards.
4. Add the Portfolio Item Timeline app.

a. Add the Portfolio Item Timeline to your dashboard.

b. On your custom page, drag and drop the Portfolio Item Timeline app to place it underneath the Feature Board.
c. Specify settings that configure the timeline to visualize the release progress for a specified release in your

program.

 106



 Rally®

• Title: Release Timeline–Feature, or something descriptive for the release you are working on.
• Project: Select Choose Specific Project and scope to the project you are working on, and specify Child

Projects for scoping of the items to display.
• Query: Specify the database query for the release name you have set up for the release you are working on:

(Release.Name = "PSI 2013.Q1")

d. In the Portfolio Item Timeline app, select Feature as the type.
5. Add a Custom List app for Release Status.

a. Add the Custom List app.
b. Enter the following settings for the Custom List app:

• Title: 2013.Q1 - Release Status, or something descriptive for the release you are working on
• Project: Select Choose Specific Project and scope to the project you are working on, then specify Child

Projects for scoping of the items to display
• Type: Select Feature to display the features in your release
• Query: Specify the database query for the release name you have set up for the PSI you are working on:

(Release.Name = "PSI 2013.Q1")

c. In the Custom List app:

• Use Show Columns to select ID, Name, Percent Done ByStory Count, and Project, and any other data you
would like to display.

• Select 20 in the Show setting.

 107



 Rally®

6. Add a Custom List app for business and architectural epics.
a. Add the Custom List app.
b. Enter the following settings for the Custom List app:

• Title: Active Epics, or something descriptive for the release you are working on
• Project: Select Choose Specific Project and scope to the project you are working on, then specify Child

Projects for scoping of the items to display
• Type: Select Feature to display the epics in your release
• Query: Use the following database query and be sure to use the portfolio item name you have chosen to use

for your business and architectural epics:
(((PortfolioItemType.Name = Epic) AND (PercentDoneByStoryCount > 0)) AND (PercentDoneByStoryCount <

 100))

c. In the Custom List app:

• Use Show Columns to select ID, Name, Percent Done ByStory Count, and Investment Category, and any
other data you would like to display.

• Sort by Percent Done By Story Count.
7. Add a Custom List app for user stories in the release.

a. Add the Custom List app.
b. Enter the following settings for the Custom List app:

• Title: Stories in the Current Release, or something descriptive for the release you are working on
• Project: Select Choose Specific Project and scope to the project you are working on, then specify Child

Projects for scoping of the items to display
• Type: Select User Story to display the user stories in your release
• Query: Use the following database query:

(((Feature.Release.ReleaseStartDate <= today) AND (Feature.Release.ReleaseDate >= today)) AND

 (DirectChildrenCount = 0))

c. In the Custom List app:

• Use Show Columns to select ID, Name, Schedule State,Feature, and Iteration, and any other data you
would like to display about the user stories you are reporting on.

• Sort by Iteration.

Release Train Backlog Dashboard
The Release Train Backlog Dashboard allows program managers, product managers, and program teams to visualize
their feature backlog and easily edit (in-line or link to the detail page), rank (drag-and-drop), and assign to PSIs set up for
an Agile Release Train.

This dashboard provides a powerful tool during Agile Release Train planning, enabling the program team to interactively
plan feature content for upcoming PSIs.

 108



 Rally®

Set Up the Dashboard

NOTE
View the steps on setting up a custom page before completing the following steps.

1. Create and configure a custom page using the following details:

– Name: Release Train Dashboard, or something descriptive for your needs.
– Sharing: Select appropriately if you want this dashboard to be available to just you or everyone in the workspace.
– Filter: Select None (this setting is not applicable for this dashboard).
– Specify the page layout for the custom page.

2. Add a Custom List app for the program backlog features.
a. Add the Custom List app.
b. From the app gear menu, select Settings.

• Title: Program Backlog Features, or something descriptive for the release you are working on.
• Project: Select Choose Specific Project and scope to the program you are working on, then specify Child

Projects for scoping of the items to display.
• Type: Select Feature to display the features in your release.
• Query: Specify the database query for the releases you have set up for the Release Train PSIs you have set up

for your program:
(Release.Name = " ") or (Release = " ")

c. In the Custom List app:

 109



 Rally®

• Use Show Columns to select Rank, ID, Name, Description, Investment Category, Preliminary Estimate,
and Release, and any other data you would like to display.

• Sort by Release.
• Select 20 in the Show setting.

3. Add a Custom List app for features assigned to your first PSI.
a. Add the Custom List app.
b. From the app gear menu, select Settings.

 110



 Rally®

• Title: PSI 2013.Q1, or something descriptive for the release you are working on.
• Project: Select Choose Specific Project and scope to the program you are working on, then specify Child

Projects for scoping of the items to display.
• Type: Select Feature to display the features in your release.
• Query: Specify the database query for the releases you have set up for the Release Train PSIs you have set up

for your program:
(Release.Name = "PSI 2013.Q1")

c. In the Custom List app:

• Use Show Columns to select ID, Rank, and Name, and any other data you would like to display.
• Sort by ID.
• Select 20 in the Show setting.

4. Add a Custom List for features in your second PSI.
a. Add the Custom List app.
b. From the app gear menu, select Settings.

 111



 Rally®

• Title: PSI 2013.Q2, or something descriptive for the release you are working on.
• Project: Select Choose Specific Project and scope to the program you are working on, then specify Child

Projects for scoping of the items to display.
• Type: Select Feature to display the features in your release.
• Query: Specify the database query for the releases you have set up for the Release Train PSIs you have set up

for your program:
(Release.Name = "PSI 2013.Q2")

c. In the Custom List app:

• Use Show Columns to select ID and Name, and any other data you would like to display.
• Sort by ID.
• Select 20 in the Show setting.

Weighted Shortest Job First (WSJF) Dashboard
The Weighted Shortest Job First (WSJF) Dashboard allows program managers and product managers to quickly score
features in their program backlog to help them prioritize feature work during Agile Release Train planning.

This Dashboard uses a publicly available Rally Community App, and can be found on GitHub.

WSJF is a lean method for determining backlog prioritization (job sequencing) using the cost of delay and remaining job
size. In SAFe, this algorithm is applied at PSI boundaries to continuously update program priorities based on current
business context, value, development facts, risk, and effort considerations.

The formula for WSJF is (User Value+OERR (Risk Reduction|Opportunity Value)+Time Value)/Job Size. If the team's job
size estimates are updated to include only time remaining, then constant application of WSJF ignores sunk costs, which
are a key economic principle of lean.

Set Up the Dashboard

NOTE
View the steps on creating a custom page before completing the following steps.

1. Create and configure a custom page using the following details:

 112



 Rally®

– Name: WSJF Dashboard
– Sharing: Select appropriately if you want this dashboard to be available to just you or everyone in the workspace
– Filter: Select None (this setting is not applicable for this dashboard)
– Specify the page layout for the custom page

2. Add the Custom HTML app.
a. Select the Custom HTML app from the app catalog.
b. From the app gear menu, select Settings.

 113



 Rally®

• Title: WSFJ Calculator, or something descriptive for your methodology
• Project: Select Choose Specific Project and scope to the program you are working on, then specify Child

Projects for scoping of the items to display.
• HTML: Paste in the HTML source code from GitHub for the WSFJ custom app.

c. You can edit the WSJF app directly using in-line editing for each of the Time Value, OERR, User Value, and Job
Size fields. The WSJF score is automatically calculated by the app for these values. Note that some fields in
the WSJF app are not currently displayed in standard detail pages.

 114

https://github.com/RallyCommunity/WSJF_Grid/blob/master/deploy/App.html


 Rally®

Administration
As a Rally administrator, you have the ability to set up your workspaces, projects, and users to sync Rally with your unique
Agile and team practices.

Rally has three levels of administrators.

• Subscription administrators have "total control". They can:
– Create or promote a user to subscription administrator
– Create new workspaces
– Create or promote a user to workspace administrator

• Workspace administrators can:
– Manage workspace custom fields and tags
– Create and manage projects within a workspace
Subscription administrators can perform any tasks that a workspace administrator can.

• Project administrators have limited capabilities in the projects they administer.

You may need to work with a system administrator for some of your Rally set up. Learn more.

This table shows a comparison of the different actions that a subscription, workspace, and project administrator can
perform.

Action Subscription Administrator Workspace Administrator Project Administrator

Add users ✓ ✓ ¹ ✓ ¹

Create projects ✓ ✓ ✓ ¹

Add team members ✓ ✓ ✓

Close projects ✓ ✓ ✓

Share custom views with all
users in the project

✓ ✓ ✓

Customize workspace ✓ ✓

Access the Users page ✓ ✓

View last login date ✓ ✓

View active licenses ✓ ✓

Share custom views with all
users in the workspace

✓ ✓

Share custom pages with all
users in the workspace

✓ ✓

View hidden fields ✓ ✓

Designate planners ✓ ✓

Enable Rally Time Tracker ✓ ✓

Enable Build and SCM
Traceability

✓ ✓

Require a parent on user stories
or portfolio items

✓ ✓

 115



 Rally®

Action Subscription Administrator Workspace Administrator Project Administrator

Automatically purge work items
from the Recycle Bin

✓ ✓

Set password policies ✓

Change user passwords ✓

Customize user fields ✓

Create administrator-only
custom user fields

✓

Delete users ✓

Disable users ✓ ✓

Encrypt data using Customer
Managed Keys

✓

Add a disclaimer message ✓

Add secret for HMAC signature ✓

Select the mTLS policy ✓

¹ During subscription setup, the subscription administrator can specify if workspace and project administrators can perform
these actions.

IT Administration
You may need to work with a company system administrator for some of your Rally set up.

Hosting Information

Like most SaaS products, Rally uses third-party providers to host services and maintain site availability.

We provide the Rally application via the Google Cloud Platform. Currently,  Rally is hosted in the us-east1 and us-central1
regions. Location information about these regions can be found here: https://cloud.google.com/compute/docs/regions-
zones/

Additionally,  Rally uses the Google Cloud Storage to manage application data and backups. In order to ensure availability
of this data we use the multi-region feature of Google Cloud Storage for the US region. More information on this can be
found here: https://cloud.google.com/storage/docs/locations#location-mr

Rally uses Cloudflare as our CDN and Network Security provider. One of the tools that Cloudflare uses in order to
maintain site availability is to change the IP address of a site in the event of an attack. As part of our ongoing security
program we are planning on moving all public endpoints for Rally behind Cloudflare. This is being done in order to
continue to provide best-in-class network and data security for all our customers. In order to maintain access we
recommend that all customers do not add the IP address of the Rally site to an allowed list.

NOTE
Rally maintains a website where you can get information about the latest status of the application as well as any
service events or outages. You can view the Rally status page here: https://rally.status.broadcom.com.

Create a Login Form

If you want to allow users to log into Rally directly from your company portal, or from another web page that is external to
the Rally application, you may use this HTML code as a template to create your login form.

<form action="https://rally1.rallydev.com/slm/j_spring_security_check" method="POST">

 116

https://cloud.google.com/compute/docs/regions-zones/
https://cloud.google.com/compute/docs/regions-zones/
https://cloud.google.com/storage/docs/locations#location-mr
https://rally.status.broadcom.com/


 Rally®

<table border="0" cellspacing="5" cellpadding="5">

<tr>

<td>User Name:</td>

<td><input type="text" name="j_username"/></td>

</tr>

<tr>

<td>Password:</td>

<td><input type="password" name="j_password"/></td>

</tr>

<tr>

<td colspan="2"><input type="submit"/></td>

</tr>

</table>

</form>

How Users Authenticate
User authentication is the process where Rally verifies your identity when you attempt to connect. Rally uses several
methods to allow access only to correctly provisioned users.

In addition, you must configure key parts of your Rally subscription:

• Select the type of authentication to use for the subscription. Learn more.
• Set password policies. Learn more.
• Allow app access. Learn more.

This section includes the following topics:

• Set Up Single Sign-On (SSO)
• Using Rally Application Manager
• External API Keys

Set Up Single Sign-On (SSO)
Rally customers with a SAML 2.0-compliant Identity Provider (IdP) can configure their Rally subscription to log in to Rally
through Single Sign-On (SSO). The key to secure internet SSO is the web browser. The browser interacts with the user's
SAML 2.0-compliant Identity Provider, validates the user credentials, creates the SAML assertion, and sends the assertion
to Rally.

This service is only available for customers with active product subscriptions. Free, Sandbox, and Trial subscriptions are
not eligible for this service. SSO for Rally On-Premises subscriptions is available as an LDAP (not SSO) solution. Contact
Rally Support for details.

IMPORTANT
The Rally work item connectors and the Rally SCM connectors do not support SSO; however, these connectors
could be used in SSO Exception Mode (see SSO with exceptions section on the Use Advanced Security and
Administration page.)

SSO Prerequisites

• The name portion of the Rally login ID ( peter@company.com ) must be identical to the login ID that the Identity
Management System uses. If these login IDs are different, SSO fails. You must update the Rally login IDs to match.

 117

https://support.broadcom.com
https://support.broadcom.com


 Rally®

– If you have Identity Management usernames in the format of peter , many IdP systems allow concatenation of the
@company.com portion which enables the IdP usernames to match the peter@company.com format.

• Your identity provider must synchronize its clock to a reliable time source; otherwise the tokens it generates are invalid
and SSO fails.

• In order to set up SSO, your company must have a SAML 2.0-compliant Identity Management System (such as
Symantec SiteMinder, Ping Connect, Oracle Access Manager (COREid), or Tivoli Access Manager). Your IT system
administrator must be able to log in and configure your Identity Management system. For testing purposes, you
must provide this individual access to Rally.

SSO Setup

You must work with Rally technical support to enable SSO for your subscription.

1. Contact Support to open a new case. Rally Support works with your Identity Management System administrator.
2. Rally Support sends the Rally Service Provider metadata.xml file to you. This includes information such as

our SSO server, which protocols we support and our public signing key. This metadata.xml is part of the SAML 2.0
standard.

3. Configure an Identity Provider (IdP) to Rally Service Provider connection within your software using the Rally
metadata.xml file as an input value.

4. Ensure that your Identity Provider (IdP) is set to allow SP-initiated SSO sessions.
5. Export the IdP metadata.xml file with your public key certificate embedded. This file includes your own information

such as your SSO server, protocols that are supported, and your public key.
– Your SAML_SUBJECT must be in the form of your Rally ID, for example, <customername>@<domain> . Rally

cannot modify this for you. For testing purposes, you may have your Rally subscription administrator add your IT
administrator to your Rally subscription.

– If the mapping cannot be met, Rally user IDs must be changed to match the format that is presented by the
SAML_SUBJECT before this will work.

6. Securely transfer this file to Rally Support from the Support link from inside the Rally product. This can also take place
over email if both sides support SSL.

7. Rally Support delivers this file to Rally Operations. Rally Operations sets up our SSO software for this particular
connection. We also ensure that the correct subscription ID is mapped to the connection and that SSO is enabled for
that subscription.

8. When asked to do so by Rally Support, verify that you can log in through your IdP endpoint.
9. Provide your users with the redirect URL you get from Rally Support to log in to Rally through SSO.

Set up Active Directory Federation Services SSO

1. Open your Active Directory Federation Services 2.0 management application.
2. Expand Trust Relationships in the left menu, and select Relying Party Trusts.
3. Select Actions, Add Relying Party Trust.
4. Select Start to begin the Wizard.
5. Select the Import data about the relying party from a file option.
6. Locate the Rally metadata.xml file on your system and select Open, then select Next on the Wizard screen.
7. Enter your Display name and select Next.
8. Select your organization's Authorization rules. Typically, most environments will use the Permit all users option.
9. Select Next, then select Close.
10. Ensure the Open the Edit Claim Rules dialog for this relying party trust when the wizard closes field is selected,

then select Close.
11. In the Edit Claim Rules window, select Add Rule.
12. Select a Claim rule template and select Next.
13. Add a Claim rule name, select the attribute desired, and modify the attributes.

 118

https://support.broadcom.com
https://support.broadcom.com


 Rally®

14. Select Finish.
15. Select Close.

Securely Transfer Your Metadata.xml File to Rally Support

Using the support case you opened with Rally, send your metadata.xml file to them so they can finish the process.
Once this is completed, Rally Support will confirm your SSO URL and ensure that you are able to log in properly. The
provided SSO metadata for Rally contains an encryption certificate and a signing certificate.

1. Export your metadata.xml file from your browser to provide to Rally Support through your case regarding setup of
the SSO instance so that the Rally Operations team can implement this to finalize the setup. You can save the ADFS
metadata with the URL https://<server>/FederationMetadata/2007-06/FederationMetadata.xml ,
where <server> is your server name or IP address.

2. Verify that you are not sending encrypted SAML assertions. If you are sending encrypted SAML assertions, remove or
disable the encryption certificate from the ADFS server.

Frequently Asked Questions
Will users be logged
out automatically?

Disabling a user in your IdP system will not immediately end their session in Rally. A logged-in user will
continue to have access until they log out of Rally, their session times out, or a subscription administrator
disables the account in Rally.

Who holds the public
key certificates (is there

a third-party clearing
house like Okta) or

is Rally providing the
certificate server?

Rally has a Okta server installed, which holds a copy of the public key for your Identity Management
System. This allows us to validate tokens without storing any private certificates. If you have more than one
subscription ID, you must create a different Service Provider connection for each Rally subscription ID you
would like to authenticate with SSO.

Can we provide our
own certificate servers?

Yes, you can use any SAML-2.0 compliant Identity Management System behind your firewall to
communicate with our Okta server. You need to provide this certificate in the format requested above.

This is for
authentication.
Are you doing

authorization, too, or
do you plan to do so?

No, we have no plans to do authorization.

What are some of
the challenges we
must be aware of?

SSO requires some configuration time on both sides. The Identity Management System is typically
managed by your IT Department, a group that Rally does not always work with. It may take some time to
identify the contact in your IT group who can create the Service Provider connection and public key XML
metadata file that Rally needs. Please be sure to identify this individual before setting up any calls with
Rally Support.

Is there a best
practice for adoption?

For example, start
with a small group
and scale, or just
turn it on and go?

For existing customers, there is a hybrid mode that allows both SSO and Rally authentication. You should
use this mode while setting it up, and only switch to SSO-only authentication after all users have been able
to log in using SSO. Remember, if you do switch to SSO-only authentication, users can only log in to Rally
from behind your corporate firewall. If you want users to be able to log in to Rally when at home (or from
any web location that is not behind your firewall), you should set up your Rally connection for hybrid mode.

What happens if a user
forgets their password?

The answer depends on what kind of SSO the subscription has been configured for:

• Subscriptions using SSO only mode must reset it with their internal IT team, since Rally does not have
access to that password repository.

• Subscriptions using SSO hybrid mode can reset their Rally password, if the SSO token does not work.
If the Rally password still does not work, you can reset the SSO password internally.

Today users get
password expiration

Yes, these are eliminated for anyone not on the exception list.

 119



 Rally®

notification emails
warning that their

password expires soon.
Are those notifications

eliminated when we
switch to SSO only

with exceptions mode?
After switching to SSO
only with exceptions
mode, can an SSO-
only user get to the

Change Password link
within their profile?

No. That option is longer displayed on the profile page.

What would happen
if an SSO-only user

goes to the Rally login
page and selects

Forgot my password?

The Rally system sends them a link with the SSO information for your subscription.

Can we use
integrations and apps?

Currently, Rally integrations do not support SAML-based authentication. Customers who are using
integrations or the Web Services API should use SSO with exceptions mode or an API key. Use of the Web
Services API through custom Rally applications in the browser is supported, since they can get a cookie as
part of the login process.

How long does it take
to get it working?

Once you identify the proper contact in your IT Department, it takes a few days to get SSO running.

Is Rally's SSO available
for all Rally editions and
is there an extra cost?

SSO is included with all active subscriptions at no extra cost. Free, Sandbox, and Trial subscriptions are
not eligible for this service. SSO for Rally On-Premises subscriptions is available as an LDAP (not SSO)
solution. Contact Rally Support for details.

Can we test this
on a Sandbox?

SSO is not available on sandbox.rallydev.com . It can safely be tested in hybrid mode on
production without interfering with other users in your subscription.

If I disable a user's
SSO account, are
they immediately

logged out of Rally?

No. If they are logged into Rally when their SSO account is disabled, they can still access Rally until they
log out or until their session times out and they are forced to re-authenticate.

How do I export
a metadata file

from ADFS?

In general, the ADFS metadata is here: https://<server>/FederationMetadata/2007-06/
FederationMetadata.xml , where <server> is your server name or IP address. You can save the
file.

What does an example
metadata file look like?

<md:EntityDescriptor entityID="sso.rallydev.com" cacheDuration="PT1440M"

 ID="OIvWOHILu615UWA1jGGTkq6SvQa" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata">

  <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">

    <ds:SignedInfo>

      <ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>

      <ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>

      <ds:Reference URI="#OIvWOHILu615UWA1jGGTkq6SvQa">

        <ds:Transforms>

          <ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-

signature"/>

          <ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>

        </ds:Transforms>

        <ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>

        <ds:DigestValue>0jMS2Redw9hkax3mk0gs0zvN92A=</ds:DigestValue>

     </ds:Reference>

    </ds:SignedInfo>

 120

https://support.broadcom.com


 Rally®

    <ds:SignatureValue>

    A8AoyWPlgCZ4vhqDkDylu530TFiv1+374ekc8xzOKMUsn2B2H4IbVfrqou4SdIRK/WU52lkkItc6

    CbznJokbWZSoxfpEe9aAuLMJn4cS6Ln1qDCw0X3BXCPQ6+H16Yy3ZTYq5gSHo18GEOqe9iW9872k

    RfPgcVNAuqszdxTY5BkX7v5g9Grc8ALNYYVWssMaXJUNdm/oiq//WYAZxxFXa7f3kEY2ltQKaaQv

    3n/SLWzDAdBl1NNBaRC4a1QyrInec019AjpoQ2W+h4FER121xUlGyx0AX+M0ZEmY3+7PuusC6sWS

    af1jdUid9E2jNxTJJwvmqSPOKBKIXAnM1okrJA==

    </ds:SignatureValue>

    <ds:KeyInfo>

      <ds:X509Data>

        <ds:X509Certificate>

    MIIDPjCCAiagAwIBAgIGAS2WHAUZMA0GCSqGSIb3DQEBBQUAMGAxCzAJBgNVBAYTAlVTMQswCQYD

    VQQIEwJDTzEQMA4GA1UEBxMHQm91bGRlcjEXMBUGA1UEChMOUmFsbHkgU29mdHdhcmUxGTAXBgNV

    BAMTEHNzby5yYWxseWRldi5jb20wHhcNMTEwMTE3MjIzMjU0WhcNMzgwNjA0MjEzMjU0WjBgMQsw

    CQYDVQQGEwJVUzELMAkGA1UECBMCQ08xEDAOBgNVBAcTB0JvdWxkZXIxFzAVBgNVBAoTDlJhbGx5

    IFNvZnR3YXJlMRkwFwYDVQQDExBzc28ucmFsbHlkZXYuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOC

    AQ8AMIIBCgKCAQEAlfegSpv/FnbkyoZshy3pm5zghS/losCo026l1Li2MO4ZVuWncbaXduMmg36F

    1qFJGxS3OYepXdhgQaLrfk1WqqILwM++xuGLCoeaKfsnXXuDVa2AtzQwBk7TyMCWFyVw1+AOT9wX

    /cX1Pd77nenQ9rq5Cc51PxfciEtD/r0M9XtVv3R2shOH4yKAslRGbEpoepENsy+vSid/vprlEqXL

    c+jQ59WbXffl1qZDf9xB7CeQhdefeklsEzXIpVvYeyYV+J0D7V0GvJRchokEb3IQYRUIefElrAGi

    7f5HEU8rat7bReHzLgzN80OS6UzS0affQZ+LUwXeRN0ACPYspe+72QIDAQABMA0GCSqGSIb3DQEB

    BQUAA4IBAQCUPiGKwasTqvkQxEsqFDFL4FWVJUii6Io5Jh+aBbHhUKqZ7Z6CrnXFVFmQa9avrAmd

    yzE6kkPDWUioYVoENrM2nxjGpsqic7f/uw23cctl2OJxmqLdHUPEapf77VRsiGXQvcnrfevo2Iw7

    6RKho9QLIEU3kOAcM/cZnUxxaK0H3yLsCjuUptiLWqUvqYKuyMheHd4gsZl7t6yGtM0oEyTs8xLS

    smYrHIvQyyXWdJxQar3+lWg9K8qJbxQdbcp4E5ipafKluPmXuG09wujIDgIpyLeu/ALCKiOCvRlp

    BH9qLawXx7oGN4skw4SoQTI8dnZ+mrP6qADWOT79cIc0OHvM

        </ds:X509Certificate>

      </ds:X509Data>

      <ds:KeyValue>

        <ds:RSAKeyValue>

          <ds:Modulus>

    lfegSpv/FnbkyoZshy3pm5zghS/losCo026l1Li2MO4ZVuWncbaXduMmg36F1qFJGxS3OYepXdhg

    QaLrfk1WqqILwM++xuGLCoeaKfsnXXuDVa2AtzQwBk7TyMCWFyVw1+AOT9wX/cX1Pd77nenQ9rq5

    Cc51PxfciEtD/r0M9XtVv3R2shOH4yKAslRGbEpoepENsy+vSid/vprlEqXLc+jQ59WbXffl1qZD

    f9xB7CeQhdefeklsEzXIpVvYeyYV+J0D7V0GvJRchokEb3IQYRUIefElrAGi7f5HEU8rat7bReHz

    LgzN80OS6UzS0affQZ+LUwXeRN0ACPYspe+72Q==

          </ds:Modulus>

          <ds:Exponent>AQAB</ds:Exponent>

        </ds:RSAKeyValue>

      </ds:KeyValue>

    </ds:KeyInfo>

  </ds:Signature>

  <md:SPSSODescriptor

 protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">

    <md:AssertionConsumerService isDefault="true"

 Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://

sso.rallydev.com/sp/ACS.saml2" index="0"/>

  </md:SPSSODescriptor>

  <md:ContactPerson contactType="administrative">

    <md:Company>Rally Software Development Corp.</md:Company>

    <md:GivenName>Operations</md:GivenName>

    <md:SurName>Team</md:SurName>

    <md:EmailAddress>operations@rallydev.com</md:EmailAddress>

    <md:TelephoneNumber>303-555-1212</md:TelephoneNumber>

 121



 Rally®

  </md:ContactPerson>

</md:EntityDescriptor>

Using Rally Application Manager
Rally Application Manager provides a set of authentication features for API and app developers and users.

The Rally Application Manager resides at a different URL than your Rally subscription: https://rally1.rallydev.com/login/

To access the Rally Application Manager, log in with your Rally username and password at the following URL: https://
rally1.rallydev.com/login/
There are three tabs at the top of the page: Authorized Applications, API Keys, and OAuth Clients.

Authorized Applications

This page lists the status of any standard or custom OAuth applications that you have authorized on your account.

These applications are authorized to access and retrieve data from your Rally account. Access can be revoked from this
page. A revoked application can be re-enabled by entering your Rally credentials in the revoked application.

API Keys

The API Keys page lets you to create keys that can be used to access your subscription data without using
your username and password. However, any application using the API Key you generated will have access and be
tracked as if you logged in with your username and password. API Keys do not require an additional Rally license
because they are an extension of your own user license.

API Keys are strings that authenticate a user when accessing the Rally Web Services API. However, unlike a session
token, the API Key does not expire. API Keys obey the permissions of the user that generated them—like using that
user’s credentials. Keys are valid as long as the user desires, and can be deleted or reset.

API Keys will not authenticate if the user's account is disabled or deleted.

Subscription administrators may view, delete, and reset all active keys in a subscription from the API Keys page.

NOTE

If API Keys are disabled at the subscription level, a user trying to set up a new API Key or edit an existing
API Key will see an error message that states: API Keys are disabled. Please contact your Subscription
Administrator to enable this functionality.

If API Keys are disabled:

 122

https://rally1.rallydev.com/login/
https://rally1.rallydev.com/login/
https://rally1.rallydev.com/login/


 Rally®

• The only action available on the API Key page is the ability to delete an existing API Key.
• Existing keys will not work and will return a 401 error message.

Learn more.

Add OAuth Clients

The OAuth Clients page lets you integrate your external web app using Rally’s OAuth server.

OAuth credentials display for each of the applications that you have created. If the application is no longer operational, or
the credentials have been compromised, delete the client or reset the client secret.

1. Select Create New Client.

2. Enter the Application Name and Callback URL.

3. Follow the standard OAuth2 workflow to obtain an access token. An explanation of the workflow and sample apps can
be found on GitHub.

External API Keys

You can create API keys that can be used to access your subscription data without using your username and password.

NOTE
The ability to create API keys must be enabled by the subscription administrator. Learn more.

Any application using the API key you generated will have access and be tracked as if you logged in with your username
and password. API keys do not require an additional Rally license because they are an extension of your own user
license.

API keys are strings that authenticate a user when accessing the Rally Web Services API. However, unlike a session
token, the API key does not expire. API keys obey the permissions of the user that generated them - it is just like using
that user’s credentials. Keys are valid as long as the user desires, and can be deleted or reset.

IMPORTANT
Rally updates the Last Accessed date on an API key use, even if the user associated with the API key has
been disabled. The request does not have to be successfully authenticated.

Subscription administrators may view, delete, and reset all active keys in a subscription from the API keys page.

 123

https://github.com/RallySoftware/rally-oauth-examples


 Rally®

WARNING
When you delete a user, any API keys created by that user are also deleted.

API key limitations:

• API keys are not supported in the sandbox environment.
• API keys are not supported for Rally On-Premises installations.

Create a New API Key

You can create new API keys.

1. To access the Rally Application Manager, log in with your Rally username and password at the following URL:
https://rally1.rallydev.com/login/
For FedRAMP users: https://gov.rallydev.com/login/

2. Select the API Keys tab.
3. Select the Create New API Key link.

The Create API Key dialog box displays.

4. Enter a name or description for the key in the Description field.
5. Select the read-only or full access option from the Grants section.

 124

https://rally1.rallydev.com/login/
https://gov.rallydev.com/login/


 Rally®

– Full Access grants the key Create, Read, Update, and Delete operations on work items in the user scope of
configured permissions.

– Ready-only limits the grants to Read operations only for work items with the user scope of configured permissions.
6. Select Create.

Your key is created and you can edit or delete the key as needed.

View API Key

You can change your view of the available API keys either by sorting or filtering.

1. To access the Rally Application Manager, log in with your Rally username and password at the following URL:
https://rally1.rallydev.com/login/
For FedRAMP users: https://gov.rallydev.com/login/

2. Select the API Keys tab.
3. You can sort your API key data by selecting the desired date column:

– Created
– Last Accessed

IMPORTANT
The Last Accessed date is updated when the API key is used, whether the request is successfully
authenticated or not.

– Last Reset
4. You can filter your API key data by entering a value in the Filter box. This value is searched for in the display name,

key, and user name fields. The filter is case-sensitive.
5. You may download API key data to a CSV-formatted file.

– Display Name
– Secret Key
– Owner
– Grants
– Created date
– Last Accessed date
– Last Reset date

 125

https://rally1.rallydev.com/login/
https://gov.rallydev.com/login/


 Rally®

Edit an API Key

You can edit existing API keys.

1. To access the Rally Application Manager, log in with your Rally username and password at the following URL:
https://rally1.rallydev.com/login/
For FedRAMP users: https://gov.rallydev.com/login/

2. Select the API Keys tab.
3. Select the Edit button on the API key you wish to edit. The following fields may be edited:

– Description
– Grants
To generate a new key value (with the original Description and Grants), select Reset. A new API key value is
generated.

4. Select Save.

Browser Support
Rally is committed to making our software easily accessible. Because this software is available through the World
Wide Web, many of the constraints regarding which computer and software you use to access this material have been
removed.

Browser Policy

Rally supports the two (2) latest versions of each of these browsers. Upon the release of a new version, we will begin
supporting the newly released version and stop supporting the oldest previously supported version.

Browser Recommendations

We recommend using the latest production-level versions of these browsers. In particular we strongly suggest using
Chrome, Firefox, or Microsoft Edge.

You can access Rally through your computer using any of the following supported browsers. We do not recommend using
development, test, or beta versions of these web browsers. Versions that are not publicly released may not work properly
with the Rally application. Select one of the following links for more information on current versions of web browsers and
which to install.

• Chrome
• Firefox
• Safari (Mac only)
• Microsoft Edge

Regardless of your browser type, you must have cookies enabled to use Rally. Also, if your browser supports it, enable
JavaScript. You must also enable cookies for the Rally help and video playback to work as designed.

Configuring Your Windows DNS Server to Use Your Local ISP's DNS Server
You will likely need to engage your company’s internal IT/Networking team(s) to modify your networking settings to
successfully complete a ping and tracert to rally1.rallydev.com.

The screenshots assume you are using a Windows DNS.

1. Open your Domain Management (dnsmgmt) console. Right-click your Domain Server and select Properties.

 126

https://rally1.rallydev.com/login/
https://gov.rallydev.com/login/
https://www.google.com/intl/en-US/chrome/
https://www.mozilla.org/en-US/firefox/new/
https://developer.apple.com/safari/
https://www.microsoft.com/en-us/edge#F0yVO37wEcy7bJlT.97


 Rally®

2. In the Properties tab, select Forwarders.

 127



 Rally®

3. The forwarders should be for All other DNS domains, and should have IP addresses for your upstream ISP provider.
The ones above are for CenturyLink in Denver, CO.

4. From a Command prompt, enter the following to confirm you are receiving an improved response: ping
rally1.rallydev.com tracert rally1.rallydev.com

Rally Administrator Video Tutorials
Watch these video tutorials to learn how to perform specific administrator actions in Rally.

Video tutorials for performing specific actions in Rally can be found here.

 128



 Rally®

Many of our tutorials are available on YouTube.

Configure Your Workspace (7 minutes) Learn how to create and configure a workspace.

How to Use Dashboards, Custom Pages, and Apps (7 minutes) Learn how to work with multiple data sets from a single location by
setting up custom pages and apps.

How to Export a List of Usernames (3 minutes) Learn how to export a list of user names to help you communicate
changes, downtime, or maintenance to users.

Customize User Fields (9 minutes) Learn how to create new fields to further sort and describe your
work items. Administrators may create fields of several different
types, and customize the contents of some standard drop-down
fields.

Set Up Your Workspace for Rally Portfolio Management (11
minutes)

Learn how administrators can configure settings in a new
or existing workspace to support the use of Rally portfolio
management. To successfully use the portfolio management, the
project hierarchy, portfolio hierarchy, work item fields, and user
permissions should be modified.

Rally Idea Manager Set Up Your Site (8 minutes) Learn how to set up your organization's Rally Idea Manager
website to collect feedback.

Configure Your Subscription
When Rally creates your subscription, a default workspace and a single default project are automatically created. Use the
Setup mode to administer your Rally subscription.

NOTE

You must be a subscription administrator to change subscription settings.

Configuring your subscription includes the following:

• View Your Subscription
• Customize Your Subscription

View Your Subscription
Use the Subscription page to view information about your Rally subscription.

The Subscription page includes a sidebar on the left, containing links to subscription information.

• Details for your subscription

 129

https://www.youtube.com/playlist?list=PLynEdQRJawmzUQCBNZROx4cDIAc6ytjFO
https://youtu.be/jgTdgaBPBDc
https://youtu.be/u9u34Ta6opg
https://youtu.be/1ZSddS7JuJo
https://youtu.be/v3QnrRGwTOU
https://youtu.be/i3Gm9rGPK0s
https://youtu.be/i3Gm9rGPK0s
https://youtu.be/o3_zzxcLvmQ


 Rally®

The subscription detail page lists relevant information regarding your subscription. This is the default page displayed.
The following fields are set up by Rally when your subscription is created based on your contractual agreements, and
cannot be edited.

ID A read-only field that displays your Rally-generated subscription ID.
Language The language used for your Rally subscription.

Maximum Private
Tabs/Pages

A read-only field that indicates the number of private custom pages your subscription allows. A value of
-1 indicates unlimited pages, which is the default for all Enterprise and Unlimited Edition subscriptions.

Maximum Shared
Tabs/Pages

A read-only field that indicates the number of shared custom pages your subscription allows. A value of
-1 indicates unlimited pages, which is the default for all Enterprise and Unlimited Edition subscriptions.

Enabled Modules A read-only field that indicates the modules that have been activated for your subscription.
• Fields

The subscription fields page lets you manage user fields (learn more) or workspace fields (learn more).
• Apps

The subscription Apps page lets you manage subscription apps that are available to your users. Learn more.
• Revisions

The subscription Revisions page displays all revisions related to the current subscription. You can customize the
number of results to display per page, making it easier to see your subscription's entire revision history. The search
field lets you search for text across all revisions.

If CMK (Customer Managed Keys) is enabled on your subscription, the CMK Details section displays at the bottom of the
subscription page. Learn more.

The About pop-up window displays information about your Rally subscription, such as the version of Rally you are
using, your operating system, and any add-ons you are using. This information may be used when you contact support.

On any Rally page, select

(Help), About. 

 130



 Rally®

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select one of the following links in the sidebar to view your subscription information:

• Details for your subscription
• Fields
• Apps
• Revisions

• You can select the number of items to include on each page, using the Show drop-down list on the lower left
side of the page. Possible values are 25, 50, 100, or 200.

• You can search for text across all revisions. For example, enter New Field to search for field creation entries.

Customize Your Subscription
The subscription administrator can edit and enable settings that apply to the entire subscription.

Subscription customization is divided into four main areas:

• Context
• Email Settings
• Admin Capabilities
• Password Policies

 131



 Rally®

Subscription Context Settings

The context settings allow the administrator to provide the following capabilities to subscription users:

 132



 Rally®

• Allow users to use the Custom URL and Custom HTML apps
• Enable the Community App Catalog apps
• Add or change a disclaimer message
• If enabled, choose the mTLS policy to use
• Define the authentication method to use
• Enable functionality for cross-site requests
• Specify origins from which to allow cross-origin requests

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Edit your subscription context fields.
Allow Custom URL app Select this check box to allow users in the workspace to create apps that link to internal or external web

pages. By default, this app is disabled. Learn more.
Allow Custom

HTML app
Select this check box to allow users in the workspace to create apps containing HTML and JavaScript.
By default, this app is disabled. Learn more.

Allow community
app catalog apps

Select this check box to allow users to use community apps. Learn more.

Disclaimer Message If this field is not visible, it has not been activated. Open a support case to request that the disclaimer
message be activated for your subscription. Once activated, the field will be visible and you can enter
the text for the disclaimer message using the rich text editor. This text will be displayed below the menu
toolbar on all Rally pages.

You cannot add attachments (images, tables, code snippets) to the disclaimer message.

NOTE
Rich text fields have a 32,768 character limit, including formatting
(html tags, bulleted lists, formatting copied from Microsoft applications,
and so on). If you receive a warning about being over the character
limit, you can either reduce the formatting or use the Remove Format

button to remove all formatting.

mTLS Policy If this field is not visible, it has not been enabled. Open a support case to request enabling mutual TLS
for your subscription.  Learn more.

If mTLS has been enabled, you must select an mTLS policy.

Authentication Select a value from the drop-down list to set the authentication method to be used for your subscription.
You can choose Rally, SSO, or either/or as your authentication method. See Using Authentication.

IP Range You may allow all IP addresses to log in, or define a set or range of IP addresses. Any IP address not
listed in these settings will not be able to access Rally, even with the proper credentials.

NOTE
IP filtering will affect all users in the subscription, not just those in your workspaces.

 133



 Rally®

Apply IP Range
restriction to

Subscription Admins

This becomes available if you restrict the range of IP addresses. The default setting is off. When
enabled, subscription administrators are not exempt from IP restrictions, and may only log in
from allowed addresses. If this option is not selected, subscription administrators may log in from
any IP address.

Allowed File
Attachments

You can control which file types can be uploaded as attachments to work items. When this policy is
enabled in a subscription, Rally will validate the extension of files to be uploaded and reject any that do
not match the specified types.

NOTE
Files that have already been uploaded will not be flagged or removed if they do not match
the allowed file types list. This feature only works for attachments added after the setting is
enabled.

Session Timeout Select the amount of time of inactivity before a user is logged out of Rally.
Enable JSONP Select this check box to enable JSONP functionality for cross-site requests. It can be used to wrap

the JSON response in a JavaScript method call. Typically, this type of functionality is utilized to display
information from Rally outside of the application (primarily using our AppSDK2 apps) and does not affect
standard usage within the application.

IMPORTANT
Allowing this feature may allow malicious users to exploit data from your subscription.

CORS Allowed Origins A comma-separated list of entries: a,b,c

Leave this field blank to disable cross-origin resource sharing. Enter an * (asterisk) to allow all
origins. To specify a list of origins from which to allow cross-origin requests, enter a comma-separated
list of origins (which may include wildcards).

Learn more.

IMPORTANT
It is your responsibility to understand Cross-Origin Resource Sharing (CORS) and its
implications.

 134



 Rally®

5. Select Save & Close, or continue editing other subscription settings.

Subscription Email Settings

Enable or disable features that rely upon email, such as notification emails, automatic password changing, and welcome
emails for new users.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Edit your subscription email settings fields.
Email Functionality Select this check box to enable email-dependent features such as notification emails, automatic

password changing, and welcome emails for new users. By default, this check box is selected and email
features are enabled.

IMPORTANT
Clear the Email Functionality check box if you do not have an operational email server. This
enables you to create users and passwords without requiring email messaging.

Disable User Select this check box to send an email to users to notify them when their account has been disabled.
An email will be sent to disabled users even if the Email Functionality is not enabled. This check box is
selected by default.

Disabled
Login Attempt

Select this check box to send an email to disabled users upon login to notify them that their account has
been disabled.

5. Select Save & Close, or continue editing other subscription settings.

Subscription Admin Capabilities Settings

Rally has three levels of administrators: subscription, workspace, and project. The subscription administrator can choose
to enable and disable some administrative capabilities for other administrative roles. For example, by default, project
administrators cannot create new users, but the subscription administrator can enable that capability. Other administrative
capabilities are also controlled at the subscription level such as the ability to create and use API keys and use webhooks.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Edit your subscription administrator capabilities fields.
API Keys Enabled Enable or disable API keys at the subscription level. This ensures that the subscription set-up is in-line

with the company's policy for API key usage. Learn more.
Webhooks Enabled Enable or disable webhooks. Learn more.
Secret Used To Add

HMAC Signature
To Webhooks

Add a text string to use as an HMAC (hash-based message authentication code) signature for
webhooks requests. Learn more.

 135



 Rally®

Workspace Admins
Can Create New Users

Select this check box to allow workspace administrators to add new users for their respective
workspaces.

Workspace Admins
Can Configure Recycle

Bin Purge Time

Select this check box to allow workspace administrators to set a number of days to retain items in the
recycle bin before they are permanently deleted. Learn more.

Project Admins Can
Create New Users

Select this check box to allow project administrators to add new users for their respective projects.

Project Admins
Can Enable and
Disable Users

Select this check box to allow project administrators to edit the enabled/disabled setting of users in
projects they administer.

Project Admins
Can Create New
Child Projects

Select this check box to allow project administrators to create new child projects, which reside under
projects they administer.

Project Admins
Can Enable and

Disable Task Auto
State Updates

Select this check box to allow project administrators to enable/disable whether changing the state of a
task updates the schedule state of the schedulable parent work item. Learn more.

5. Select Save & Close, or continue editing other subscription settings.

Subscription Password Policies

You may further secure your subscription by implementing a password expiration policy.

The new password policies are applied to any new user or to any existing user when their password is changed. However,
you can force all users to update their passwords and adhere to the new policies applied by enabling the Password
Expiration policy and setting the Number of Days before expiration to 1. This will force all passwords to expire the
following day, forcing all users to update their password and adhere to the new policies in place. Remember on the
following day to reset the Number of Days before expiration to a desired length other than one day.

Each user receives a notification email each day for seven days prior to the expiration. This allows password updates prior
to expiration and ensures that all integrations and Web Services API connections remain uninterrupted.

NOTE
When a password has expired, or a user changes their password, previous passwords cannot be reused as the
current password.

Subscription administrators can set a user password lockout policy limiting the number of times a user may unsuccessfully
attempt to log in to Rally. This greatly enhances the security of your subscription and inhibits attempts of unauthorized
users access to your Rally subscription. To keep unauthorized users from attempting to breach your Rally security by
guessing passwords, you can set the lockout fields for your entire subscription. If a user exceeds the maximum number
of invalid login attempts, they receive an error message stating the account has been locked and they are instructed to
contact their subscription administrator. If the subscription has email notifications enabled, the user will also receive an
email stating they have been locked out and the length of time they are locked out per the subscription configuration.

NOTE
A common cause for users being continually locked out results from an integration, script, connector (such as
Subversion or Eclipse), or other automated process running in the background which has not had the credentials
updated. These failed logins count towards the invalid attempt limit and will eventually lock the user after

 136



 Rally®

reaching the set number of tries. Investigate any web services processes that might be using those credentials
to see if modifications are needed.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Edit the password policies:
Password Expiration Force user passwords to expire based on a number of days chosen by your organization. This is the

only optional field in this section.

• Enable - Select this box to enable password expiration for your subscription.
• Number of Days  - Enter the number of days until the user password expires. When the day limit

has been reached, the user is prompted at login to enter a new password.

Minimum
Password Length

Enter the minimum number of characters of a valid password for your organization. The default and
minimum number of characters is 8. The allowable length is 8–20 characters.

Required
Password Rules

Indicate the number of password rules to be enforced when validating passwords. Choose to include
from 1 (minimum) to 4 of the following rules. If you specify 1 (weakest security level), a user may create
a password using any one of the rules. If you specify 4 (highest security level), the user must create a
password that uses all four of these rules:

• (a-z) At least one lower case letter
• (A-Z) At least one upper case letter
• (0-9) At least one number
• (%!?$∫∞) At least one special character

The more rules applied, the more secure your password becomes.

Maximum Failed
Login Attempts
Before Lock Out

Lock out users for the subscription after an indicated number of invalid login attempts. When a user
exceeds the number of invalid login attempts, the account is locked and they receive an error message
stating that the account has been locked. If the subscription has email notifications enabled, the user
will also receive an email stating they have been locked out and the length of time they are locked out
per the subscription configuration. The subscription or workspace administrator must unlock the account
before the user can log in again. Valid numerical entry for this field is from 3–99. If any other value is
entered, an error message informs you of the limits.

Amount of Time Users
will be Locked Out

Select a value from the drop-down list for the length of time the user is locked out after the number of
invalid login attempts has been exceeded: 15 minutes, 30 minutes, 1 hour, 4 hours, 24 hours, or forever.
If the subscription has email notifications enabled, the user will receive an email stating they have been
locked out and the length of time they are locked out per the subscription configuration.

Number of Previous
Passwords to Track

Specify the number of previous passwords that may not be used as a current password. The default is
zero. The number entered is in addition to the current password. For example, if 3 is specified, the user
cannot reuse the current password or the previous three passwords. When a password has expired, the
user cannot use the previous password as a new password. A change to the password must be applied.

5. Select Save & Close, or continue editing other subscription settings.

Customizing User Fields
Subscription administrators can create new user fields as well customize the values for the following Rally-provided fields:
Cost Center, Office Location, Role, and Department.

You can also make any field you create an administrator-only field which means users will not see it.

 137



 Rally®

NOTE
Only the subscription administrator can customize user fields. Workspace and project administrators cannot
create new user fields or customize user field values, even if they have create user permissions.

You manage fields from the User Fields page. From this location, you can add new fields to your subscription's user
profile, and edit the values of customizable drop-down list fields.

Create New Custom User Fields

You can add new fields to your subscription's user profile.

You cannot delete created fields or change the type. However, you can hide fields that you create from users, making
them only visible to administrators only.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Fields link in the left pane.
4. Select User from the Type drop-down list.

5. Select New Field. An editor window displays.
6. Enter unique values for the Name and Display Name.
7. Select a type for the field.
8. Select Save & Close.

 138



 Rally®

Make Custom Fields Administrator-Only

You can choose which custom user fields are displayed and editable for users in the subscription. You can only do this on
fields that you have created. Select the Visible Only To Admins option to hide a field from project viewers, editors, and
project administrators.

Hidden fields can be:

• Created, edited, and viewed by subscription administrators
• Viewed by workspace administrators

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Fields link in the left pane.
4. Select User from the Type drop-down list.

5. Select the Gear

next to a custom field and select Edit.
6. Select the Visible Only To Admins check box to make the field administrator-only.
7. Select Save & Close.

Customize Values for Drop-Down List Fields

You can add or change values for drop-down list fields you have created as well as to the following Rally-provided fields:
Cost Center, Office Location, Role, and Department.

NOTE
Changing an available value in a drop-down list in a custom field will not update the field value throughout the
system. Changing an available value in a drop-down list in a built-in field (Cost Center, Office Location, Role,
Department) will update existing field values to the new value.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Fields link in the left pane.
4. Select User from the Type drop-down list.

 139



 Rally®

5. Select the gear

next to the field you want to edit, and select Edit.
6. Use the Drop-Down List Values text box to add, re-order, or delete values for the field.
7. Select Save & Close.

Default User Fields

The following list includes the fields available in the default user profile. Subscription administrators can add fields and
customize field values for the following drop-down lists: Cost Center, Office Location, Role, and Department.

Account Information
User Name Enter an email address (required). Rally recommends using a valid email address for each of your users.

The address must have a minimum of one character before the @ and at least one character before and
after the dot in the address. The field is alphanumeric, limited to 254 characters in length, and allows the
special characters of @, ., ?, and _. User name is not case sensitive.

Required.

Email Address Enter an email address for administrative messages and email notifications (required). If this field is blank
when the User Name field is populated or changed, this field is automatically populated with the User Name
value. Change notifications are sent to this email address if you have enabled the Email Notifications radio
button. The address must have a minimum of one character before the @ and at least one character before
and after the dot in the address. The field is alphanumeric, limited to 254 characters in length, and allows
the special characters of @, ., ?, and _.

Required.

Disabled This field is only available to subscription or workspace administrators. Select this check box make a user
inactive. Inactive users are unable to log into Rally and their user name does not display as an option to
create new work products. The history information for an inactive user is still preserved. An inactive user's
name displays in a lighter font color (drop-down lists are an exception). The default status is enabled/active.

Name Enter values for the first, middle, and last name of the user.
Did this user forget

their password?
Select this check box to send the user an email with new login instructions.

Role Select a value from the drop-down list to designate the role of the user.

Customizable by the subscription administrator.

Office Location Select a value from the drop-down list to identify what location the user is working from.

Customizable by the subscription administrator.

Department Select a value from the drop-down list to identify what department or organization the user works in.

 140



 Rally®

Account Information
Customizable by the subscription administrator.

Phone Enter a phone number of the user. This field is limited to 254 characters in length.

Display Preferences
Display Name The short name that is displayed in all Owner field drop-down lists for all work products instead of the user

name. If this field is blank, the User Name is used as the display name.
Profile Image Upload an image that display when the mouse rolls over your display name.

Settings
Session Timeout The length of time the system can remain active but unchanged before an idle user is logged out of Rally.

Warn on
Session Timeout

Specify whether a timeout warning message displays before automatic log off.

Password Expires A read-only field that reflects the password expiration policy set by the subscription administrator on the
Subscription tab.

Email Notifications Specify whether to use automatic emails for change management.

Important: If the administrator has disabled email functionality, this field will not display.

Date Format Select one of the following available formats for all date displays in Rally. Any selection other than the Use
Default value will override the default settings for the workspace.

• yyyy-MM-dd (ISO 8601) (Default)
• MM/dd/yyyy (US)
• dd/MM/yyyy (Europe)
• yyyy/MM/dd (Japan)
• yyyy-MMM-dd (2021-Apr-02)

Administrative Fields
Network ID Enter an alphanumeric value to designate an internal network ID. Limited to 254 characters in length.
Cost Center Select a value from the drop-down list.

Customizable by the subscription administrator

Permissions
Subscription Admin Select this check box if the user is a subscription administrator.

Timebox Admin This is only available if the workspace has the Restrict Timebox Management setting enabled. Select
this check box to enable the user as a timebox admin. A timebox admin has permissions to create, edit, or
delete release or iteration timeboxes. For more information, see Timebox Administration.

Planner Select this check box if the user is a planner and can create capacity plans for a delivery group.
Subscription administrators and workspace administrators can grant themselves the role of planner. All
other users must be given the planner role by another subscription or workspace administrator.

Investment Admin Select this check box if the user can have view and edit access to all investments fields.

Permissions Select a value from the drop-down list to indicate a user's specific permissions for each workspace in the
subscription.

Required.

Available Field Types
Boolean A field with options for true or false. It displays as a check box where a checked box indicates true and an

unchecked box indicates false.

 141



 Rally®

Date A calendar icon

( )
available in detail editors and list views. When a date is chosen, it displays in text format next to the
calendar. Custom date fields cannot be displayed on cards.

Decimal A number with a maximum of six digits before and three digits after the decimal point.
Drop-Down List A field that contains a series of strings or textual information. Users can select a value from the list.
Drop-Down List

(Multi-Value)
A field that allows users to select more than one value from a list.

Drop-Down List (User) A field that allows a selection from your Rally user list.

NOTE

• User-type custom fields are not supported in timesheets.
• User-type custom fields are not selectable in reports.

A list of your Rally users displays for the field.

Integer A number field with a maximum of nine digits.
String A field that accepts alphanumeric and special characters. Limited to 256 characters.

String fields can accept and display certain HTML tags.

Text A field with rich text formatting options. Text fields may hold up to 32 KB of data.
Web Link A field that allows you to embed a reference to an object in an external system. For example, if you use a

separate web-based case management tool or defect tracker, create a web link field to link your stories or
defects in Rally to the external item from within Rally. Once you have configured it, the Web Link field is
available for use when you edit a work item, or view the work item detail page.

When you view the detail of the work item, select the hyperlinked name of the external object to go directly
to the external page. Consider using the Rally Web Services API interface to populate the Link Label and
ID fields. For example, your case management tool might insert defects through Web Services that include
a reference back to the original case.

 142



 Rally®

• Provide the Name of the external object to use as a Link Label. (Optional)
• Enter the ID of the external object to be linked in the ID field, and save your entries.

Using Authentication
Rally provides advanced security and administration which provides teams who work in secure environments with options
to control the data that is stored in the subscription, as well as the ability to integrate login authentication with existing
identity management systems.

NOTE

• You must be a subscription administrator to enable or edit any of these features.
• Neither the Rally work item connectors nor the Rally SCM connectors support this feature; however, these

connectors can be used in SSO Exception Mode (see SSO with exceptions).

Authentication

If you have an SAML 2.0-compliant Identity Provider (IdP), you can configure the Rally subscription to log in to Rally
through Single Sign-On (SSO). The key to this secure internet SSO is your web browser. The browser interacts with
the SAML 2.0-compliant Identity Provider, validates user credentials, creates the SAML assertion, and then sends the
assertion to Rally.

NOTE
Neither the Rally Workitem connectors nor the Rally SCM connectors support this feature; however, these
connectors could be used in SSO Exception Mode (see SSO Authentication With Exceptions).

For information on setting up and configuring SSO in your subscription, see Set Up Single Sign-On (SSO).

SSO Authentication With Exceptions

Rally SSO provides two standard options for login control: SSO-only and hybrid (SSO or web) authentication. SSO-only is
the most secure; only users authenticated on your network may log in.

However, Rally integrations for third party applications such as Quality Center and Jira cannot access the subscription
data through the web services API when using the SSO-only mode. You can configure the integration through either an
SSO exception or an API key.

To provide the best security while enabling integrations, use SSO authentication with exceptions. As our integrations
require a username to fetch the subscription data, these users may be added to an exception list to log in to Rally with
standard web access.

NOTE
A subscription administrator is always treated as an SSO exception user. Subscription administrators will still be
able to log in using either SSO or the public link to Rally, even if they are not on the exception list.

You can request to use the SSO-only with exceptions mode when setting up your SSO with Rally Support. Use this
procedure to create an exception list.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. In the Authentication section, select SSO authentication with exceptions from the drop-down list.

 143



 Rally®

IMPORTANT
Do not select SSO authentication with exceptions from the drop-down list if you do not have any
exceptions. Doing so may cause issues with user authentication.

5. Under Redirect to IDP when SSO users try to login, select Automatically redirect to IDP.

6. In the SSO Exceptions text box, enter any usernames that you would like to have permission to access Rally outside
of your network, including usernames used for integrations.

Enter one username per line and use the full user@company.com format.

 144



 Rally®

7. After you have entered all the usernames, select Save & Close.

Custom Log Out Landing Page
You can specify which URL your users are directed to when they log out of a Rally subscription using SSO. This is useful
if your organization has special requirements for logging out of applications, or if you would like to provide your users with
links to other resources.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Under the On SSO log out, take user to: prompt, select Specified URL from the drop-down list.

5. In the text field that displays underneath the field, enter URL of the page you would like to direct users to on log out.

6. Select Save & Close.

Manage Webhooks
Webhooks allow you to create rules in Rally that send information to an external server when the rule triggers.

WARNING
This feature is currently in Beta.

Rally does not guarantee delivery of Webhooks.

Webhooks are usually triggered by an event, such as pushing code to a repository or a comment being posted to a
blog. When the event occurs, the source site makes an HTTP request to the URI configured for the webhook. Users
can configure them to cause events on one site to invoke behavior on another. Fields that are the type Drop-Down Lists
(Multi--Value) are not supported. 

Some useful applications of webhooks include:

• Receive an update when a single artifact changes
• Receive updates when any artifact changes in your subscription

NOTE
Only subscription administrators can manage webhooks.

• Subscription administrators can view which webhooks are being used as well as who is using them. This
ensures the security of a subscription’s data.

• Subscription administrators can view, enable, disable, and delete webhooks for the subscription and
workspace.

For information on creating and editing webhooks, see the API documentation.

 145

https://rally1.rallydev.com/apps/pigeon/docs/webhooks


 Rally®

IMPORTANT
Rally reserves the right to suspend or disable webhooks based on non-usage or misuse. A webhook will be
disabled automatically if it fails 10,000 times, fails 100 times over 7 days, or has never succeeded and fails 100
times. When a webhook is re-enabled, the error count for the webhook is reset to 0.

This section includes the following topics:

• View or Delete Webhooks
• Enable or Disable Webhooks
• Set Up an HMAC Secret

View or Delete Webhooks

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Extensions, Webhooks. Each webhook listed has the following details:

• Name
• Application link
• Creator of the webhook
• Last updated (revision date of the webhook)

• Date settings are based on the date and time format you set in your profile.
• Active (On or Off)

• When the Active toggle is On, the webhook will fire.

3. To delete a webhook, select the Gear

 146



 Rally®

next to the name and select Delete. Select Confirm on the confirmation dialog box. This permanently deletes the
webhook.

Enable or Disable Webhooks
You can disable all webhooks from the subscription editor, which serves as a master switch for all webhooks. Even
if a webhook is listed as active on the Webhooks page, it is inactive if webhooks are disabled from the subscription
editor. Webhooks are enabled by default.

If all webhooks have been disabled by a subscription administrator, a banner displays on the Webhooks page with a link
to change the setting.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. In the Admin Capabilities section, select or clear the Webhooks Enabled check box.

5. Select Save & Close.

Set Up an HMAC Secret
Subscription administrators can encrypt webhooks with hash-based message encryption codes (HMAC).

To add this extra security to your webhooks, you need to add a secret to your subscription, then make changes to how
you are receiving webhook messages in your code.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. In the Admin Capabilities section, select the Webhooks Enabled check box.

5. In the Admin Capabilities section, enter your secret in the Secret Used To Add HMAC Signature To Webhooks field.

This can be any string that you choose, limited to 256 characters.

When you add a secret to this field, HMAC is immediately enabled for your webhook transactions.

6. Select Save & Close.

7. Let your developers know that you have added an HMAC secret that will need to be decoded and verified.

Once a subscription administrator has enabled an HMAC secret for webhooks, any new or existing code should include
validation to check the Rally Signature. The Rally Signature is a SHA256 HMAC digest of the webhook body, hashed with
the secret set in the Subscription Admin Capabilities.

The Rally Signature is provided as a header on the webhook called Rally-Signature. By taking the UTF-8 byte
representation of the body and the secret you can calculate the Signature as an array of bytes. When the byte array is
base 64 encoded it can be used to match the Rally-Signature.

Below is an example written in Java.

 147



 Rally®

package com.rally;

     import  javax.crypto.spec.SecretKeySpec;

     import  java.util.Base64;

     import  javax.crypto.Mac;

      public class RallySignature {

       String secret;

       Mac shaMac;

       SecretKeySpec keySpec;

       public RallySignature(String secret) throws Exception {

         this.secret = secret;

         this.shaMac = Mac.getInstance("HmacSHA256");

         this.keySpec = new SecretKeySpec(secret.getBytes("UTF8"), "HmacSHA256");

         this.shaMac.init(this.keySpec);

       }

       public boolean verify(String body, String providedSignature) throws Exception  {

         byte[] signature = shaMac.doFinal(body.getBytes("UTF8"));

         String b64signature = Base64.getEncoder().encodeToString(signature);

         return b64signature.equals(providedSignature);

       }

      }

 

If your calculated signature and the Rally-Signature header match then the body has not been modified.

Share Custom Pages
As a subscription, workspace, or project administrator, you can create a custom page and share it with other users. When
a custom page is shared, all users in selected projects will see the page available in their menus.

Administrators of a shared custom page can:

 148



 Rally®

• Change the column layout of the apps
• Change the position of the apps
• Add or delete apps
• Change the settings of the apps
• Share and unshare the page

You can also include data from additional web sites that support your collaborative development processes such as a
common wiki, calendar, source code repository, continuous integration server, related blogs, or sites on your own intranet.

NOTE
As an administrator, any and all changes that you make to a shared custom page will affect end users viewing
that page. This includes even subtle changes like changing the sort order on a custom list app. Make changes
with caution to avoid user disruption.

1. As an administrator, create or edit a custom page.

2. Use the following fields to specify how the custom page should be shared.
Share with all projects Select this check box to make the page available to all users within the workspace. This field is available

only to subscription and workspace administrators.
Share with

selected projects
Select one or more check boxes to make the page available to all users within the selected projects.
This field is available only to subscription, workspace, and project administrators.

WARNING
Sharing an existing shared page with new projects will prevent some project administrators from being able
to edit this shared page until they are made project administrator or above in the project(s) you are adding for
that page.

3. Select Save & Close.

Managing Workspaces in Your Subscription
A Rally workspace is a flexible instance of Rally within your subscription that allows you to create your own team
hierarchies, custom fields, and Agile workflows.

A Rally subscription can consist of multiple workspaces. A subscription administrator manages all workspaces for your
subscription.

The Rally permission model allows you to maintain a variety of programs and products within a single workspace that
can be isolated or hidden from one another. You can create projects/teams to hold confidential information that is only
available to selected individuals.

Unless your company has divisions or groups whose strategies do not overlap, a single workspace offers the best
alternative because it ensures consistent processes and best practices that support Agile at scale. A single workspace
facilitates rollup reporting across the organization, at all levels.

A Use Case for Multiple Workspaces

Within larger companies, you may have value streams that are unique enough to warrant their own workspace. For
example, a software development workspace may not need to overlap with a Rally workspace used for internal IT
projects. Multiple workspaces should only be used to satisfy strict security policies or where the data for the workspace is
unique enough to require it. Keep in mind that if you maintain separate workspaces, you will have a few limitations within
your subscription:

• Data will be segregated and may be fragmented if too many workspaces are created.
• You cannot map dependencies across workspaces.
• Integrations with other tools are more tedious. You need to integrate separate workspaces individually.
• A company restructure that requires a team’s work to move between workspaces may cause complex problems.

 149



 Rally®

Before you create a new workspace, carefully consider the fact that rollups and reports are performed within a specific
workspace. The information to rollup or report on, such as projects, work items (including portfolio items), and fields, must
be stored in the same workspace. For that reason, Rally strongly recommends you limit the number of workspaces you
create.

This section includes the following topics:

• Print a Report of all Workspaces
• Create a New Workspace

Print a Report of all Workspaces

A subscription administrator can print a report for all workspaces and projects for your subscription. You can print
a summary list or a detailed listing of all workspaces. Both report types include all projects contained within each
workspace.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select Actions, Print Report.

4. Select the desired report options.

5. Select Print.

Create a New Workspace

WARNING
Before you create a new workspace, carefully consider the fact that rollups and reports are performed within
a specific workspace. The information to rollup or report on—such as projects, work items (including portfolio
items), and fields—must be stored in the same workspace. For that reason,  Rally strongly recommends you
limit the number of workspaces you create.

You must be a subscription administrator to create a new workspace in your subscription. When you create a new
workspace, it automatically creates a sample project within the workspace.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select Actions, New Workspace.
4. Enter your workspace general fields. The labels on required fields are highlighted in red.

Name The name of the workspace.
Description A description for the workspace.

State By default, this is set to Open.
Owner The administrator creating the workspace. You can select a new owner from the drop-down list.

Default project
access for new users

Workspace and subscription administrators can set a preferred permission default for new users created
within a workspace. When creating a new user, administrators will see the selected permission for all
projects in the workspace inside the user editor window. You will still have the ability to change the
permissions for specific projects while creating the user. Learn more.

 150



 Rally®

• Changing this setting will not affect the permissions of existing users.
• When creating a new user in a different workspace, permissions are still provided in the workspace

that has this setting enabled.
• If a project administrator creates a new user in a workspace that has this setting enabled, the new

user will be provided permissions to all projects, including projects the administrator may not have
access to.

Possible values are:

• No Access (the default value)
• Viewer
• Editor

Time Zone Time zones are set at the workspace level. Dates are treated as a specific, fixed point in time, not a
calendar date. This allows for consistency with distributed teams. The workspace time zone is not
necessarily the local server time zone.

Timeboxes start at midnight and end one second before midnight in the workspace time zone. Any dates
displayed in list views include the time and time zone abbreviation in the workspace time zone. Emails
and notifications are sent in the last time zone the user was in while logged into Rally.

Date Format The format that will be used in the workspace for dates. Select a format from the drop-down list.
Date/Time Format The format that will be used in the workspace for date and time. Select a format from the drop-down list.

Workdays Workdays are set at the workspace level. Workdays are defined by default as Monday, Tuesday,
Wednesday, Thursday, and Friday.

Charts and reports do not include non-workdays.

Rank Method There are two possible methods for ranking your work items:

• Manual Ranking uses numbers to establish relative priority within a group of work items.
• Drag & Drop Ranking uses position to establish relative priority of a work item on a particular page.

Learn more.
Enable Time Tracker Select to enable the Rally Time Tracker, which extends Rally with timesheets and timesheet reports.

Learn more.
Enable Build

and Changeset
Select Enable Build and Changeset for your workspace to allow Rally connectors to receive
information about changesets and build processes. Learn more.

Automatically unblock
Portfolio Items

with state updates

The state of a portfolio item changes when the work item is moved to a new column on the Portfolio
Kanban board or when the State field is manually updated. At the workspace level, you can determine if
a block is removed from the portfolio item when the state changes. By default, this option is enabled and
portfolio items are automatically unblocked when the state is updated.

Notes The Notes field is a rich text field, with display and formatting options.

NOTE
Rich text fields have a 32,768 character limit, including formatting
(html tags, bulleted lists, formatting copied from Microsoft applications,
and so on). If you receive a warning about being over the character
limit, you can either reduce the formatting or use the Remove Format

button to remove all formatting.

5. Select Save & Close, or continue editing other workspace settings.

Workspace Work Product Prefixes Settings

As the subscription or workspace administrator, you need to configure each work item type with a unique prefix or tag to
help you identify the type of work item at a glance. For example, set up user stories with a prefix of US, so a user story
would look like this: US1103. You can set defects with a prefix of DE, so a defect would look like this: DE0415.

 151



 Rally®

The prefix can be an alphanumeric entry with a maximum length of 10 characters. All special characters are allowed.
Each of these fields can be changed after the workspace has been started and data exists. When you edit the workspace
in progress, the work item prefixes are updated immediately.

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. In the Work Product Prefixes section, enter the desired prefix into the corresponding work item text box. You can

customize an ID prefix for:
– User Story
– Defect
– Defect Suite
– Test Case
– Task

NOTE
You can customize the prefixes of portfolio items by editing the Portfolio Item Type field.

6. Select Save & Close, or continue editing other workspace settings.

Workspace Units & Planning Settings

You can specify the increments of measurement applied to work effort at a release and iteration level within your
workspace. You can also specify if the workspace restricts who can modify release and iteration timebox settings.

Units are alphanumeric fields. All special characters are allowed. You can edit units after data has been already recorded
in your project; however, the new units label will not be applied to previous data. The new label will only be applied to
quantities created or edited after the change was made. Examples of units include units, points, hours, and days.

Restricting timebox management removes the ability of project administrators and project editors to create or modify
release or iteration timeboxes. By default, subscription administrators, workspace administrators, project administrators,
and project editors have this ability. Selecting Restrict Timebox Managment removes the ability from project
administrators and project editors. You can then add Timebox Admin permission to specific users. For more information,
see Timebox Administration.

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.

 152



 Rally®

3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. In the Units & Planning section:

– Enter a label for Plan Estimate Units.
This label is applied when estimating user stories, defects, and defect suites. On the Release Status page, the first
letter of your entered value displays in a column header icon of the Plan Estimate column. Hover over the icon and
the full text of your estimate label ( Points ) displays.

– Enter a label for Task Estimate Units.
On the Release Status page, the first letter of your entered value displays in a column header icon of the Task
Estimate column. Hover over the icon and the full text of your estimate label (Hours) displays.

6. In the Units & Planning section, select the Restrict Timebox Management check box to restrict release or
iteration timebox creation, deletion, or update.

7. Select Save & Close, or continue editing other workspace settings.

Timebox Administration
The Restrict Timebox Management feature provides greater control over the cadence, synchronization, periodic cross-
domain planning, and roll-up reporting for your organization by restricting the number of users that have permission to edit
the details of timeboxes.

Restricting the ability to edit the details of your iterations and releases (including start and end dates) to selected project
users helps to ensure that these timeboxes are consistent across teams and projects for cross-domain planning and
reporting. Subscription and workspace administrators can turn the ability to restrict timebox management on or off for a
workspace through the workspace configuration.

By default, the Restrict Timebox Management feature is not enabled. Subscription and workspace administrators as
well as project administrators and editors are all able to edit timeboxes. When you enable this feature, the ability to
edit timeboxes is limited to subscription and workspace administrators. To allow specific project administrators or editors
to edit timeboxes, you must explicitly add the Timebox Admin to their profile.

The following tables describe the available timebox permissions.

Restrict Timebox Management is Enabled for the Workspace

Role Timeboxes User Can Manage

Subscription Administrator Any timebox in the subscription

Workspace Administrator Any in timebox in the workspace

Project Administrator By default: None
If Timebox Admin permission is granted:
Any timebox in a project where the user is an administrator

Project Editor By default: None
If Timebox Admin permission is granted:
Any timebox in a project where the user is an editor

Viewer None

Restrict Timebox Management is Not Enabled for the Workspace

Role Timeboxes User Can Manage

Subscription Administrator Any timebox in the subscription

Workspace Administrator Any in timebox in the workspace

 153



 Rally®

Role Timeboxes User Can Manage

Project Administrator Any timebox in a project where the user is an administrator

Project Editor Any timebox in a project where the user is an editor

Viewer None

Timebox Management for a Workspace

To enable or disable the Restrict Timebox Management feature for a workspace:

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. Scroll to the Admin Capabilities section.
6. Select or clear the Restrict Timebox Management check box.
7. Select Save and Close.

For more information, see Customizing a Workspace.

Manage the Timebox Admin Permission for a User

To add or remove the Timebox Admin persimission from a user profile:

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the name of the user that you want to edit and the select Edit from the Actions menu.
4. Scroll to the Permissions section.
5. Select or clear the Timebox Admin check box.
6. Select Save & Close.

For more information, see Creating and Editing Users.

Managing Apps in Your Subscription
The subscription administrator defines how custom, community, and subscription apps are handled in your subscription.

This section includes the following topics:

• Enable Custom URL or Custom HTML Apps
• Enable Community Apps in the App Catalog
• Manage Subscription Apps

Enable Custom URL or Custom HTML Apps

The subscription administrator defines whether users may use the Rally Custom URL or Custom HTML. apps. By default,
these apps are disabled.

 154



 Rally®

IMPORTANT
Enabling custom app pages allows users to create pages containing HTML, JavaScript, and other client-side
scripting languages. Consider and follow your own security policies and procedures when developing and
implementing custom HTML pages. Improper implementation can expose your subscription to Cross Site
Scripting (XSS) security vulnerabilities such as code injection and the manipulation of client-side applications by
malicious users. Handle output properly by encoding or using an escaping sequence, validating user-supplied
input, and using HTTPOnly cookie flag. For more information, visit the XSS (Cross Site Scripting) Prevention
Cheat Sheet.

Disabling the Custom URL or Custom HTML app at the subscription level removes it from the app catalog and causes all
existing Custom URL or Custom HTML apps to display a "This app has been disabled by your administrator" message.
Subscription administrators can still create subscription apps while the custom app is disabled.

Re-enabling the Custom URL or custom HTML app at the subscription level reverts these changes.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Enable or disable the Custom URL or Custom HTML apps by selecting or de-selecting the associated check box.

5. Select Save & Close.

Enable Community Apps in the App Catalog

The Rally App Catalog contains apps that were created outside of Rally. Rally provides limited support for these
community applications, and they are subject to Beta terms.

NOTE
Community applications are subject to the terms for Beta products set forth in the SaaS Listing for Rally and to
any additional terms included with such applications. By accessing or using community applications, you agree
that these terms for Beta products govern your access to and use of the community applications in conjunction
with Rally.

Access to Community apps can only be turned on by a subscription administrator for an entire subscription. This provides
access to all community apps for all users in the subscription.

 155

https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html
https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html


 Rally®

If the subscription administrator has not enabled community apps, users will see the Add button grayed-out on the App
Catalog page.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Select Allow community app catalog apps. This will allow users to add community apps to their custom pages.

5. Select Save & Close.

Managing Subscription Apps
Subscription administrators can manage custom apps in the App Catalog.

Add an App to the Catalog

Subscription administrators can add custom apps to the App Catalog to be shown alongside Rally apps. Learn more.

At any point, a subscription administrator can update the source code for the app and all users will automatically get the
updates. Updates to an app are shown in the subscription revision history. Learn more.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Apps link.
4. Select + Add New to add an app.

5. Enter the information for the app.
Name (required) Shown in the catalog and is the default name for the app.

Disabled Whether the app is available. Learn more.
Description Shown in the catalog. Admins can add links, such as where to get help with the app or find more

information.
Image Shown in the catalog. If none is provided, the image of two gears is shown in the catalog.

Source (required) The custom HTML code they would add for any apps they already have, build, or find.
Timebox Filtering Whether this app respects iteration, release, and milestone filters. If the app respects these filters, the

app will be shown in a special category.

 156



 Rally®

6. Select Save & Close.
Once apps have been added, they display in the list on the subscription Apps page.

View Subscription App Revision History

When a subscription app is updated, the change will show in the subscription revision history.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Revisions link.
4. Scroll or search for the app name in the revisions list.

Disable an App

A subscription administrator can disable an app in case there is a bug with the app or the app is no longer supported. If it
is disabled, a message displays in the app and it no longer displays in the catalog.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Apps link.
4. Select the Gear

next to the app, then select Edit.
5. Select the Disabled check box.
6. Select Save & Close.

Delete an App

A subscription administrator can delete an app only if it is not added to any pages. The Apps page shows how many
pages have the app (in the Usages column), but not which pages.

The Delete option is not available from the gear menu if the app is being used.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select the Apps link.

 157



 Rally®

4. Select the Gear

next to the app, then select Delete.

Customer Managed Keys (CMK)
Customer Managed Keys, or CMK, goes by a few different names. Sometimes called Bring Your Own Key (BYOK),
Enterprise Key Management (EKM), or Bring Your Own Encryption (BYOE), CMK is an architectural pattern that allows
you to use your own Key Management Server (KMS) to manage the security of your sensitive data.

Rally maintains, as part of our standard security approach, both database and disk level encryption by default for all
customers. Database encryption utilizes Oracle TDE with AES-256. Encryption keys are managed by Oracle Wallet.
External network traffic supports SSL TLS 1.2 utilizing 2048 bit RSA public keys. More information on Rally’s high
standards of security can be found here.

Customer Managed Keys (CMK) is a premium enterprise feature that provides our customers with complete control of
their data in Rally using encryption keys.

• Data is encrypted using your encryption keys and your key management server. Your keys are never seen by Rally.
• If you withhold keys, even Rally cannot decrypt your data.
• All access generates a near real-time audit trail that you monitor with your SIEM.

Rally CMK Architecture

How it Works

CMK is currently available to encrypt attachments within your Rally subscription once it is enabled. CMK is a subscription
level module in Rally. Once it is enabled:

• It applies to all attachments within your Rally subscription.
• Any new attachments created are encrypted by the provided KMS.

 158

https://www.broadcom.com/info/rally/security


 Rally®

CMK currently supports three Key Management Server (KMS) options:

• Google Cloud Platform (General Availability)
• Amazon Web Services (General Availability)
• Microsoft Azure (General Availability)

Key Leasing

When key leasing is enabled, your KMS will generate a single key and that key will be used to wrap your data encryption
keys. This can increase performance, since there are fewer requests to your KMS; it is not necessary to make a request
to your KMS on every key wrap and unwrap operation. Instead, your KMS leases a key for a period of time to wrap and
unwrap the keys that encrypt your Rally data. Leased keys will automatically be rotated every 90 days.

CMK Prerequisites

Before you can set up Customer Managed Keys (CMK) to use with Rally, be sure you have the following:

• Access to an instance of your company’s preferred Key Management Server (KMS). CMK currently supports three
KMS options: Google Cloud Platform (General Availability), Amazon Web Services (General Availability), or Microsoft
Azure (General Availability).

• Your Rally subscription ID number. Learn more.
• The name and email address of the user that will be managing your CMK configuration (the CMK administrator).

CMK Setup

A Rally subscription administrator sets up CMK.

1. Open a Rally support ticket with these pieces of information to get access to CMK:
a. The Key Management Server (KMS) you will be using. CMK currently supports three KMS options: Google Cloud

Platform (General Availability), Amazon Web Services (General Availability), or Microsoft Azure (General
Availability).

b. Your Rally Subscription ID. Learn more.
c. The name and email address of your CMK administrator (the person that has access to the KMS instance that will

be used with CMK).
2. The CMK administrator receives an email granting access to the Configuration Broker.
3. Log into the Configuration Broker and set up 2-3 alternate users (at a minimum) to manage the Configuration Broker.
4. Provide your KMS details in the Configuration Broker.

NOTE
The steps are different for each KMS. The wizard will walk you through the correct steps.

5. Once the wizard is complete, you will be prompted to set this KMS as the Primary Config. Follow the instructions to
complete the KMS setup. Note that you will only want to have one KMS set as primary, and that will be the information
used by the Configuration Broker to encrypt your attachments in Rally.

6. (Optional) To enable key leasing for this KMS configuration:
a. Select Logging Configuration. Possible logging services are Google Stackdriver or Splunk.
b. Follow the instructions for configuring the logging service provider of your choice. When you are finished, select

Encrypt and Save.
c. Select KMS Configs. In the Primary Config, select Enable Key Leasing.
d. Follow the instructions for your specific KMS, then select Confirm.

7. Confirm your KMS setup is valid by emailing Rally support services and providing your Rally subscription ID. Once
Rally Support verifies that the KMS is valid, we enable the CMK Module on the subscription.

8. Confirm that the CMK module is turned on.

 159



 Rally®

At this point your module is on and your attachment data is being encrypted in pilot mode. Pilot mode means that your
data is being encrypted and stored using CMK encryption. Additionally, your data for attachments is being stored with
standard Rally encryption as a failsafe until you turn off the second bucket at the end of your setup.
a. On any Rally page, select

(Help), About. 

b. Scroll to Add-Ons: Customer Managed Keys. It should be set to Yes .
9. Encrypt all of your historical attachments.

a. Select Setup

from the Rally menu bar in the upper-right corner of the display.
b. Select Subscription.
c. Select Actions, Encrypt Data.
d. After you receive the email notification that the encryption has started, you can monitor the progress of the

encryption on your Subscription page. Refresh your Subscription page as needed.
e. When the encrypt action completes, you will receive an email notification confirming the completion.

10. Once the encryption is complete, remove the back-up bucket.

NOTE

• You cannot move to the CMK encryption only option until all of the data is encrypted.
• You can go back to writing data to both buckets, but this will only apply to data that is created in the

future.

a. Select Setup

from the Rally menu bar in the upper-right corner of the display.
b. Select Subscription.
c. Select Actions, Edit Subscription.
d. In Admin Capabilities, select the Use CMK encryption only check box.

WARNING
Checking this will purge all backup data which is using default Rally encryption.

e. Select Save & Close.
f. After you receive the email notification that the purge job has started, you can monitor the progress of the purge job

on your Subscription page. Refresh your Subscription page as needed.

 160



 Rally®

g. When the purge action completes, you will receive an email notification confirming the completion.

Maintaining CMK
Once you have enabled Customer Managed Keys (CMK) for encrypting your Rally data, you may need to perform periodic
maintenance.

You can view the details of the current CMK status on your subscription details page.

Viewing CMK Details

The CMK Details section of the subscription page displays information about the encryption status of your attachments.

NOTE
If a job is currently running, you can follow its progress by refreshing your subscription page.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Scroll to the CMK Details section.

Total Encrypted
Content

The number of attachments encrypted out of the total number of attachments in your subscription.

Encrypted
records using old
subscription KMS

configs

The number of attachments related to a subscription merge or workspace move.

Latest Job Progress The progress of the last job. The information includes:

• Started TimeWhen the latest job started.
• Job Type

What kind of job was it? Possible job types are:
– ENCRYPT
– ENCRYPT_REMAINING
– DECRYPT
– PURGE

• Job Status
– In-Progress
– Failed
– Completed
– Aborted (a job can only be aborted by Rally Support)

• Total Count
The number of attachments involved in the last job.

• Completed Count

 161

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

The number of attachments successfully processed in the last job.

Encrypting Your Rally Data

Setting up CMK on your subscription included encrypting all new attachments, and then encrypting all of your historical
attachments. Learn more.

However, you may need to encrypt additional attachments, such as after a subscription merge or workspace move. You
will be able to identify that you need to do this by comparing the number of encrypted attachments against the number of
total attachments in the CMK Details section on the subscription page.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select Actions, Encrypt Data.
4. Use the Authorize Encryption dialog box to specify which Rally attachments to encrypt.

– To encrypt all attachments in your subscription (this involves decrypting and encrypting any attachments that have
already been processed), select Encrypt.

– To encrypt remaining attachments in your subscription that have not already been encrypted or which were
encrypted in a different subscription or workspace (this occurs after a subscription merge or workspace move),
select the Encrypt Remaining check box, then select Encrypt.

5. After you receive the email notification that the encryption has started, you can monitor the progress of the encryption
on your Subscription page. Refresh your Subscription page as needed.

6. You will receive an email notification once the encrypt job ends (whether it completed, failed, or was aborted).

Rolling Keys

The process of changing from the existing key in use with CMK to a new key is referred to as rolling a key. Rolling a key
can be thought of like changing your password. You might decide you need to roll your key if your key was compromised
in some way. However, the most likely scenario requiring rolling a key is to stay conformant to your internal security best
practices.

 162



 Rally®

You do not need to change anything on the Rally side of the Configuration Broker when rolling a key. However, do not
remove the old key permanently until a full Encrypt Data process has been run, as it is needed to decrypt the existing
data before it is re-encrypted with the new key.

1. As the CMK administrator, complete the steps for your KMS to add a new key to your Rally specific configuration.
– Google Cloud Platform (GCP) Key Rotation
– Amazon Web Services (AWS) Key Rotation
– Microsoft Azure Key Rotation

NOTE
Microsoft Azure refers to the rolling a key process as a new key "version". Learn more.

2. Once the new key is added in your KMS, you (the Rally subscription administrator) encrypt the data. This action both
decrypts the existing data and re-encrypts it.

IMPORTANT
Do not use Encrypt Remaining.

a. Select Setup

from the Rally menu bar in the upper-right corner of the display.
b. Select Subscription.
c. Select Actions, Encrypt Data.
d. In the Authorize Encryption dialog box, select Encrypt to encrypt all attachments in your subscription.

3. After you receive the email notification that the encryption has started, you can monitor the progress of the encryption
on your Subscription page. Refresh your Subscription page as needed.

4. After you receive the email that the encrypt action is complete, you (the CMK administrator) can remove the old key
through the KMS settings.

Using Key Leasing

You can enable key leasing on an existing KMS, or disable it on a KMS.

Enable Key Leasing

Enabling key leasing on a KMS configuration may improve performance, since there will be fewer requests to the KMS.
Log entries that would have been generated without key leasing will be replicated using the logging configuration that you
provide.

NOTE
You must create a logging configuration for your logging service provider before you can enable key leasing.

1. Log into the Configuration Broker.
2. If you haven't already configured a logging service provider, select Logging Configuration. Possible logging service

providers are Google Stackdriver or Splunk.
3. Follow the instructions for configuring the logging service provider of your choice. When you are finished, select

Encrypt and Save.
4. Select KMS Configs. In the desired KMS configuration, select Enable Key Leasing.
5. Follow the instructions for your specific KMS, then select Confirm.

Disable Key Leasing

When you disable key leasing, data that was previously encrypted using a leased key will continue to work, but will require
requests to your KMS to decrypt.

1. Log into the Configuration Broker.
2. Select KMS Configs, and find the KMS configuration where you want to disable key leasing.

 163

https://cloud.google.com/kms/docs/key-rotation
https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html
https://docs.microsoft.com/en-us/azure/key-vault/keys/about-keys
https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates


 Rally®

3. Select Disable Key Leasing.
4. Follow the instructions for your specific KMS, then select Confirm.

Moving From One KMS Provider to Another

It is generally not recommended to have more than one KMS, unless you are in the process of moving from
one KMS provider to another.

IMPORTANT
You should never remove an old KMS configuration until you have rerun Encrypt Data with a new Primary KMS.
Otherwise, you will lose access to your previously encrypted data with no way to recover it.

1. Log into the Configuration Broker.
2. Select KMS Configs from the left-side navigation.

3. On the KMS Configs page, select the KMS options

in the bottom right corner, and choose the appropriate KMS option.
4. Follow the steps in the KMS configuration wizard to complete the new key setup.
5. Select Yes when asked to set this new KMS configuration as Primary.

6. Contact Rally Support to verify your new KMS configuration.
7. After confirmation, your Rally CMK service will now begin using the new KMS and associated key to encrypt any newly

added attachments.

IMPORTANT
Do not remove the old KMS configuration until you have rerun Encrypt Data with a new Primary KMS.
Otherwise, you will lose access to your previously encrypted data with no way to recover it.

8. Once the new KMS configuration is added to your Configuration Broker, you (the Rally subscription administrator) can
re-encrypt the data.

 164

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

IMPORTANT
Do not use Encrypt Remaining.

a. Select Setup

from the Rally menu bar in the upper-right corner of the display.
b. Select Subscription.
c. Select Actions, Encrypt Data.
d. In the Authorize Encryption dialog box, select Encrypt to encrypt all attachments in your subscription.

9. After you receive the email notification that the encryption has started, you can monitor the progress of the encryption
on your Subscription page. Refresh your Subscription page as needed.

10. After you receive the email that the Encrypt Data action is complete, you can remove the old KMS configuration from
the Configuration Broker.

Removing CMK From Your Rally Subscription

To remove CMK from your Rally subscription, you will need to notify Rally support. After Rally makes the necessary
changes to your subscription, you can decrypt your data and remove your KMS setup.

NOTE
Make sure to decrypt your data to prevent any data loss due to your KMS being deactivated or removed.

1. Send a request to Rally Support that you want to remove the CMK module from your subscription.
2. Rally will disable the CMK module on your subscription. No new attachments will be encrypted after this point, but all

other attachments in the subscription are still encrypted.
3. Select Setup

from the Rally menu bar in the upper-right corner of the display.
4. Select Subscription.
5. Select Actions, Decrypt Data.
6. Select Decrypt.

All encrypted attachments in your subscription will be decrypted.
7. After you receive the email notification that the decryption has started, you can monitor the progress of the decryption

on your Subscription page. Refresh your Subscription page as needed.
8. After you receive the email notifying you that the Decrypt Data action is complete, you can continue with removing

your KMS setup.

 165

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

WARNING
Do not proceed until you receive the notification that the decryption is complete! Otherwise, access to any
attachments that were added while CMK was enabled will be lost.

9. The CMK administrator logs in to the Configuration Broker and removes your KMS setup.

Using Mutual TLS (mTLS) with Rally
Mutual TLS (mTLS) is a method of two-way authentication that requires both client and server to prove their identity by
exchanging trusted certificates.

The Mutual TLS module is not automatically enabled as part of your subscription. You must work with Rally support to
enable the module.

Once the module is enabled for your subscription, you will need to:

• Deploy the client certificate.
• Set the mTLS Policy.

Enable the Mutual TLS Module for Your Subscription

1. Contact Rally Support to request enabling the Mutual TLS module for your subscription.
2. You will be asked to provide Rally with a certificate signing request. Rally will return a signed certificate that you install

as your client-side mTLS certificate.
3. Rally enables the "Mutual TLS" module on your subscription.
4. Rally Support provides you with the Rally mTLS URL.
5. Subscription administrators will see the mTLS Policy setting when editing the subscription. The default value is

Forbidden, which is the same as not having the Mutual TLS module enabled (no mTLS).

Testing Your mTLS Setup

When initially enabling your subscription to use mTLS, it may be helpful to test in the Rally sandbox environment first.
This allows you to test that you have correctly installed client certificates without risking your production operations. When
requesting that Rally Support enable the Mutual TLS module, you need to specify whether you are requesting that the
Mutual TLS module be enabled in production or sandbox.

Even if you plan to use the Required mTLS Policy, you should do your initial testing using the Optional mTLS Policy. In
that mode, non-mTLS traffic is accepted alongside mTLS traffic. This ensures that your subscription administrators will not
get locked out while troubleshooting client certificates. After successful testing, you can move your subscription to use the
Required Policy.

Deploying the mTLS Client Certificates

Before setting your mTLS policy, you need to deploy the client certificate received from Rally Support to all machines that
will use mTLS.

Setting the Mutual TLS Policy for a Subscription

The mTLS module must be enabled for a subscription before setting the mTLS policy.

 166

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

If your subscription has the "Mutual TLS" module enabled, you must choose an mTLS policy. The mTLS policy is initially
set to Forbidden.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select Actions, Edit Subscription.
4. Select an mTLS Policy from the drop-down list. Possible values are:

– Forbidden
This is the same as not having the Mutual TLS module enabled. Requests through the Rally mTLS URL will be
rejected.

– Optional
Requests will be accepted through either the Rally mTLS URL, with proper client authentication OR through the
Rally standard, non-mTLS URL.

NOTE
A subscription might choose the Optional mTLS policy if it has some network segments whose Rally
traffic always needs mutual TLS authentication, and other network segments that do not. In order to
prevent processes that require mutual authentication from circumventing that requirement, it is the
customer's responsibility to place them behind a network gateway that blocks access to the Rally
standard, non-mTLS URL.

– Required
Requests will only be accepted through the Rally mTLS URL, with proper client authentication.

WARNING
If you select the Required  mTLS policy without having a way to establish an mTLS connection to Rally,
you will lock yourself and all users out of the subscription. To recover, you would need to open a ticket
with Rally Support to request that the mTLS policy be set to Forbidden or Optional.

NOTE
If you change the mTLS Policy from Forbidden or Optional to Required, and your login is not using mTLS,
you will be immediately logged out once that change is saved. You would then need to log back in
on an mTLS-authenticated connection. If you change the mTLS Policy from Required or Optional to
Forbidden, and your login is using mTLS, you will be immediately logged out once that change is saved.
You would need to login on a non-mTLS connection.

Using Cross-Origin Resource Sharing
You can enable Cross-Origin Resource Sharing (CORS) for your subscription, and specify the origins to allow or disallow.

The CORS Allowed Origins list may contain the following:

• An empty list, which matches no CORS requests. This effectively disables CORS.
• The global wildcard * (asterisk), which matches any incoming origin in a CORS request. This may be included as part

of a list containing other origins.
• One or more specific origins, in a comma-separated list.

Here are some examples of origins.

• Fully-qualified origin, where the incoming origin must match the schema, host, and port exactly:
http://cvlappxv20148.silver.com:8081

• Origin with wildcard host. The incoming origin must match the schema and port exactly, but the incoming host can be
any host:
http://*:3000

 167

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

For example:
match:      http://good.domain.com:3000

match:      http://bad.hacker.com:3000

mismatch:   https://bad.hacker.com:3000

mismatch:   http://bad.hacker.com:3123

• Host as an IP address. For example:
https://192.6.1.24

• Host-only origin. The incoming origin must only be a host as well to match:
– good.domain.com

For example:
match:      good.domain.com

mismatch:   http://good.domain.com

– *.domain.com

For example:
match:      bad.domain.com

mismatch:   http://bad.domain.com

• You can combine fully-qualified schemas and ports with a wildcard host.
– http://*:8080

For example:
match:    http://whatever.com:8080

mismatch: https://whatever.com

mismatch: http://whatever.com:8012

– http://*.acme.com

For example:
match:     http://whatever.acme.com

mismatch:  http://whatever.acme.org

Wildcard rules:

• You cannot specify a wildcard schema or port.
invalid:  *://my.domain.com

invalid:  http://my.domain.com:*

• The host can be a full wildcard or the first host component can be a wildcard.
valid:  *

valid:  *.acme.com

• The host cannot have a wildcard for secondary components or wildcards cannot be embedded in a component.
invalid:  my.*.com

invalid:  good.do*ain.com

Managing Your Workspace
A Rally subscription can consist of multiple workspaces. Each workspace can be subdivided into multiple projects. A
workspace administrator is delegated and authorized by the subscription administrator for each workspace.

Once authorized for a workspace, the workspace administrator has the following capabilities:

 168



 Rally®

• Workspace customization: You can edit workspace details. For example, you can customize schedule and state names
as well as names of portfolio items. All of the customizations that you make are available across each project/team in
the workspace. This helps with data roll-ups and reports that you need across the value stream.

• Workspace and project configuration: You can create, edit, and read projects contained within the workspace for which
you are an administrator.

• Workspace rights: You have full rights to all work items of the workspace.
• Manage projects: You can create projects and child projects. Learn more.
• Manage users: Manage users for a subscription if the subscription administrator has provided permissions.

– Create users for the workspace
– Add users to each project in the workspace
– Add existing subscription users to the workspace
– Update all user profile fields for the workspace users
– Remove users from the workspace

This section includes the following topics:

• View the Workspace Summary Page
• Customizing a Workspace

View the Workspace Summary Page
The Workspace summary page allows you to view and modify a workspace.

It includes a pane on the left containing links to workspace information.

• Details for Workspace
The workspace detail page lists some, but not all, information regarding this workspace. This is the default page
displayed.
Workspace information is divided into these areas:

General General information about the workspace, such as Name, Description, and State (Open or Closed).
Work Product Prefixes These are the prefixes associated with each of the work product types:

• User Story
• Defect
• Task
• Test Case
• Defect Suite

Units & Planning • The units being used for the Plan Estimate and Task Estimate .
• Whether the workspace restricts the ability to create or modify release or iteration timeboxes. Learn

more.

Required parent fields Whether you require user stories or portfolio items to have a parent. Learn more.
• Projects

The projects that are part of this workspace. Learn more.
• Fields

The workspace Fields page lets you manage user fields. Learn more.
• Tags

The workspace Tags page lets you manage tags that are available to your users. Learn more.
• Revisions

The workspace Revisions page displays all revisions related to the current workspace.

 169



 Rally®

– Any direct edit or update of a workspace
– Changing a work item field to required or optional
– Changing a work item field to hidden or visible

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select one of the links on the left pane to view aspects of the workspace:

• Details for Workspace
• Projects
• Fields
• Tags
• Revisions

• You can select the number of items to include on each page, using the Show drop-down list on the lower left
side of the page. Possible values are 25, 50, 100, or 200.

• You can search for text across all revisions. For example, enter New Field to search for field creation entries.

5. To see more details about the workspace, select Actions, Edit.

Print Workspace Details
You can print a report of the workspace details.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select Actions, Print Details to print the workspace details.

Customizing a Workspace
A workspace administrator can uniquely configure each workspace. Settings are applied to all projects created within the
specified workspace. Each edit to the workspace generates a revision. Revisions can be viewed from the Revisions link in
the left pane.

Workspace customization is divided into these main areas:

• General
• Work Product Prefixes
• Units & Planning
• Required parent fields

Workspace General Settings

The general settings contain the following information for your workspace:

 170



 Rally®

• Name
• Description
• State (open or closed)
• Time Zone
• Date Format
• Owner
• Default project access for new users
• Date/Time Format
• Notes

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. Edit your workspace general fields. The labels on required fields are highlighted in red.

Name The name of the workspace.
Description A description for the workspace.

State The workspace state is Open or Closed. You cannot delete workspaces. Instead, set the State to
Closed. Learn more.

Owner Select an owner from the drop-down list.
Default project

access for new users
Workspace and subscription administrators can set a preferred permission default for new users created
within a workspace. When creating a new user, administrators will see the selected permission for all
projects in the workspace inside the user editor window. You will still have the ability to change the
permissions for specific projects while creating the user. Learn more.

• Changing this setting will not affect the permissions of existing users.
• When creating a new user in a different workspace, permissions are still provided in the workspace

that has this setting enabled.
• If a project administrator creates a new user in a workspace that has this setting enabled, the new

user will be provided permissions to all projects, including projects the administrator may not have
access to.

Possible values are:

• No Access (the default value)
• Viewer
• Editor

Time Zone Time zones are set at the workspace level. Dates are treated as a specific, fixed point in time, not a
calendar date. This allows for consistency with distributed teams. The workspace time zone is not
necessarily the local server time zone.

Timeboxes start at midnight and end one second before midnight in the workspace time zone. Any dates
displayed in list views include the time and time zone abbreviation in the workspace time zone. Emails
and notifications are sent in the last time zone the user was in while logged into Rally.

Date Format The format that will be used in the workspace for dates. Select a format from the drop-down list.

 171



 Rally®

Date/Time Format The format that will be used in the workspace for date and time. Select a format from the drop-down list.
Workdays Workdays are set at the workspace level. Workdays are defined by default as Monday, Tuesday,

Wednesday, Thursday, and Friday.

Charts and reports do not include non-workdays.

Rank Method There are two possible methods for ranking your work items:

• Manual Ranking uses numbers to establish relative priority within a group of work items.
• Drag & Drop Ranking uses position to establish relative priority of a work item on a particular page.

Learn more.
Enable Time Tracker Select to enable the Rally Time Tracker, which extends Rally with timesheets and timesheet reports.

Learn more.
Enable Build

and Changeset
Select Enable Build and Changeset for your workspace to allow Rally connectors to receive
information about changesets and build processes. Learn more.

Automatically unblock
Portfolio Items

with state updates

The state of a portfolio item changes when the work item is moved to a new column on the Portfolio
Kanban board or when the State field is manually updated. At the workspace level, you can determine if
a block is removed from the portfolio item when the state changes. By default, this option is enabled and
portfolio items are automatically unblocked when the state is updated.

Notes The Notes field is a rich text field, with display and formatting options.

NOTE
Rich text fields have a 32,768 character limit, including formatting
(html tags, bulleted lists, formatting copied from Microsoft applications,
and so on). If you receive a warning about being over the character
limit, you can either reduce the formatting or use the Remove Format

button to remove all formatting.

6. Select Save & Close, or continue editing other workspace settings.

Workspace Work Product Prefixes Settings

As the subscription or workspace administrator, you need to configure each work item type with a unique prefix or tag to
help you identify the type of work item at a glance. For example, set up user stories with a prefix of US, so a user story
would look like this: US1103. You can set defects with a prefix of DE, so a defect would look like this: DE0415.

The prefix can be an alphanumeric entry with a maximum length of 10 characters. All special characters are allowed.
Each of these fields can be changed after the workspace has been started and data exists. When you edit the workspace
in progress, the work item prefixes are updated immediately.

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. In the Work Product Prefixes section, enter the desired prefix into the corresponding work item text box. You can

customize an ID prefix for:

 172



 Rally®

– User Story
– Defect
– Defect Suite
– Test Case
– Task

NOTE
You can customize the prefixes of portfolio items by editing the Portfolio Item Type field.

6. Select Save & Close, or continue editing other workspace settings.

Workspace Units and Planning Settings

You can specify the increments of measurement applied to work effort at a release and iteration level within your
workspace. You can also specify if the workspace restricts who can modify release and iteration timebox settings.

Units are alphanumeric fields. All special characters are allowed. You can edit units after data has been already recorded
in your project; however, the new units label will not be applied to previous data. The new label will only be applied to
quantities created or edited after the change was made. Examples of units include units, points, hours, and days.

Restricting timebox management removes the ability of project administrators and project editors to create or modify
release or iteration timeboxes. By default, subscription administrators, workspace administrators, project administrators,
and project editors have this ability. Selecting Restrict Timebox Managment removes the ability from project
administrators and project editors. You can then add Timebox Admin permission to specific users. For more information,
see Timebox Administration.

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. In the Units & Planning section:

– Enter a label for Plan Estimate Units.
This label is applied when estimating user stories, defects, and defect suites. On the Release Status page, the first
letter of your entered value displays in a column header icon of the Plan Estimate column. Hover over the icon and
the full text of your estimate label ( Points ) displays.

– Enter a label for Task Estimate Units.
On the Release Status page, the first letter of your entered value displays in a column header icon of the Task
Estimate column. Hover over the icon and the full text of your estimate label (Hours) displays.

6. In the Units & Planning section, select the Restrict Timebox Management check box to restrict release or
iteration timebox creation, deletion, or update.

7. Select Save & Close, or continue editing other workspace settings.

 173



 Rally®

Workspace Required Parent Fields Settings

You can require a parent on user stories or portfolio items. This means that Rally will require (and enforce) user stories or
portfolio items to have a parent, whether it is a portfolio item or another user story. Unified Parent means that it applies to
all usages, including administration and WSAPI.

IMPORTANT
If you require parents for user stories or portfolio items in a workspace, users will not be able to save a new user
story or portfolio item without a parent. Users will not be able to save edits on user stories or portfolio items that
were previously created without parents until they assign a parent.

These requirements will be placed on API transactions as well. Once you have configured Rally to require work items to
have a parent, this will be the case in all Rally transactions.

NOTE
You can also edit a workspace directly from the Workspace summary page. Select inline Edit

for the workspace you want to edit.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. If you want your user stories to require a feature or user story parent, select Require Unified Parent on User Story.
6. If you want your portfolio items to require a higher-level portfolio item parent, select the corresponding Require Parent

on Portfolio Item Type.
7. Select Save & Close, or continue editing other workspace settings.

Workspace Admin Capabilities Settings

A workspace administrator can set a number of days after which to purge items in the Recycle Bin. This information is
also displayed for users on the Recycle Bin page.Once this is enabled, the Recycle Bin is checked daily. Any items that
have been in the Recycle Bin longer than the number of days specified are permanently deleted from Rally.

NOTE
The subscription administrator must enable this capability. Learn more.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select Actions, Edit.
5. In the Purge Recycle Bin section, select the Enable check box.
6. Enter the number of days to keep items in the Recycle Bin before purging. The default is 30 days.
7. Select Save & Close, or continue editing other workspace settings.

Work Rules
The Work Rules feature lets you create required or read-only field level rules for a chosen set of project-level artifacts.

 174



 Rally®

You can create work rules for Work Items and Portfolio Items. Work rules for Work items are triggered as they transition
to the configured schedule states while work rules for Portfolio Items are triggered as they transition to the configured
states. 

Work rules for Work Items can apply to stories, defects, defect suites, and test cases. Work rules for Portfolio Items can
apply to any portfolio items defined in your Rally subscription.

You can view work rules that are applied to artifacts from the following pages:

• Team Board
• Portfolio Kanban

You can also view them in the full detail pane for each item:

Work Rules can be applied at the workspace level or at the project level. Work rules that are created for parent projects
can cascade to child projects. You can edit a cascading work rule only from the workspace or project where the rule was
created.

A required field-level work rule ensures that the user completes the field before moving the artifact from one state to
another beyond certain states. A read-only work rule ensures that the user cannot edit the field after the artifact is past
certain states.

You can configure errors and warnings for work rules.

• Error: Restricts the movement and displays a warning if a work rule is violated and provides information on the
violation.

• Warning: Displays a warning if a work rule is violated and provides information on the violation.

Additionally, you can edit, delete, disable, and re-enable work rules.

Roles and permissions for Work Rules

You must be a subscription administrator, workspace administrator, or a project administrator to create, delete, and update
work rules.

• Subscription administrators and workspace administrators can create rules globally for an entire workspace and for
individual teams within that workspace.

• Project administrators can create work rules that apply only to their projects and cascade the work rules to lower-
level projects, if they have the appropriate permissions for those projects. Project administrators cannot create work
rules for workspaces and portfolio items.

Your workspace administrator must enable project administrators to manage work rules. Select Workspaces and
Projects, Workspace, Admin Capabilities and ensure that the Project Admins Can Manage Work Rules field is set to
Yes.

For more information on managing workspaces, see Managing Your Workspace.

Best Practices for Work Rules

The Work Rules feature can improve reporting and audit quality as work items move across states. Rally recommends the
following best practices for work rules:

• Discuss the work rules with your teams before you implement them.
• Make sure that you communicate workspace-level work rules to the team so that users understand the impact to their

work items.
• Before creating project-level work rules, use the Show Inherited  toggle in the Work Rules overview page to view the

defined items.
• Ensure that your work rules have meaningful titles and consider how the rules might impact in-progress work items.
• You can use the Created By in the Work Rules overview page to identify, collaborate, and resolve work rule conflicts.

 175



 Rally®

For more information on the Show Inherited toggle and the Created By field, see  Create a Work Rule.

Create a Work Rule
You must be a subscription administrator, workspace administrator, or a project administrator to create a work rule for a
workspace or for a project.

You can configure required or read-only field level rules work rules for Work Items and Portfolio Items. Each rule can be
applied to a chosen set of project-level artifacts.

 176



 Rally®

NOTE
The process for creating, editing, and deleting a Read-only Work Rule is the same as the process for a Required
Work Rule.

1. Navigate to and select the workspace or project for which you want to create a rule. This procedure describes the
process for creating a required work rule at the project level. For more information on viewing the projects in your
workspace, see View All Projects as a Workspace Administrator or Subscription Administrator.

2. On the project configuration page, select Work Rules.

3. On the Work Rules page, select + Create Work Rule. You can create a Read-only Work Rule or a  Required Work
Rule.

4. Select the type of work rule and in the That affects field, choose if the work rule applies to Work Items or to Portfolio
Items. Work rules for Portfolio Items can only be created for one portfolio item at a time.

5. On the Work Rules page for the project or workspace, enter the rule that you want to create in the And is named field.
The text that you enter displays when the rule is broken.

6. Use the toggle in the This rule applies to field to apply to the work rule to the project or cascade it to the child
projects. This toggle is not available if you are creating a work rule for a workspace.

7. In the When this type is changed field, select the types of artifacts for the rule.

8. Next, in the And the state is field, select the Scheduled State. You cannot select all states to apply to a rule. You can
select a group of states to apply to the work rule. 

9. In the  Enforce that these fields are read-only field, choose the field (or fields) you want to enforce as part of your
rule and select Apply. 

10. In the Breaking the rule results in a  field, select if this rule is an Error or a Warning.  A Warning displays a
message and allows the user to move the card or change or update the state by editing the item. An Error restricts the
movement of the card until all violations are resolved.

11. After you have finished entering all the information for your work rule, select Create.

12. The overview page for Work Rules displays the following information.

• Show Inherited: Defaults to displaying the work rules created for the project. Use the Show Inherited toggle to
include other work rules inherited from the workspace or cascaded from the project hierarchy.

• ID: Displays the ID of the work rule.
• Enabled: Displays if the work rule is active in the workspace or the project.
• Name: Displays the title of the work rule.
• Source: Displays the project or workspace that the work rules applies to and if the work rule cascades to child

projects.
• Rule Summary: Displays a summary of the work rule.
• Created By: Displays the name of the person who created the work rule along with the date and time stamp.

Use the information in this field to contact the creator of a work rule and resolve any conflicting rules if you have
workspace administrators and project administrators creating rules at different levels.

• Type: Displays the type of work rule, that is, a work item or a portfolio item.
• Enforced With: Displays if the work rule is enforced with an error or a warning.

 177



 Rally®

Edit a Work Rule
Use the following procedure to edit a work rule.

1. Select Settings for the workspace or project where you want to edit a rule.

2. Select Work Rules to view the Work Rule List page.

3. Select the Gear

next to the work rule and select Edit. You can also select the ID of the work rule.

4. On the Work Rules page for the specific rule, enter the changes that you want to make to an existing rule.

5. Select Save to retain the changes. Select Discard to remove a change or Cancel to return to the Work Rules page.

6. Select Revision History to view a list of changes for a specific work rule.

Disable a Work Rule
Use the following procedure to disable and re-enable a work rule.

1. Select the workspace or project where you want to disable a rule and then select Settings.

2. Select Work Rules to view the Work Rule List page.

3. Select the Gear

next to the work rule and select Disable.
You can re-enable a work rule by clicking the Gear

 next
to the rule and selecting Enable. You can also disable or enable a work rule by clicking on the icon in the Enabled
column. 

 178



 Rally®

Delete a Work Rule
Use the following procedure to delete a work rule.

1. Select the workspace or project where you want to delete a rule and select Settings.

2. Select Work Rules to view the Work Rule List page.

3. Select the Gear

next to the work rule and select delete. If a work rule is deleted, this action cannot be undone.

View Revision History for Work Rules
Use the following procedure to view the version history for a work rule.

1. Select the workspace or project to enter the Settings menu.

2. Select Work Rules to view the Work Rule list page.

3. Select the Gear

next to the work rule and select View Revision History.

4. The Revisions page displays the history for the rule and other supporting details.

5. You can also select the ID on the Work Rules List page to open the work rule and select the Revision History button
to view the history for the rule. 

Creating and Customizing Work Item Fields
A field helps describe the characteristics of a specific work item type, such as Name, Description, Priority, or Owner.
You can customize a field to be visible or hidden to the workspace or project, required or optional, and unique to a work
item type.

You may edit some values of the standard work item fields provided by Rally, and create your own custom fields to meet
your development needs. To manage, edit, or create fields, you must have subscription or workspace administrator
permissions.

This section includes:

• View Fields
• Edit Fields
• Delete Fields
• Manage Field Visibility for Workspaces and Projects
• Create Custom Fields
• Auditing Custom Field Usage

 179



 Rally®

View Fields

The Fields page provides information about all fields that are associated with a work item type. You can view the Fields
page from a workspace or project perspective. Fields data varies according to the scope to which you are viewing the
field.

Fields are presented by work item type, such as defect, user story, and task. To view fields for a specific work item
type, use the Type drop-down list and select a type to display. The list of fields associated with the selected work item
automatically refreshes.

Fields that are used internally are not displayed on this page.

Rally provides different types of fields for various uses. You cannot change the type of a field once it has been created.
See the list below for a description of each type.

Boolean A field with options for true or false. It displays as a check box where a checked box indicates true and an
unchecked box indicates false.

Date A calendar icon

( )
available in detail editors and list views. When a date is chosen, it displays in text format next to the
calendar. Custom date fields cannot be displayed on cards.

Decimal A number with a maximum of six digits before and three digits after the decimal point.
Drop-Down List A field that contains a series of strings or textual information. Users can select a value from the list.
Drop-Down List

(Multi-Value)
A field that allows users to select more than one value from a list.

Drop-Down List (User) A field that allows a selection from your Rally user list.

NOTE

• User-type custom fields are not supported in timesheets.
• User-type custom fields are not selectable in reports.

A list of your Rally users displays for the field.

 180



 Rally®

Integer A number field with a maximum of nine digits.
String A field that accepts alphanumeric and special characters. Limited to 256 characters.

String fields can accept and display certain HTML tags.

Text A field with rich text formatting options. Text fields may hold up to 32 KB of data.
Web Link A field that allows you to embed a reference to an object in an external system. For example, if you use a

separate web-based case management tool or defect tracker, create a web link field to link your stories or
defects in Rally to the external item from within Rally. Once you have configured it, the Web Link field is
available for use when you edit a work item, or view the work item detail page.

When you view the detail of the work item, select the hyperlinked name of the external object to go directly
to the external page. Consider using the Rally Web Services API interface to populate the Link Label and
ID fields. For example, your case management tool might insert defects through Web Services that include
a reference back to the original case.

 181



 Rally®

• Provide the Name of the external object to use as a Link Label. (Optional)
• Enter the ID of the external object to be linked in the ID field, and save your entries.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select a work item type from the Type drop-down list.

6. Use the Fields page to:

• View all fields of a single work item type
• Sort fields by name, type, custom versus standard, required, and visibility
• Create custom fields
• Edit standard and custom fields

Edit Fields

There are several precautions to take when you edit fields.

• Shared fields are used across multiple work items. Editing these fields affects other work items, as well as other users
who include these fields in their notification rules or custom views.

• You cannot change a field's type.
• Some fields are required by default. If so, you cannot edit the field.
• Some fields cannot be marked as required due to Rally database constraints. For example, you cannot set the Parent

field or Feature field to be required. You can, however, use a workspace setting to require parents for user stories or
portfolio items. Learn more.

Changes to fields are recorded in the revision history. Changes to the visibility of a field in a specific project are in that
project's revision history, while global changes (such as creating a new field) display in the workspace revision history.

The following field attributes are available.
Name This name is used by the Rally application. For Rally fields, this name is already populated. This name is

not displayed in the Fields page, but does display in Create and Edit screens for administering work item
fields.

Display Name This is a text field allowing you to enter the name displayed to users of the workspace.
Type The type of field. Cannot be changed after a field is created.

Occurrences A calculated number that indicates how often a field is being used by work items in the workspace. Select
see occurrences to view a sortable table with information on those specific occurrences. You can also
download occurrences reports.

Required Require that the field be populated upon creation or edit. Marking a field Required has implications
for inline editing, multi-editing, and importing data. On some pages, the Create button is disabled when
a field is required to create a new work item; use the Create with Details button to create the work item.
Work items created before the requirement is enforced may have other fields edited without entering a
required value. In addition, existing integrations may fail if a field is marked Required after the integration is
in place.

Visible When accessed from the workspace, displays a single drop-down list that controls the visibility of the field
for all projects. If only some projects are set to view the field, it is set as Mixed. Choosing the Yes or No
options show or hide the field in all open projects after saving. When accessed from a project with child

 182



 Rally®

projects, two drop-down lists display. The top drop-down list controls visibility for the project the editor was
accessed from, while the lower drop-down list controls visibility to all child projects.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select a work item type from the Type drop-down list.

6. Select the gear

next to the field you want to edit, and select Edit.

7. Update the applicable field values.

8. Select Save & Close.

Delete Fields
You cannot delete a field, you can only hide it from view.

Alternatively, you can rename an existing field and repurpose it if you need another custom field of the same type.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select a work item type from the Type drop-down list.

6. Select the gear

next to the field you want to edit, and select Edit.

7. Select No in the Visible (All Projects) drop-down list.

 183



 Rally®

8. Select Save & Close.

Manage Field Visibility for Workspaces and Projects
You can set a field to be visible in the entire workspace, a single project, or a group of projects.

Fields visible to a project are available in:

• Work item detail editor
• Rally pages
• Apps
• Notification rules
• Web Services API

 184



 Rally®

NOTE

• Changing the project scoping on pages and inside of apps affects the availability of custom fields, depending
on their visibility settings.

• When you scope the Backlog page to a hierarchy of projects, fields that are visible in some child projects but
not others display.

• Queries from the Web Services API respect project visibility. Unless specified, queries use the default project
and scoping set in your profile.

• When using a connector with a supported version of the Web Services API, any fields fetched for are
returned, regardless of visibility settings.

Use the Visible section of the field editor to control which projects have access to use the field.

Where you access the Fields page from helps you determine if a field is visible or not in a specific project:

• From the workspace, fields available to all projects display a check mark in the Visible column. Fields available to
some projects but not others display Mixed in the column.

• From a specific project, the Visible column displays a check mark if the field can be used in that project.
• If viewing a project that has children, the Visible on the Child Projects column displays. A check mark is available if the

field can be used in all open child projects. Mixed displays if the field can only be used in some of the child projects.

You can create a field or can adjust visibility according to your needs.

Set a Field to be Used by the Entire Workspace

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace or project name.
4. Select the Fields link in the left pane.
5. Create or edit the field.
6. In the Edit Field window, set the Visible value to Yes.

All open projects have access to the field.

 185



 Rally®

Set a Field to be Used by a Single Project

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace or project name.
4. Select the Fields link in the left pane.
5. Create or edit the field.
6. In the field editor window, set the Visible In This Project value to Yes.
7. Repeat for each project you want to use the field in.

Set a Field to be Used by a Group of Projects in a Hierarchy

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace or project name.
4. Select the Fields link in the left pane.
5. Create or edit the field.
6. In the Edit Field window, set both Visible values to Yes.

The project you accessed the Fields page from, and all open child projects have access to the field.

Create Custom Fields

You can create your own fields to support your unique development process. You must be a subscription or workspace
administrator to create custom fields. As with most fields, you can have custom fields visible to the entire workspace, a
single project, or a section of the project hierarchy.

Consider the following:

 186



 Rally®

• The Required value of a custom field is set at the workspace level. If you create a custom field, and it is required, it is
visible and required in all open projects.

• Custom fields are not copied from between work item types when you convert one type to another.
• You may create a custom field from either project or workspace administrative pages. However, custom fields exist in

the database at the workspace level, while visibility may be controlled from either the workspace or project level.
• Where you create a custom field from can help you control its visibility. If you want only a few projects to have access

to a new field, create it from a specific project, or the top of the project hierarchy you want to use. If you want to hide a
new field from only a few projects, create it from the workspace level, and then set it to hidden in those projects.

• A field can only exist once in a workspace. Multiple projects can share a field, but use the same values and settings. To
create an independent field, it must have a different name.

• Rally standard fields (fields not created by an administrator) can be visible or hidden, but only at the workspace level.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select a work item type from the Type drop-down list.

6. Select New Field.

7. Enter values in the Name and Display Name fields.

You must enter a unique value for Name and Display Name. The Display Name appears in pages, editors, and other
locations. Fields have both a system name and display name.

8. Select the field type from the Type drop-down list.

For example, text, string, or boolean.

9. If you would like to require that users enter a value when creating or editing the work item, select the Required option.
This can only be set when the field is visible to all projects.

NOTE

• Users can still edit work items created before a requirement is saved without entering a value for a
required field.

• Some fields cannot be marked as required due to database constraints. Specifically, you cannot set the
Parent field to be required.

10. Set the visibility of the field according to your project or workspace needs.

11. Select Save & Close.

Auditing Custom Field Usage
You can audit custom field usage in your workspace or only for a specific custom field. You can also see a report of how
often a particular custom field has been used in work items in the last six or 12 months.

These reports can help you determine how and when custom fields are being used.

Audit Usage of an Individual Custom Field

You can download a field-level report to see which projects use a particular custom field.

 187



 Rally®

The number of rows in the report does not match the number listed in for project-level visibility. However, the report still
provides the data points needed to identify the custom field visibility for projects. This report:

• Contains closed projects. The displayed count in Rally is based on open projects only.
• Indicates how many projects match workspace-level the visibility settings of the workspace. Only projects with a setting

that differs from the workspace-level setting show as a unique row in the report.
• Does not include the visibility for every project. Any project ID or project name not listed in the report indicates that

these projects match the workspace visibility setting, which is listed in the top row.

The downloaded CSV file includes the following information:

Project ID Provides the unique identification number of the project or workspace.
Project Name Provides the name of the workspace or project. The project name appears when the project-level settings

differ from the workspace.
Level Indicates whether the field is visible in the entire workspace or a particular project.
State Indicates whether the workspace or project is Open or Closed.

Custom Field Name Name of the custom field.
Visibility Indicates if the field is Hidden or Visible

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace or project name.
4. Select the Fields link in the left pane.
5. Select a work item type from the Type drop-down list.
6. Select the Gear

next to the custom field you want to audit and select Edit.
7. In the Edit Field window, select the Export custom field usage for workspace link in the Usage in Workspace field

to download the CSV file.
8. Select Cancel to exit the Edit Field dialog box.
9. Use an application such as Microsoft Excel to view the downloaded CSV file.

Audit Usage of All Custom Fields in Workspace

You can download a workspace-level report of all custom fields that are currently being used and in which projects.

The number of rows in the report does not match the number listed in Rally for project-level visibility. However, the report
still provides the data points needed to identify the custom field visibility for projects. This report:

• Contains closed projects. The displayed count in Rally is based on open projects only.
• Indicates how many projects match workspace-level the visibility settings of the workspace. Only projects with a setting

that differs from the workspace-level setting show as a unique row in the report.
• Does not include the visibility for every project. Any project ID or project name not listed in the report indicates that

these projects match the workspace visibility setting, which is listed in the top row.

The downloaded CSV file includes the following information:

Project ID Provides the unique identification number of the project or workspace.
Project Name Provides the name of the workspace or project. The project name appears when the project-level settings

differ from the workspace.
Level Indicates whether the field is visible in the entire workspace or a particular project.

 188



 Rally®

State Indicates whether the workspace or project is Open or Closed.
Custom Field Name Name of the custom field.

Visibility Indicates if the field is Hidden or Visible

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select the Fields link in the left pane.
4. Select Export Workspace Custom Fields (All Types) to download the CSV file.
5. Select Cancel to exit the Edit Field dialog box.
6. Use an application such as Microsoft Excel to view the downloaded CSV file.

Audit Occurrences of a Custom Field in Work Items

You can use this field-level report to audit custom field usage in work items across your workspace to determine how
actively a custom field is being used. After you download the report, you can sort the report to see which values are most
commonly used for a custom field. Choose between a report for the last 6 months or for the last 12 months.

NOTE

• Boolean fields in Rally have a default value of FALSE. If a Boolean field has a value of FALSE, the report
assumes that it has not been actively selected and does not include the field in the report. Boolean fields
display in the report only when a user has actively selected a value of TRUE.

• Field values can only be retrieved on constrained attributes. String, text, and integer values are not retrieved.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace or project name.
4. Select the Fields link in the left pane.
5. Select a work item type from the Type drop-down list.
6. Select the Gear

next to the custom field you want to audit and select Edit.
7. In the Occurrences field, select either Export Occurrences: 6 months or Export Occurrences: 12 months to

download the respective report.
8. Select Cancel to exit the Edit Field dialog box.
9. Use an application such as Microsoft Excel to view the downloaded CSV file.

Configuring Objectives for Your Workspace
Use the following procedure to configure Objectives for your workspace.

Before users can define OKRs and associate work items, the workspace or subscription administrator must perform the
following tasks:

 189



 Rally®

• Enable OKRs for the Workspace
• Create OKR Administrators
• Customize Objective Levels
• Customize the State Field for the Objective Hierarchy Levels
• Create Custom Fields for Objectives

IMPORTANT
Finalize your configuration with all stakeholders before allowing anyone in your organization to create objectives.
Once users create objectives, you cannot delete or rearrange your hierarchy levels or change the associated
work type.

Learn more about OKRs and how they are used in Rally

Enable OKRs for Your Workspace
Use the following procedure to enable OKRs for your workspace and define the objective levels. You must be a
Subscription Administrator or a Workspace Administrator to create objective levels. 

To enable OKRs for your workspace:

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Fields link in the left pane.

5. Select Objective from the Type menu.

6. Select the Gear

then select Objective Hierarchy Level and select Edit.

7. Use the Add New button to create the objective types for your workspace. You can add up to five hierarchy levels for
each workspace. The Objective Types are created in descending order with the highest level objective at the top. For
more information on objective levels, see Customize Objective Levels.

 190



 Rally®

8. Select Save & Close.

Watch a short YouTube tutorial on administering OKRs in Rally.

Create OKR Administrators
Only users with the OKR Admin role can create, edit objectives and their key results, add interim targets, and the actual
values for tracking OKRs. Once they are created, everyone in your organization can view the objectives and associate
portfolio items to an objective.

By default, no user is assigned OKR Admin permissions. You must determine which users require OKR Admin
permissions. You must be a Subscription Administrator or a Workspace Administrator to add the OKR Admin role to the
permissions of a user.

Users with the OKR Admin role can perform the following actions:

• Create, edit, and delete an objective.
• Add, edit, and delete key results for an objective.
• Modify the confidence score of an objective.
• Modify the key results interim target schedule and values.
• Add actual key result values.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Users.

3. Select the gear

of the user you want to edit, and select Edit.

4. Navigate to the OKR Admin section and select the OKR Admin check box.

 191



 Rally®

5. Select Save & Close.

Customize Objective Levels
You can customize the names of your objective levels and the associated portfolio item type.

Rally lets you define your Objective levels that determine the following OKR characteristics:

• The types of OKRs you can use.
• The relationship hierarchy of your objectives.
• The portfolio item types can be associated with a specific objective level.

For example, you can create a three-level objective hierarchy that includes Strategic, Product, and Functional objectives.
In this case, Strategic objectives would be the highest level of your hierarchy, and Functional objectives would be the
lowest level. You can then define the type of portfolio item that can be associated with each objective hierarchy level:

• Strategic Objective - Strategy Portfolio Type
– Product Objective - Initiative Portfolio Type

• Functional Objective - Feature Portfolio Type

The names of these levels, portfolio item types, and the associated mappings can be unique to your organization.

IMPORTANT
Finalize your configuration with all stakeholders before allowing anyone in your organization to create objectives.
Once users create objectives, you cannot delete or rearrange your hierarchy levels or change the associated
work type. If you must make these types of changes after objectives have been created, you must delete
all existing objectives that are associated with the hierarchy level that you want to change. You must also
permanently delete those objectives from the Recycle Bin.

Before you create the objective hierarchy levels for your organization, you must envision your OKR process and how your
goals flow through your organization. 

Ask your organization the following questions:

• How many levels of objectives are needed to provide enough flexibility? Rally supports up to five hierarchy levels.
• What level of work (portfolio item) do you want to associate with each level of your objective hierarchy?
• Who in your organization needs to create and edit your objectives?

The ID Prefix field lets you define a custom prefix for the beginning of the FormattedID. For example, if an objective level
has a prefix of CO, objectives of that level are named CO1, CO2, and so on.

NOTE
When you edit the name of an objective level, it is updated throughout the workspace after users perform a page
refresh. However, any users that are viewing objectives of that type may see an error when you save your name
change.

 192



 Rally®

Once you are prepared to create your objective hierarchy levels, start from the lowest-level objective type first and then
create the upper-level types.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Fields link in the left pane.

5. Select Objective from the Type menu.
The fields that are specific to objectives are listed.

6. Select the Gear

next to Objective Hierarchy Level and select Edit.
The Edit Field dialog box opens.

7. Select Add New.

8. Enter a name for your Objective Hierarchy Level in the New Type Definition and select Add.
Start from the lowest-level objective type, and then create the upper-level objective types in a hierarchical order.

9. Optionally, change the ID Prefix used for the objective level.
Changes made to the Name or ID Prefix are saved immediately when you press Enter or move to a different field.

10. Select Edit

in the Associated Work Type field. Select the type of portfolio item to associate from the list.
You can only associate a portfolio type with a single objective type. Objective levels and portfolio item types have a 1:1
relationship.
Associating a portfolio type with an objective hierarchy level is recommended, but not required.

NOTE
After users create an objective and associate with an objective hierarchy level, the associated work type
cannot be changed.

11. Select Save & Close.

Customize the State Field for Objective Hierarchy Levels
You can customize the state model for each objective hierarchy level. The State field lets you define each available state
for each level.

Rally provides default values for the State field. As part of configuring OKRs for your workspace, you should define state
values that support the different state models for each objective hierarchy level. These values can be different for each
level.

The default values are:

Discovering Use this state to communicate that the objective is being considered.
Developing Use this state to indicate that you are refining the objective and its key results.
Measuring Use this state to indicate that an objective is actively being measured.

 193



 Rally®

Done Use this state to indicate that your objective is no longer being measured.
Use this state to ensure that users with the OKR admin role cannot edit the associated fields of the
objective.

Archived Use this state to indicate that the objective is no longer active. You can edit and delete an objective that is
an Archived state.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select Objective from the Type menu.
The fields that are specific to objectives are listed.

6. Select the Gear

next to State and select Edit.
The Edit Field dialog box opens.

7. Select the hierarchy level that you want to edit from the Type drop-down list.

8. Select the Name, Order Index, or Description of any state that you want to update and make your changes.
The Order Index determines the sequence flow of the states.

 194



 Rally®

You can use HTML for the Description attribute.

9. Select the Enabled column for a state and select Yes or No to enable or disable that state.

10. To delete a state, select the check box for that state and select Delete.
You cannot delete a state if there is an objective currently using that state.

11. Select Save & Close.

Create Custom Fields for Objectives
You can create your own fields to support your unique development process. As with most fields, you can have custom
fields visible to the entire workspace, a single project, or a section of the project hierarchy.

NOTE
You must be a Subscription Administrator or a Workspace Administrator to create custom fields.

Consider the following factors:

• The Required value of a custom field is set at the workspace level. You cannot create a custom field at the project level
or for a child project.

• If you create a custom field, and it is required, it is visible and is required in all open projects.
• Custom fields are not copied from between work item types when you convert one type to another.
• A field can only exist once in a workspace. Multiple projects can share a field, and use the same values and settings.

An independent field must have a different name.
• Rally standard fields (fields not created by an administrator) can be visible or hidden, but only at the workspace level.

1. Select Setup

from the  Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace or project name.

4. Select the Fields link in the left pane.

5. Select Objective from the Type drop-down list.

6. Select New Field.

7. Enter values in the Name and Display Name fields.

You must enter a unique value for Name and Display Name. The Display Name appears in pages, editors, and other
locations. Fields have both a system name and display name.

8. Select the field type from the Type drop-down list.

For example, text, string, or boolean.

9. If you would like to require that users enter a value when creating or editing the work item, select the Required option.
This can only be set when the field is visible to all projects.

NOTE

• Users can still edit work items that are created before a requirement is saved without entering a value for
a required field.

• Some fields cannot be marked as required due to database constraints. Specifically, you cannot set the
Parent field to be required.

 195



 Rally®

10. Set the visibility of the field according to your project or workspace needs.

11. Select Save & Close.

Customizing Portfolio Item Types
Administrators can customize the portfolio item types used for your subscription..

You can customize the fields used in portfolio item types, change the default names of your portfolio item types, and add a
new type to the hiearchy. Customizing your portfolio item types should be done after meeting with stakeholders to ensure
that your organization has what they need to manage their portfolio in Rally.

NOTE
Many organizations prefer to limit the users who can edit portfolio items. To prevent others from editing portfolio
items, create portfolio items in a project higher in the hierarchy than the team projects. Set edit permissions only
for those who modify portfolio items.

This section includes the following topics:

• Portfolio Item Types
• Rename Portfolio Item Types
• Customizing Fields for Portfolio Item Types

Portfolio Item Types
You can customize portfolio item types based on the terminology your company uses as well as organize them in a
hierarchy to group marketable features.

You organize portfolio item types in a hierarchy that indicates the level in which they are considered and defined. For
example, the highest level portfolio item type could be managed and defined only by product management teams and
strategy teams. Higher-level portfolio items guide the relationships of lower-level portfolio item children that further define
the goal. Conversely, portfolio items below a certain level provide a way to clearly define the increment of values to build
to deliver the higher-level portfolio item. Lower-level portfolio items tell the team what successful completion means.

Only the lowest level of portfolio item type flows through execution teams to be implemented in a series of user stories.

Within your organization's workspace, you can customize the names of the portfolio item types you use as well as
customize the fields that are used on portfolio types.

NOTE

• Many organizations prefer to limit the users who can edit portfolio items. To prevent others from editing
portfolio items, create portfolio items in a project higher in the hierarchy than the team projects. Set edit
permissions only for team members who modify portfolio items.

• When defining custom names for portfolio item types, we recommend avoiding names that correspond
to Rally WSAPI endpoints. When you create a new portfolio item type, a new endpoint is generated for
the REST API that can cause conflicts with the existing endpoints. See this Knowledge Base article for a
complete list of names that you should avoid.

Each portfolio item type defines:

• A level of granularity appropriate for its respective audience. The highest-level portfolio item type maps to the highest-
level of the product leadership in your organization.

• An order of magnitude for its duration to complete (the higher the magnitude, the longer the duration). For example,
portfolio items at the lowest level should be small enough in effort to be delivered within a one to three-month release.

• A business process to go from idea to delivery.

All portfolio items of the same type should share the same level of granularity, duration, order of magnitude.

You can have one set of portfolio item types per workspace.

 196

https://knowledge.broadcom.com/external/article?articleId=113749


 Rally®

NOTE
When working with portfolio items, Rally assumes that each workspace represents a single portfolio. If your
workspaces each represent a product or a program and you want to track them as a portfolio, you need to
migrate the data from these workspaces into a consolidated workspace. Rally provides professional services to
perform the data migration. We also need to understand which scenarios may call for tracking multiple portfolios
(each in its own workspace).

Types display in descending order. For example, by default the highest level (3) are themes, level 2 are initiatives, and
level 1 are features.

Rename Portfolio Item Types
You can customize the names your portfolio item types.

You can modify the name and ID prefix of a portfolio type, but not the order in the hierarchy.  If you want to change the
hierarchy order of the portfolio item types, you must do so by renaming them.

You can only delete a type if it has no associated portfolio items.

Here are several examples of ways you can change the order of your portfolio item types hierarchy:

• Use all new type names
– Add level 4 and higher type names to the type list and change the names for the lower-level types.

• Re-assigning type levels
– If you wish to move an existing type to a different level, for example, to change level 2 to level 3:

a. Change the level 2 type's name to the new name.
b. Change the level 3 type's name to level 2's original name.

– Insert a new level and move existing levels:
a. Add the new level.
b. Change type names for each of the existing affected levels to a unique, temporary name.
c. Change the temporary names to the permanent names.

The order of types is assigned by the system, and you cannot change it. Changes made to the Name or ID Prefix are
saved immediately when you press Enter or move to a different cell. If there is a validation error when you modify types,

 197



 Rally®

the cell has a red mark in the corner and an error message displays above the cell. If there is a validation error on a value,
the value will not be saved.

The ID Prefix field lets you set a custom letter to display at the beginning of the work item's FormattedID. For example, if a
theme portfolio item has a prefix of T, work items in the workspace will be named T1, T2, and so on.

NOTE
When you edit the name of a portfolio item type, it is updated throughout the workspace after users perform a
page refresh. However, any users that are viewing portfolio items of that type may see an error when you save
your name change.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Fields link in the left pane.

5. From the Type drop-down list, select Portfolio Item.

6. Select the Gear

next to the Portfolio Item Type field and select Edit.

7. In the Drop Down List Values section, select the name you want to change and enter a new name.

8. To change the ID Prefix that corresponds to the name, select the ID Prefix that you want to change and enter a new
prefix.

9. Select Save & Close.

Customizing Fields for Portfolio Item Types

The fields that you use for portfolio item types help you define your portfolio as well as the process you use to manage
your portfolio.

 198



 Rally®

Portfolio item types include a few default fields for you to use. You should customize the values for these fields specifically
for your organization. For example, you can customize the State field for each of your portfolio item types to indicate the
process you use to refine your portfolio.

You should review the default fields and edit their values where appropriate for your organization.

You can also add custom fields. Learn more.

This section includes the following topics:

• Customizing the Portfolio Item Preliminary Estimate Field
• Customizing the Portfolio Item Investment Category Field
• Customizing the Portfolio Item State Field
• Default Portfolio Item Fields

Customizing the Portfolio Item Preliminary Estimate Field

Use preliminary estimates to gauge the size of a portfolio item during planning. Use relative sizes and values that align
with your organization.

You can add, modify, or delete preliminary estimate sizes and their associated numeric values. Values must be whole
numbers.

When you edit the Name or Value fields, they are updated throughout the workspace after users perform a page refresh.
If you delete a value used for preliminary estimate field, you are asked to resize any features that are used the deleted
value.

There is no relationship between the preliminary estimate field and plan estimate field. If you want these to be related, you
must assign values accordingly. Preliminary estimates will not roll up.

The default options and their Fibonacci values are:

• XS (13)
• S (20)
• M (40)
• L (100)
• XL (250)

Customize Values for the Preliminary Estimate Field

You can customize the list of existing values for the Preliminary Estimate field.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Fields link in the left pane.
5. Select Portfolio Item from the Type drop-down list.
6. Select the

Gear
next to the Preliminary Estimate field and Edit.

7. Select the existing value of the Name, Value, or Description and enter a new value.
8. Select Save & Close.

 199



 Rally®

Add or Delete a Value for the Preliminary Estimate Field

You can add or delete values for the Preliminary Estimate field.

When you add or delete values for the Preliminary Estimate field, you may also want to rename the existing values to
keep a cohesive order for the values you use. You cannot reorder the list, you can only rename and edit existing values
within the list.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Fields link in the left pane.
5. Select Portfolio Item from the Type drop-down list.
6. Select the Gear

next to the Preliminary Estimate field and Edit.
7. Choose one of the following:

– Select Add New to add a new value. After you add a value, you can edit it.
– Select the Gear

next to a value to delete it.
8. Select Save & Close.

Customizing the Portfolio Item Investment Category Field

You can customize the list of choices that users can choose from when adding a value for Investment Category field for a
portfolio item.

You can use investment categories to track portfolio allocations. These portfolio allocations are a way for your portfolio
committee to track that development work is aligned with the amount of funding you allocated to each investment
category. This is especially helpful to protect small portfolio investments that have a tendency to see their development
resources borrowed by other groups. By defining investment categories, you help keep the appropriate development
resources focused on where the business expects value delivery.

Users assign portfolio items to investment categories for features and initiatives to ensure they align with business goals.
The default values are:

• Short term growth
• Strategic growth
• Cost savings
• Maintenance

You can change these values or add new values; however, you cannot delete investment categories that are already
assigned to portfolio items.

 200



 Rally®

Customize Values for the Investment Category Field

You can customize the list of values that is presented to users for the Investment Category field drop-down list.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Fields link in the left pane.
5. Select Portfolio Item from the Type drop-down list.
6. Select the Gear

next to the Investment Category field and select Edit.
7. In the Edit Field dialog box, select the value that you want to rename from the list of values.
8. In the Value text box, type a new name for the selected value.
9. Optionally, select the up or down arrows

to move the value up or down the list of choices.
10. Select Save & Close.

Add or Delete a Value for the Investment Category Field

You can add or delete available drop-down list values for the Investment Category field.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select the hyperlinked workspace name where you want to edit the field.
4. Select any hyperlinked workspace name from the Workspace summary page.
5. Select the Fields link in the left pane.
6. Select Portfolio Item from the Type drop-down list.
7. Select the Gear

next to the Investment Category field and select Edit.
8. Choose one of the following:

– To delete a value from the list, select the value and then select Trash

from the Actions column.
NOTE
You cannot delete investment categories that are already assigned to portfolio items.

– To add a new value to the list, type your new value in the provided text box and select Add Value.

 201



 Rally®

9. Select Save & Close.

Customizing the Portfolio Item State Field

You can define different states for each of your portfolio item types.

By defining states for each of your portfolio item types, you have the flexibility to have a different process for the
progression of each type. Higher-level portfolio items such as strategies may have a small number of states. Lowest-level
portfolio items may need more states to indicate the process in which associated work is delivered.

Rally provides default values for state—the same default values for each portfolio item type. As part of your portfolio
management process, you should define different values from the defaults we provide, as well as default values set for
each portfolio item type. You may choose to not have any values for the State field. You can have only 20 state values per
type.

On the Portfolio Kanban page, your portfolio item states are shown as columns. You can also use this field to filter or sort
portfolio items by state wherever you view portfolio items. Learn more.

You can configure the following attributes for each State field:

Field Description

Name Change these names to suit your business needs. The default
values are Discovering, Developing, Measuring, and Done. State
names are unique for a single type. You can reuse state names
across multiple types but must define them for each type.

Order Index Determines column order in the Kanban. For example, 1 is
the first column, 2 is the second column, and so on. Reorder
the column order by changing the values of each. Select the
arrow immediately next to the field name to sort by ascending or
descending order.

 202



 Rally®

Field Description

WIP (Work-in-Progress) Limit Set WIP limits to determine how many portfolio items should be
in each state. Set a WIP limit of -1 for no WIP limit. A value of 0
means you cannot have any portfolio items in this state. You can
set a maximum of 200 portfolio items per column. The No Entry
column has a maximum of 50 entries.
WIP is administered by type for each workspace. If WIP is
exceeded in a state column, the column turns red.
Specify a WIP limit for each state in each portfolio item type.

Description Optionally, enter a textual description of the State value. This
description displays on the Portfolio Kanban board as an Exit
Agreement.

Enabled Specify whether the State value displays in drop-down menus on
editors and in the Portfolio Kanban board.
If you disable a State value, it continues to display in the portfolio
item until changed. This allows historical data to be stored for the
portfolio item.

Modify the State Fields for a Portfolio Item Type

You can modify the state fields for each portfolio item type in your hierarchy.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Fields link in the left pane.
5. Select Portfolio Item from the Type drop-down list.
6. Select the Gear

next to the State field and select Edit.
7. In the Edit Field dialog box, select the portfolio item type that you want to work with.

 203



 Rally®

The state fields for the portfolio type display in rows.
8. To modify a state attribute, hover over the attribute you want to modify and select Edit

next to the attribute. Type a new value. For the Description attribute, you can use HTML.

Attribute Description

Name Change these names to suit your business needs. The default
values are Discovering, Developing, Measuring, and Done.
State names are unique for a single type. You can reuse state
names across multiple types but must define them for each
type.

Order Index Determines column order in the Kanban. For example, 1 is
the first column, 2 is the second column, and so on. Reorder
the column order by changing the values of each. Select the
arrow immediately next to the field name to sort by ascending
or descending order.

 204



 Rally®

Attribute Description

WIP (Work-in-Progress) Limit Set WIP limits to determine how many portfolio items should
be in each state. Set a WIP limit of -1 for no WIP limit. A value
of 0 means you cannot have any portfolio items in this state.
You can set a maximum of 200 portfolio items per column. The
No Entry column has a maximum of 50 entries.
WIP is administered by type for each workspace. If WIP is
exceeded in a state column, the column turns red.
Specify a WIP limit for each state in each portfolio item type.

Description Optionally, enter a textual description of the State value. This
description displays on the Portfolio Kanban board as an Exit
Agreement.

Enabled Specify whether the State value displays in drop-down menus
on editors and in the Portfolio Kanban board.
If you disable a State value, it continues to display in the
portfolio item until changed. This allows historical data to be
stored for the portfolio item.

9. Select Save & Close.

Default Portfolio Item Fields

The following default fields are included for portfolio items.

Users with workspace administrator permissions can create and use custom fields for portfolio items as with other work
items.

Name Type Required

Archived Boolean N
Description Text N
Name String Y
Notes Text N
Owner Drop-down list N
Parent Chooser N
Planned End Date Date N
Planned Start Date Date N
Portfolio Item Type Drop-down list Y
Preliminary Estimate Drop-down list N
Project Drop-down list Y
Rank Decimal N
Risk Score Integer N
Tags Drop-down list N
Value Score Integer N
State Drop-down list N

 205



 Rally®

System-Defined Fields for Portfolio Item Types

These fields are system-defined fields for portfolio item types.

Name Type Required

Actual End Date Date N

Actual Start Date Date N

Creation Date Date Y

Formatted ID Integer Y

Last Rollup Date Date N

Percent Done by Story Count Decimal N

Percent Done by Story Plan Estimate Decimal N

Managing Tags
The subscription or workspace administrator may rename or archive tags to better organize and reduce clutter in the tag
list.

Since users can create their own tags, the list of available tags can become large over time. Learn more.

Rename Tags

When you rename a tag, its name on associated work items is changed in the tag list.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Tags link in the left pane.
5. Type the name of the tag in the text box and press Enter to locate the tag.
6. Double-click the tag name to edit it.
7. Rename the tag.
8. Select outside the tag name field to save your changes.

Archive Tags

When you archive a tag, you remove it from the tag list but you do not remove it from associated work items. Even though
it is archived, it is still available in all drop-down lists used for filtering page views, notifications, and reports.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Tags link in the left pane.
5. Type the name of the tag in the text box and press Enter to locate the tag.
6. Mark the check box to archive a tag, or clear the check box to retrieve a tag from the archive.
7. Select outside the check box to save your changes.

 206



 Rally®

Delete Tags

When you delete a tag, you remove it from the tag list and any associated work items. Any custom views that use a
deleted tag name will need to be edited to remove the invalid criteria.

IMPORTANT
There is no undo for deleting tags.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select any hyperlinked workspace name from the Workspace summary page.
4. Select the Tags link in the left pane.
5. Type the name of the tag in the text box and press Enter to locate the tag.
6. Select the Gear

and select Permanently Delete.

7. A warning message displays with the number of work items that use the tag. Select the Permanently Delete button.

Modifying Schedule States
Schedule State is a built-in drop-down field that is used to indicate progress and track performance.

The Schedule State field behaves slightly different from custom drop-down fields:

 207



 Rally®

• It can only have six values, two of which may be hidden or customized.
• Four of the values are non-modifiable (they cannot be edited or disabled):

– Defined
– In-Progress
– Completed
– Accepted

• There is a customizable value before Defined ("Custom 1"), and a customizable value after Accepted ("Custom 2").
• Schedule State values cannot be reordered. You can add one custom value before the standard four values, and one

custom value after.
• You can change one or both of the custom values.

 208



 Rally®

When you add custom values for the Schedule State field, your changes span across all work items that use the field.
When you change either custom value, work items are updated to reflect changes to the schedule state.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Fields link in the left pane.

5. Select a work item type from the Type drop-down menu. The work item types that include Schedule State are:

• Defect
• Defect Suite
• User Story
• Risk
• Test Set

6. Select the Gear

to the left of the Schedule State field and select Edit.

7. Select one of the custom values in the Drop Down List Values list.

8. Edit the value in the Value field.

9. Edit the value in the Legend field. This is the value that displays in the schedule state field.

10. Select the check box in the Enabled field.

11. Select Save & Close.

Close Projects and Workspaces
You cannot delete workspaces or projects. However, closing projects or workspaces can have the same effect since it
locks work items in those projects and reduces clutter from navigation and pickers.

Reasons for closing projects or workspaces:

 209



 Rally®

• Project or workspace that was created by accident or never used
• Stale project or workspace
• Completed project that no longer needs to be in project pickers and navigation

While you can use the global search for work items in closed projects, you cannot edit them. This is a way to archive items
and prevent users from modifying them. Items in closed projects that are associated to work items in open projects can be
viewed on the collection pages of the associated work item. Learn more.

Close Unused Projects

Some basics of closing a project:

• You must be a project, workspace, or subscription administrator.
• When closing a workspace, all projects must also be closed (this is a manual process).
• When closing a project, all child projects must also be closed.
• Reopening a child project requires its parent project and workspace to be open as well.
• Closing a project blocks all edits to work items or timeboxes except to change the project.
• Stories in closed projects will still have points reflected in portfolio item rollups.

Once a project has been closed, users will no longer be able to navigate to it. It will no longer display in the drop-down list
on the navigation bar or the project picker, so users will no longer be able to look at all work items and navigate to pages
within those projects. You will still be able to access work items through search or with a direct link to the work item.

Changes to projects are recorded in the revision history.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select the project you want to close.
4. Select Actions, Edit.
5. In the Edit Project dialog box, set the State to Closed.
6. Select Save & Close.

Close Unused Workspaces

Some basics of closing a workspace:

• You must be a workspace or subscription administrator.
• When closing a workspace, all projects must also be closed (this is a manual process).
• Reopening a child project requires its parent project and workspace to be open as well.
• Closing a workspace blocks all edits to work items or timeboxes except to change the project.

Once a workspace has been closed, users will no longer be able to navigate to it. It will no longer display in the drop-down
list on the navigation bar or the project picker, so users will no longer be able to look at all work items and navigate to
pages within those workspaces. You will still be able to access work items through search or with a direct link to the work
item.

Changes to workspaces are recorded in the revision history.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.

 210



 Rally®

3. Select the workspace you want to close.
4. Select Actions, Edit.
5. In the Edit Workspace dialog box, set the State to Closed.
6. Select Save & Close.

View Closed Projects and Workspaces

You can filter your Workspaces & Projects page to show both open and closed projects. The default page does not show
closed workspaces and projects.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select the state you want to use from the State drop-down list.

– Open shows only open workspaces and projects.
– Closed shows only closed workspaces and projects.
– All shows both open and closed workspaces and projects.

4. Select Filter at the top of the page.

Enable Build and SCM Traceability
Rally connectors enable you to connect your Rally work items to your build and SCM work items.

You must be a workspace or subscription administrator to enable this feature.

Enable Enable Build and Changeset for your workspace to allow the following Rally connectors to receive information
about changesets and build processes.

• Rally VCSEIF (Version Control System Enterprise Integration Framework) connectors for these centralized VCS
products: Git, Subversion, Mercurial, and Microsoft TFS (TFVC). VCSEIF connectors require you to add a new
configuration whenever a new repository is created that you want to cover with a VCS connector.

• Rally Policy-Based VCS connectors for these distributed VCS products: GitHub and GitHub Enterprise, Bitbucket
Server and Bitbucket Cloud, and Microsoft TFS/VSTS (Git). Policy-based means that a configuration for the connector
can be expansive and cover repositories added after the connector is installed and configured.

NOTE
You do not need to enable this setting for database connectors or work item connectors.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select Actions, Edit.

5. Select the Enable Build and Changeset check box.

 211



 Rally®

6. Select Save & Close.

Automatically Unblock Portfolio Items
You can change the default blocked behavior when the state changes on a portfolio item.

The state of a portfolio item changes when the work item is moved to a new column on the Portfolio Kanban board or
when the State field is manually updated. At the workspace level, you can determine if a block is removed from the
portfolio item when the state changes. By default, this option is enabled and portfolio items are automatically unblocked
when the state is updated.

You must be a workspace or subscription administrator to enable this feature.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select Actions, Edit.

5. Select the Automatically unblock Portfolio Items with state updates check box.

6. Select Save & Close.

Understanding the Rally Project Hierarchy
How you should set up your project hierarchy in Rally depends on your organizational needs. The hierarchy you’re trying
to represent is your organizational structure. A project in Rally just means a node of your organizational structure which
represents a team.

To get started in Rally, define the hierarchy for a logical division of your organization (R&D, Sales, Marketing)—not your
whole structure. Start with a simple structure and allow it to evolve.

 212



 Rally®

Keys to a Successful Organization

Key factors of successful organizations include:

• Persistent, Cross-Functional Teams
Rally tracks the rate at which work flows through a team. This measurement will allow you to predict how much work a
team can accomplish at a sustainable pace. One key to predictability is that the team must be persistent with the same
people doing the work from week to week. In order to measure the rate at which the work is being completed, all of the
necessary contributors must be counted as members of the team, such as developers and testers.

• Aligned Timeboxes
When multiple teams are using an iterative process like scrum, aligning timeboxes leads to many benefits. Iterations
and releases with the same start and end dates will automatically rollup in Rally, providing combined views of the
status for a timebox. The Team Status page displays capacity across teams, which is useful when you are transitioning
to agile and still have a few people contributing to multiple teams. Finally, aligning iterations makes it easier to steer
multiple teams. The discomfort and annoyance that comes from moving to an aligned iteration heartbeat only lasts a
few days, but the benefits continue over time.

• Avoid One Person Owning Work from Multiple Backlogs or Projects
Agile effectiveness comes in part from team-based commitments. When people work on multiple teams or projects,
their effectiveness decreases. If you must have a person working on multiple teams, you need to plan for a reduced
capacity. Rally recommends considering that person to be a 50% contributor to one project, and 50% to the second
project. If someone is spread across three projects at once, it’s best to not count their contributions when doing
capacity planning, as it is too hard to predict which project they will contribute their time to. Furthermore, studies have
shown that when a person switches between multiple tasks, that person's effective rate of work decreases significantly.

Project Hierarchy Examples

Here are several examples of how to companies may set up their project hierarchies.

Basic Hierarchy Example

Many companies use project nodes to represent teams within their organization. Rally tracks the rate at which work flows
through a team to determine a predictable and sustainable pace. In Agile, teams perform best when they are cross-
functional and persistent.

Multi-Level Hierarchy

You can choose to create a multi-level team (project hierarchy) to represent cross-functional subteams or projects. In
this example, each team is cross-functional. In a software company, this includes developers, testers, and specialists like
documentation, user experience, security, and so on.

A specialist may often work on more than one team. For example, a technical writer may be a member of multiple teams
(A, B) in addition to the Documentation team (C).

 213



 Rally®

Project Hierarchy Best Practices

Rally recommends the following best practices.

• Do Not Duplicate Teams in the Hierarchy
• Avoid Using Timeboxes as Nodes
• Do Not Put Testing Structure into the Hierarchy
• Remember to Put a Top Node on the Hierarchy

Do Not Duplicate Teams in the Hierarchy

Teams should only appear once in the hierarchy. When you duplicate teams in the hierarchy, it is harder for the team to
manage and prioritize their work in multiple products. It also makes it harder to measure the velocity or throughput of a
team.

 214



 Rally®

 215



 Rally®

Recommendation: If the same teams own work from more than one backlog, there are three suggested methods to
handle this. Whichever method you choose, you will still have tracking and visibility because you can specify charts at the
level you want (stories, portfolio items).

Method 1: Use Tags
or Custom Fields to

Identify Work in Product
A versus Product B.

Method 2: Use Portfolio
Items to Track and
Manage Products,

Strategic Initiatives, or
Supporting Features.

Method 3: A Team
Works on Multiple

Backlogs and No Other
Team is Working on

Those Same Backlogs

In some organizations, there might be multiple product owners feeding work to one team. To help identify which work
comes from a given backlog, make sure there is a parent story.

Avoid Using Timeboxes as Hierarchy Nodes

If you represent timeboxes in the project hierarchy, you hinder your ability to effectively track, plan, and report on release
progress and team progress. Timeboxes do not belong in the project hierarchy. To keep your timeboxes organized, Rally
recommends using releases on the Timeboxes page.

 216



 Rally®

Do Not Put Testing Structure in the Hierarchy

Do not add testing structure to the project hierarchy. For an introduction to test structures in Rally, see Test Management
Overview. You can associate test cases with user stories and use a tag or test case field to track the functional area.

 217



 Rally®

Remember to Put a Top Node on the Hierarchy

Teams can be at different levels in the hierarchical structure. Use a parent node when you want to rollup across multiple
teams or areas. The workspace will not automatically create a node at the top.

Always add a node at the top of your hierarchy that represents your company or division. This makes data rollups easy.

Organizing Your Roadmap with Portfolio Items

In large companies, certain job roles are concerned with strategy while others are concerned with execution. Knowing who
cares about the work will help decide whether it should be a portfolio item or a user story. Within Rally, you use portfolio
items to track your roadmap.

A portfolio item type represents a grouping of market value. You should not use projects to organize your roadmap.

Only the lowest level of portfolio item type flows through execution teams to be implemented in a series of user stories.

Portfolio item types at higher level provide a grouping of portfolio items of a lower level to make the information more
readily understood to people outside of engineering. Conversely, portfolio items below a certain level provide a way to
clearly define the increment of values to build to deliver the higher-level portfolio item. Lower level portfolio items tell the
team what successful completion means.

Themes, initiatives, and features are the default portfolio item types. You can decide how many levels of portfolio items to
create and what to name them.

The lowest-level portfolio items exist between strategy and execution. They originate in the strategy layers. Later in the
hierarchy, they become part of the execution layers when they are assigned to a delivery team.

 218



 Rally®

Create a Portfolio Item or a Project?

Create a portfolio item if these statements are true:

• It has a life cycle (start and end dates)
• You need to track whether it is started or completed and the percentage of work remaining

Create a Portfolio Item or a Parent User Story (Epic)?

A portfolio item is a strategic initiative that requires a business case and a clear value statement. A parent user story
(epic) is usually an engineering resolution of the problem.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

Sample Hierarchy

Your Rally project hierarchy can include layers for strategy and execution. These layers are nodes in the organizational
structure. The distinction between these two types of layers is conceptual, not part of the Rally user interface.

• Strategy layers:

 219



 Rally®

– Contain portfolio items
– Allow scoping to the right level for strategic job roles
– Especially useful for organizing and planning work that is not yet in development
– Provide visibility into the percent done of a portfolio item

• Execution layers:
– Contain user stories and defects
– Allow a team’s rate and progress to be tracked

A portfolio item rolls up its percent done from the associated stories regardless of where they exist in the project hierarchy.
The children of a portfolio item do not need to be stored in the same project, nor a child project of the portfolio item itself.

There are no firm rules about exactly how to set up your project hierarchy in Rally. Organizations that have been using
Rally for a long time may have a different structure than an organization that is new to Rally.

This is an example of a product company with teams dedicated to specific products or

programs.

Conceptually, the lowest-level portfolio items start in a strategy layer but move to an execution layer when that work is
assigned to a team. Rally recommends you update the project field to reflect which team is handling the work. Do not
duplicate a portfolio item so it can appear in both a strategy layer and an execution layer.

If portfolio items are entered in one branch (strategy) and children in another (execution), tracking at the team level can be
confusing.

 220



 Rally®

Set Up Your Projects (Teams)
Projects in Rally are primarily used to represent development teams. Rally allows you to create a hierarchy of projects to
represent multiple teams, scrums, or products which mirror your company development structure.

Team release, iteration, and work data is stored within these spaces. You can customize your projects by naming them
after each team, identifying owners, and adding descriptions.

Users with subscription administrator or workspace administrator permissions can create and modify any project (team),
as well as add and create users for that team.

Users with project administrator permissions can add team members to existing teams and create child projects (teams)
of teams that they administer. Although they can add team members to a project and grant team-level permissions,
they cannot create new users for a team unless explicitly given this permission by the subscription administrator. This
permissions model helps companies have better control of their project hierarchies and the number of users created.
Learn more.

This section includes the following topics:

• View a Single Project
• View All Projects as a Subscription or Workspace Administrator
• Create a Project
• Edit a Project
• Create a Child Project
• Change Existing Projects to Child Projects
• Managing Project (Team) Membership
• Project Fields

Project Hierarchy Overview

The project hierarchy supports an enterprise project (team-level) structure in which you can match your Rally subscription
to your company's organizational structure. This hierarchy is a tree structure with rollup capabilities for easy data
gathering. You can use parent-child projects to represent internal company components such as:

• Teams
• Products
• Product lines
• Projects (non-product)

A typical hierarchy looks like this:

 221



 Rally®

Typically, a project hierarchy tree structure does not span more than three levels (enterprise, product, team). Anything
beyond three levels creates reporting complexity and may slow system performance. Simpler is better. You can add
complexity later, if necessary. A parent project can support up to 10 levels of child projects, but this is not recommended.

The top-level parent project in the tree is often called by its organization or enterprise name. The next level down can be a
product or portfolio container of work. At this level, you can see all of our teams within the product.

When you use a project hierarchy, there are additional benefits for your entire hierarchy. Most pages in  Rally show you
cumulative totals. You can scope these pages for all projects or limit the view to specific projects within your project scope
view. This helps you manage multiple projects and provides visibility into those team members who have responsibilities
across multiple projects.

 222



 Rally®

NOTE
To rollup data in a project hierarchy, create a release and iteration with the same name and dates for every
project in the hierarchy. You may bulk create and bulk update releases and iterations.

View a Single Project
NOTE
Project administrators will only see project hierarchies they have access to, and will not be able to navigate to a
project's detail page within a hierarchy if they do not have project administrator permissions for that project.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. Use the links in the left pane to view or edit specific details of the project, including:
Workspace View the the details of the workspace to which the selected project belongs.

Children Lists any child projects of this project.
Iterations Lists the iterations used for this project.
Releases Lists the releases used for this project.

Users Lists the users for the project.
Fields Lists the work item fields included in the project.

Revisions Shows the revision history of the project.

View All Projects as a Workspace Administrator or Subscription Administrator
NOTE
Project administrators will only see project hierarchies they have access to, and will not be able to navigate to a
project's detail page within a hierarchy if they do not have project administrator permissions for that project.

Viewing all projects is limited to subscription and workspace administrators.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Projects link from the list in the left pane. The Projects summary page displays all projects contained within
the selected workspace.

5. To view all projects (including closed projects) in the workspace, change the State drop-down list from Open to All.

6. Use the Owner filter at the top of the page to filter projects and workspaces by owner.

7. Select any project name to see the detail page.

8. Use the links in the left pane to view or edit specific details of the project, including:
Workspace View the the details of the workspace to which the selected project belongs.

Children Lists any child projects of this project.

 223



 Rally®

Iterations Lists the iterations used for this project.
Releases Lists the releases used for this project.

Users Lists the users for the project.
Fields Lists the work item fields included in the project.

Revisions Shows the revision history of the project.

Create a Project
Creating a project is generally limited to subscription and workspace administrators. A workspace must have an open
state for a project to be associated with it.

Users with project administrator permissions can create child projects for projects that they administer. Learn more.

You cannot delete projects. Instead, edit the project and set the state to Closed. Once the project is closed it will remain
intact, but will no longer display in the project drop-down list. Work items inside a closed project are not accessible.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select any hyperlinked workspace name from the Workspace summary page.

4. Select the Projects link from the list in the left pane. The Projects summary page displays all projects contained within
the selected workspace.

5. Select Actions, New Project.

6. Enter the details for the new project. Fields that do not apply to creating a new project are grayed-out. Learn more.

7. Select Save & Close.

8. Use the links in the left pane to view or edit specific details of the project, including:
Workspace View the the details of the workspace to which the selected project belongs.

Children Lists any child projects of this project.
Iterations Lists the iterations used for this project.
Releases Lists the releases used for this project.

Users Lists the users for the project.
Fields Lists the work item fields included in the project.

Revisions Shows the revision history of the project.

Edit a Project
NOTE
Project administrators will only see project hierarchies they have access to, and will not be able to navigate to a
project's detail page within a hierarchy if they do not have project administrator permissions for that project.

Editing a project is limited to subscription and workspace administrators, or project administrators for that project.
Changes to projects are recorded in the revision history.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

 224



 Rally®

icon displays next to projects where you have permission to edit.

3. Use the links in the left pane to view or edit specific details of the project, including:
Workspace View the the details of the workspace to which the selected project belongs.

Children Lists any child projects of this project.
Iterations Lists the iterations used for this project.
Releases Lists the releases used for this project.

Users Lists the users for the project.
Fields Lists the work item fields included in the project.

Revisions Shows the revision history of the project.

4. Use the Actions menu to edit, or print details of the selected project.

Create a Child Project
A child project is a subset of work to be done by a team that uses the same iteration and release cadence as the parent
project. Create child projects to represent teams, scrums, or products that mirror your company development structure.
Project administrators may create child projects under projects they administer.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. Select the Children link from the list in the left pane.

4. Select Actions, then select New Project from the Child Project Actions section.

The New Project page displays. Use this page to define your new child project. The Parent field is automatically
populated with the parent project name.

5. Select the Copy Timeboxes check box to copy current and future releases and iterations from the parent project.

This field is only available when you create a child project. Select this check box to copy current and future releases
and iterations from the parent project. This option is checked by default. This is useful for reporting, planning, and
tracking your releases.

6. Select the Copy Milestones check box to copy current milestones from the parent project. This option is checked by
default.

7. Select the Copy Users check box to copy all users (with existing permissions) from the parent project. This option is
unchecked by default. This operation takes place in the background and may take some time.

8. Select the Page Sharing check box to display shared custom pages from the parent project when viewing the child
project.

WARNING
If you do not select the Copy Users option, copying shared pages from a parent project will prevent project
administrators from being able to edit those shared pages. To avoid this, ensure that project administrators in
the child project are also project administrators in the parent project.

 225



 Rally®

9. Select the Auto State Updates check box to enable or disable whether updating the task state automatically updates
the parent schedule state. Learn more.

10. Select Save & Close.

Change an Existing Project to a Child Project
As your structure grows, you may need to change the hierarchy level of a project and make it a child project of another
project. Projects must be in the same workspace.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. Select Actions, then select Edit from the Project Actions section.

4. On the Edit Project page, select Search

in the Parent field.

5. On the Choose Parent window, select the new parent project and then select Choose.

6. Select Save & Close.

Managing Project (Team) Membership
Users with team member access to a project can be assigned work in the respective project.

You can manage team member status separately from project permissions. For example, you may have a scrum master
who has project editor permissions but is not a team member, meaning his name does not display in any team Owner
drop-down lists. It is important to note that when assigning team member status:

• Users must be at least an editor in order to be a team member. If a user's permission is changed to viewer, the user's
team member status is removed. Users cannot be a team member and a viewer.

• If a user's permission is changed to editor, the user's team member status is not changed.
• If a user's permission is changed to no access, the user's team member status is removed.
• If the user has no access or is a viewer and you add them as a team member, they are automatically upgraded to an

editor.
• If you uncheck the team member box, there is no change to their permissions.

The following table lists the available project permissions.

Table 1: Project Permissions

Permission level Access rights

No Access No visibility to the project (Default value for each user).

Viewer Access to view the project and all work items within the project.

Editor Access to create, edit, and delete all work items inside the project.
Create, edit, and delete milestones.

 226



 Rally®

Permission level Access rights

Team Member (check box next to Permission field in user editor
window)

• When checked, user is automatically set as an editor in the
project.

• Username appears at the top of drop-down list under Team
Members section, when editing the Owner field of work items.

• User appears in the project Team Status page.

Project Admin • Sets the user as a project administrator, with access to
project settings (project field visibility can only be accessed by
workspace administrators.

• Ability to create child projects.
• Create, edit, and delete all work items in the project.
• Edit viewer, editor, and team member permissions in

administrated projects.
• If enabled by the subscription administrator, can create new

users (may only enable permissions in administrated projects).
• Cannot delete users.

Change Project Permissions for an Existing User

Users with the proper permissions can change project permissions for a user.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. On the left pane of project detail page, select Users. The list of users is displayed alphabetically by user name.

4. Select the gear

of the user you want to edit, and select Edit.

5. In the Permissions section, scroll to the workspace list for the user.

6. Select a permission level for each project in the workspace that you want the user to access. Select the team member
check box if you want the user to be able to own work items within the project. The following example displays giving
a user editor permissions to the IX Pegasus project and ensuring team member status by selecting the Team Member
check box.

 227



 Rally®

7. Select Save & Close.

Add an Existing User to a Project

You can add an existing user to a project or create a new user to be added to the project.

Users with project administrator permissions can only create new users if the subscription administrator has allowed
project administrators this permission.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. On the left pane of project detail page, select Users. The list of users is displayed alphabetically by user name.

4. Enter the user's first name or username in the Add existing User field. This field displays auto-fill suggestions for the
name you enter.

NOTE
Select Add User to view the Add existing User field if you do not see the Add existing User field.

5. Specify whether the new team member is a viewer or editor, then select Add.

Copy a Set of Users From an Existing Project

NOTE
If the user already exists in the project, the highest permission is kept between the current and copied
permissions.

Some benefits of adding users from existing projects include:

 228



 Rally®

• If you have a team member that moves from one project to another, this feature allows you to easily copy permissions
from project to project.

• Add users from a parent project. Child projects can inherit the same permissions from the parent.
• When creating a new project, if you have already made all of your users viewers or editors on an existing project, you

can bring them all in as users on the new project with one selection.

1. Select the project picker drop-down menu.

2. Hover over the project (team) of interest and select Setup

on the right side of the project name. The Setup

icon displays next to projects where you have permission to edit.

3. On the left pane of project detail page, select Users. The list of users is displayed alphabetically by user name.

4. On the Users page, select Copy Users from.

5. Enter the name of the project you want to copy users from. When you start typing part of a name or user name, the
tool auto-suggests matches that you can add with a single selection.

6. Select Copy.

Project Fields
Name The name of a project. This field is a required field, but does not require a unique value.
State Specifies whether the project is open or closed. An open project indicates the project is active and work can

be performed on the related project components. A closed project has been completed or terminated and
work can longer continue on any of the project components such as releases, iterations, or tasks.

Owner The owner of the project. This value defaults to the name of the administrative user who created the
project.

Parent This field allows you to organize projects into parent-child hierarchies, or re-parent existing projects.
Projects must be in the same workspace.

Notes This rich text format field provides a location for you to add any information that might be pertinent to the
project. Link to URLs, insert a graphic, or provide any information that might help in further understanding
the project's intent.

Change Description This field only appears upon editing a project after it has been created and logs information regarding any
changes that have been made to the project's general information to provide additional change history for
the project.

Auto State Updates Enables or disables whether updating the task state automatically updates the parent schedule state. If
disabled, schedulable work item schedule states for that project will no longer be affected by changes to
task states and users will need to update their own schedule state for stories. If you are doing Scrum- or
Timebox-based work, then leave this enabled. If you are doing Kanban- or Flow-based work, then leave
this disabled.

Subscription administrators and workspace administrators can always set this option for a project. The
subscription administrator must enable a project administrator to be able to change this setting. Learn
more.

 229



 Rally®

Administer Programs
A program is a collection of two or more projects sharing a common business goal and release cadence. A program has
its own backlog and is often implemented by multiple teams. We recommend you track programs with portfolio items,
which focus on the needs of Portfolio Managers, Program Managers, and Project Management Offices.

There are two options to track programs in Rally:

• Basic: Use Project Scoping and Rollups
• Advanced: Use Portfolio Items

Use Project Scoping and Rollups
Rally's ability to roll data up and down among related projects lets you create different levels of detail, enabling you to view
progress specific to a team, set of teams, project, or for the entire program.

Rally lets you see coordinated data at the user story, iteration, release, and project levels.

Project Setup

This setup ensures that data can be seen among all levels of your hierarchy.

1. Create a top-level parent project, representing the program.
2. Assign existing projects as children to the program project.
3. For data to rollup among iteration and release containers, the following fields in each iteration or release must match

across all projects in the hierarchy:

– Name
– Start Date
– End Date

View Progress for One Team

Once your project hierarchy and planning cadence is established, it's easy to see the progress of work at a team, project,
or program level.

 230



 Rally®

Using the sample hierarchy above, you can view the progress of the blue team's work in the current iteration.

1. Select the Project Picker in the upper-left corner, and select the Team Blue project.
2. Ensure the Show Items From check boxes are blank.
3. Navigate to the Track, Iteration Status page and select the current iteration.

View Progress for Multiple Teams

You can view progress for multiple teams.

1. Navigate to the Iteration Status page.
2. Select the Project Picker in the upper-left corner, and select Project A.
3. Select the Child projects check box in the Show Items From section.
4. The page will update to include all work from both the Red and Blue Team projects, for the given iteration.

View Progress With An App

You can use a custom query in an app to have quick access to your program work, filtered by an iteration, release,
or other criteria. This method allows you to display current or past progress on your dashboard or a custom page.
Selecting hyperlinks in the app will navigate you directly to the work item's detail page, where you can view detailed
status.

 231



 Rally®

1. Install the Custom List app on a dashboard or custom page.
2. Select the Gear

at the top of the app and then select Edit Settings. A settings menu displays.
3. Set the view to the project created for the organization, program, or project. Include child projects to see rollups across

all work in the project tree.
4. Below is a sample query. Enter a similar string into the Query field, based on the criteria you would like to filter by. In

this example, we'll look at all work done in a release shared by all projects. (Release.Name = "Q1 2012")

5. Save your changes

Additional Query Examples

The Custom List app lets you filter data by any criteria available through our Web Services API. This includes projects,
owners, iteration, releases, and more.

To view multiple releases, use the same project scoping from the example above:
((Release.Name = "Q1 2012") OR (Release.Name = "Q2 2012"))

Here is an example for collecting data from four releases, for three specific projects:
((((Project.Name = "Team Blue") OR (Project.Name = "Team Orange")) OR (Project.Name = "Team Red")) AND

 ((((Release.Name = "Q1 2012") OR (Release.Name = "Q2 2012")) OR (Release.Name = "Q3 2012")) OR (Release.Name

 = "Q4 2012")))

Learn more about writing Custom List app queries.

 232

https://rally1.rallydev.com/slm/doc/webservice


 Rally®

Use Portfolio Items
Portfolio items are designed to manage programs, and provide additional views of data including completion percentages,
easy-to-read coloring indicators, and a timeline.

Define Portfolio Item Types

You must define two portfolio item types to represent programs and projects:

• Create a type with the name of Project and an ordinal value of 1
• Create a type with the name of Program and an ordinal value of 2

You may have additional levels of portfolio items above the Program type, if necessary. Learn more about creating and
editing portfolio item types.

Set Up Programs As Portfolio Items

Repeat the following process for each program you want to track in Rally.

1. Create a project named after the program. Learn more about general best practices when creating a project hierarchy.
2. Create a portfolio item named after the program. Use the Program type. Set the Planned Start and End Date fields

accordingly.
3. Create portfolio items named after each project within the program. These portfolio items should use the project type,

and be associated to the program portfolio item.
4. Create user stories underneath each project portfolio item.
5. Schedule the user stories into releases and iterations, according to your planning and retrospective cadence.

View Your Program Status on a Timeline

The Timeline page provides a date-based view of the progress of each project, and the program as a whole.You can
access the timeline view by navigating to Portfolio, Portfolio Timeline.

Learn more about how to read a timeline.

View Your Program Items With an App

You can use a custom query in an app to have quick access to your program portfolio items from your dashboard or a
custom page. Selecting hyperlinks in the app will navigate you directly to the portfolio item's detail page, where you can
view the associated work items and detailed status.

1. Install the Custom List app on a dashboard or custom page.
2. Select the Edit Settings option from the Gear

at the top of the app. A settings menu displays.
3. Set the view to the project created for the program, or a higher-level project.

 233



 Rally®

4. Below is a sample query. Enter a similar string into the Query field, based on the name of your portfolio item type.
(PortfolioItemType.Name = "Program")

5. Save your changes

Managing Users
Subscription administrators can create and edit users in their Rally subscription, set up password policies, and also
delegate user management tasks to workspace administrators and project administrators.

Rally provides the capability to delegate user management tasks, such as creating new users or adding existing users to
projects. For example, users with the project administrator role can always add existing users to a project (team) even if
they are not allowed to create new users. This flexibility allows the delegation of some user management responsibilities.
Some organizations might not want all users with the project administrator role to be able to create new users. However,
the subscription administrator can grant this permission to that role if needed.

Learn more about managing teams.

Before creating new users in a subscription, your organization should consider what information you want to include when
creating a user. Subscription administrators can add required fields and edit existing fields so that you can organize Rally
users in a way that matches your organization. For example, you can customize a drop-down list for the Office Location
field to include locations within your organization.

Learn more about customizing user fields.

This section contains the following topics:

• Viewing Users
• Creating and Editing Users
• Monitoring Usage and Licenses
• Resetting User Passwords
• Resolve User Name Conflicts in Rally
• Invite Users

Viewing Users
On the Users page, you can customize how the list of users displays by using filters or adding columns to the page.

You can also adjust how many records (users) to display per page by using the Show drop-down list at the bottom left of
the page. You can sort by a column in the list by selecting the column header.

 234



 Rally®

• View User Details
• Filter the Users Page
• Show Columns on the Users Page
• Export a List of Users to a Spreadsheet

View User Details

You can view the details for a particular user, including any revisions made to their settings.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the name of a user in the User Name field to view the details for that user.
4. Optionally, select Revisions from the left pane to view the revision history of this user.

Filter the Users Page

You can filter the Users page to display only users that meet the criteria you choose. You can use quick filters or switch to
advanced filters that let you build complex queries. Learn more.

NOTE

• The default search field is the only filter that allows partial strings and is case-insensitive. All other advanced
filters are case-sensitive and do not return results from partial strings.

• The Users page shows the total number of users that match your current filters at the top of the page. This
total does not distinguish between active and inactive users. To see the number of active users, add the
Disabled field as a quick filter and select No as the value for this filter. You can also save this filter selection
as a view for later use. Learn more.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select Show Filters.
4. Adjust the Workspace scope filter according to your needs. You can filter the list of users to only show users for the

current workspace, or you can show the users for all workspaces.
5. To apply quick filters:

a. Select Add or Remove Filters to view the Manage Filters list.
b. Select one or more fields or use search criteria to add filters. Once you have selected all applicable filters, select

Apply.
c. The fields that you chose display below the toolbar.
d. For each field you chose, select the correct value to use as a filter. For example, if you choose Subscription

Permission, you can select the permission to use as a filter. You can select more than one value per field. Select
No Entry to display items that do not have a field value.

6. To apply advanced filters.
a. Select Switch to Advanced Filters.
b. Select a value from the Field drop-down list to use as a filter.
c. Select an operator from the Operator drop-down list. Available operators are dependent on the field type.
d. Select or enter a value for the field.
e. Optionally, select the plus sign to add another filter.

 235



 Rally®

f. Optionally, select the Match Filters drop-down list to combine the filters:
• All - Only displays items that have matching content in all active filters. This applies an AND condition between

all filters.
• Any - Displays any work items that have matching content in a single filter. This applies an OR condition

between all filters.
• Custom - Select Custom to display numbers next to each available filter. You may reference these numbers in

the Custom Filter Condition text box to create custom filters. For example, (1 AND 2) OR 3 . You cannot
use a condition that includes a work item type filter in your custom filter. However, you can use conditions that
include a filter that is based on fields specific to a work item type. For example, a custom filter condition can
include a filter for State (Defect) in order to have custom filter logic for defects.

7. Select Hide Filter to hide your filters.
8. Select Clear Filters to reset the values used by the filters.

NOTE
You can save your selections as a saved view so you can use these same selections later. Learn more.

Show Columns on the Users Page

You can customize the user fields that are shown as columns on the User page. For example, you can add the Default
Project field to the shown columns to easily view the default project for each user in the displayed list.

NOTE

• Select any column header that contains up and down arrows to sort items by that column, in either ascending
or descending order.

• Drag and drop any column header to change its location.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select Show Fields.
4. Select or clear the check box for the columns that display on the page.
5. Select Apply to save your changes.

Export a List of Users to a Spreadsheet

You can export your displayed list of users to a spreadsheet.

1. Select Import/Export

and select one of the following:
– Download CSV of this view: Create a CSV file using the fields currently selected on your window.
– Download CSV with more columns: Select additional fields to include in the CSV file.

NOTE
The following columns are not exported:

 236



 Rally®

• Date Format
• Data Time Format
• Default Detail Page to Viewing Mode
• Email Notification Enabled
• Is Provisioning User
• Is SLM Admin
• Language
• Locale
• Password Expires
• Profile Image
• Project Scope Up
• Project Scope Down
• Session Timeout
• Session Timeout Warning
• subcriptionOid

Creating and Editing Users
Subscription administrators and workspace or project administrators who have been delegated permission to manage
users can create new users or edit existing users.

When you create a new user, Rally automatically sends login instructions to the email address associated with the user.

NOTE

• Need to create multiple users? You can use the Rally Add-In for Excel to import multiple users and set
project permissions in a single step.

• Double-click a field to change data without opening the full editor window. This option is available for most
fields that are displayed on the page, except for Permission and read-only fields.

This section includes the following topics:

• Create a New User
• User Fields
• Set User Access Permissions
• Change a User Name
• Copy a User
• Bulk Edit Multiple Users
• Disable, Delete, or Unlock a User

Create a New User
You can create a new user from the Users page.

You must enter the user name as an email address. Rally recommends using a valid email address for each of your users.
The address must have a minimum of one character before the @ and at least one character before and after the dot in
the address. The field is alphanumeric, limited to 254 characters in length, and allows the special characters of @, ., ?,
and _. This field is not case-sensitive.

The Rally login user name does not need to be the same as the email address of the Rally user. This allows you to
change the email address that is associated with the user without changing the user name.

 237



 Rally®

NOTE
When creating a new user, permissions may automatically display in the user editor window, due to the default
access for new users workspace setting. You can manually change these permissions before saving the new
user.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display
2. Select Users.
3. Select Add New.
4. Enter a user name and do one of the following:

– Select Create.
– Select Create with Details to view the user in the detail editor and complete any necessary fields.

Required files are highlighted in red.
– Select Save & Close.

User Fields
The following list includes the fields available in the default user profile.

Subscription administrators can add fields and customize field values for the following drop-down lists: Cost Center, Office
Location, Role, and Department.

Account Information
User Name Enter an email address (required). Rally recommends using a valid email address for each of your users.

The address must have a minimum of one character before the @ and at least one character before and
after the dot in the address. The field is alphanumeric, limited to 254 characters in length, and allows the
special characters of @, ., ?, and _. User name is not case sensitive.

Required.

Email Address Enter an email address for administrative messages and email notifications (required). If this field is blank
when the User Name field is populated or changed, this field is automatically populated with the User Name
value. Change notifications are sent to this email address if you have enabled the Email Notifications radio
button. The address must have a minimum of one character before the @ and at least one character before
and after the dot in the address. The field is alphanumeric, limited to 254 characters in length, and allows
the special characters of @, ., ?, and _.

Required.

Disabled This field is only available to subscription or workspace administrators. Select this check box make a user
inactive. Inactive users are unable to log into Rally and their user name does not display as an option to
create new work products. The history information for an inactive user is still preserved. An inactive user's
name displays in a lighter font color (drop-down lists are an exception). The default status is enabled/active.

Name Enter values for the first, middle, and last name of the user.
Did this user forget

their password?
Select this check box to send the user an email with new login instructions.

Role Select a value from the drop-down list to designate the role of the user.

Customizable by the subscription administrator.

Office Location Select a value from the drop-down list to identify what location the user is working from.

Customizable by the subscription administrator.

Department Select a value from the drop-down list to identify what department or organization the user works in.

Customizable by the subscription administrator.

Phone Enter a phone number of the user. This field is limited to 254 characters in length.

 238



 Rally®

Display Preferences
Display Name The short name that is displayed in all Owner field drop-down lists for all work products instead of the user

name. If this field is blank, the User Name is used as the display name.
Profile Image Upload an image that display when the mouse rolls over your display name.

Settings
Session Timeout The length of time the system can remain active but unchanged before an idle user is logged out of Rally.

Warn on
Session Timeout

Specify whether a timeout warning message displays before automatic log off.

Password Expires A read-only field that reflects the password expiration policy set by the subscription administrator on the
Subscription tab.

Email Notifications Specify whether to use automatic emails for change management.

Important: If the administrator has disabled email functionality, this field will not display.

Date Format Select one of the following available formats for all date displays in Rally. Any selection other than the Use
Default value will override the default settings for the workspace.

• yyyy-MM-dd (ISO 8601) (Default)
• MM/dd/yyyy (US)
• dd/MM/yyyy (Europe)
• yyyy/MM/dd (Japan)
• yyyy-MMM-dd (2021-Apr-02)

Administrative Fields
Network ID Enter an alphanumeric value to designate an internal network ID. Limited to 254 characters in length.
Cost Center Select a value from the drop-down list.

Customizable by the subscription administrator

Permissions
Subscription Admin Select this check box if the user is a subscription administrator.

Timebox Admin This is only available if the workspace has the Restrict Timebox Management setting enabled. Select
this check box to enable the user as a timebox admin. A timebox admin has permissions to create, edit, or
delete release or iteration timeboxes. For more information, see Timebox Administration.

Planner Select this check box if the user is a planner and can create capacity plans for a delivery group.
Subscription administrators and workspace administrators can grant themselves the role of planner. All
other users must be given the planner role by another subscription or workspace administrator.

Investment Admin Select this check box if the user can have view and edit access to all investments fields.

Permissions Select a value from the drop-down list to indicate a user's specific permissions for each workspace in the
subscription.

Required.

Set User Access Permissions
You can set user permissions at both the workspace level and the project level. You set these access permissions when
you create a user and can change them at any time.

Users with subscription administrator or workspace administrator permissions can configure a workspace to assign default
user permissions to the workspace and its projects. Learn more. You can change these defaults as needed.

 239



 Rally®

TIP
You cannot view or edit a user if you have lesser permissions than that user. For example, a workspace
administrator cannot edit or view a subscription administrator.

Table 2: Workspace Permissions

Permission level Access rights

No Access No visibility to the workspace or projects in the workspace.

User Access to the workspace. Set additional permissions for each
project in the workspace. See the project permissions table below.
Adding a user to a project automatically provides user access to
the workspace.

Workspace Admin Adds workspace administrator permissions for the user.  Learn
more.

Table 3: Project Permissions

Permission level Access rights

No Access No visibility to the project (Default value for each user).

Viewer Access to view the project and all work items within the project.

Editor Access to create, edit, and delete all work items inside the project.
Create, edit, and delete milestones.

Team Member (check box next to Permission field in user editor
window)

• When checked, user is automatically set as an editor in the
project.

• Username appears at the top of drop-down list under Team
Members section, when editing the Owner field of work items.

• User appears in the project Team Status page.

Project Admin • Sets the user as a project administrator, with access to
project settings (project field visibility can only be accessed by
workspace administrators).

• Ability to create child projects.
• Create, edit, and delete all work items in the project.
• Edit viewer, editor, and team member permissions in

administrated projects.
• If enabled by the subscription administrator, can create new

users (may only enable permissions in administrated projects).
• Cannot delete users.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Do one of the following:

– For a new user, select Add New and then select Create with Details.
– For an existing user, select the User Name (not the check box) that you want to edit and the select Edit from the

Actions menu.

 240



 Rally®

4. On the Edit User page, scroll down to the Permissions section, and set permissions for all applicable workspaces and
projects.

5. Select Save & Close.

Change a User Name
You can edit or change the login user name of an existing Rally user. This makes it easy to accommodate changes in a
user's email address and maintain all of a user's history and associations with Rally work items.

The Rally login user name does not need to be the same as the email address of the Rally user.

The user name must be entered as an email address. Rally recommends using a valid email address for each of your
users. The address must have a minimum of one character before the @ and at least one character before and after the
dot in the address. The field is alphanumeric, limited to 254 characters in length, and allows the special characters of
@, ., ?, and _. This field is not case-sensitive.

NOTE
Select a field in the Users page to change data without opening the full editor window. This option is available for
most fields that are displayed on the page, except for Permission and read-only fields.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the User Name (not the check box) that you want to edit to view the user details.
4. Select Edit from the Actions menu to open the Edit User page.
5. Enter a new name for the user.
6. Select Save & Close.

Copy a User
If you need to create a user with the same permissions as an existing user, you can create a copy of the existing user.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the check box the user that you want to copy.
4. Select Copy.
5. Enter the name and email address for the new user.
6. Enter or change any other fields that are relevant for the new user.
7. Select Save & Close.

Bulk Edit Multiple Users
In some cases, you may want to make the same change to multiple users at once.

 241



 Rally®

For example, if an entire team has switched cost centers, you can select each of those users and update the cost center
field for all of them.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the check box for each user you want to edit.
4. Select Edit to see the bulk edit options.
5. From the Choose Field drop-down list, select a field to update and then enter a value.

You can edit up to four fields at once.
6. Select Apply to save your changes.

Disable, Delete, or Unlock a User
In addition to creating or editing users, you can also disable a user, delete a user or user session, and unlock a user
account. Typically a user is locked by too many unsuccesful login attempts.

Disable Users

Instead of deleting users,  Rallyrecommends disabling them. Subscription administrators and workspace administrators
who have manage users permission can disable users. However, the subscription administrator must explicitly give project
administrators the ability to do this.

NOTE

• Disabled users have their capacity removed from future iterations on the Team Status page. Learn more.
• To disable users, you must show the Disabled field in the list of users. If this field is not displayed, select

Show Fields, select the Disabled field, and select Apply.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the check box of the user you want to disable.
4. Select Disabled.
5. Select one of the following values:

• Select Yes to disable the user.
• Select No to enable the user.

Delete a User

Instead of deleting a user, you should disable the user. You can re-enable a user at any time. You cannot undelete a user;
the action is permanent.

Before deleting a user, you should be sure to re-assign any work items owned by the user. Deleting a user removes the
user from:

• The listing on the users summary page
• The Owner drop-down listings on all work item summary pages

 242



 Rally®

WARNING
When you delete a user, any API keys created by that user are also deleted.

1. Re-assign any work items from the user being deleted to a new owner.
2. Select Setup

from the Rally menu bar in the upper-right corner of the display.
3. Select Users.
4. Select the check box of the user you want to delete.
5. Select Delete.

A confirmation message opens.
6. Click Delete.

Delete User Sessions

You can automatically log a user out of all of their existing sessions by using the Delete Sessions option.

NOTE
You must be a subscription administrator to delete user sessions.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the check box of the user you want to edit.
4. Select Delete Sessions.

Unlock a User

If a user exceeds the maximum number of invalid login attempts, they receive an error message stating the account has
been locked. They are instructed to contact their subscription administrator. If the subscription has email notifications
enabled, the user also receives an email stating they have been locked out and the length of time they are locked out per
the subscription configuration.

NOTE

• If email notifications are disabled for the subscription, the subscription administrator is required to enter a
user password during the unlocking process. The subscription administrator can enter the existing user
password or set a new user password.

• A common cause for users being continually locked out results from an integration, script, connector (such
as Subversion or Eclipse), or other automated process running in the background that has not had the
credentials updated. These failed logins count towards the invalid attempt limit and will eventually lock the
user after reaching the set number of tries. Investigate any web services processes that might be using those
credentials to see if modifications are needed.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the name of the user that you want to unlock to view the user details.
4. Select Edit from the Actions menu to open the Edit User page.
5. On the Edit User page, clear the check box for the This account is locked. Click to unlock field.

 243



 Rally®

6. Select Save & Close. After this change is saved, the account is successfully unlocked and the user may now access
the Rally subscription.

Resetting User Passwords
Subscription administrators can set password policies and are the only users that can reset a user's password manually.

Workspace administrators and project administrators with the right permissions can generate a change password email
that is sent to the user.

Change User Passwords When Using Email-Enabled Features

Email functionality is set up by default in a Rally subscription. For password resets, this enables users to reset their own
passwords with the  "Forgot Your Password?" link available on the main Rally login page. Administrators can use the
same link to send a reset email to a specified user.

Subscription administrators can also initiate the email from the Users page.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select the name of the user that you want to edit to view the user details.
4. Select Edit from the Actions menu to open the Edit User page.
5. In the Edit User dialog box, select the Did this user forget their password? Check the box to send an email with

new login instructions. check box.
6. Select Save & Close.

Change User Passwords Manually

Subscription administrators can manually set a user's password. To do so, you must disable email functionality for the
subscription. This turns off all email notifications for all users. Be sure to re-enable this feature when finished if you want
users to continue to receive email notifications.

NOTE
Manually resetting a password automatically ends any sessions that the user has opened. If you suspect
someone has gained unauthorized access to a user account, resetting the password manually ends that user's
access.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Subscription.
3. Select Actions, Edit Subscription.
4. In the Edit Subscription dialog box, clear the Email Functionality check box.

While email functionality is disabled, notification rule emails are not initiated but remain visible in the My
Notifications app.

5. Select Save & Close.
6. Select Users.
7. Select the name of the user that you want to edit to view the user details.
8. Select Edit from the Actions menu to open the Edit User page.
9. In the Edit User dialog, use the password fields to set a new password for the user.

 244

https://rally1.rallydev.com/slm/resetPassword.tr


 Rally®

10. Select Save & Close.
11. Return to the Subscription page and edit the subscription to re-enable email functionality.
12. Notify the user of the new password.

Monitoring Usage and Licenses
Users with subscription administrator or workspace administrator permissions can view license information for all
users. Users with these permissions can also view how many users are active by Last Login Date.

Workspace administrators are restricted to viewing only users in the workspaces they administer.

View Active Licenses

You can determine how many user licenses are active in your subscription.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.

The total number of user records are shown in the upper-right corner of the display.
3. Filter the list of users to only show active users.

a. Select Show Filters.
b. Select Add or Remove Filters to view the Manage Filters list.
c. Select Disabled and select Apply.
d. Select No from the Disabled filter drop-down list.

The total number of user records now shows the number of active users.

View Last Login Date

Subscription and workspace administrators can view the last login date of users. Login dates are available from June 1,
2010 forward. Users that have never logged in have an empty value. You can also view the Last Active Date, which can
differ from the last login date if a user chooses to extend their session time. The last active date is also affected by Web
Services API, watches, and notification rules.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Users.
3. Select Show Fields.
4. Scroll down the list of available columns or use the search box to find and select the Last Login Date or Last Active

Date check box.
5. Select Apply.
6. Select the column header to sort by these dates.

You can also filter the list of users to specific dates or ranges.

NOTE
For users who continuously extend their session, the original login date displays.

Resolve User Name Conflicts in Rally
Rally does not support multiple users with the same user name. All user names must be unique across all subscriptions
and are created using an email format.

 245



 Rally®

Rally displays the following warning if you are adding a user with a user name that conflicts with another user in the
system.

To avoid user name conflicts, ensure that the following considerations are met:

• The user name does not have to be a valid email address.
• The email address for the user does not have to be unique. You can create a user with a variation of the user name

and can retain the same email. For example, if name@domain.com exists, you can create name1@domain.com and
the email can be email name@domain.com.
.

Resolving User Name Conflicts in Rally

To resolve user name conflicts in Rally:

• Contact your Subscription Administrator for resolving user name conflicts in your organization. The Subscription
Administrator can update the user name of the conflicting account by adding a character, for example,
name1@domain.com. This method ensures that the user account is not deleted and you do not lose any data in a
subscription.

• If you are a Subscription Administrator, log in to your Rally account to modify the user name in the system. Access the
Edit Profile section in the top-right corner in Rally to make your changes. For more information about changing user
names, see Creating and Editing Users.

Rally Support can also assist with user name conflicts with active and inactive subscriptions and expired trials. Contact
Rally Support for further assistance.

For more information about managing users, see Managing Users. 

 246



 Rally®

Invite Users
A subscription administrator can quickly invite up to three new users to Rally at a time. Subscription administrators can
also enable this feature so that a workspace administrator can invite new users.

New users are created with project administrator level access for the project from which the new user was invited,
including all child projects.

NOTE

This is only available when you have the Personalized Navigation feature enabled. If you would like to use Invite
Users and the feature is not enabled in your subscription, contact Support.

1. Select Invite Users

at the upper-right corner of the display.

2. Enter up to three email addresses (depending on the number of seats remaining in your subscription).

3. Select Send Invites.

Administer Rally Integrations
Rally administrators can monitor integrations being used in their subscription.

Administrators can view the people in their organization that use Rally integrations. It empowers them to target
communication to those users and also report the value of each integration to help their organizations optimize their
software investments. This helps organizations looking to consolidate their software investments by gaining visibility into
their full software development ecosystem.

Viewing the Integrations Page

IMPORTANT
The Integrations page is temporarily unavailable. To get a copy of your data, open a P4 support case. Learn
more.

Data Moves
Data moves such as merges, migrations, and workspace moves can be complex, challenging tasks. Work with your Rally
representative before your data move to ensure it goes as planned.

There are two types of data moves:

• Subscription Merge
• Workspace Move

Subscription Merge
A subscription merge moves all data from one subscription (the source subscription) into another subscription (the
destination subscription). All workspaces from the source subscription are moved to the destination with their source
subscription workspace names.

 247

https://support.broadcom.com/group/ecx/my-dashboard?
https://knowledge.broadcom.com/external/article?articleId=142884
https://knowledge.broadcom.com/external/article?articleId=142884


 Rally®

A subscription merge moves all data from one subscription (the source subscription) into another subscription (the
destination subscription). All workspaces from the source subscription are moved to the destination with their source
subscription workspace name. Only subscription administrators can see additional workspaces and users in the
subscription.A subscription merge typically takes from two to three hours to complete. This type of data move involves
moving all workspaces in the source subscription into the destination subscription while maintaining all the source
subscription workspaces fields (such as workspace name, associated users). Learn more.

Rally support will guide you through the subscription merge process. At a high level, here's what will happen:

1. You contact your Rally Account Representative for the merge authorization, and complete any necessary paperwork.
Learn more.

2. Rally will contact you to schedule a merge time and date.
3. Rally will perform the subscription merge and will contact you after the merge to confirm your subscription has been

successfully migrated.

During scheduling, Rally support will re-confirm with you that all your subscription administrators (and user base) are
aware of planned downtime to perform the merge.

Subscription merges can take place on weekdays between 5 PM - 7 PM ET and typically require between two and three
hours of downtime, which may vary depending upon amount of data being moved. Users will not have access to either the
source or destination subscription during the merge time.

Frequently Asked Questions about Merging Subscriptions
What if one or both

subscriptions is
using CMK encryption?

A data move (subscription merge or workspace move) cannot be authorized or executed if:

• Either subscription has data present that was encrypted using old subscription KMS configs (this can
be seen in the CMK Details section of your Subscription page). This only happens after a previous
data move where the source data was encrypted, but an Encrypt Remaining was not done afterward.
Subscriptions with this type of data will need to re-encrypt their data with Encrypt Remaining prior to
authorization or execution. Learn more.

• Either subscription has a batch encryption/decryption/purge process currently in progress. All jobs must
be complete prior to authorization/execution. Learn more.

• The source subscription has encrypted data and the destination subscription does not have CMK
enabled. Contact Rally support for help.

You will need to run an Encrypt Remaining after the data move.

How does a
subscription
merge work?

At a high level, we move (copy) all of the subscription data from the source subscription into the destination
subscription. A simplified before and diagram looks like this:

Before:

 248



 Rally®

After:

Is there any data
not included in a

subscription merge?

The only data that is not currently included in a merge is subscription-level custom fields (workspace-level
custom fields are moved), watches, and webhooks. Rally support can move watches to the destination
subscription after the merge, and subscription administrators can re-create webhooks following the merge
as needed.

How many licenses
do I need to do a

subscription merge?

The merge process takes into account the number of seats from each subscription and accounts for them
in the merged destination. That is, total license count increases in the destination subscription to account
for the source subscription seats as well. If you have a certain number of seats that you would like to retain
following the merge, please let your account representative know. Note: All users will be moved during a
merge, but some may need to be disabled by a subscription administrator if the desired seat count is lower
than the active user count.

What happens if the
password policies

between the source
and destination
subscriptions
are different?

If the source subscription has weaker password policies than the destination subscription, the users from
the source subscription are prompted at the time of login into the merged subscription to change their
password due to the strength change. If the destination subscription has weaker password policies, then
the new password prompt does not occur.

What permissions
will the workspace

administrators of the
source subscription

have after the merge?

Workspace administrators of the source subscription become workspace administrators of the destination
subscription after the merge.

What happens if the
two subscriptions

have duplicate
workspace names?

Best practice is to update your workspace names to be unique prior to merging.

Will my subscription
be available

during the merge?

No, both subscriptions have to be closed during the merge process.

What if something went
wrong with the merge?

The merge process will automatically rollback in the event of a merge failure, and no changes will be made.

 249



 Rally®

How to Authorize a Subscription Merge

After submitting a signed order form to Rally Sales, both subscription administrators must enter their credentials into Rally
to authorize the merge of two subscriptions, otherwise called a subscription merge.

The most efficient way to begin is to create temporary Subscription Administrator users in both subscriptions for Support
to utilize through the merge process. The only function that will be done with these users is to approve the merge. After
the merge is complete these users will be removed. If you choose to go this route, these accounts can be created using
the format of rallyadmin1234@domain.com for the username, where 1234 is your subscription ID and domain is your
domain, and set rallysupport@rallydev.com as the email address.If you would prefer to not create these users in your
subscription and do this authorization on your own, please refer to the video below.

Once we have the subscription merge authorized, we can schedule the merge as soon as possible. Subscription merges
can take place on weekdays after 5 PM (Eastern) Monday through Thursday. Subscription merges can take several hours
of downtime.

To start, contact your Rally Account Representative for the merge authorization.

Once ready to begin the authorization, please make sure that subscription administrators from BOTH the source and
destination subscriptions have access to the same computer. This could be in-person, via screen-sharing, or even the
same person with accounts in both subscriptions.

1. As the subscription administrator for the source subscription, login to Rally.
2. Select Setup

,
then go to the Subscription tab.

3. Under the Actions menu at top-right, select Authorize Merge.
4. The source subscription administrator's credentials will be pre-populated. Please enter the credentials for the

destination subscription administrator.

5. Select Authenticate.
6. On the next screen, confirm the details of the merge. If everything is correct, select Authorize.

 250

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Please refer to the below video for a demonstration of this process:

Workspace Move
A workspace move is required anytime you need a workspace moved out of its current subscription and into an existing
or new subscription. A workspace move moves all data from a workspace in one subscription (the source subscription)
into an existing or new subscription (the destination subscription). Only subscription administrators will be able to see that
there are more workspaces and additional users in the destination subscription.

A workspace move moves all data from a target workspace in one subscription (source subscription) into an existing or
new subscription (destination subscription). Only subscription administrators can see additional workspaces and users in
the destination subscription. If you need to move data between workspaces, contact your Sales Rep for assistance.

Workspace moves typically take from two to three hours to complete. Data moves between workspaces within one
subscription are not considered a workspace move.

NOTE
Only users associated exclusively with the target workspace are moved with the data to the destination
subscription. Users associated with more than just the target workspace do not move with their data.

 251



 Rally®

NOTE
Rally cannot perform a workspace move for a subscription with only one workspace. You can either create a
new workspace to serve as the surviving workspace in the subscription or Rally can use the subscription merge
process to provide the same end result.

A workspace move entails the following:

1. You submit a signed order form.
2. Use the Workspace Permissions tool to ensure that all users that need to move with the target workspace have access

to only that workspace. See instructions for downloading and installing the tool here.
3. You work with Rally Support to plan the move.
4. You coordinate with the Subscription Administrators of the source and destination subscriptions to alert all users of the

planned downtime.
5. Rally Support schedules and completes the move.
6. Rally notifies you after the move is complete.

Watch a short YouTube tutorial on how to complete a workspace move, including how to verify permissions of workspace
users.

Workspace moves typically take 2–5 hours to complete, during which time the source and destination subscriptions will be
unavailable. Data moves between workspaces within one subscription are not considered a workspace move.

Workspace moves can be scheduled on weekdays Monday - Thursday between 3 PM - 5 PM Mountain time. Workspace
moves will not be performed during midnight of the default timezone that is set on the source workspace. Users will not
have access to either the source or destination subscriptions during the move.

NOTE
The notification email you receive to confirm your move is complete may be delayed; if you are able to log in to
Rally, the move is complete and you will be receiving the workspace move complete notification soon.

WARNING

• Custom user fields that are created at the Subscription level will not move along with the workspace since
these fields are specific to the Subscription and not the Workspace.

• Subscription level apps will not be moved and will be deleted from pages.
• Only users associated exclusively with the target workspace will move with the data to the destination

subscription. Users associated with more than just the target workspace will not move with their data. This
includes active and inactive workspaces. Administrators must check that users they want to move only
have permissions to the target workspace. You can use the Workspace Move tool to identify users and
workspaces. Learn more.

• Subscription administrators will not move with the target workspace. A current subscription administrator
that needs to move with the target workspace will need to have another subscription administrator from the
source subscription change their administrator permission from Yes to No.

• Watches and Webhooks are not moved to the destination subscription and will need to be recreated. It
is recommended that users export the list of their Watches, and administrators export a list of existing
Webhooks, prior to the data move.

All workspace moves must be submitted by a signed order before a move can be scheduled. If you need to schedule a
workspace move and have not submitted a signed order, please contact your Rally sales representative to have the order
form sent to you. Once you have submitted the signed order form, your sales representative will engage Support, who will
contact you to schedule the move.

At the time of scheduling, Rally Support will re-confirm with you that all your users—including all other subscription
administrators—are aware of downtime and know not to contact Rally Support for outage issues.

 252

https://knowledge.broadcom.com/external/article?articleId=95002
https://knowledge.broadcom.com/external/article?articleId=95002
https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

NOTE
The final scheduling email is the final communication prior to the move taking place. Rally will not send another
email prior to the move. You will need to reply to the scheduling email with confirmation that you understand the
following:

• Rally will be inaccessible during the move
• You are responsible for communicating downtime with your users (click here to watch a video on how to

export a list of usernames for email)
• Confirm the scheduled time and expected duration

Frequently Asked Questions
How does a workspace

move work?
At a high level, we move (copy) all of the workspace data from the source subscription into the destination
subscription. Let's take a simple example. Before the workspace move, you may have two subscriptions
with the following workspaces:

However, what you really want is for "Workspace 2" to be in "Subscription 2". This is what the workspace
move will do. Here's what it will look like after the move:

What if one or both
workspaces is in a
subscription using
CMK encryption?

A data move (subscription merge or workspace move) cannot be authorized or executed if:

• Either subscription has data present that was encrypted using old subscription KMS configs (this can
be seen in the CMK Details section of your Subscription page). This only happens after a previous
data move where the source data was encrypted, but an Encrypt Remaining was not done afterward.
Subscriptions with this type of data will need to re-encrypt their data with Encrypt Remaining prior to
authorization or execution. Learn more.

• Either subscription has a batch encryption/decryption/purge process currently in progress. All jobs must
be complete prior to authorization/execution. Learn more.

• The source subscription has encrypted data and the destination subscription does not have CMK
enabled. Contact Rally support for help.

You will need to run an Encrypt Remaining after the data move.

Does a workspace
move cause the work
item ID's to change?

No. The the formatted ID (ex: US4) for a work item is unique to a workspace. This means you can have
several User Stories with the same Formatted ID - one per workspace - across your subscription.

 253

https://youtu.be/1ZSddS7JuJo


 Rally®

Does US4 potentially
become US432?

Does the work item
revision history

get retained?

Yes. The tables are moved/copied into the new subscription.

Do OIDs change
after the move?

No. OIDs remain the same so any queries against them will not need to be updated.

Does cumulative flow
data get retained? Can

iterative burndown
data for an old

iteration still be seen?

Yes. The tables are moved/copied into the new subscription.

Sandbox Requests
The sandbox server is used by some customers to test various setups, integrations with other software, and work models.

There are no contractual uptime agreements or SLAs for the Sandbox environment. However, we have an operational
working agreement to keep Sandbox up during business hours (8 AM – 5 PM Mountain time) and to avoid downtime prior
to 6 PM (Mountain) unless absolutely necessary. We make our best effort to avoid downtime during peak business hours.

Before you initiate a Sandbox request, be aware of the following guidelines:

• You must have either an Unlimited or an Enterprise Edition subscription. Community Edition subscriptions and Trials
are not eligible for this service.

• Your subscription administrators must make the request by contacting support.
• You are limited to one sandbox refresh per quarter year, totaling four refreshes in a year.
• Sandbox refresh requests can take up to 10 business days to complete.

NOTE
If you access Rally on the European datacenter (https://eu1.rallydev.com), you do not have access to a sandbox
server.

Access the Sandbox Environment

1. To access the sandbox environment, open a browser and enter: https://sandbox.rallydev.com/slm/
login.op

2. From there, enter your subscription credentials.
3. If you employ SSO in your production subscription, you will need to use your full login name (for example,

kkong@empirestate.com ).

 254

https://rally1.rallydev.com/slm/help.sp?pp=contact
https://eu1.rallydev.com


 Rally®

Using
Learn how to use Rally to plan, manage, and track your work effectively. This section contains detailed descriptions and
instructions for understanding and using all of the core features in Rally.

• Work Efficiently in Rally
• Building Your Backlog
• Use Timeboxes
• Use Flow-Based Boards (Kanban)
• Using Portfolio Items
• Using Objectives and Key Results (OKRs) in Rally
• Check Status
• Managing Defects and Defect Suites
• Managing Tests
• Managing Risks

Work Efficiently in Rally
Here's an overview of helpful pages and shortcuts to help you work more efficiently in Rally.

• Keyboard Navigation
• Customizing Pages and Views
• Common Tasks
• Common Pages and Elements
• Missing Work Items
• File a Feature Request

Keyboard Navigation
Use keyboard navigation on various Rally pages to expedite data entry and editing.

Rally provides conventional keyboard access to and escape from navigation menus.

• You can activate keyboard navigation with Enter or Space.
• Main navigation menus use Esc to return focus to the menu.

Drag-and-Drop • Rerank: You can drag-and-drop by focusing on the drag handler, then pressing Enter or Space to
initiate rerank mode. Use the Up Arrow or Down Arrow to rerank the item.

• Split a user story: You can drag-and-drop by focusing on the drag handler, then pressing Enter. Use the
Right Arrow or Left Arrow to move tasks, defects, or test cases between the historical and continued
user stories.

Board Column Headers • Left Arrow or Right Arrow: Navigate between column headers.
• Space or Enter: Expand or collapse the selected column.

Swimlane Headers • Up Arrow or Down Arrow: Navigate between swimlane headers.
• Home: Focus on the first swimlane header.
• End: Focus on the last swimlane header.
• Space or Enter: Expand or collapse the selected swimlane.
• Tab to enter swimlane content.

 255



 Rally®

Cards/Board Columns • Left Arrow or Right Arrow: Navigate between columns. Focus will go to the first card in the column or
to the column if it is empty.

• Up Arrow or Down Arrow: Navigate between cards within a column
• Page Down or Page Up: Navigate between swimlanes. If the target swimlane is collapsed, focus will go

to the header of the collapsed swimlane.
• Tab to enter card content.

Dialog Boxes • Tab to navigate to the next dialog element, Shift+Tab to move to the previous dialog box element.
• Press Enter to submit the dialog box, press Esc to cancel the dialog box.
• When a dialog box has multiple tabs, the tab list can be reached either with Alt+F10 or with Tab as

part of the dialog box tabbing order. With tab list focused, move to the next and previous tab with Right
Arrow and Left Arrow, respectively.

Editor Context Menu • Shift+F10, Shift+Command+F10, or APPLICATION KEY: Open the context menu.
• Tab or Down Arrow: Move to the next menu option.
• Shift+Tab or Up Arrow: Move to the previous menu option.
• Space or Enter: Select the menu option.

– Space or Enter or Right Arrow: Open sub-menu of current menu item.
– Esc or Left Arrow: Go back to parent menu item.
– Esc: Close context menu.

Editor List Boxes • Tab or Down Arrow: Move to the next list item.
• Shift+Tab or Up Arrow: Move to the previous list item.
• Space or Enter: Select the list option.
• Esc to close the list box.

Keyboard Shortcuts
General keyboard navigation is available when viewing data in Rally (when you are not in an editable field). You may use
it to quickly navigate to a new location or create a new work item.

Use the ? key (Shift+/) to display a list of available general shortcuts. The list shows any shortcuts that you may use,
depending on the page or work item you are viewing.

NOTE
Keyboard shortcuts may not respond when using a Custom URL app running another website in Rally.

Navigation Shortcuts

Use these keystrokes from any location in Rally to quickly move to another page.

Keystroke Action

G, then A Go to the My Dashboard page

G, then B Go to the Backlog page

G, then D Go to the Defects page

G, then I Go to the Iteration Status page

G, then P Go to the Team Planning page

G, then R Go to the Release Task Status page

G, then S Go to the User Stories page

G, then T Go to the Tasks page

Esc Cancels any shortcut after pressing G

 256



 Rally®

Create a Work Item Shortcuts

Use these keystrokes from any location in Rally to create a new work item without leaving the page. Using one of these
shortcuts opens a detail editor for the specific work item type.

Keystroke Action

C, then D Creates a new defect

C, then S Creates a new user story

C, then T Creates a new test case

Esc Cancels any shortcut after pressing C

Search Shortcut

The following shortcut is available when you are not currently in an editable field.

Keystroke Action

/ Moves your cursor to the search field on the page

Inline Edit Shortcuts

Inline edit shortcuts are available from a variety of list view pages.

To use these shortcuts, you must first be in inline editing mode. To enter this mode, select any editable field on the page.

Left or Right Arrows Moves to the next field to the left or right.
Enter Initiate an edit in the selected field.

Up or Down Arrows • Cycles through the list of available values when a drop-down list field is highlighted. Press Enter to
select and save a value.

• Moves to the next row up or down.

Esc Exits inline editing mode, cancels any pending changes.

Rich Text Editor Toolbar Shortcuts

Some keyboard shortcuts are available when working in rich text fields. Rich text fields are located in work item editor
windows. A field that has this toolbar is rich text.

Alt+0 Display accessibility help
Alt+F10 Moves focus from the editor to the toolbar. Use Tab or Shift+Tab to move between toolbar groups. Use

Right Arrow or Left Arrow to move between toolbar buttons. Press Enter or Space to activate the toolbar
button.

Esc Moves focus from the toolbar to the editor
Ctrl+U Underlines text
Ctrl+I Italicizes text
Ctrl+B Bolds text
Ctrl+Z Undo
Ctrl+Y Redo
Ctrl+K Add a link

 257



 Rally®

Customizing Pages and Views
This section provides instructions and helpful tips for customizing the pages and views that you use frequently in Rally.

Customizing these pages and views helps to ensure that you are seeing the information that you need to work efficiently.

• Controlling What Projects You See
• Customizing How a Board Displays
• Customizing How a List Displays
• Customize Navigation
• Saving and Sharing Views

Controlling What Projects You See
You can control what workspace and project to show data from.

In general, projects represent teams within your organization.  You can scope your view to a specific team, a parent
team and its children or a child team and its parent.  Projects (teams) are a representation of the work items associated
with them  such user stories, requirements, test cases, and defects. Each team or project retains a unique schedule
of releases, iterations, and tasks, but can share the over-arching work items of the parent project. Project scoping is
instrumental in tracking and managing large projects, projects containing multiple modules, or dispersed development
teams.

Your project options are determined by your workspace.

A workspace sets context for your projects. You can create multiple workspaces within your Rally subscription. Each
workspace can be divided in to multiple projects. You can share and view data between projects within a workspace, but
not across different workspaces.

A project usually represents a team and  is a collection of work to be done that is scheduled in to releases and iterations.
You can create a hierarchy of projects to represent multiple teams or products that mirror your company's development
structure.

You can control what workspace and project to show data from using the project picker. When you change the scope for a
project, you might do any of the following actions:

• Select a Workspace
• Select a Project to View
• Select Multiple Projects to View
• Specify a Default Project
• Assign a Work Item to a Project
• Scoped Work Item Relationships

Select a Workspace

You can only see projects within a single workspace at a time. If you want to view a project that resides in a different
workspace, you can change your workspace selection.

1. Select the Workspace drop-down located in the upper-left corner, next to the Project drop-down list.

Select a Project

Your development process might include a single project or multiple projects. Use the drop-down list on the upper-left side
of the page to change your project perspective in the Rally application. You can select a different project from the drop-
down list and change your project access in real time. Your currently selected project is always displayed in the project

 258



 Rally®

box.You can also choose to view the children or parent projects of the selected project at the same time.You must be in
project mode to view project data.

1. Select a project from the drop-down list located in the upper-left corner.
2. Optionally, select Search

to search for the project to select.
3. To select multiple projects, select the Show Items From check box and select Parent Projects, Child Projects, or

both.

Viewing Multiple Projects at Once

If you want to see work items from multiple projects, you can use the Show items from check boxes in the Project drop-
down list to choose additional work items you can view from your selected project.

You can specify to view work items from projects above, below, or both directions in the project hierarchy. When you
include other projects in your hierarchical project view, you will see work items from the additional projects. Only those
projects with a state of Open are available for viewing.

When filtering by project on a list page, you can filter by multiple projects.

Rally provides the following options for viewing multiple projects at once:

• Parent project: Contains work items that are shared across all associated child projects. The parent project includes
all levels of child projects.

• Child project: A partitioned view of the parent project. It contains those work items that have been assigned to the
individual child project, as well as those assigned to the parent project. Child projects do not display the user stories,
requirements, test cases, and defects of other peer child projects

NOTE
You can create a work view to include a project column and sort this column to help you identify the project
location of shared work items.

• If no check boxes are selected, your view displays only those work items for the selected project. This scope is best
suited to those users that work in a single project.

• If the Parent Projects check box is selected, your view displays all work items for the selected project and all other
projects above it in the project tree. This scope is for users that need to track work items shared between teams. You
can locate unassigned work items, manage the backlog, and assist with planning activities.

• If the Child Projects check box is selected, your view displays all work items in your current project and all other
projects below it in the project tree. This scope is for users who need to see the status of a large project or product with
multiple child projects.

• If both check boxes are selected, your view displays all work items in your current project and all other projects above
and below it in the project tree. This scope is helpful for product managers with multiple project teams working on a

 259



 Rally®

single product. Use this scope to view work items in child projects plus any over-arching user stories for the business
unit.

1. Select a project from the drop-down list located in the upper-left corner.

2. In the Show Items From section, select Parent Projects, Child Projects or both.

Configure a Default Project to View

You can specify a project to be your default selection. Your default project is selected each time you log in to Rally.

To change your default project:

1. Select My Settings (your profile picture) from the Rally navigation bar and select Edit Profile.

2. On the Edit Profile page, scroll the right panel until you see the Default Project field.

3. Select a project from the Default Project drowp-down list..

4. Select Save.

Assign a Work Item to a Project

You can associate work items with projects. When you create a work items, this field is automatically populated with the
name of the current project in which you are working. You can change a work item to a different project in either a single
or multiple setting.

To assign a single work item to a project, edit the work item and select a new project value from the Project field drop-
down list.

NOTE
To edit the Project field using the multi-edit function, create a custom view that displays the Project field, then
multi-edit your custom view.

Project Scoped Work Item Relationships

Work item Project scoped relationships

User story A user story may have:
• A parent portfolio item in the same or different project
• Child user stories in the same child project
• Defects or test cases in the same child projects

Defect A defect may have:
• A user story or test case in the same project or parent project
• A duplicate in the same project, parent project, or child project

Defect suite A defect suite may have a defect in the same project or child
project.

Test case A test case may have a work item such as a user story or a defect
in the same project or parent project.

Customizing How a Board Displays
The board view allows you to easily view, find, and manage your work in one place. You can customize how it appears
depending on your needs. Cards allow you to view and update items on the board.

You can customize the data that displays on your board by adding filters. Learn more.

 260



 Rally®

You have several other options for customizing your board, including:

• Select Fields to Display on Cards
• Add Swimlanes
• Document Exit Agreements
• Collapse Columns
• Set Display Preferences on Board Pages

Select Fields to Display on Cards

You can customize what fields display on the cards.

1. On a board view, select Show Fields.

2. Select the fields to display on the card.

 261



 Rally®

  You can also de-select fields so that they do not display on the card.

3. Select Apply to save your changes.

Add Swimlanes

Swimlanes are horizontal rows that can be applied to a board for a team to easily visualize work items by category or sub-
process. They show different types of demand more clearly. A swimlane helps you visualize a specific attribute, such as
expedite.

You can display up to ten swimlanes with a default of 15 cards per swimlane column. The top of each swimlane column
lists the total number of cards in the swimlane.

 262



 Rally®

Fields available for use as swimlanes vary depending on the work items that the board displays.

1. On a board view, select Swimlanes.

2. In the Swimlane By field, select the field you want to use to create the swimlane.

Select --No Entry-- to return to the standard view. The board automatically updates.

3. If needed, select the Load More Results indicator to expand the view to more swimlanes or more cards.

Document Exit Agreements

You can use Exit Agreements to document the criteria that needs to be met before a card can move into the next column.
You can document your exit agreements within your team board for team members to reference at any time.

In each column, the exit agreement is the team's commitment to complete a certain list of activities before allowing
work to be pulled into the next column. This list typically takes the form of a set of testable statements, such as Code
review comments resolved or Installed in staging environment. When observing the board, you can look at a single card's
position and be assured that every policy to the left of this card has been met and act safely on that information.

As a result, exit agreements answer the question: What does it mean for work to be in this state? These per-column
policies help convey clear expectations to stakeholders and anybody else viewing a team's board. This goes a long way to
resolving misunderstandings between the team and their stakeholders, creating a stronger, more trusting relationship.

Using exit agreements as a checklist allows individuals to focus on leveraging their skills to achieve the product's goals
and reduces the stress factor of having to remember each aspect of the team's commitment. This is also helpful to new
team members as they learn the team's behaviors and norms.

View Exit Agreements

By default, the Exit Agreement fields are hidden from the board.

1. Navigate to your board.
2. Select Show Exit Agreements to show or hide exit agreements.

Edit Exit Agreements

After working with your team on what your team's exit agreements for each column should be, you can add or edit exit
agreements to the board for everyone to reference.

• You must have workspace or subscription administrator rights to edit exit policies.
• The Exit Policy field is limited to 4K of data, including formatting.
• Copying text from another rich text editor such as Word or Google Docs may inflate the amount of formatting data.

1. Navigate to your board.
2. Select Show Exit Agreements to show or hide exit agreements.

3. Within each column, add or edit the exit agreement to state what your team has agreed to.
4. Select Show Exit Agreements to hide the exit agreements.

 263



 Rally®

Collapse Columns

You can collapse columns to increase screen real estate and to customize the focus of your board. You must have at least
one column expanded. Keep in mind that you cannot drag-and-drop cards to a collapsed column. If you want to drag-and-
drop a card to a collapsed column, hover the card over the column to expand the column.

Select Expand

in the column header to collapse or expand a column.

Set Display Preferences on Board Pages

You can choose between three page display preferences. Your selection applies to all pages in Rally with a board or list.

Consider Roomy when you want to see as much of the information about one work item at a time, such as when you're
discussing the details of a specific story. Try Compact for times when you're scanning a list of work items, such as when
you're checking the schedule state of all stories in a release. Comfortable is helpful when you're sharing your view with a
group of people and it's important to be able to read the display. Try each to see what works best for your current needs
and the size of the display you’re using.

NOTE
You can set your display preferences from the Display Preferences menu or the button at the top right corner of
each page. The button displays your current display preference. Select it to choose a different option.

 264



 Rally®

1. Select your profile image, then select Display Preferences.

2. Select one of the options. When you select an option, you can see a preview of the setting.
Roomy Individual row heights adapt to your data to display everything with lots of padding for optimal readability.

This is the default setting.

Comfortable Standardizes row heights and truncates data when necessary for a balance between space and data
density.

Compact Maximizes real estate for data density by making things smaller, reducing padding and truncating data.

3. Select Save.

Customizing How a List Displays
The list view allows you to easily view, find, and manage your work in one place. You can customize how it appears
depending on your needs.

 265



 Rally®

You can select a column heard to sort the list by the contents of that column. Select the column again to reverse the sort
order. For example, when viewing defects you can sort by the rank column to either see the highest or lowest ranked
items first in the list.

You can reorder columns (except for Rank, ID, and Name) by dragging and dropping the column header to the new
location.

You have several additional options for customizing your list, including:

• Customize Number of Columns to Display
• Customize Number of Work Items Displayed
• Set Display Preferences on List Pages

Customize Number of Columns to Display

You can customize which fields are used as columns in a list view. To ensure consistent performance, the number of
columns you can display on a list view varies per page.

NOTE

If you choose to use more than 25 columns on a list view (including required columns), you can only display up
to 50 rows per page.

1. On a list view, select Show Fields.

2. In the Show Columns dialog box, select or clear the corresponding check box next to each field you want to display in
the list.

3. Select Apply to save your changes.

Customize the Number of Work Items Displayed

You can customize the number of work items shown in a list view. By default, 25 work items display.

NOTE

If you choose to use more than 25 columns on a list view (including required columns), you can only display up
to 50 rows per page.

At the bottom of the left side of the page, select the number of work items to display.

Set Display Preferences on List Pages

You can choose between three page display preferences. Your selection applies to all pages in Rally with a board or list.

Consider Roomy when you want to see as much of the information about one work item at a time, such as when you're
discussing the details of a specific story. Try Compact for times when you're scanning a list of work items, such as when
you're checking the schedule state of all stories in a release. Comfortable is helpful when you're sharing your view with a
group of people and it's important to be able to read the display. Try each to see what works best for your current needs
and the size of the display you’re using.

 266



 Rally®

NOTE
You can set your display preferences from the Display Preferences menu or the button at the top right corner of
each page. The button displays your current display preference. Select it to choose a different option.

1. Select your profile image, then select Display Preferences.

2. Select one of the options. When you select an option, you can see a preview of the setting.
Roomy Individual row heights adapt to your data to display everything with lots of padding for optimal readability.

This is the default setting.

 267



 Rally®

Comfortable Standardizes row heights and truncates data when necessary for a balance between space and data
density.

Compact Maximizes real estate for data density by making things smaller, reducing padding and truncating data.

3. Select Save.

Customize Navigation
You can customize Rally to make it easier to access only those pages that you need in your workspace.

This is useful if you work with multiple teams or only access some pages in Rally.

Use the following tasks to customize your classic Rally experience:

• Set Your Start Page
• Hide Pages
• Search for a Specific Page

Set Your Start Page

You can specify the page to display when you start Rally.

1. Select the top-level tab that includes the page you want to specify as your start page.

2. Select the Edit

to enable editing in the menu. A gear

appears next to each of the pages.

3. Select the gear

next to the page you want and select Set as Start Page.

 268



 Rally®

4. The new start page takes effect the next time you log in.

Hide Pages

You can hide pages that you don't want to see.

"(Hidden)" is added to the page name that you see while you are in edit mode.

1. Select the top-level tab that contains the page you want to hide.

2. Select Edit

to enable editing in the menu. A gear

appears next to each of the pages.

3. Select the gear

next to the page you want and select Hide from me.

 269



 Rally®

4. To unhide a page, select Unhide from me from the gear

.

Search for a Specific Page

Each tab includes a search icon that searches in the current tab as well as other tabs.

1. Select a top-level tab.

2. Select Search

.
A search field displays.

 270



 Rally®

3. Enter the term to search for.

Pages in the current tab that match your search criteria display, along with any results from other tabs.

Personalized Navigation

Customize your Rally experience by saving the most relevant pages to you in your navigation sidebar.

This is useful if you work with multiple teams or only access several pages in Rally. Personalized navigation makes it
easier to access what you need in your workspace.

Enable Personalized Navigation

You need to enable personalized navigation.

1. Select your profile image, then select Personalized Navigation.
2. Select the check box next to Personalized_Navigation and select Save.

Select Projects

If you work with or support multiple teams, you can save those teams in your My Projects selector for quick access to any
relevant pages for them.

Once you add a project, it is automatically pinned to your My Projects selector. To delete a project from My Projects,
hover over the project and select

.

To order the projects listed in My Projects, select the project name and drag and drop it to the desired location.

1. Select the ellipsis (‧‧‧) next to Projects.
2. From the projects selector, select All Projects.

 271



 Rally®

3. Select

.
The project will display in your My Projects view.

Select Pages to View

You can save multiple pages in your sidebar to help keep track of your work.

You can order the pages listed in your sidebar by selecting the page name and dragging it to the desired location.

NOTE
You can select the Recycle Bin page and pin it from the page selector.

1. Select

in the top left corner to open the sidebar.

 272



 Rally®

2. Select the ellipsis (‧‧‧) next to Pages. All available pages for the project or projects you selected display, including any
custom pages.

3. Do one of the following:
– To view a page, select the page name.
– To save a page to your navigation sidebar, select the

next to the page name. You can also use this icon to delete a page from your personalized navigation list.
– To specify a page as your start page from the page selector, select the gear next to the page you want and select

Set as Start Page.
– To create a custom page, select

next to Custom in the page selector.

Project Scoping

If you have a project in your project selector that has child projects, you can set the scoping to include all children or
specific projects. You can also choose to scope to other workspaces to which you have access.

1. Select the gear in the bottom corner of the navigation pane.

 273



 Rally®

2. To show work from child or parent teams, select Show Scope Options.
3. To view other workspaces in your subscription, select Show Workspaces. To scope to different workspaces, select

the ellipsis (‧‧‧) next to Workspaces for a list of workspaces in your subscription to which you have access. You will
need to set up your project and page preferences for each workspace.

Saving and Sharing Views
You can save and share views on most pages within Rally.

You can set up and save your modifications to a page so you can view them later. A saved view includes your filters,
grouping, displayed fields or columns, items per page, and scoping. After saving a view, you can update it to new settings
and change its sharing settings at any time. For example, you can save a view of a board that uses certain filters or
swimlanes. For list pages, you can also configure which fields to use as columns and more.

You can do this on most Rally pages as well as within some detail editor collections. Learn more about collections.

You can share saved views with team members if you have the proper permissions.  Project administrators can share
with a project (team) and workspace administrators can share with the entire workspace. Users without either of these
permissions cannot share views with others.

NOTE
On the Portfolio Items page and the Portfolio Kanban page, the portfolio item type is automatically included next
to the view name within the drop-down list.

Watch a short YouTube tutorial on how to save and share views in Rally.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

Save a New View

When you want to save the settings of a page for later use or to share with your team or others, you can create a saved
view. You can customize the settings on the page that you want to save. This can include filters, grouping, displayed fields
or columns, items per page, and project scoping.

NOTE
Remember that the number of items per page is saved as part of your new view.  For example, if you save a
view that is using 25 items per page and want to change it to display 50 items per page, you must edit the view
and save it with the new items per page setting.

1. Select Save As New View from the Saved Views drop-down list.
2. Enter a name for the view.
3. If applicable, select the appropriate sharing option from the Sharing drop-down list.

 274



 Rally®

Only users with workspace or project administrator permissions can share views.
4. Select Save.

Clear the Current View

When you want to reset your page view to the default setting, you can clear your current view. Clearing your current view
removes any applied saved views or filters. Your saved view is not deleted.

1. Select Clear View from the Saved Views drop-down list.

Share a View

You need to have project or workspace administrator privileges to share a view with your project or workspace. Your
permissions determine who you can share a view with, either your project (team) or the entire workspace.

1. Select Manage Saved Views from the Saved Views drop-down list.
2. Navigate to the view that you want to share.
3. If applicable, select the appropriate sharing option from the Sharing drop-down list.

Only users with workspace or project administrator permissions can share views.
4. Select the X in the upper-right corner to close the Manage Saved Views dialog box.

Share a View Using a URL

Using your browser's address bar, you can share the URL to a saved view. The recipient must have permissions to the
project or workspace to view the URL.

1. Select the Saved Views drop-down list.
2. From the drop-down list, select the view that you want to share. This will make it the active view for the page.
3. Once the view loads, copy the complete URL from your browser's address bar.

4. Share the URL as needed.

Update a View

You can update a saved view to the current view. If you want to change the settings of an existing view, but still keep the
same name and sharing settings, you can update it.

1. Select the Saved Views drop-down list.
2. Select the view that you want to view or change. This will make it the active view for the page.
3. Make any changes to the page or board settings. 
4. Select the Save Changes button next to the Saved Views drop-down list.
5. Select Save to confirm your changes.

Change the Name of a View

You can only change the name of a view if you created the view or have the appropriate project or workspace
permissions.

1. Select Manage Saved Views from the Saved Views drop-down list.
2. Navigate to the view that you want to rename.
3. Select the name of the selected view so you can edit it. Enter the new name in the text box.
4. Select the X in the upper-right corner to close the Manage Saved Views dialog box.

 275



 Rally®

Delete a Saved View

You can delete a view from the Saved Views list. Rally recommends that you only delete views that you have created.

Be careful that you do not a delete a view that is currently being used by others. When you delete a view, it is permanently
deleted and you cannot restore it.

NOTE
Shared views can only be deleted by users with the permission to share views, such as workspace or project
administrators.

1. Select Manage Saved Views from the Saved Views drop-down list.
2. Select the check box of the view you want to delete.
3. Select Delete

from the toolbar.
4. You are warned that the deletion cannot be undone. Select Delete again to confirm the deletion.

Common Tasks
This section describes some of the common actions and tasks that you might perform frequently in Rally.

• Common Actions
• Bulk Actions
• Using Filters
• Convert Work Items
• Search Work Items
• Watching Work Items
• Using HTML Tags in Text Fields

Common Actions
Common actions are those actions that are used in multiple work items. In each case where these actions are performed,
their behavior is the same.

The following are common actions:

• Action Button Menu Options
• Actions Icon Options
• Printing List Views
• Save
• Row Action Icons

Your ability to perform any of the common actions is dependent upon the user role and permissions you have been
assigned for the workspace.

Actions Button Menu Options

Some pages in Rally have an Actions menu that performs multiple activities.

 276



 Rally®

The options on the menu vary, based on the page that is displayed. The following table lists the available actions on the
Actions menu.

Option Description

Edit Release Edit the displayed release.
Export to CSV Export to a CSV (Comma Separated Value) file.
Inline Add Inline add a new work item directly to the summary page.
Print Report Print a summary or detail report. Where multiple work items are

presented in a single page, all work items in a hierarchical display
are printed for both the summary and detail report.

Schedule New (work item) Create a new work item. The new work item is automatically
scheduled into the displayed iteration.

View Charts Display any charts available for the iteration or release.

When you export, the work items exported will vary based on the work item summary page accessed.

Actions Icon Options

Some pages in Rally have an Actions icon

(
or

) used
to perform multiple activities.

The options of the Actions icon may vary based on the page displayed.

Option Description

Export to CSV Export to a CSV (Comma Separated Value) file. In some cases
where a summary page displays a variety of work items, this
option displays with a specific work item named for export, such
as Export Test Cases to CSV.

Export to XML Export to an XML file. In some cases where a summary page
displays a variety of work items, this option will appear with a
specific work item named for export, such as Export Test Cases to
XML.

 277



 Rally®

Option Description

Import Import from a CSV (Comma Separated Value) file. In some cases
where a summary page displays a variety of work items, this
option will appear with a specific work item named for import, such
as Import User Story.

Print Print a summary or detail report. Where multiple work items are
presented in a single page, all work items in a hierarchical display
are printed for both the summary and detail report.

When you export, the work items exported will vary based on the work item summary page accessed.

Print List Views

Print functionality is not directly available on the list view pages (Backlog, Defects, Iteration Status, Portfolio Items, User
Stories, Work Views). However, you can export your work item list to a CSV file.

You can use your current view or select additional fields for your export. Once the file is exported, you can open that file in
your preferred tool and print it.

1. Select Import/Export

and select one of the following:

• Download CSV of this view: Create a CSV file using the fields currently selected on your window
• Download CSV with more columns: Select additional fields to include in the CSV file

2. Use an application such as Microsoft Excel to view the downloaded CSV file.

3. Use the application to print the list.

Save Work Items

Whenever you create, copy, or edit a work item, you have several save options:

• Save and Close: Save the work item and close the window
• Save and New: Save the changes and close the work item being created, edited, or copied, and open a new page in

its place
• Save: Save any changes and keep the current window open

Saving often permits you to capture a detailed revision history for changes and updates made to your work item.

Row Action Icons

Some status pages in Rally feature various row action icons used to perform multiple activities.

The row action icons may vary based on the summary page displayed, but perform the same action. In Rally, hover over
any icon for a brief description of its purpose.

You may see these icons on the following pages:

• Team Status
• Release Status
• Work Product Status

 278



 Rally®

The following table lists the available row action icons available from the various summary pages:

Row Action Icon Action

Edit

Copy

Print

Delete

Show detail from hover

A user story has one or many predecessors

A user story has one or many successors

A user story has both predecessors and successors

Remove a user story predecessor

Inline add a new test case

New test case using the editor

Add a child test folder

Add a test case to a test folder

New test case result

Inline add a new defect

New defect (Editor)

Add defects to defect suite

Remove defect from defect suite

Inline add a new task

Add a new task (Editor)

 279



 Rally®

Row Action Icon Action

Copy tasks from

Add a child user story

New project

New child project

Inline save and new

Save inline edit

Cancel inline edit

Rank work item through drag-and-drop and reorder tasks; you
must sort the page by rank and enable drag-and-drop ranking in
order for this icon to appear in the left side of the row

Bulk Actions
Perform bulk actions to edit, delete, restore, and permanently delete work items. Bulk actions give you the ability to modify
multiple work items at once. You can update multiple field values, such as moving all user stories to a new sprint and
iteration. Users with editor permissions can delete and restore work items.

Unsupported Fields

When editing multiple work items at once, you can edit most fields, including custom fields. However, you cannot edit
some standard fields and types of custom fields. The following table lists fields you cannot edit when editing multiple items
at once.

Work item type Fields

All work items • Rich text fields (Description, Notes)
• Rank
• FormattedID

Custom fields • Text fields
• Web link fields
• Multi-value drop-down list

Tasks • Project
• Task Index

Test cases • Rich text fields (Expected Result, Validation Input)
• Test Case Result

Portfolio items • Type

This section includes the following topics:

• Edit Multiple Work Items
• Bulk Delete Work Items

 280



 Rally®

Edit Multiple Work Items

You can edit one or multiple work items at once on most list pages and edit most fields. You can update parent-child
relationships, as well as associate related work items. You can edit up to 500 work items at a time.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

You can select up to four values to update across the checked work items. You can only edit multiple fields that apply to all
work items selected in the list. Hidden fields can be edited.

You can also add or change the parent of a group of user stories, or associate a group of tasks, defects, or test cases to
related work items in a single step.

IMPORTANT
You can only associate a defect with both a user story AND a test case if that test case is already associated to
the user story.

• If you bulk edit only the User Story, the Test Case is cleared.
• If you bulk edit only the Test Case, the User Story is cleared.
• If you bulk edit both the User Story and Test Case, the only Test Cases available are those associated with

the selected User Story.

WARNING
If two users edit the same story and one user is in bulk edit mode, the bulk edit user's work will overwrite the
other user's changes. For example, if User1 bulk edits stories A, B and C, and User2 edits the description of

 281



 Rally®

story B, when User1 finishes editing, User2's description will be overwritten with the original description of story
B. However, the changes will still be accessible in User2's history.

1. Navigate to a list page.

2. Select the box of the work item(s).

3. Select Edit

from the toolbar to view the Bulk Edit dialog box.

4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

5. Select Apply to save your changes.

Bulk Delete Work Items

You can quickly delete multiple work items from list pages, like Work Views and Iteration Status.

1. Navigate to a list page.

2. Select the box of the work item(s).

3. Select Delete

from the toolbar.

Using Filters
You can filter most pages to narrow down what displays.

You can define either quick filters or advanced filters. Advanced filters allow you to create more complex filters using
operators and conditions. You can work with quick filters or advanced filters, but you cannot combine the two.

Considerations for using filters:

• Filters function as OR within the same attribute; AND between attributes.
• Filters only apply to work items for a field if valid. For example, STATE = OPEN will not filter out user stories as this

field is not valid for user stories.
• When filtering items with parents, use the Parent field to filter work with user story parents, and the Feature (or name

of your lowest-level portfolio item) field to filter work with portfolio item parents.
• Filtering by the Owner field works differently on the Iteration Status page than on other pages.

• Iteration Status page: The Owner filter considers the owner of the top-level work item (User Story, Defect, Defect
Suite, Test Set), as well as the owner of any associated child work items (Task, Test Cases).

• Other pages: The Owner filter considers the top-level work item only.
• For pages that allow you to select multiple work item types (Work Views, Team Board), filtering on work item-specific

fields (like State or Defect) will still show work items that do not have that field.

This section includes the following topics:

• Use Quick Filters (most pages)
• Use Advanced Filters
• Filter Operators
• Custom Filter Examples

 282



 Rally®

Use Quick Filters

Quick filters allow you to perform simple filtering on one or more fields and the field values you choose.

Quick filters only apply to work items that have the attribute that you are filtering on. Pages that can display more than one
work item type may pull in other work item types. You can limit your results to specific work item types by adding a Work
Item Type filter.

1. Select Show Filters.

2. Select Add or Remove Filters to view the Manage Filters list.

3. Select one or more fields from the drop-down list or use search criteria to add filters. Once you have selected all
applicable filters, select Apply.

NOTE
The drop-down list of fields includes, in parentheses, which work item types the filter will apply to.

The fields you chose display below the toolbar.

4. For each field you chose, select the correct value to use as a filter. For example, if you choose the Feature field,
you can select which features to use as filters. You can select more than one value per field. Use No Entry option to
display work items that do not have a field value.

5. Select Clear Filters to reset the values used by the filters.

Use Advanced Filters

Advanced filters allow you to use more complex operators and create conditions. Using advanced filters, you can:

• Specify a date range.
• Use more operators when defining a filter (other than "=" or "contains").
• Select multiple values for each field. The results will display items that match any of those values.
• Specify how to combine filters.

1. Select Show Filters.

2. Select Switch to Advanced Filters.

3. Select Add Filter to add a field to an existing filter.

4. Select a value from the Field drop-down list to use as a filter.

5. Select an operator from the Operator drop-down list. Available operators are dependent on the field type.

6. Select or enter a value for the field.

7. Optionally, select the Match Filters drop-down list to combine the filters:

• All - Will display only items that have matching content in all active filters. This applies an AND condition between
all filters.

• Any - Will display any work items that have matching content in a single filter. This applies an OR condition
between all filters.

• Custom - Select Custom to display numbers next to each available filter. You may reference these numbers in the
Custom Filter Condition text box to create custom filters. For example, (1 AND 2) OR 3 .

You cannot use a condition that includes a work item type filter in your custom filter. However, you can use
conditions that include a filter based on fields specific to a work item type. For example, a custom filter condition
can include a filter for State (Defect) in order to have custom filter logic for defects.

 283



 Rally®

8. To reset the values used by the advanced filters, select Clear Filters.

Filter Operators List

You can use the following operators when building filters, depending on the work item field selected:

Operator Action description

= Equals
!= Not equal to
> Greater than
< Less than
>= Greater than or equal to
<= Less than or equal to
contains Valid for rich text fields; contains the specified characters entered

in the Value field
!contains Valid for rich text fields; does not contain the specified characters

entered in the Value field

Some fields, such as Parent, Milestones, and Tags let you search for the matching value in the Value box.

NOTE
To filter user story hierarchies with a specific user story parent, use the Parent field. To filter hierarchies with a
specific portfolio item parent, use the Feature field (or the name of your lowest-level portfolio item type).

Custom Filter Examples

You can create custom filter conditions by defining filters and creating conditions using those filters.

(1 AND 2) OR 3 This custom filter returns records (defects, in this case) that match both of the first two filter conditions, or
the third condition.

 284



 Rally®

The result displays all defects with the WSAPI tag that Elmer owns, along with all defects with a Severity
field entry of Crash/Data Loss. This gives Elmer his defects that he needs to address with the WSAPI tag,
and a listing of high severity defects which he can also help resolve.

1 AND (2 OR 3) We can change the syntax of the custom filter by changing the position of the parentheses.

This custom filter returns defects that match both the first filter condition and either of the second or third
conditions.

The result displays all defects that Elmer owns that are either tagged WSAPI or with a Severity field entry of
Crash/Data Loss.

(1 AND 2) OR (3 AND 4) This example shows a query that returns all user stories that match the first two filter conditions or the last
two filter conditions.

 285



 Rally®

The result displays all user stories with the WSAPI tag that are in a Defined state, or all user stories with the
Integrations tag that are in a Completed or Accepted state.

Convert Work Items
You can convert work items from one type (source) to another (target) using the ⋮ (Actions), Convert menu.

If you are converting a defect to a user story, the behavior is different. Learn more.

During conversion, an attribute is moved if it exists on the target type.

• Attachments are moved from the source to the target item.
• Revision history is not moved over to the target item.
• Custom fields are not copied from a user story to a portfolio item when the user story is converted.
• Discussion posts are copied to the target item.
• Fields that exist on the target item are moved to the new item. Fields that do not exist on the target item are added to

the notes.
• Required fields are not enforced when work items are converted. They will be enforced the next time the work item is

edited.
• For associations:

– For tasks, children, connections, test cases, and risks (associations): If there are associations on the source item
and associations are available on the target type, they are moved. If the target type does not support associations,
the associations are moved to the Recycle Bin with the source item.

– Dependencies (predecessors and successors) are always disassociated.

When the conversion is complete, the source item is moved to the Recycle Bin.

1. Select the FormattedID of the work item.

2. Select

(Actions), Convert.

3. Select the target type from the drop-down menu. The target types in the menu change based on the source type. For
example, a user story can be converted to a:

• Defect
• Portfolio Item (subtype)

4. Select Confirm.

Search Work Items
Rally provides a global search field to search work items across your workspace, and the ability to search within the
context of multiple pages, lists, and apps.

You can use the Search all work items field at the top of the page to search for work items across your workspace.

Many of the pages and apps within Rally also include their own Search field that lets you search the contents of that
specific page or app.

 286



 Rally®

This section includes the following topics:

• Search Globally
• Search Tips
• Search Specific Pages

Search Globally

Rally provides a global search field to search for work items across your workspace.

NOTE

• If you enter the full FormattedID of a work item in the search field and press Enter, the Work Item Detail page
for that item opens.

• If you enter the FormattedID of a deleted work item, the Search Results page opens, and the work item is
listed in the Recycle Bin tab of this page.

1. Place your cursor in the Search all work items field at the top of the page.

2. Enter your search criteria.

3. Press Enter to view the search results.

• By default, this page displays the results from the currently selected project.

NOTE

• Your search is limited to data in the following fields:
– Description.
– Name.
– Discussion.
– Notes.
– Tags.
– Some Custom fields. Due to performance considerations, not all search results from custom fields

are highlighted. The work item displays in the search results, but the Matching Text column might
be empty.

• The results on this page are limited to 10,000 records.

 287



 Rally®

4. Use the filters at the top of the Search Results page to further refine your results.

The Last Updated, Owner, Project, and Work Item Type filters are selected by default.

• Enter date ranges into the Last Updated fields to find work items that were recently edited or updated during a
specific time period.

• Type a username, first name, last name, or display name in the Owner field to filter results by the current owner of
work items.

• Select the Project drop-down menu to filter the list of results by a specific project.
– Select Use Global Project Scope to have the contents of the list change according to your global project picker.

This option is selected by default.
– Select Browse All Projects to select work from other projects, regardless of your global project setting.

• Select the Work Item Type drop-down menu to search for a specific type of work item, such as a user story or
defect.

• To add additional filters, select Add or Remove Filters, select the filters that you want to add, and select Apply.
For more information, see Using Filters.

 288



 Rally®

5. You can choose to display many different fields in the Search Results page. To add or remove fields:
a) Select Show Fields from the toolbar.
b) Search for and select the fields to display on the page.

You can also clear fields so that they do not display on the page.
c) Select Apply to save your changes.

6. To view any results found in closed projects:
a) Select the project that you want to view from the Project filter field.
b) Select the Closed Projects tab.

7. To view any results that are found in the Recycle Bin, select the Recycle Bin tab.

NOTE

You can perform additional searches directly from the Search Results page. Place your cursor in the Search
field at the top of the page and enter your search criteria.

If you enter the full FormattedID of a work item in this field and press Enter, the Work Item Detail page for
that item opens. If you do not press Enter, the results display in the Search Results page.

 289



 Rally®

Search Tips

Tip Description

Searches are not case-sensitive. Enter keywords in upper case or lower case characters. All
characters, regardless of how you enter them, are understood as
lower case. Example: User is interpreted as user and matches on
variations of case, such as User, user, UseR, or USER.
The search fields for Story Burndown and Story Cumulative
reports are case-sensitive.

All keywords are optional as search criteria. By default, search returns items that include all of the entered
keywords. Example: edit defects is interpreted as edit AND
defects.

Matching occurs on expanded forms of keywords. The search finds work items containing various forms of the
keywords you enter in the Search field. Examples: edit returns
results for edit, editing or editor. child returns results for child or
children.

Search for phrases and similar matches by enclosing them in
quotation marks.

Keywords that are enclosed in double quotes are treated as
phrases, and displayed together in search results. The search
returns exact matches of what you typed, plus various forms of the
phrase, based on the stems of each word. For example, a phrase
of "test search" returns results for testing search, testing searches,
test searching and so on.

Search in specific fields Search supports keyword searches that are limited to specific
work item fields. Keyword search works for the following fields:
Name, Description, Notes, Tags, FormattedID, and Discussion.
All keyword searches except for Discussion searches can be
combined with boolean operators. For example:
Name:apple AND Description:green
Name:"green apple"
Tags:free OR Tags:gratis
Discussion:apples
However, "Discussion:apples AND Name:red" will not work.

Use + or AND operators to require matching keywords The + (required) operator requires that the term after the + symbol
exists within a search field. To search for results that must contain
apple and may contain green, use the query +apple -green. To
require both keywords, use+apple +green, or apple AND green.

Use - or NOT operators to exclude results containing a keyword The - (prohibit) operator excludes results that contain the term
after the - symbol. To search for documents that contain apple
but not oranges, use the query +apple -oranges, or +apple NOT
oranges.

Wildcards with ? and * operators You may use single or multiple wildcard searches. To search for
text or test, you can use the search te?t.
Multiple character wildcard searches look for 0 or more
characters. To search for football, volleyball, or dodgeball, use the
query *ball.

Partial string (substring) matches are not supported. Example, if you search for arm, you do not get results for charm,
army, or alarm.

 290



 Rally®

Search Error Messages

Message Description

Your search contained a syntax error. Review the Search Tips for information on how to correctly form
a search request. For example, you may have included the AND
operator, but not the second keyword.

Search Specific Pages

You can search specific pages for work items. Use the page search box to find what you need.

The search results and keywords are refreshed each time you search, and the browser refreshes the page results. Your
results remain displayed until you perform another search. Once the browser is closed or you have logged off, the search
results are not saved.

1. On most pages, place the cursor in the search box just above the list.

2. Enter your search criteria.
The list updates as you type.

The following apps also support a search field:

• Iteration Planning Board
• Release Planning Board

NOTE
Use the query field found in the Custom List app and other apps to search by specific sets of criteria.

Watching Work Items
Watches let you follow the status of an individual work item.

You should use watches when you have a critical portfolio item, user story, defect, or task and need immediate notification
when its details are changed. When you are watching a work item, an email notification is generated for each edit made
by other users (but not for your own edits).

You can only view watches for work items in the workspace and project that your user is scoped to.

Watches work differently than  email notifications. There are no rules to configure or set up. Watch notifications are sent
by email, and are not currently included in the My Notifications app on a dashboard or custom page.

 291



 Rally®

Enable Watches

To use the watches feature, you must have email functionality enabled in both your subscription and profile settings. If
your subscription administrator has not enabled email notifications, you receive a failure message when you try to watch
an item.

Enabling email functionality also allows emails to be sent from any active notification rules that you have set up. This
includes the Notify me about changes to my <work item> (and items directly related to them)  notification trigger for
each work item type. If you receive unwanted emails that are not related to your watches, check your notification rules and
triggers. Contact your subscription administrator to enable email notifications in your subscription. For help enabling email
notifications in your profile, see Set Up Your Profile.

This section includes the following topics:

• Creating Watches
• Managing Watches
• Removing Watches
• Watch Fields

Creating Watches

The detail editor for any user story, defect, task, or portfolio item includes a Watch option in the toolbar. From the Watch
option, you can choose to watch an item or add additional watchers to an item.

You can also add additional watchers from the Watches page or from a toolbar action when in a list view.

Add a Watch from the Detail Editor

You can add a watch for a work item directly from the detail editor.

1. Select the FormattedID of the work item to view it in the detail editor.
2. Select Open watches menu.

The number indicates the number of users currently watching the work item, including yourself.
3. Select Watch from the menu.

Add Users to Watches from the Detail Editor

You can add team members and other users that might be interested in a work item to an existing watch from the detail
editor of a work item.

1. Select the FormattedID of the work item to view it in the detail editor.
2. Select Open watches menu.

 292



 Rally®

The number indicates the number of users watching the work item, including yourself.
3. Select Add Watcher from the menu.
4. In the Watchers dialog box, select the user you want to add from the drop-down.

You can begin typing the name in the Search field to find the user you want to add. Only users with view or greater
access in your subscription display.

5. Select the user and select Add.
The user appears in the list of Watchers.

Add a Watch using a Toolbar Action

You can add a watch to one or more work items from the toolbar in most list views, such as the Iteration Status or User
Stories page. You can also add a watch to a work item included in a collection.

1. Select the check box of the work item(s).
2. Select Watch Work Item

from the toolbar.

Managing Watches

You can use the Watches page to view all of the active watches that have been created for your user name.

From this page, you can also choose to unwatch or add additional watchers to a work item.

Add Users to Watches from the Watches Page

You can add team members and other users that might be interested in a work item to an existing watch from your
Watches page. When you add a user to a watch, they receive an initial email notification. The watch is also visible from
that user's Watches page.

1. Select your profile image in the upper-right corner of the Rally display and select My Settings.
2. Select Watches at the top of the settings page.

 293



 Rally®

3. Select Manage Watchers

in the Watchers column for the watch you want to change.
4. In the Watchers dialog box, select the user you want to add from the drop-down.

You can begin typing the name in the Search field to find the user you want to add. Only users with view or greater
access in your subscription display.

5. Select the user and select Add.
The user appears in the list of Watchers.

Removing Watches

If you want to discontinue notifications for a work item, you can remove the watch in several different ways.

Remove a Watch from the Watchers Page

If you want to discontinue notifications for a work item for yourself or another user, you can remove the watch.

1. Select your profile image in the upper-right corner of the Rally display and select My Settings.
2. Select Watches at the top of the settings page.
3. Select Manage Watchers

in the Watchers column for the watch you want to discontinue.
4. In the Watchers dialog box, select Remove to the right of the user that you want to remove. 

 294



 Rally®

The user is removed from the list of watchers.

Remove a Watch using the Detail Editor

You can unwatch an item or remove a watch for another user from the detail editor.

1. Select the FormattedID of the work item to view it in the detail editor.
2. Select Open watches menu.

The number indicates the number of users currently watching the work item, including yourself.
3. To remove yourself, select Unwatch.
4. To remove a different user:

a. Select Add Watcher.
b. In the Watchers dialog box, select Remove to the right of the user that you want to remove. 

 295



 Rally®

The user is removed from the list of watchers.

Remove a Watch using a Toolbar Action

You can remove a watch from one or more work items from the toolbar in most list views, such as the Iteration Status or
User Stories page.

1. Select the check box of the work item(s).
2. Select Unwatch Work Item

from the toolbar.

Remove a Watch using the Notification Email

You can also remove a watch by selecting the link inside your notification email:

Fields Displayed in Watch Notifications

Email notifications are generated for any changes to a work item (including a deletion), but some field values may not be
displayed in the message.

Changes to rank in a drag-and-drop workspace do not show previous or current rank values, since Rally uses an
algorithm behind-the-scenes to calculate a rank value. These edits display as rank changed in notification emails.

 296



 Rally®

Rollup Fields in Watch Notifications

Some work items contain fields that show aggregate or rolled up values of associated work items. Changes to a related
work item can affect these fields, which causes a notification to be sent for the watched parent item. The fields include:

User story and defect fields

• Accepted Date
• Blocked
• Defect Status
• Direct
• Children Count
• In Progress Date
• Plan Estimate
• Schedule State
• Task Actual Total
• Task Estimate Total
• Task Remaining Total
• Task Status
• Test Case Status

Portfolio item fields

• Late Child Count*
• Accepted Leaf Story Count
• Accepted Leaf Story Plan Estimate Total
• Actual End Date
• Actual Start Date
• Direct Children Count
• Leaf Story Count
• Leaf Story Plan Estimate Total
• Percent Done By Story Count
• Percent Done By Story Plan Estimate
• Unestimated Leaf Story Count
* applies to lowest portfolio item type only

Using HTML Tags in Text Fields
You may use supported HTML tags in the text fields of your work items to further customize the display when viewing
detail and summary pages.

For example, you can highlight important stories or create dividers in your backlog by changing the color of the Name
field. In this example, using the HTML <b><font color="red">Form not displaying correctly</font></b>
makes the name display in bold, red text.

 

 297



 Rally®

The following HTML tags are supported and may be entered when editing and creating work items. HTML tags may also
be used when creating or editing work items through the Rally Web Services API. Tags not listed below will automatically
be removed from text fields when saving.

Style, width, height, color, and size attributes are allowed on all supported tags.

• a
– href attribute
– ftp, http, https, mailto protocols

• b
• blockquote

– http, https protocols
• br
• center
• cite
• code
• col
• colgroup
• div
• dd
• dl
• dt
• em
• font

– color, face, size attributes
• h1, h2, h3, h4, h5, h6
• hr
• i
• img

 298



 Rally®

– align, alt, height, src, title, width attributes
– src, http, https protocols

• li
• ol
• p
• pre
• q
• small
• span
• strike
• strong
• style
• sub
• sup
• table
• tbody
• td
• tfoot
• th
• thread
• tr
• u
• ul

Fields That Support HTML Tags

Several fields in Rally support HTML tags. If a field supports HTML tags, the tags are converted to the formatted text when
you save your changes. Supported fields include:

• Blocked Reason
• Custom string fields
• Fixed In Build
• Found In Build
• Name
• Target Build
• Verified In Build

Common Pages and Elements
This section describes some of the frequently used pages and page elements in Rally.

• Work Item Toolbar
• Pinned and Recent Item Lists
• Recycle Bin
• Detail Editor
• Work Views Page
• Work Item Templates
• Viewing Collections

 299



 Rally®

Using the Work Item Toolbar to Create and Delete Work Items
You can create work items from the toolbar on most pages within Rally.

You can create a single work item or multiple work items using the toolbar.

If you select Create with Details, you can use the detail editor instead of the toolbar to complete additional fields.

This section describes the following tasks:

• Quickly Create Work Items Using the Work Item Toolbar
• Create Work Items with the Detail Editor
• Edit Work Items Using the Work Item Toolbar
• Delete a Work Item Using a Toolbar Action

Quickly Create Work Items Using the Work Item Toolbar

You can use a toolbar action to quickly capture one or more work items without completing the full details of the work item.

When you choose to create a work item from the toolbar, you can fill in required fields and suggested fields from the
toolbar instead of the editor.

1. Select Add New from the toolbar.

2. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

3. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

4. Complete the suggested fields presented in the toolbar. Required fields are marked with an asterisk (*).

5. Select Create.

Create Work Items with the Detail Editor

You can access the detail editor with the toolbar when creating a new work item.

This allows you to complete additional fields for a more complete work item.

1. Select Add New from the toolbar.

2. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

3. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

4. Use the Name field to enter a name for the work item.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 300



 Rally®

Edit Work Items Using the Work Item Toolbar

You can edit one or multiple work items at once on most list pages and edit most fields. You can update parent-child
relationships, as well as associate related work items.

You can edit up to 500 work items at a time.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

You can select up to four values to update across the checked work items. You can only edit multiple fields that apply to all
work items selected in the list. Hidden fields can be edited.

When you are editing multiple work items at once, some fields cannot be edited. Learn more.

You can also add or change the parent of a group of user stories, or associate a group of tasks, defects, or test cases to
related work items in a single step.

WARNING
If two users edit the same story and one user is in bulk edit mode, the bulk edit user's work will overwrite the
other user's changes. For example, if User1 bulk edits stories A, B and C, and User2 edits the description of

 301



 Rally®

story B, when User1 finishes editing, User2's description will be overwritten with the original description of story
B. However, the changes will still be accessible in User2's history.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Edit

from the toolbar to view the Bulk Edit dialog box.

4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

5. Select Apply to save your changes.

Delete a Work Item Using a Toolbar Action

You can delete a work item using a toolbar action while in a list view.

Most deleted work items are sent to the Recycle Bin when deleted, while some are not. Learn more about the Recycle
Bin.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Delete

from the toolbar.

Using the Toolbar to Modify Work Items
You can edit, delete, or move work items from the toolbar, as well as other actions, when you are working on a Rally list
page. The toolbar actions you see depend on the work item type you have selected.

You can also re-rank work items if ranking is supported on the page.

If you need to view the work item or make extensive edits, you can access the detail editor for any work item by selecting
the FormattedID of that item.

This section describes the following tasks:

• Access the Work Item Toolbar from a List Page
• Add a Peer Work Item with a Toolbar Action
• Add a Child Work Item with a Toolbar Action
• Link an Existing Work Item as a Child Work Item Using a Toolbar Action
• Remove a Work Item from a Collection or Association
• Rank a Work Item with a Toolbar Action
• Copy Tasks from Another Work Item Using a Toolbar Action
• Copy a Work Item Using a Toolbar Action
• Watch a Work Item with a Toolbar Action
• Split a User Story with a Toolbar Action

 302



 Rally®

Access the Work Item Toolbar from a List Page

The work item toolbar is available on most list pages to enable you to enable you to perform actions on work items without
leaving the page.

You can see the available toolbar actions when you select a work item from the list.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select an action from the toolbar.

Add a Peer Work Item with a Toolbar Action

Use the Add Peer toolbar action to add a new peer work item to an existing work item.

Work items must be sorted by rank to add a peer work item.

1. Navigate to a list view page.

2. Within a list view, ensure that it is set to rank ascending order.

3. Select the check box of a work item. The work item you select determines where the new work item will be inserted as
a peer.

4. Select Add Peer

from the toolbar.

5. Complete the suggested fields presented in the toolbar. Required fields are marked with an asterisk (*).

6. Select one of the following:

NOTE
Select Create with Details if you want to view the new work item in the detail editor.

• Create + New to add this work item and continue adding work items at this position in the list.
• Create to add a single work item at this list position.

Add a Child Work Item with a Toolbar Action

Use the Add Child toolbar action to add a new child work item to an existing work item.

If you want to link to an existing work item as a child, use the Link Existing toolbar action.

 303



 Rally®

NOTE
Use caution when using the Add Child or Link Existing toolbar action on the Iteration Status page. Once a
story becomes a parent to a child story, it will not display on the Iteration Status page since parent stores are not
scheduled (both the Release and Iteration field values are changed to Unscheduled).

1. Navigate to a list view page.

2. Select the check box of a work item. The work item you select determines the parent of the work item you will add as a
child.

3. Select Add Child

from the toolbar.

4. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

5. Complete the suggested fields presented in the toolbar. Required fields are marked with an asterisk (*).

6. Select one of the following:

NOTE
Select Create with Details if you want to view the new work item in the detail editor.

• Create + New to add this work item and continue adding work items at this position in the list.
• Create to add a single work item at this list position.

Link an Existing Work Item as a Child Work Item Using a Toolbar Action

When you choose Link Existing from the work item toolbar, you can select an existing work item to link as a child work
item to the work item you have selected.

NOTE
Use caution when using the Add Child or Link Existing toolbar action on the Iteration Status page.  If you add a
child user story to an existing user story, the parent user story will become unscheduled (both the Release and
Iteration field values are changed to Unscheduled).  Unscheduled stories cannot be displayed on the Iteration
Status page.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Link Existing

from the toolbar.

4. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

5. Select the work item(s) you want to associate and select Done.

The item you select is added as a child work item.

 304



 Rally®

Remove a Work Item from a Collection or Association

You can remove specific work item associations through a toolbar action.

The Remove action is not available for work items that must be associated with work items such as tasks and
connections. When you remove a work item, the work item is only disassociated with the work item you are removing it
from. It is not deleted from Rally.

For example, when viewing the user stories associated with a portfolio item, you can select an associated user story and
choose to remove it. When you do this, the user story becomes unparented and is no longer associated with the portfolio
item.

Another example is removing a defect from a defect suite. You can do this whenever a list view allows you to view the
toolbar, such as within the Defect Suites collection page on the detail editor.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Remove

from the toolbar.

Rank a Work Item with a Toolbar Action

In a list view, you can select a work item and use the ranking action in the toolbar to move the work item to the bottom,
top, or a specific location in the list. This can help you quickly ensure that a work item is the correct priority in your backlog
without needing to drag-and-drop throughout all work items to move the work item. As with other ranking actions, you can
only do this if the list is set to rank ascending.

NOTE
When you choose Rank Lowest, the work item moves to the end of the list, not to the end of the page. For
example, suppose you have 30 work items in your backlog and the list is set to display 25 at a time. Setting a
work item Rank Lowest will cause it to display on the second page.

Learn more about prioritizing work.

1. Within a list view, ensure that it is set to rank ascending order.

2. Select the box of the work item(s).

3. Select from the following on the toolbar:

 305



 Rally®

• Rank Highest or Rank Lowest to move the work item to the beginning or the end of the list.
• Move to Position to find and select a specific location within the list. The bold blue line on the Move to Position

window indicates the new position in the list.

Copy Tasks from Another Work Item Using a Toolbar Action

You can copy tasks between user stories, defects, defect suites, test cases, or test sets. Tasks can only be copied
between the same work item types (for example, from a user story to a user story).

If you have a common set of tasks that need to be completed for many, if not all, user stories or defects, you can copy a
set of common tasks from one work item to another. Create a user story or defect as a template and then copy tasks from
that template into new user stories or defects.

Learn more about tasks.

Learn more about work item templates.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Copy Tasks From

from the toolbar.

4. In the Choose an Item dialog box, enter search criteria. You may search by keyword or FormattedID.

5. Select the work item to copy tasks from.

6. Select Done. The task copies display under the work item.

Copy a Work Item Using a Toolbar Action

You can copy an existing work item. When you do this, the copied story is created that matches the original with the
exception of the name of the story which will be prepended with (Copy of). After you copy a work item, you should update
the name as well as make any needed changes to existing field values.

Where the work item displays in a list after it is created depends on how you have sorted your list view. It can either
appear at the bottom of the page you are viewing or at the end of the list of work items if the list spans multiple pages. For
example, on the User Stories page, the newly created story appears at the last position in the list if the list is sorted by

 306



 Rally®

rank. However, if you have sorted the list by owner, the new story appears at the end of the list of stories associated with
the owner you designated.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Copy

from the toolbar.

Watch a Work Item with a Toolbar Action

You can add a watch to a work item from the toolbar within most list views, including from a collection within the detail
editor.

If you are already watching a work item, you can unwatch it with a toolbar action as well. Learn more.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Watch Work Item

from the toolbar.

Split a User Story with a Toolbar Action

Before you split a user story, you should understand the consequences and how your team manages unfinished work.
Learn more.

1. Navigate to a list view page.

2. Select the box of the work item(s).

3. Select Split

from the toolbar.

The original story displays on the right with the Name field prepended with [Continued]. The new story displays on the
left with the Name field prepended with [Unfinished]. The continued story is considered the split, or ongoing, story. By
default, completed tasks, defects, and test cases display in the unfinished (historical) story while incomplete tasks,
defects, or test cases display on the continued story.

4. Select values for the following fields:

• Name
• Release
• Iteration

NOTE
You cannot change the iteration of the parent story.

• Schedule State
• Plan Estimate

 307



 Rally®

5. Use drag-and-drop to move tasks, defects, or test cases between the new and original stories. By default, completed
tasks, defects, and test cases display in the unfinished (historical) story while incomplete tasks, defects, or test cases
display on the continued story.

6. Select Split.

You are redirected to the detail page of the continued story.

Pinned and Recent Item Lists
You can pin work items that matter most to you and access them from one convenient location. You can also access your
10 most recently viewed items.

Both the Pinned Items and Recent Items lists are available from the upper-right corner of the display.

NOTE
Watch a 30-second video that shows you how to pin work items to a list or view your recently viewed work items.

This section includes the following topics:

• Pinned Items
• Recent Items

Pinned Items

You can add and remove items to the Pinned Items list. The Pinned Items list supports a maximum of 15 work items.

Select Pinned Items

at the upper-right corner of the display to view the list. Select the FormattedID to open the item.

As a developer, you might want to pin items you are currently working on for quick access and updates. As a scrum
master, you might pin all items that are blocked and need follow-up. As a product manager, you might want to pin the
portfolio items you currently have in-flight or need to discuss with your teams.

NOTE
You cannot add a pin for timeboxes (milestones, releases, and iterations), test folders, or investments.

 308

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/videos/pinned-recent-items.mp4


 Rally®

Pin an Item

Pinned items are easily accessible from any page in Rally.

1. On a card or the detail editor of a work item, select

(Actions), Pin.

Remove an Item Pin

You can easily remove items from the Pinned Items list.

1. Select Pinned Items

at the upper-right corner of the display.
2. Select the X next to the item you want to unpin.

The item is automatically removed from the list.

Recent Items

Recent items are automatically added to your Recent Items list after you view them.

The Recent Items list supports a maximum of 10 work items and retains the most recently viewed
items. This list does not include new items that you have just created. Select Recent Items

at the upper-right corner of the display to view the list. Select the FormattedID to open the item.

 309



 Rally®

Recycle Bin
The Rally Recycle Bin lets you restore work items, such as user stories, tasks, defects, and test cases after they are
deleted.

Users that are owners of a work item or that have Project Editor privileges can delete work items from most of the pages
where they can be viewed. When these work items are deleted, they are moved to the Recycle Bin rather than being
permanently deleted.

The Recycle Bin lets your development project data be recovered if there was an accidental deletion.

This section contains the following topics:

• Viewing the Recycle Bin Page
• Restore Work Items from the Recycle Bin
• Delete Work Items from the Recycle Bin

Viewing the Recycle Bin Page

You can use filters and customize the columns and rows in your Recycle Bin view to help you find the specific work items
that you are looking for.

This topic describes how to access the Recycle Bin page and manipulate your view of this page.

• Access the Recycle Bin
• Filter the Recycle Bin Page
• Display Rows on the Recycle Bin Page
• Modify Columns on the Recycle Bin Page

Access the Recycle Bin

You can access the Recycle Bin from Home, Recycle Bin.

If you are using Personalized Navigation, you can also access the Recycle Bin from the side menu

.

Filter the Recycle Bin Page

You can use filters and modify columns to customize your view of the Recycle Bin. Customizing the Recycle Bin helps you
find the work items that you want to delete or restore.

You can define quick filters or advanced filters to customize your Recycle Bin. Unlike other Rally pages, you can combine
quick filters and advanced filters on the Recycle Bin page.

Your filters remain active when you navigate away from the page. Learn more about using filters.

1. Select Show Filters.
2. To apply quick filters:

a. Select one or more fields or use search criteria to add filters. Once you have selected all applicable filters, select
Apply.

b. The fields that you chose display below the toolbar.
c. For each field you chose, select the correct value to use as a filter. For example, if you choose Deleted By, you

can select the users to use as a filter. You can select more than one value per field. Select No Entry to display
items that do not have a field value.

3. To apply advanced filters.
a. Select Switch to Advanced Filters.

 310



 Rally®

b. Select a value from the Field drop-down list to use as a filter.
c. Select an operator from the Operator drop-down list. Available operators are dependent on the field type.
d. Select or enter a value for the field.
e. Optionally, select the plus sign to add another filter.
f. Optionally, select the Match Filters drop-down list to combine the filters:

• All - Only displays items that have matching content in all active filters. This applies an AND condition between
all filters.

• Any - Displays any work items that have matching content in a single filter. This applies an OR condition
between all filters.

• Custom - Select Custom to display numbers next to each available filter. You may reference these numbers in
the Custom Filter Condition text box to create custom filters. For example, (1 AND 2) OR 3 .
You cannot use a condition that includes a work item type filter in your custom filter. However, you can use
conditions that include a filter that is based on fields that are specific to a work item type. For example, a custom
filter condition can include a filter for State (Defect) in order to have custom filter logic for defects.

4. Select Hide Filter to hide your filters.
5. Select Clear Filters to reset the values used by the filters.

Display Rows on the Recycle Bin Page

You can adjust the number of items that display in your Recycle Bin.

1. Select the number of items per page list at the bottom of the page.
2. Select the number of items you want to display on each page.

Modify Columns on the Recycle Bin Page

You can add or remove the columns that display in your Recycle Bin.

NOTE
Select any column header to sort items by that column in either ascending or descending order.

1. Select Show Fields.
2. Select or clear the columns that display on the page.
3. Select Apply to save your changes.

Restore Work Items from the Recycle Bin

If a work item was deleted in error, authorized users can restore that work item.

Items that appear in the Recycle Bin are privileges-based. You cannot restore items that you do not have permission to
edit.

To restore a task, the defect or user story that is associated with it must be active.

Recycle Bin Associations

 311



 Rally®

When you restore work items from the Recycle Bin, pay careful attention to how associations with other work items are
restored.

If you restore: Then associations to:

Parent stories • Child stories and child tasks are restored
• Test cases and test runs are reassociated
• Child defects are not restored
• Predecessors and successors are not restored

Portfolio items Child stories or portfolio items are not restored

Restore Items from the Recycle Bin

• You must have Project Editor privileges or higher to restore individual work items from the Recycle Bin.
• You must have subscription or workspace administrator privileges to restore work items from the Recycle Bin in bulk.

1. In the Recycle Bin page, select the check box for each work item that you want to restore.
2. Select Restore.

– If you are restoring a single item, a message displays at the top of the page to indicate the selected item was
restored.

– If you are restoring multiple items, a confirmation dialog opens. The confirmation message depends on the type of
work item you are restoring. Select Restore to continue.
A progress bar displays as the operation completes. If errors occur during the operation, the progress bar displays
a red indicator and lists the issues. Hover over any of the errors to show more information.

Delete Work Items from the Recycle Bin

Once a work item has been moved to the Recycle Bin, authorized users can then permanently delete that work item.

WARNING
When you delete work items from the Recycle Bin, those work items cannot be restored.

NOTE
When you delete a portfolio item, child stories are disassociated, not deleted.

Only subscription or workspace administrators can permanently delete items.

Workspace administrators can configure the Recycle Bin to permanently delete items after a set number of days. If your
administrator has configured this setting, the Recycle Bin page displays a message at the top of the page to indicate the
number of days after which a work item is permanently deleted.

Delete Items from the Recycle Bin

• You must have subscription or workspace administrator privileges to permanently delete work items from the Recycle
Bin.

• You must have subscription or workspace administrator privileges to permanently delete work items from the Recycle
Bin in bulk.

1. In the Recycle Bin page, select the check box for each work item that you want to permanently delete.
2. Select Delete.

A confirmation dialog box opens. The confirmation message depends on the type of work item you are deleting.
3. Select Delete.

A progress bar displays as the operation completes. If errors occur during the operation, the progress bar displays a
red indicator and lists the issues. Hover over any of the errors to show more information.

 312



 Rally®

Detail Editor
The detail editor allows you to quickly and efficiently view or edit work items.

The detail editor is designed to provide you with quick access to the most important information about work items. You can
view the detail editor in a full view or anchored to the right of your Rally page. Select the FormattedID of a work item to
view the work item in the detail editor.

Depending on the view you prefer, you can change your default settings. Learn more.

The anchored view panel slides out from the right side of your window when you select the FormattedID. You can drag the
color bar on the left side to resize it. The maximum size is 800 pixels.

 313



 Rally®

When used in full view mode, the detail editor provides you with additional space to work more efficiently.

 314



 Rally®

The detail editor header gives you quick access to multiple features. Below the header are the Collection icons. Learn
more.

Item Description

Work Item

Copy Link

Watch (learn more)

Actions menu

Name (full-view only)

Feedback

Show Fields

Templates

Default View toggle (opens the full view)

 315



 Rally®

Item Description

Default View toggle (opens the anchored view)

Close

This section includes the following topics:

• Customizing the Detail Editor
• Using the Detail Editor
• Copy a Link to a Work Item
• Detail Editor Actions Menu
• Collections
• Detail Editor FAQs

Customizing the Detail Editor

You can customize the fields displayed within the detail editor as well as change their position within the editor. You can
also configure a default editor view.

The detail editor opens according to your default setting. For instance, if your default is set to open an item using the full
view, the item opens in the full view.

1. Select the FormattedID of the work item.
2. Select the Default View toggle to switch between the anchored view and full view. The setting becomes your default.

Default View toggle on the anchored view.

Default View toggle on the full view.

Show Fields in the Detail Editor
You can show or hide fields in the detail editor.

For example, you can choose to hide the Flow State field if your team is not using the Team Board. Learn more.

 316



 Rally®

NOTE
On list pages within the detail editor, you can reorder columns (except for Rank, ID, or Name) by dragging and
dropping the column header to the new location. Learn more.

1. Select Show Fields from the toolbar. 

2. Select the fields you want to display.

3. Select Apply to save your changes.

Drag-and-Drop Fields in the Detail Editor
To customize your detail editor, you can drag and drop any of the fields on the screen, including custom fields, to arrange
them as you like. The customizations that you make to your detail editor do not affect how other users see the work item.

For example, you can display like fields together in the detail editor, such as Flow State and Schedule State (if your team
is using the Team Board Page). Or display fields together that you commonly edit.

1. Hover over the left side of the field until the drag-and-drop icon appears.

2. Drag and drop the field to the new position.

Using the Detail Editor

The detail editor allows you to directly edit work items. If you can see a work item field and have the correct permissions,
you can edit it. Fields that you cannot edit are grayed out.

Here are some of the features you'll have access to:

• Easily add a parent, owner, project, attachments, tags, or a discussion post.
• Use work item templates to create templates for work items, which can include child tasks. Learn more.

NOTE
There is no back button on the detail editor. Select the X (Close detail editor) at the top right.

Select the FormattedID of the work item.
The detail editor opens according to your default setting. For instance, if your default is set to open an item using the full
view, the item opens in the full view.

 317



 Rally®

Description and Notes Fields in the Detail Editor
The Description and Notes fields are rich text fields, with display and formatting options.

NOTE
Rich text fields have a 32,768 character limit, including formatting (html tags, bulleted lists,
formatting copied from Microsoft applications, and so on). If you receive a warning about being
over the character limit, you can either reduce the formatting or use the Remove Format

button to remove all formatting.

1. Select anywhere inside the field to enable editing or scrolling.

2. Drag-and-drop a table into the field for instant upload.

3. Add or update an image:

• Drag-and-drop an image for instant upload.
• Edit image properties on an existing image by double-clicking the image.
• Select Image

to add an image and specify image properties.

4. Expand the space by:

• Dragging the bottom right corner to expand.
• Selecting Maximize.
• Selecting Show All.

5. Add a code snippet, and select from multiple code formats.

6. Format your content, including multiple fonts and font sizes.

7. Copy and paste content from Microsoft Word, maintaining its original formatting.

8. Use the

to create @ mentions. Learn more.

Add an Attachment to a Work Item
Attachments can be added to any work item. You can also preview the attachments and add a description.

NOTE
When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have 200 or
more attachments, only the newest 200 display on the page. Older attachments still exist in Rally; however, you
must delete newer ones to view those hidden from view on the page.

1. Drag or select to add attachments in the Attachments field.

2. Hover over the attachment name after upload to see a preview.

 318



 Rally®

3. Add or edit the description for the attachment by selecting in the Description field. You can add a new description, or
edit an existing one.

Use Discussions
Discussions allow you to provide detailed updates and comments on a work item.

1. Select Discussions

to open the rich text editor.

Learn more about editing and formatting the content of a discussion comment.

• Select anywhere inside the field to enable editing or scrolling.
• The Discussion field contains an

icon, allowing you to create @ mentions. Learn more.

2. Select Post to add your discussion. Learn more.

• To edit a discussion post, select Edit

,
make the desired changes to the post, and select Post.

• To delete a discussion post, select Delete

and select Confirm in the confirmation dialog.

NOTE
Only the original author and administrators can edit or delete a discussion post.

 319



 Rally®

Copy a Link to a Work Item

If you want to provide a reference to a work item outside of Rally, you can copy a URL link to the work item.

You can copy the link to a work item in several different formats.

1. Select the FormattedID of the work item.
2. Select Copy Link

.
3. From the Copy link dialog box, select the Copy Link

to the right of the type of link you want.
– Markdown Including Name: Copies the ID, work item name, and url in markdown format.
– Markdown: Copies the ID and url in markdown format.
– HTML: Copies the url in "a href=" format.
– Plain: Copies the url with no special formatting.

Detail Editor Actions Menu

The detail editor provides multiple ways to view, modify, share, and create work items. You can create, delete, copy, or
print a work item.

Available options will vary depending on the type of work item you are viewing.

• The New action creates a new work item of the same type.
• If the work item selected can be converted to another type of work item, the Convert action is available. Learn more.
• If the work item selected can be split, the Split action is available. Learn more.
• The Pin action adds the work item to your Pinned Items list. Learn more.

1. Select the FormattedID of the work item.

2. Select

(Actions) to view the available options.

Copy a Work Item from the Detail Editor
When you copy a work item, a new work item is created that includes all of the field values of the work item you copied.
The name of the work item is prepended with (Copy of).

Copying a work item can be useful if you need to create a new work item that is very similar to the one you are viewing.

1. Select the FormattedID of the work item.

2. Select

(Actions), Copy.

The new work item is created and saved.

 320



 Rally®

3. Optionally, edit the name and any other work item fields you want to change.

4. Select Save.

Collections

Icons across the top of the Detail Editor provide links to the available collections.

Available collections change depending on the work item type you are editing.

Select one of the collection icons to view and manage work that is associated with the original work item. For example,
select Tasks

to display the Tasks collection page. Learn more.

Detail Editor FAQ

How do I remove
(disassociate) a parent

from a work item?

You clear the Parent field (for defects, the User Story field) to remove the association. This does not delete
the parent or the work item. Learn more.

How do I convert
from one work item

type to another?

If a work item can be converted to a different type, the

(Actions), Convert menu item will be available. Learn more.
If you accidentally

close the editor and
have unsaved changes,

what happens?

You’ll get a warning message alerting you that you have unsaved changes.

What is the purpose
of the Discard button?

The Discard button removes all changes since the last save.

How do I add an owner
to the story or task?

The owner drop-down menu contains the current owner and all of the people designated as team members
on the current project. You can also search to find any user who has editor permissions on the project.

How do I import or
export data from
the detail editor?

You can import or export data from some collections in the detail editor. Look for Import/Export

on the collections summary page.
Where is the back
button on the full

view detail editor?

Use the back button on your browser, or select Close

in the top right corner.

Work Views Page
The Work Views page is your one-stop shop to view all the work items relevant to you from across one or more projects
(teams).

 321



 Rally®

The Work Views page makes it easy for you to hone in on the work you're responsible for, while pulling together all the
data you need around that work.

• Easily view and create parent/child relationships.
• Use filtering to create custom work views that include multiple levels of work items from across any set of teams/

projects. Views can be saved and shared with others in your organization for quick access.
• Perform project reconciliation. You can create a view to verify that work items within your defined filters are assigned to

the appropriate iteration, release, and that story points are assigned to all stories.
• For a project containing various features spanning multiple releases, you can create a view to display the full scope of

the entire project.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

Watch a short YouTube tutorial on how to create work views.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

This section includes the following topics:

• Working with Epics (Parent-Child Relationships) on the Work Views Page
• Adding or Editing Work Items on the Work Views Page
• Create a Work View
• Group Work Items on the Work Views Page

Working with Epics (Parent-Child Relationships) on the Work Views Page

If you use epics (user stories that parent other user stories), the Work Views page handles them as follows:

• The Work Views page displays two instances of the child story: one nested under the parent, and one in the main list.
• Searching for the FormattedID of a child story (in an epic) will return the story in the search results.
• Child stories display in your results when you filter by timeboxes.

Adding or Editing Work Items on the Work Views Page

You can add or edit work items of many different types from the Work Views page. The work item will only display in the
Work Views list if it matches your selected filters.

The Work Views page allows bulk actions - you can modify or delete multiple work items at the same time. Learn more.

 322



 Rally®

Create a Work View

You can create a work view by selecting the work item types you want to include, adding filters, and customizing the fields
that display in your list.

The Work Views page supports customization and saving views.

• Customizing How a List Displays
• Sharing and Saving Views

IMPORTANT

Duplicate work items may display in a Work Views list. For example, if you select both user story and portfolio
item work items, a user story may display under the feature and as a stand-alone user story. You can alleviate
this issue by adding a filter to only show features and un-parented user stories.

If you use epics (user stories that parent other user stories), Work Views displays two instances of the child
story: one nested under the parent user story, and one as part of the list.

You cannot print a list of the work items on the Work Views page directly. However, you can download the list to
a CSV file, then open the CSV in your preferred tool and print it.

1. Select Plan, Work Views.

2. Select Show Filters from the toolbar.

3. You can clear any previous settings by selecting Clear all.

4. Select the projects to include.

You may use the global project scope, or browse to select a single project or multiple projects across the workspace.

5. Select the work item type(s) from the drop-down list.

You may select multiple work item types to generate a view that meets your needs.

6. Select Add or Remove Filters to view the Manage Filters list. Learn more about using filters.

7. Set up your filters to view the desired work items. You can use quick filters, or switch to advanced filters for more
complex operations.

Group Work Items on the Work Views Page

To organize your view into convenient categories, you can group work items into swimlanes. The Total Work Items in
each group displays to the right.

You can drag-and-drop work items between the groups. This updates the field value in that work item.

WARNING
You are limited to 998 projects when using the Group By functionality. If you have more than 998 projects
selected, the Group By will fail.

1. Select Plan, Work Views.

2. Select Group By from the toolbar.

3. Select the field to group by from the drop-down list. Only one field can be selected.

• Items without a value for the selected field are grouped into a group called None.
• Select --No Entry-- to stop grouping.

 323



 Rally®

4. Select Show Empty Groups to show all possible groups for the selected field, including groups that have no work
items.

Work Item Templates
Work item templates are a way to save time when adding work items to Rally.

You can use work item templates to ensure default values for fields as well as include tasks or child user stories when
required by your process.

Any Rally user can create a work item template. Depending on permissions, you can share work item templates with
others. Administrators can share templates at the scope they are an administrator for and below. For example, project
administrators can share templates and can set a default template for projects where they are administrators. Workspace
administrators can share templates across the workspace or with specific projects and child projects of those projects.
Users can also delete any templates that belong only to them or where they are administrators.

For example, a project administrator can create a work item template for user stories for a project that automatically
assigns the new user story to specific product owner. Another example is a QA engineer creating a personal template to
apply for test cases that they create.

This section includes the following topics:

• Create a Template
• Modify a Template
• Change the Default Template
• Apply a Template

Create a Template

Before you can create a work item template, you must first create a sample work item and add default values to the fields
that you want the template to apply. You can then use this sample work item to base the template on. You can also add
tasks or child stories (not both).

NOTE
If the tasks have required fields, applying the story template does not create the tasks.

You can add default values for any fields for the work item. However, you are restricted to a subset of fields when
including tasks or child user stories.

Available Fields
for Tasks

When you create a template for user stories or defects, you can also have tasks that are automatically
created. When you create a template from a story that has associated tasks, you can have default values
for the following task fields:

• Name
• Description
• Plan Estimate
• Notes

Available Fields for
Child User Stories

For work items that can include child stories, you can include the top level of child stories in the template.
You can have default values for the following fields when you are using a template:

• Name
• Description
• Notes

 324



 Rally®

NOTE

You cannot include scheduling fields in a work item template, such as assigning the work item to a specific
release or iteration. Scheduling a work item should happen at a later stage in the Agile process. Scheduling
fields should not be assigned as the work item is being created.

1. Create a work item that you want to use as a model for the template. Complete any fields where you want default
values. You can also add tasks or child user stories.

2. Save the work item.

3. Select the FormattedID of the work item.

4. In the detail editor, select Templates to view the Work Item Templates dialog box.

5. Select + New Template from work item.

The information in the dialog box is updated to reflect the work item fields you have provided default values for.

 325



 Rally®

6. Type a name for the template in the field provided.

7. If necessary, select

to remove any fields that you do not want to include in the template.

8. For text fields, define whether the template content replaces, prepends, or appends the field contents.

9. Select a value for the Visible To option to set up sharing. The available options depend your user permissions.

• Me
• Project
• Workspace

10. Select the Share with Child Projects check box if you want to share this template with child projects.

This option is only available when you are sharing the template with a project.

11. Select whether you want to make this template the default template.

12. Select Add.

13. Optionally, delete the original work item on which you based the template if it is no longer needed.

Modify a Template

You cannot directly modify an existing template. To change the default values for an existing template or add more
fields, first create a work item from the template you want to change, then modify the work item and create a template
from your modified work item.

1. Create a work item of the same type as the template you want to modify.

2. Apply the template that you would like to modify to that blank work item.

3. Make the necessary changes to the work item, then use the Template button to create a new template.

4. Once the new template is created, you can delete the old template.

Change the Default Template

Work item templates can be workspace-specific, team-specific, or associated with an individual user.

Any administrator can share templates and can set them as defaults at the scope they are an administrator for and below.
Each user, project, and workspace can have only one default at each level: each user can have a personal default, each
project can have a project default, and each workspace can have a workspace default.

NOTE
Project and workspace defaults and sharing apply to the project or workspace that the work item is in.

If multiple templates exist for the same work item type, the user-scoped template takes precedence. Default templates are
applied using the following rules:

 326



 Rally®

• If a user-specific default exists, apply it.
• If not, check for a project-specific default. If one exists, apply it.
• If not, check for a workspace-specific default. If one exists, apply it.

The template that takes priority is marked with an asterisk (*).

1. In the detail editor, select Templates.

2. Unselect the current default template.

3. Select the new default template.

Apply a Template

You can apply a template to a work item that you have open in the detail editor.

1. Select the FormattedID of the work item.

2. In the detail editor, select Templates.

3. Select the template to apply, then select Apply. The template is applied to your open work item.

4. Select Save.

Viewing Collections
Collections group together related artifacts for a particular work item for easy access.

Collections are logically grouped artifacts that are associated with a work item, such as defects or tests. You can view the
available collections associated with a work item in a number of places within Rally. Available collections vary, depending
on the work item type you are viewing. For example, when viewing tasks, only the Discussion, Revision History, and
Connections collections are available.

You can save and share views on most pages within  Rally. Learn more.

Icons across the top of the Detail Editor are links to the available collections. Available collections change depending on
the work item type you are editing.

Select one of the collection icons to view and manage the work that is associated with the original work item. For example,
select Tasks

to display the Tasks collection page.

NOTE
Any collections page that includes user stories or defects can include a plan estimate rollup value. A summary
row is added below the Plan Estimate header. If necessary, add the Plan Estimate column. Learn more.

 327



 Rally®

1. Select the FormattedID of the work item.
2. Select the appropriate tab to open the page.

When you are in a collection containing two or more work items, you can apply one or more filters to the page. Learn
more.

NOTE

On board pages, like the Portfolio Kanban Board, select the collection icon on the card to quickly view the in-
context editor for the collection.

This section includes the following topics:

• Customize a Collections Page
• Add a New Work Item in a Collection
• Bulk Edit Work Items with a Collection
• Collections Summary

 328



 Rally®

Customize a Collections Page

You can customize the look of a collections page by selecting the columns to display, or reordering the columns.

1. Select the collection you want to customize.

2. Select Show Fields.

3. Multi-select columns you want to display on the collections page and select Apply.

4. Reorder columns (except for Rank, ID, and Name) by dragging and dropping the column header to the new location.

Add a New Work Item in a Collection

You can add a new work item of the same type as the collection being displayed. The work item field is automatically
selected based on the collection you selected from the detail page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select the collection of the type of work item you want to add.

2. Select Add New from the toolbar.

3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

4. You can add child or peer (sibling) items from a collections page that includes user stories, portfolio items, or defects.
Select a single item in the collection, and the +Add Child and +Add Peer buttons become available.

 329



 Rally®

Bulk Edit Work Items with a Collection

You can edit multiple work items at once.

1. Select the desired collection page.

2. Select the box of the work item(s).

3. Select Edit

from the toolbar to view the Bulk Edit dialog box.

4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

5. Select Apply to save your changes.

Collections Summary

Not all collections are available for all work item types.

Collection Description

Artifacts Artifacts are a list of the work items scheduled for the release or iteration you selected. Learn more
Charts Charts display a graphical representation of the work item's metrics. Learn more
Children Lists assigned children. Learn more
Connections Connections are third-party pull requests and changesets associated with the work item. Learn more
Defects Defects are flaws in software that prevent it from behaving as intended. Learn more
Defect Suites Defect suites group specific defects together for scheduling. Learn more
Dependencies Dependencies include predecessor and successor work items. Learn more
Discussions Discussions allow team members to provide detailed updates and comments on a work item. Learn more
Duplicates Duplicates associate duplicated defects with the defect you wish to keep. Learn more
Results Results record the outcome of a test case. Learn more
Steps Steps document conditions of a test. Learn more
Tasks Tasks are units of work that contribute to the completion of a work item and allow the decomposition of

scheduled items into manageable units of work. Learn more

 330



 Rally®

Collection Description

Test Cases Test cases are technical specifications that define how the system should perform according to the
requirements. Learn more

Test Run Test runs are views of one or more test cases and their test case steps listed in a single, summarized
display. Learn more

Revision History Revision history records any changes made to the work item in Rally. Learn more
Risks Risks are potential threats to the completion of a work item. Learn more
Work Items Affected Work items, like user stories or defects, are often interconnected. Learn more

Missing Work Items
Here is a list of the most common reasons why you may not be able to find a work item, and what to do to check or
resolve each.

Losing a user story, defect, test case, or other type of Rally work item can be frustrating. With the exception of a
permanent deletion by another user, it is unlikely that the missing item is gone forever.

• Search First
• Work Item Deleted
• Release or Iteration Deleted
• Revision Histories
• Permissions Changed
• Parent Story Deleted
• Parent Story Is Not on the Backlog
• Restore Parent Associations

Search First

When you can no longer find a work item where you expect it to be, the first thing to do is search for it. The search field in
the upper-right corner of any Rally page will scan the entire workspace for the work item.

If possible, it is best to search for the full FormattedID of the missing work item, such as US1103.

NOTE
When searching, it is best to be logged in as a workspace or subscription administrator. This ensures that if the
work item was in a project your user no longer has access to, it will be included in search results. Learn more.

Work Item Deleted

A common cause for missing items is another member of your team deleted the work item. If you cannot find your item
through standard search, select the Recycle tab on the search page to view matching items that have been deleted.

Learn more about the Recycle Bin.

NOTE
Like any Rally page, search results are associated to the current project you are viewing. Make sure you are
looking at the proper workspace or project that the missing item was from, and that you have proper access
permissions.

Release or Iteration Deleted

There is no recovery, undo, or revision histories for deleted releases and iterations. If you delete a release that iterations
are scheduled in, they will all be updated to unscheduled. If you delete an iteration that stories and defects are scheduled
in, they will all be updated to unscheduled.

 331



 Rally®

Search Revision Histories

If the missing work item was associated with another work item in Rally—a user story, defect, iteration, release—you can
check the other item's revision history to find the missing work item.

Permissions Changed

If you have permission to a project that contains your stories, and an administrator then removes your permissions, you
will no longer be able to see those work items.

The easiest way to check for a permission change is to look at your profile page.You may also check with your
subscription administrator to see if your access rights have been removed or modified.

1. Select your profile image located in the upper-right corner of the Rally display.
2. Select Edit Profile.
3. Select Revision History

to open the Revision History page.

Parent Story Deleted

A user story can be deleted inadvertently if it has a parent. When you delete a parent story, all child stories within are also
deleted. This applies to all work items that can be in a parent-child relationship, including user stories, defects, tasks, and
portfolio items. When you attempt to delete a parent story, you are asked to verify that you want to delete the parent story
and all associated children.

When a group of parent and child stories is deleted, only the top-most story will display in the Recycle Bin page.

1. Restore the parent user story from the Recycle Bin.
2. Navigate back to the work item in its original project.
3. Edit the work item and clear the Parent field. When restoring a task, clear the Work Product field.
4. Delete the parent story once more, if necessary.

Parent Story Is Not on the Backlog

Consider the following about parent-child relationships:

• If you add a child user story to an existing user story (now a parent story), the parent story won't display on
the Backlog page or the Iteration Status page.

• When editing a parent user story, the Iteration and Release fields are disabled.
• If a user story is already assigned to an iteration or release, those fields are cleared out if the story is made a parent.
• If a user story has tasks assigned to it, those tasks are automatically moved to the new child story.

This behavior is in accordance with Agile methodology. When you create child stories underneath an existing story, the
scope of work is too large to fit into a single iteration. Multiple child stories are completed during several iterations instead,
and when all of the work in the children is complete, the status will rollup to the parent story.

Since the backlog is a collection of work that is ready to be scheduled, and parent stories are too large to schedule, parent
stories do not display in these locations.

If you are trying to denote a theme of work and do not want to use parent stories, consider these options:

• Use naming conventions in user stories to link them to a common theme. For example, US123 - [Website Redesign] -
Improve functionality in Firefox.

• Use tags to track themes of work across user stories. Learn more.

 332



 Rally®

Use the Tagged Story Burndown report for a graphical view of progress on all tagged stories.
• Associate the user stories with a portfolio item. Learn more.

Restore Parent Associations

When you delete a user story that has a parent, the association with the parent is automatically severed when the story is
moved to the Recycle Bin. If you later restore the story, you need to manually associate it with the parent again.

Rally's database rules require this behavior, to prevent work items from being restored with an association to a work item
that does not exist. For example, Story A is the parent of Story B. Story B is deleted, and a few days later, Story A is also
deleted. If Story B is restored without these rules, it would show Story A as the parent, which is a null object. This could
cause broken links and problems with various apps and pages.

However, because the association is removed immediately prior to a deletion, the FormattedID and name of the former
parent are preserved in the revision history.

If you need to parent several restored user stories, consider using the Story Hierarchy app to do this efficiently.

1. Restore the child user story from the Recycle Bin.
2. Use the Revision History of the restored user story to determine the previous parent.

Find an entry prior to the delete that states PARENT removed [US123: Story One]. The FormattedID and name of the
former parent are in brackets.

3. Ensure the former parent story is still available in your project.
4. Edit the child user story to re-add the parent to the user story.

File a Feature Request
Have you ever wanted Rally to work just a little bit differently? Do you have a great idea for functionality that currently
does not exist in the tool? We want to hear about it! Our feature request process allows Rally users to propose new
features, which our product owners use to fill our development backlog.

Most Rally pages include a feedback button

.

1. Select the Feedback

button.

2. Select Submit a New Idea.

3. Complete the fields and select Submit.

Building Your Backlog
The backlog is the collection of all unscheduled customer input represented by user stories, any open defects, or defect
suites. Once the item is scheduled into a release or iteration, it is removed from the Backlog page.

Typically, the product owner collects, manages, and prioritizes the backlog based on the importance of the request
or defect. Those items at the top of the list are usually scheduled into releases and iterations to be worked on by the
agile team. User stories are likely the results of portfolio items that have been refined by product owners and product
managers.

If a parent story contains child stories, the parent story cannot be scheduled and is not displayed in the Backlog page. In
the case of a story hierarchy, only child stories can be scheduled.

The Backlog page lets you manage your work items with the following actions:

 333



 Rally®

• Add items (quick add or add with details)
• Edit the existing items (in-place or full edit mode)
• Rank your backlog
• Customize your backlog appearance
• View the detail editor of the selected item
• Copy a work item
• Delete a work item

Backlog Page Keyboard Shortcuts

There are several keyboard actions that facilitate your entries:

• Select any editable field on the selected row to go to inline edit mode.
• Use the tab key to move from one editable field to another. Tabbing on the right-most field brings you to the first field in

the next row down.
• Use Shift+Tab to go to the previous field.
• Use the Esc key to remove the row selection or cancel an inline edit.

The Backlog Page Versus the User Story Page

The Backlog page is a prioritized list of user stories, defects, and defect suites that have not yet been scheduled into a
release or iteration. Parent stories are not listed as they are too large to be scheduled.

The User Stories page is an inventory of all user stories ever created in the current project, including parent stories. These
stories can be viewed as a flat list or as a hierarchy. Add or remove columns from your view and apply filters to create
custom reports.

Task Which page to use

Prioritization • Use the Backlog page for detailed ranking prior to scheduling
work

• Use the Backlog page when you want to rank user stories and
defects together

• Use the User Stories page when you want to rank high-level
(parent) stories

Create and view reports Use the User Stories page to create and share reports

Manage the story hierarchy • You can add child stories on either page
• Use the User Stories page to view full story hierarchies

Schedule work Use the Backlog section of the Team Planning page to easily
schedule work into releases and iterations using drag-and-drop.
You can do this in the Planning view.

Managing the Backlog
Manage your backlog to maintain an organized view of upcoming and prioritized work.

This section includes the following topics:

• Customizing the Backlog Page
• Creating Backlog Items
• Editing Backlog Items

Watch the Build Your Backlog video (in the Rally Video Tutorials) to see an overview of actions you can take on the
Backlog page, learn about some best practices and advanced tips, and access a list of frequently asked questions.

 334



 Rally®

Customizing the Backlog Page
The Backlog page lists all work items that can be scheduled such as defects, test sets, and user stories. However, if a
user story is a parent story (meaning that it has children user stories associated with it), the parent story will not display on
the Backlog page. This is because parent stories are considered too large to be scheduled.

There are multiple ways that you can arrange or customize your Backlog page to make the management of your backlog
items easier.

NOTE

• Any field that displays — indicates the field cannot be edited. This is because there are various values
depending upon the work item type.

• You can use supported HTML tags to highlight various rows on the page.
• Some columns cannot be sorted and are disabled because of variable values by work item type.
• Before you can use drag-and-drop ranking, your view must be sorted by ascending order by the Rank field.

The Backlog page is a list view and supports filtering, customizing display columns, as well as additional features such as
ranking.

Learn more about filtering.

Learn moreabout ranking.

Learn more about customizing your list.

NOTE

• You cannot print the backlog directly. However, you can export your backlog to a CSV file, then open the CSV
in your preferred tool and print it.

• You can import and export work items. For more information about importing and exporting work items, see
Import and Export Data.

Recommended Fields for the Backlog Page

The fields you display on the Backlog page can assist you in determining the priority of your work items. Rally
recommends displaying the Dependencies field as a column on the page as well as any status fields that could be helpful

• Rally uses predecessors and successors to indicate an ordinal relationship in which one user story is dependent upon
the completion of another user story. By assigning a predecessor to an existing user story, an order is established
between the two in which the successor user story is dependent upon functionality contained in the predecessor user
story. Work should not begin on the successor user story until the predecessor user story is completed. User story
states are rolled up to help you know when a predecessor is complete and work on a successor can begin. A blocked
predecessor state is rolled up and easy to see from most pages.

• You may add one of the status columns to your Backlog page display to see the state of work items associated to your
user story or defect. When displayed, the column will describe the status of the associated items. You can choose to
select a status field or fields. Status fields includes: Task Status, Defect Status, and Test Case Status. Learn more.

Table 4: Task Status Field

Task Status Description

None No tasks associated to the work item

Defined Tasks associated to the work item, all have a state of Defined

In Progress Tasks associated to the work item, at least one has a state of In
Progress, none are blocked

 335



 Rally®

Task Status Description

Blocked Tasks associated to the work item, at least one is Blocked

Completed Tasks associated to the work item, all have a state of Completed,
none are blocked

Table 5: Defect Status Field

Defect Status Description

None No defects associated to the user story

Some Closed Defects associated to the user story, at least one does not have a
state of Closed

All Closed Defects associated to the user story, all have a state of Closed

The Defect Status column is only applicable to user stories on the Backlog page. The column, if added, displays the state
of a defect associated with the user story.

Table 6: Test Case Status Field

Test Case Status Description

None No test cases associated to the work item

None Run Test cases associated to the work item, but no test case results
have been entered

Some Run Test cases associated to the work item, all those with a result have
a verdict of Pass, all other test cases have no results

Some Not Passing Test cases associated to the work item, at least one with a result
has a verdict other than Pass

All Passing Test cases associated to the work item, all have results with a
verdict of Pass

Creating Backlog Items

You can create a new user story, defect, or defect suite on the Backlog page.

After each action on the Backlog page, you receive an interactive status message. The message confirms your action and
shows other actions that can be taken on the item.

Parent stories do not display in the backlog as the backlog only lists child stories that can be scheduled.

NOTE
You cannot print the backlog directly. However, you can export your backlog to a CSV file, then open the CSV in
your preferred tool and print it.

By default, the Backlog page is sorted in descending rank order. Any item entered using the box at the top or bottom of
the page adds your new item to the bottom of the Backlog page as the lowest rank.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

 336



 Rally®

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

Add a Backlog Item

You can add a backlog item using the toolbar. Your new backlog item is added to the bottom of the page indicating it has
the lowest rank.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Plan, Backlog.

2. Select Add New from the toolbar.

3. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Add a Backlog Item at a Specific Place

You can determine where on the page to add a backlog item. Your list must be sorted by rank in order to do this.

If you sort by rank, descending order, your work item is inserted above a selected work item in the list. If you sort by rank,
ascending order, your work item is inserted below the work item you select.

 337



 Rally®

NOTE
You can only add a peer of the same work item type as the work item you select.

1. Select Plan, Backlog.

2. In the Rank column, select the column header to sort the work items by rank.

3. Select the check box next to the work item that you want to insert above or below the selected work item.

4. Select Add Peer

from the toolbar.

5. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. Select Create.

Add a Child User Story to a Backlog Item

The Backlog page only displays all work items that can be scheduled. Parent stories are considered too large to be
scheduled.

When you add a child to a user story, the parent user story no longer displays on the Backlog page.

1. Select Plan, Backlog.

2. Select the check box next to the work item where you want to create a child work item.

3. Select Add Child

from the toolbar.

4. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

5. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. Select Create.

Editing Backlog Items
You can edit some fields of a work item inline within the list. You can also edit multiple work items at once from the list.
However, for detailed editing, you need to open the work item in the Detail Editor.

 338



 Rally®

Edit Backlog Items with the Detail Editor

If you need to view or edit a work item in the backlog, you can access the detail editor.

1. Select Plan, Backlog.
2. Select the FormattedID of the work item.
3. Within the detail editor, make any changes.
4. Select Save.

Edit Multiple Work Items at Once

You can edit multiple work items at the same time. For example, when you need to move multiple work items to a different
release or associate multiple work items with the same owner you can edit all of the work items at once.

1. Select Plan, Backlog.
2. Select the check box of the work item(s).
3. Select Edit

from the toolbar to view the Bulk Edit dialog box.
4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  
5. Select Apply to save your changes.

Sizing and Estimates Overview
Sizing and estimating work plays an important role in Agile teams.

This section includes the following topics:

• Relative Size versus Time Estimates
• Point Sizing Gets You to More Predictable Business Outcomes
• Estimation Board App
• Points versus Hours
• Why Should We Convert Points into Cost but not Points into Hours?
• Velocity

Relative Size versus Time Estimates

Estimates don’t need to be accurate, they need to be consistent. Our velocity corrects for the inaccuracy of our estimates.
Estimates on stories are meant to be relative to other estimates on stories. When engineers think of an estimate, they
need to be comparing the story to other stories in the past in order to evaluate consistently.

Point Sizing Gets You to More Predictable Business Outcomes

People are good at comparing size, but not at estimating an absolute value. The difference between a 1 and a 2 is
insignificant; however, the difference between a 1 and a 5 is obvious.

 339



 Rally®

If you assign 3 points on a story, find a 1-point story nearby and assess whether this story is really 3 times as complicated
as the smaller story. This is called triangulation, and it is vital to ensuring consistency. Do this periodically throughout
planning, particularly for stories that generate discussion and disagreement.

It is helpful to have a set of stories nearby to make this comparison. You could create a point board in your planning area.
On that board, list several previous stories and the estimates that were given to them. Try to have one or two stories
for each possible estimate. When you are planning, you can note that Story A and Story J are each 5 points. Are these
stories approximately the same in complexity?

You want your points to be forced into buckets with wide enough gaps between them that there is no need to argue over
insignificant differences. Mike Cohn recommends either a Fibonacci-like sequence (0, 1, 2, 3, 5, 8, 13, 20, 40, 100) or a
base-2 sequence (0, 1, 2, 4, 8, 16, 32, 64, 128) to ensure that the buckets are reasonable.

There are three basic factors you should consider when assigning points to a story: complexity, effort, and doubt.

Always estimate with the entire team, even if it is a little inconvenient. Use planning poker cards or use the Estimation
Board app.

Encourage your product owners to break up large stories before they are estimated.

Estimation Board App

When you start, all of your un-estimated stories appear in the left column. The team stands up and takes turns, each
moving one card per turn. The team keeps moving, and if there is substantial disagreement, it is easy for a couple of
people to discuss while everyone else continues sorting cards. Remote team members can participate, too. To learn more
about the Estimation Board App, go here.

Using this app is much faster than Planning Poker. It also helps emphasize the relative sizing work because the goal is
just to group similarly-sized items, not to assign numbers.

Points versus Hours

Traditional teams estimate all of their work in one unit type—regular time. These teams then spend too much time
wondering why their estimates are off and struggling to get more accurate estimates. Many teams are able to bypass this
struggle by estimating on two different estimation scales—points and hours.

 340

https://www.amazon.com/Agile-Estimating-Planning-Robert-Martin/dp/0131479415


 Rally®

User stories in your product backlog should be estimated in terms of their relative size. Once you have numbered your
product backlog like this, you can measure how many of these units you are getting done each iteration by adding up the
numbers for each accepted story. Over time, if you keep your team together, this velocity number should stabilize. If your
velocity has been about 15 in the past, you can predict that if the team stays the same, you will get 15 done each iteration
moving forward.

Why use hours for tasks then? Story estimates are arbitrary numbers after a couple of minutes of discussion. But when
you plan tasks at the start of the iteration, you know the detailed acceptance criteria, the detailed task list, and maybe
even who is doing the work. Estimating tasks in hours reflects the precision of the estimate.

For the maximum hours that should be assigned to a task within a story, we recommend one ideal developer day, which is
about 6 hours. If a task takes more than a day, then the value of providing status at the Daily Standup meeting is lost.

Why Should We Convert Points into Cost but not Points into Hours?

Hours are a much more granular estimate, and should not be relied on to provide cost. With points, you know generally if
you are going to meet your iteration commitments. Task hours represent the daily commitments, and can be used at the
end of the iteration to see if your point estimates are accurate.

A point is a relative, abstract value to represent size. We know the difference between tiny and huge. Story points are
merely a representation of this concept. We recommend using a Fibonacci sequence to represent points.

Velocity

How can you determine when an iteration can finish if there is no estimate in hours? Over time, your team will learn what
their velocity is. Velocity is the average number of story points that can be completed in an iteration. With this value known
(approximately), the team can plan within this figure, and know that they will most likely be able to finish. Velocity is not the
same as speed. For more information about velocity, go here.

 341



 Rally®

Size and Estimate for Your Team
Correctly estimating the size and scope of upcoming work is essential to planning and executing Agile projects in Rally.

This section includes the following topics:

• What is an Estimate?
• Sizing and Estimates
• How Do We Estimate?
• When Do We Estimate?
• Who Estimates Work?
• What if an Estimate is Large?
• What Does the Estimation Cycle of a New Story Look Like?

What is an Estimate?

Before you schedule work, you need to know how large it is. Can you fit two user stories into the next iteration? Four?
More? The practice of estimation is necessary to answer these questions.

 342



 Rally®

Rally allows for sizing and estimation for use prior to and during iteration planning.

Begin by watching Sizing and Estimating, a brief video that explains the differences between sizing and estimating.

Estimating User Stories

An estimate is a recorded measurement of the effort necessary to complete a user story. When you estimate stories,
you estimate as a team. Collaborative estimation ensures that every member of the team is committed to the work being
planned. Cross-functional dependencies, potential issues, and strengths that accelerate progress may be uncovered
through team estimation.

Rally uses the Plan Estimate field to record the estimate of each user story. You can use your Backlog page to display the
Plan Estimate column, and easily edit the value by selecting the field.

The default unit type used by the Plan Estimate field is points. Think of this as a relative, abstract value that represents
overall team effort. You can change the unit type to represent other numerical values such as weeks or months, but we
recommend a simple Fibonacci-like number sequence.

Here is a sample point value set: 2, 3, 5, 8, 13, 20, 40, or 100 points.

Point estimates are also entered into the Planned Velocity field of iterations, prior to iteration planning. This value
represents the total number of story points (or other value) the team believes they can complete in an iteration. This total
is also known as a team's resources. You can calculate velocity by averaging the total number of accepted points from the
past several iterations.

Teams new to Agile and may see their velocity fluctuate at first (in one iteration you may complete 13 story points, and in
another 20), but as the team learns to work together, the number will stabilize.

NOTE
If your team provides a story estimate that is larger than the total velocity for an upcoming iteration, you are in
trouble! The team can only commit to work that can be completed in a single iteration. To estimate large stories
or initiatives, break the story down into smaller child stories. As a story moves up the backlog, continue breaking
the contents down into the smallest size possible that delivers value.

Estimating Tasks

After a user story is scheduled, the actions or steps necessary to provide the story’s value are identified. These actions
are recorded in Rally by creating tasks. Tasks also contain fields to estimate and track effort, but the measurement values
are different.

Generally, tasks are volunteered for and owned by individuals. Owners provide an initial estimate of hour many hours he
or she believes it will take to complete a task. Unlike story points, task estimates are not abstract. Story points provide
upper-level visibility into "Can we finish this work before our iteration commitment ends?", while task estimates provide
daily visibility into "Will my teammate finish coding this section of the user story before the end of the day?".

The default unit type for tasks is hours. The type can also be changed, but we recommend creating tasks that take
between 1-6 hours to complete. This keeps work within the scope of a single day, so that the team can alert each other of
progress and problems in daily standup meetings.

 343



 Rally®

Rally lets you record the initial hourly estimate of a task, and the time remaining until completion. The Task Estimate field
is used during the iteration planning when the task owner performs the initial estimate, and that value is automatically
copied into the To Do field. At the end of the day or prior to status meetings, the owner can update the To Do field to
reflect how many of the initial hours remain.

WARNING
Avoid the temptation to correlate the total number of task hours with story points. Do not have discussions like
this: "Well, this story appears it will involve 20 hours of work, so we'll estimate this story as 10 points. Our team
has learned that 2 hours of work is equal to 1 story point." This can greatly hinder estimation. As your team
matures, you may start noticing that work of a certain point size averages a number of task hours. Such an
acknowledgment is useful, but only to verify the accuracy of estimates after an iteration has ended.

Estimating Defects

Should existing defects in your system be estimated? When possible, your team should use the same point system
to estimate defect fix work as user stories. The value in this practice is that defects subtract from total velocity of the
iteration. If a team has an average velocity of 20 points per iteration, and a 2 point defect is scheduled, the team knows
not to commit to two additional 10 point stories, as they likely will not be able to finish.

Defects in Rally also use the Plan Estimate field to record points.

Sizing and Estimates

There's an old saying in Agile — We often underestimate the size of work, and overestimate our ability and time to
complete it.

Correctly estimating the size and scope of upcoming work is essential to planning and executing Agile projects in
Rally. When a team knows how to estimate, they can accurately predict how long a task will take to complete that day,
determine how many user stories fit into an average iteration, and how a change, defect, or other issue may affect a long-
term goal.

The following estimate fields are used in Rally:

• Release units: The estimated amount of resource units available to a release.
• Iteration units: The estimated amount of resource units available to an iteration.
• Plan Estimate: This field records the amount of effort estimated by a team to complete a user story or defect.
• Planned Velocity: The amount of Plan Estimate points a team estimates they can complete in a given iteration. This

total is also known as available resources.
• Task Estimate: This field records the amount of effort estimated by an individual to complete a task.
• To Do: The amount of actual time remaining to complete a task.

Most estimate units rollup into cumulative totals and can be viewed on the Iteration Status or Release Status pages.

 344



 Rally®

How Do We Estimate?

Your team can use several different techniques to estimate work. Whichever method you prefer, make sure the actions are
collaborative.

Remember, team members are responsible for providing estimates, not the product owner.

Planning Poker

Planning poker is an easy, fun way to estimate and get the discussion flowing.

1. Create or purchase a set of planning cards for each team member. Have a card for each value in your point system: 2,
3, 5, 8, 13, 20, 40, 100 (or similar)

2. Bring up the proposed story on a monitor or board. Explain what value the story will provide, and the initial
requirements.

3. Give team members a minute or two to select a card, face down.
4. On the count of three, all team members raise their hand, displaying the card.
5. Find the lowest and highest card values.
6. Have the lowest and highest card holders each take two minutes to explain why they think a story is a certain size.
7. Provide a few moments for others to weigh in, should the discussion uncover any problems or requirements.
8. Re-vote until a consensus value is reached.
9. Enter the estimate value in Rally.

 345



 Rally®

Example and Comparison Estimates

If your Agile team is new, but team members are familiar with past work, you can use examples and comparisons to
estimate. Rally development teams have used this strategy combined with planning poker to generate story estimates.

Create a chart of well-known stories of various sizes, and have the team agree on corresponding point values. For
example:

 346



 Rally®

Post a copy of this chart in the team working area, or wherever you host backlog refinement and planning meetings. When
using recognizable comparisons, the team can have discussions like this: "I remember how long it took us to create the
recycle bin, and this seems about the same amount of effort, so this story should be estimated at 8 points."

When Do We Estimate?

As with planning, estimation is a continuous process. Estimation and planning meetings take place repeatedly over the
course of an iteration cycle to ensure a team is prepared. Teams look two to three cycles ahead, in order to anticipate and
respond to potential changes.

Prior to iteration planning, the top portion of the backlog should be both prioritized and estimated. It is the responsibility of
the product owner to rank the user stories and defects by importance, so the team can provide estimates for each item.

Items that may not be done in the near-term can be placed on the backlog, but do not need detailed estimates. Estimates
for items further down the backlog can get stale, and will need to be re-done prior to planning. It is common to create a
user story to act as a placeholder and description for a long-term feature or theme. As time passes and the story moves
up the backlog, it can be broken down into smaller chunks to document each aspect or function of the feature.

Who Estimates Work?

Developers, testers, tech writers, and other contributors estimate work collectively in team meetings.

Product owners should not provide estimates when adding user stories to the backlog. The product owner is responsible
for communicating what needs to be done, and the priority of each item.

 347



 Rally®

The team is responsible for estimating the size of the work, communicating expectations to the product owner, and then
carrying out the plan. With this practice, contributors are truly empowered to take charge of the work.

Why Do We Estimate As a Team?

Estimation as a team also serves as a bonding tool, because it involves discussion. Through conversations, team
members learn about each others responsibilities and abilities. In future iterations, a developer may be able to anticipate
a technical writer's load, or vice-versa. Team members with similar skill sets also learn more about the product through
these discussions.

For example, one developer thinks a story is 8 points, while another thinks it is only 3. When asked why there is a
difference, the more experienced developer reveals a caveat with the portion of the code that is being edited. Now the
junior team member is familiar with this exception, and can utilize such knowledge in future estimation sessions.

During the latter part of the iteration planning meeting, individuals may provide values for hourly task estimates, but the
team is still present to collaborate. Again, this serves to educate other team members of the size and scope of work done
by individuals in various roles, and holds task owners accountable for their estimates.

 348



 Rally®

What if an Estimate is Large?

During the course of backlog refinement and planning, initial estimates may reveal that a user story or defect is too large
to fit into a single iteration. When that happens, the story must be broken down. It's best to perform this breakdown as a
large user story moves closer to the top of the backlog.

As business needs and strategy change, you may find yourself delaying or canceling a user story that is several months
away. Don't spend unnecessary time adding meticulous detail to work that may not be scheduled.

What Does the Estimation Cycle of a New Story Look Like?

This example timeline follows a new story from the bottom of the backlog to iteration planning.

You will be able to see who performs various estimation activities and what meetings are used to discuss the story.

Watch a short YouTube tutorial on the process for estimating stories. .

User Stories
A user story is a statement of user functionality formulated as a few sentences in the everyday language of the user that
can be completed in an iteration.

 349



 Rally®

The user story represents a placeholder for a later conversation regarding details and acceptance criteria. A user story is
unique in that it can be decomposed into parent-child, or hierarchical, user stories. An agile workspace references user
stories.

The basic hierarchical rules for user stories include:

• A parent story (epic) can have multiple children, and the parent owns its children.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage
your user stories in some Rally features.

• Parent stories cannot have tasks. If you add child stories to an existing story, any tasks assigned to the original are
moved to the first child story.

• If you delete a parent, the children are also deleted. You are prompted to confirm the deletion. Any test cases for the
deleted stories are disassociated, but they are not deleted.

• User stories and story hierarchies may be the children of portfolio items, which represent longer-term goals or
initiatives.

NOTE
Your display and editing capabilities may vary based on the user role and permissions you have been assigned
for the workspace.

This section includes the following topics:

• Viewing User Stories
• Creating User Stories
• Creating Child User Stories
• User Story Fields

Viewing User Stories
The User Stories summary page is an inventory of all user stories created in the current project (or scope of projects).

This page provides a summary listing of all user stories represented in Rally and is the gateway to viewing individual user
story details and their associations.

NOTE
When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have 200 or
more attachments, only the newest 200 display on the page. Older attachments still exist in Rally; however, you
must delete newer ones to view those hidden from view on the page.

The User Stories page allows you to:

• Customize how the list displays so you can easily find and manage your work. Learn more.
• Easily assemble your user stories into a meaningful display by creating your own custom views. Learn more.
• View the top level of hierarchy. You can expand this view to see the hierarchy of the root, or parent, user story and all

related descending children for the parent user story.
• Search for user stories in the top layer of hierarchy.
• Rank parent and child user stories on the page.
• View and track your estimates.

– Plan Estimate: The automatic calculation or rollup of plan estimates for all user stories in the display. Each user
story in the page displays the individual plan estimate under this column header.

– Task Estimate: The automatic calculation or rollup of task estimates for all tasks per user story.
– To Do: The automatic calculation or rollup of to do estimates for all tasks per user story.

 350



 Rally®

If drag-and-drop ranking is configured (the default), you may rank user stories on the page by dragging the user story up
or down in priority relative to other user stories on the page. Select the user story and drag it up or down in priority on the
page. Page ranking on the User Stories page does not affect the ranking of user stories on other pages.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

All child user stories within the current project display in the User Stories summary page, even if they have a parent user
story outside the current project.

Search Behavior on the User Stories Page

Your search works on the top layer of hierarchy only. Searching for the exact FormattedID of a child story will not return
any search results. Searching for the exact FormattedID of a parent story will return search results.

Filter Behavior on the User Stories Page

Child stories scheduled in a release or iteration will not appear in filter results when filtering on that timebox.

Filtering on a particular owner when stories are children of other stories will include the linked stories in the results, even if
they have different owners.

Print the User Stories List

You cannot print the user stories list directly. However, you can export your user stories list to a CSV file, then open the
CSV in your preferred tool and print it.

Creating User Stories
On most list or board pages within Rally, you can create a user story from the toolbar. You can also create user stories
from the detail editor.

This flexibility allows you to progress through work activities and create a user story whenever you need it from logical
positions within the Rally platform.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

NOTE
The detail of each work item (user story, test case, defect, defect suite, and portfolio item) contains a Project
field. When you create one of these work items, this field is automatically populated with the name of the current
project in which you are working. You can change a work item to a different project at any time.

 351



 Rally®

Create a User Story from the Toolbar

On most list or board pages within Rally you can create a user story from the toolbar.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Add New from the toolbar.

2. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

3. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Select Create.

Create a User Story from the Detail Editor

You can create a new user story while viewing a user story in the detail editor.

1. Select

(Actions), New.

2. Enter the work item information in the detail editor.

Required fields are marked with an asterisk (*).

3. Select Create.

Creating Child User Stories
You can associate multiple children user stories with a parent user story. These children user stories can be used to detail
segments of functionality associated with a user story. You can view the children of a user story when viewing the user
story in the detail editor or within most list views.

On most list pages in , you can create a child user story from the toolbar. You can also create child user stories from the
detail editor. This flexibility allows you to progress through work activities and create a user story whenever you need it
from logical positions within the Rally platform.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

 352



 Rally®

You can view the children of a user story when viewing the user story in the detail editor for a user story. The detail editor
contains a Children

icon in the collections bar that displays the number of children that are associated to the user story. Select Children to
navigate to a display of all descending children for the individual user story.

From the Children collection you can:

• View a listing of all child user stories of the user story. Select any child user story name and navigate to the detail editor
page.

• Easily track user story progress using the estimate columns.
– Plan Estimate: The automatic calculation or rollup of plan estimates for all for user stories in the display. Each user

story in the page displays the individual plan estimate under this column header.
– Task Estimate: The automatic calculation or rollup of task estimates for all tasks per user story.
– To Do: The automatic calculation or rollup of to do estimates for all tasks per user story.

All child user stories within the current project display in the User Story summary page, even if they have a parent user
story outside the current project. If drag-and-drop ranking is configured, you may rank child user stories within the parent
user story by selecting the child story and dragging it up or down in priority relative to its siblings on the page.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

Create a Child Story from a List View

You can create a child story from most list view pages.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Navigate to the list page containing the work item to which you want to add a child story.

2. Select the check box of a work item. The work item you select determines the parent of the work item you will add as a
child.

3. Select Add Child

from the toolbar.

4. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

 353



 Rally®

5. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. Select Create.

Add a New Child User Story from the Detail Editor

You can view the children of a user story when viewing the user story in the detail editor. The detail editor contains a
Children

icon in the collections bar which displays the number of children that are associated to the user story and allows you to
add new child stories.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Navigate to work item to which you want to add a child story.

2. Select the FormattedID of the work item.

3. Select Children

to open the Children page.

4. Select Add New from the toolbar.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 354



 Rally®

6. Select Create.

Add an Existing Story as Child User Story

You can choose to add an existing story as a child to a user story.

NOTE
If the parent of the user story is a portfolio item, the parent portfolio item does not display. Be careful not to
inadvertently re-parent a story.

1. Navigate to the user story to which you want to add a child story.

2. Select the FormattedID of the work item.

3. Select Children

to open the Children page.

4. Select Link Existing

from the toolbar.

5. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

6. Select the work item(s) you want to associate and select Done.

User Story Fields

Change descriptions are stored and displayed in the revision history. Learn more.

Required fields are marked with an asterisk (*).

ID A system-generated ID assigned to your work item that is unique and does not change. The ID consists
of a tag prefix and a numerical value. The tag can be customized by your system administrator to reflect
a differentiating prefix for each work item defined in your project, such as DE for defect, US for user story,
and so on.

Name The work item name allows you to easily reference a work item.
Tags Tagging provides all team members the ability to logically group and filter work items.

Blocked Indicates that work for the work item cannot continue until all issues preventing further progress are
removed. If any related task or child work item has been marked blocked, this field will automatically be
set in the detail editor. You can also manually block the work item from the detail editor. The Blocked field
displays in the Iteration Status page (board view) and Team Board page (board view). On list views, use the
Show Fields button to add the Blocked column. The work item remains in the associated schedule state
so the initial state of the work item is not lost.

Blocked Reason Use this field to notate why the work item is blocked.
Ready This can be used to indicate that a work item is ready to move into the next stage of development or

review. This field is primarily used by teams using a kanban board or other board-based method of pulling
work. You may set up notifications against the Ready field to be alerted when the field is checked.

Description A Rich Text Format field for the description of your work item. Capture a brief description of your work item
here. Enter any text in the description that helps all team members clearly understand the intent of the work
item.

Attachments Browse for a file to attach to your work item. NOTE: The maximum size of an attachment is 50 MB.

Provide text information (up to 256 bytes) to describe your attachment.

Notes Record additional information to implement this work item such as team decisions, customer input, or
discussion results.

 355



 Rally®

Owner Specify the owner of the work item.
Project The name of the project that contains the work item.
Parent This field allows you to create parent-child hierarchies, or re-parent existing work items. A workspace

administrator can make this a required field for user stories or portfolio items.
Schedule State Indicates the progress that has been made toward the completion of the work item. There are six states

that can be set from the drop-down list. The first and last states can be customized by your subscription
administrator to help you better manage your process. The following list identifies the default states that the
user story can move through:

• Defined: The user story is elaborated enough that the development team can write tasks and provide
estimates. This is the defaulted state value for a new user story and cannot be customized. When the
states for all children user stories are set to defined, the parent user story is automatically rolled up to
reflect the Defined state regardless of its initial setting.

• In Progress: The user story has been committed to an iteration and work has begun on the user story.
When the state for any child user story or task is set to defined, the parent user story is automatically
rolled up to reflect the Defined state regardless of its initial setting. This state cannot be customized.

• Completed: All related tasks and user stories have been completed. When the states for all of the tasks
and children user stories are set to Completed, the parent user story is automatically rolled up to reflect
the Completed state regardless of its initial setting. This state cannot be customized.

• Accepted: All acceptance criteria for the user story has been met. When the states for all of the
children user stories are set to Accepted, the parent user story is automatically rolled up to reflect the
Accepted state regardless of its initial setting. This state cannot be customized.

Plan Estimate Number of iteration units estimated to complete the work item. This field is a real number and can accept
three digits followed by a decimal and two more digits. The units are defined by your administrator. This
field is rolled up (accumulated) from child work items and displayed as a total.

Task Rollup • Task Estimate (read-only): Number of units estimated to complete a single task. Calculated in
increments of task units defined by your administrator. Task estimates are measured in iteration units.

• To Do (read-only): Amount of effort remaining to complete a task. Calculated in increments of task
units defined by your administrator. Task estimates are measured in iteration units.

• Actual (read-only): Amount of effort it took to complete a task.

Iteration Indicates the iteration to which the work item is assigned. The drop-down list includes the current iteration
as well as five future iterations and five past iterations to choose from. Choose Unscheduled to keep the
work item unscheduled from an iteration.

Release Indicates the release to which the work item is assigned. The drop-down list includes the current release as
well as one past release to choose from. Choose Unscheduled to keep the work item unscheduled from a
release.

Prioritizing Work
Prioritize work to organize the backlog list by order of importance.

The backlog is an ordered list of customer requests and reported defects. The product owner is in charge of prioritizing
the backlog. Prioritizing means keeping the backlog list in an order of importance. Those items that have been requested
more often, or are important to the business are listed at the top of the backlog. The product owner continuously tends the
backlog as customer needs shift in importance. This activity is also referred to as ranking the backlog.

Rally provides two methods by which you may rank your work items depending on your preferences:

• Drag-and-drop ranking uses position to establish relative priority of a work item on a particular page.
• Manual ranking uses numbers to establish relative priority within a group of work items.

Your rank method is administered separately for each workspace. Each method has advantages and disadvantages for
your style of prioritization. Consequently, changing from one method to another requires foresight and planning. Drag-and-
drop ranking is the default rank method for new workspaces.

Regardless of your ranking method, you create parent-child relationships in the same way. Learn more.

 356



 Rally®

WARNING
If you change from a manual ranking to a drag-and-drop ranking method, your original rank field values will be
overwritten.

This section includes the following topics:

• Drag-and-Drop Ranking
• Rank a List with a Toolbar Action
• Manual Ranking
• Change Your Ranking Method

Drag-and-Drop Ranking
Drag-and-drop ranking is the default ranking method for workspaces. It is available if your workspace administrator has
left it unchanged. In addition, rank must be included in the view and the page must be sorted by rank ascending in order to
use this feature.

NOTE

• Your ability to create and edit work items is dependent upon the user permissions you have been assigned
for the workspace.

• If you do not have edit permissions for all of the projects you have scoped for a page, you will not be able to
rank or re-rank work items.

• If you have selected different work item types to edit at one time, you can only edit the fields shared between
the work items.

Drag-and-drop ranking uses position to establish the relative priority order of a work item on a particular page. With drag-
and-drop ranking, you may prioritize work items by dragging them up or down in priority relative to other work items on the
page. Drag-and-drop ranking is the default configuration for new workspaces and may be used on most work item pages
where ranking is valuable.

NOTE
Drag-and-drop ranking is used throughout the Rally application, not just the backlog page.

You can prioritize a work item using drag-and-drop ranking from a summary page or custom view. The

icon indicates that drag-and-drop ranking is available for the work item. When viewing a board, you can hover over a card
to access the

icon. When using a list view, you can hover over the far-left side of the row.

 357



 Rally®

WARNING
When drag-and-drop ranking is enabled for your workspace, you cannot export ranking values or make changes
to them on import.

1. Select the

next to the work item and drag it up or down on the page with respect to its siblings.

2. Drop the work item at its new position on the page.

Rank a List with a Toolbar Action
In a list view, you can select a work item and use the ranking action in the toolbar to move the work item to the bottom,
top, or a specific location in the list. This can help you quickly ensure that a work item is the correct priority in your backlog
without needing to drag-and-drop throughout all work items to move the work item.

As with other ranking actions, you can only do this if the list is set to rank ascending.

NOTE
When you choose Rank Lowest, the work item moves to the end of the list, not to the end of the page. For
example, suppose you have 30 work items in your backlog and the list is set to display 25 at a time. Setting a
work item Rank Lowest will cause it to display on the second page.

1. Within a list view, ensure that it is set to rank ascending order.

2. Select the box of the work item(s).

3. Select from the following on the toolbar:

• Rank Highest or Rank Lowest to move the work item to the beginning or the end of the list.
• Move to Position to find and select a specific location within the list. The bold blue line on the Move to Position

window indicates the new position in the list.

Manual Ranking
Manual ranking uses numbers in a rank field to assign priority order to a selected group of work items. Use the numerical
rank field to assign a priority to each individual work item.

You can use the rank number to sort work items in custom views, and summary and detail pages. The format of the rank
field is a decimal number with 35 digits to the left of the decimal point and three digits to the right.

When you re-rank work items, you can apply additional numbers after a decimal point (such as 1.2, 1.21...) This enables
you to change the priority of work items without needing to re-rank every work item in the list. It is also possible to assign

 358



 Rally®

multiple work items the same rank. For example, you may assign multiple work items a rank value of 1 to indicate must
have, 2 to indicate nice to have, or 100 to indicate low or long-term priority.

You need to use a consistent numbering scheme when you are ranking items.

1. When editing the work item, enter the rank value in the rank field.

2. Select Save.

Change Your Ranking Method
You may decide to change your rank method after configuring and using your workspace. Although Rally provides this
capability with a simple option button change, there are implications to your Rally data that you should consider before
making such a change.

Changing from one rank method to another may impact your workspace in the following ways:

• The system attempts to maintain the rank values as they exist before changing the rank method.
• If you have multiple items with the same rank, the new order of that subset may be randomly applied.
• If you change the rank method from manual ranking to drag-and-drop ranking, and then subsequently change back to

manual ranking, you will not restore the original rank values that existed before the changes. Whole numbers ( 1, 2,
3...) are assigned as rank values in the conversion process.

WARNING
Once you select Save, the conversion process begins immediately. Users should not be logged in at this time
because all user stories and defects in the workspace are updated. The conversion process may take up to 10
minutes, depending on the amount of data in your workspace.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select Edit

for the desired workspace.

4. In the Rank Method field, select either the manual ranking or drag-and-drop ranking option.

5. Select Save to save your rank method and begin the conversion process.

Creating Parent-Child Relationships Between Stories
You can create parent-child relationships between your user stories.

A parent story is also known as an epic story. Parent stories can have single or multiple levels. This is useful if a single
user story cannot be completed in an iteration or release. In such a scenario, break up the user story into several child
user stories, which act as milestones towards completing the larger feature or initiative. Use parent and child user stories
when your team needs to complete a large feature or project that will span multiple timeboxes.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

 359



 Rally®

Story Hierarchy App

We recommend using the Story Hierarchy app to provide you with a quick way to view and edit your parent and children
user stories.

From the app you can:

• View parents and their associated children
• Create new relationships by dragging-and-dropping
• Re-parent children
• Copy stories
• Create tasks

You can add multiple copies of this app to a custom page, and drag-and-drop between them. This lets you manage and
edit story hierarchies that may exist in separate projects.

This section includes the following topics:

• Manage Parent-Child Story Hierarchies
• View Parent-Child Hierarchies
• Track Hierarchy Completion

Manage Parent-Child Story Hierarchies
You can create new child user stories from an existing story to create a parent, or you can associate existing user stories
together to form this relationship.

Learn more about creating child stories.

This section includes the following topics:

• Associate Existing User Stories as Children
• Bulk Associate User Stories
• Remove Parent-Child Associations
• Delete Story Hierarchies

Associate Existing User Stories as Children

If you create a new story to use as the parent of stories that have a Schedule State of Accepted, the parent story’s
Schedule State is set to the same Schedule State as the child stories you added to it.

The parent story also picks up the date the child story moved from In Progress to Accepted. If you add additional stories,
the Accepted Date changes to match the most recently added accepted story. The In Progress date isn’t affected when
additional In Progress or Accepted stories are added to the parent.

1. Locate the user story that you want to designate as the child.

2. Open an editor window for the user story.

3. In the editor, select Search

next to the Parent field.

 360



 Rally®

4. On the chooser pop-up, you may search or sort the ID, Name, and Project fields to locate the story you want to set as
the parent. You may also filter by the ID and Project fields.

5. Once the story you want to assign is found, select the radio button to the left of the story ID.

6. Select Choose. The story name displays next to the Parent field.

7. Select Save & Close, Save & New, or Save to confirm the edit.

Associate Multiple Stories as Children with the Story Hierarchy App

Use drag-and-drop in the Story Hierarchy app to associate multiple child stories to a parent story.

NOTE
Parent-child associations cannot be removed using this method.

 361



 Rally®

Remove Parent-Child Associations

You can remove a parent-child relationship (link) between two stories. When you do so, the child story becomes
independent of the parent story.

1. Locate the child user story from the pair you want to disassociate.

2. Open a detail editor for the child user story.

3. In the detail editor, select

in the Parent field. The child story is disassociated from the parent.

4. Select Save & Close, Save & New, or Save to confirm the edit.

Delete User Story Hierarchies

When you no longer need a parent story and its children, deleting the top parent story will remove the entire hierarchy
from your workspace.

NOTE
The following apply to all work items (user stories, defects, tasks, portfolio items, and so on):

• When a story hierarchy is deleted, only the top parent story appears in the recycle bin.
• To restore a deleted child story, you must restore the parent user story and remove the association.
• If you attempt to delete a parent with children, a pop-up will display asking if you're sure you want to delete

the parent story and all associated children.
• If you attempt to delete a parent which has children that are in projects you do not have permissions to, you

will receive an error message.

• From the Story Hierarchy app, select

and then select Delete.
• From the User Stories summary page, use the

row action.
• From a user story detail page, select

(Actions), Delete.

View Parent-Child Hierarchies

You can use multiple pages and views to see the relationships between parent and child user stories.

• Story Hierarchy App
You can use the Story Hierarchy app to view parent-child hierarchies at a glance.

 362



 Rally®

• Children User Stories Collection
You can use the detail editor to see all child stories for a given parent. This is useful for tracking the progress of a
single large feature or initiative.

To access the children summary page, select the Children link from the Collections ribbon on the detail page of a
parent story.

• Hierarchy View on User Stories Page
The hierarchy view is enabled by default on the User Stories page. Select the left-most icon next to the Views drop-
down to enable hierarchy view on the page.

 363



 Rally®

Track Hierarchy Completion
The following charts can be used to track hierarchy completion.

Story Burnup Chart

The Story Burnup chart is useful for showing the completed work for a large feature or initiative in chart form. Unlike
standard burnup charts, this view can span across multiple releases.

 364



 Rally®

Story Burndown Chart

The Story Burndown chart is useful for showing the remaining work for a large feature or initiative in chart form. Unlike
standard burndown charts, this view can span across multiple releases.

Identifying Dependencies
In Rally, you can create work item relationships such as parent-child or predecessors and successors.

Parent-child relationships allow you to create hierarchical relationships between work items while dependencies
(predecessors and successors) allow you to indicate an ordinal relationship in which one user story is dependent upon the
completion of another user story.

Viewing Work Item Relationships

You can access related work items for a work item through the detail editor. The detail editor for a work item
displays links that allow you to access related items for the work item such as tasks or dependencies. Select one
of the collection icons to view and manage work associated with the original work item. For example, select Tasks

to display the Tasks collection page. The links displayed represent all possible associated work item types that are related
to the current work item. Each link or icon is followed by a number indicating the number of associated work items that can
be viewed in the resulting summary page.

 365



 Rally®

This section includes the following topics:

• Parent-Child Relationships
• Predecessor and Successor Relationships (Dependencies)

Parent-Child Relationships
In Rally, a parent-child relationship refers to a relationship between work items.

This relationship implies ownership. The parent owns its child projects or user stories. Parents can be divided into infinite
levels of children. You can view parent-child relationships in a variety of ways.

Most list views will allow you to expand a work item to view child work items such as tasks or user stories.  You can also
view related work items through the Collections ribbon of the detail editor when viewing a work item. The parent-child
hierarchy for test folders displays on the Quality Management page. Actions performed on the parent have implications on
the children.

If a parent user story has been scheduled and a new child user story is added to the parent, the following actions take
place:

• Tasks of a parent story are moved to the first child story.
• Children inherit a copy of the values for Release, Iteration, State, Rank, Owner, and Blocked from their parent.
• Test cases and defects remain associated with the parent.

 366



 Rally®

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

View a User Story's Children

You can view the associated children of a user story by using the detail editor.

1. Select the FormattedID of the work item.
2. Select Children

to open the Children page.
3. The Children collection shows the child stories. Select the formattedID of a child story to view further details.

Predecessor-Successor Relationships (Dependencies)
Rally uses predecessors and successors to indicate an ordinal relationship in which one user story is dependent on the
completion of another user story. By assigning a predecessor to an existing user story, an order is established between
the two in which the successor user story is dependent on functionality contained in the predecessor user story.

Work should not begin on the successor user story until the predecessor user story is completed. User story states are
rolled up to help you know when a predecessor is complete and work on a successor can begin. A blocked predecessor
state is rolled up and easy to see from most pages.

Predecessor-successor relationships are only allowed between user stories in the same workspace.

In Rally you can:

• Create user story predecessors. You can create a new user story as a predecessor, or choose an existing user story.
Creating a predecessor automatically indicates a successor.

• View all predecessors and successors from the User Story detail editor.
• View the predecessors and successors for a user story from multiple summary pages such as the User Story, Iteration

Status, or Release Status pages. You cannot view dependencies on a card or board view.
• View the rolled up state of predecessors from the Successor User Story detail editor.
• Receive email notifications when a predecessor or successor is changed.

 367



 Rally®

View Dependencies on a List Page

Predecessors and successors can span projects within a workspace.

You can view dependencies on most list views as well as through the detail editor for a work item.

1. Navigate to the list view of a page.

2. Select Show Fields from the toolbar. 

3. Search for Dependencies. Select the check box next to Dependencies and select Apply.

 368



 Rally®

4. The Dependencies column displays on the page.

View Dependencies from a Detail Editor

You can view a user story's dependencies from the detail editor of the work item.

From this view, you can drill-down into further details or edit the successor or predecessor user story.

1. Select the FormattedID of the work item.

2. Select Dependencies

to open the Dependencies page.

3. Select either the Predecessors tab or Successors tab to view the dependencies.

Adding User Stories as Predecessors or Successors

A predecessor user story is one whose implementation must be completed before work on another user story can begin.
A successor user story is one that should be implemented after the user story is completed.

 369



 Rally®

You can either link to an existing user story or create a new one.

Add a New User Story as a Predecessor or Successor

1. Select the FormattedID of the work item.
2. Select Dependencies

to open the Dependencies page.
3. Select the Predecessors tab or Successors tab.

Rally defaults to the Predecessors tab.
4. Select Add New from the toolbar.
5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).
6. Select Create.

Add an Existing User Story as a Predecessor or Successor

1. Select the FormattedID of the work item.
2. Select Dependencies

to open the Dependencies page.
3. Select the Predecessors tab or Successors tab.

Rally defaults to the Predecessors tab.
4. Select Link Existing

from the toolbar.
5. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work

item(s) you want to associate.
6. Select Done.

The selected user story displays on the respective tab.

Remove User Story Predecessors or Successors

You can remove a dependency by using the detail editor for the respective work item.

1. Select the FormattedID of the work item.

2. Select Dependencies

to open the Dependencies page.

3. Select the Predecessors tab or Successors tab.

Rally defaults to the Predecessors tab.

 370



 Rally®

4. Select the check box next to the work item you want to remove.

5. Select Remove

from the toolbar.

Team Planning Page
Use the Team Planning page to pull work from the backlog and schedule work into iterations. Team Planning allows you to
easily view the velocity of work items in a given iteration and whether the team is over capacity.

Team planning requires that you have already set up timeboxes to use, such as iterations and releases. Learn moreabout
creating timeboxes.

To create plans containing features that customers need, use the Capacity Planning page. Once high-level planning has
occurred, your team can begin to plan stories associated with the features that are in the broader, high-level plan.

With the Team Planning page, you can view your team's work in multiple ways. You can schedule work items and assess
the impact to team velocity and capacity. The Team Planning page includes the following sections depending on how you
are viewing the page:

• Plan: Work that has already been scheduled in a specific iteration.
• Backlog: Work that has not yet been added to a release or iteration.

This section includes the following topics:

• Changing Your View of the Team Planning Page
• Reviewing the Backlog
• Scheduling Work Into Iterations
• Identify Issues
• View Dependencies
• Manage Tasks

Watch a short YouTube tutorial on how to use the Team Planning page.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

Changing Your View of the Team Planning Page
The Team Planning page provides you the flexibility of different views of your work to help you plan faster in addition to
drilling down when you need to.

You can access different views by selecting the view icons in the upper-right corner of the page.

 371



 Rally®

View Description

Backlog

• An expanded view of the backlog without the Iterations or the
Release Backlog sections.

• Drop-down menu with several options to filter the work you
want to plan.

Planning

• Includes the Backlog (unscheduled work), Iterations, and the
Release Backlog sections.

• Provides a way to move your work into a release or iteration.
• Drag-and-drop work items into iterations or releases.
• Indicators provide visual insight into missing work item

estimates and velocity.
• Task popover to easily add and tasks associated to a work

item.
• One-click deletion of work items in a release or iteration.

Planned

• Includes the Backlog (unscheduled work), and the Plan.
• Shows a more detailed view of your team's plan.
• View work in each iteration.
• Refine estimates or add missing estimates.
• Modify tasks as needed.

Reviewing the Backlog on the Team Planning Page
As a team, you can review the backlog and designate work items to be added to each iteration.

You can filter the backlog as needed. Learn more about filtering.

Rank the Backlog on the Team Planning Page

You can change the rank of items in the backlog section by using drag and drop or by using the gear menu. When you
change the rank within the backlog section, the rank is contextual to the number of items listed.

Learn more about ranking items.

Select a Quick View on the Team Planning Page

You can choose from multiple quick views (preconfigured filters) for the Backlog section of the Team Planning page.

1. Within the Backlog toolbar, select a view from the list:

 372



 Rally®

Team Planning Backlog Quick Views

Quick View Description

Unscheduled Work Project-scoped work (user stories, defects, defect suites, test sets)
with a Schedule State of less than In Progress and not scheduled
into a release or an iteration.
Additional filtering is available.

Unfinished Work Project-scoped work that had been scheduled into a release or
iteration other than the release or iterations currently selected in
the view and includes:
• User stories with a schedule state prior to Accepted.
• Defects not in the Closed defect state.
• Defect suites with a schedule state prior to Accepted.
• Test sets with a schedule state prior to Accepted.
Additional filtering is available.

Group by Feature (Unscheduled) Displays project-scoped leaf stories that have a Schedule State
of less than Accepted and have neither a release nor an iteration.
Leaf stories are grouped by their lowest-level portfolio item parent,
regardless of the parent portfolio item's project. Visibility of the
portfolio item is project-permission driven.

 373



 Rally®

Quick View Description

Group by Feature (Unfinished) Displays project-scoped leaf stories that have a Schedule State
less than Accepted, that are in a timebox prior to the selected
release, and grouped by their lowest-level portfolio item parent,
regardless of parent portfolio item's project. Only stories from
previous timeboxes are displayed; stories scheduled for future
timeboxes will not display. Visibility of the portfolio item is project-
permission driven.

Group by Feature in Release Displays project-scoped leaf stories that have a Schedule State
less than Accepted, that are in the selected release and grouped
by their lowest-level portfolio item parent, regardless of parent
portfolio item's project. Visibility of the portfolio item is project-
permission driven.

Release Backlog Project-scoped work that has been scheduled into the selected
release but has yet to be scheduled in an iteration, and has a
schedule state less than Accepted.
Additional filtering is available.

Stories (Unparented) Shows project-scoped leaf stories with a Schedule State less than
Accepted that are not scheduled in a release or iteration and do
not have a lowest-level portfolio item type or story parent.
Additional filtering is available.

Stories Shows project-scoped leaf stories with a Schedule State less than
Accepted that are not scheduled in a release or iteration.
Additional filtering is available.

Defects Project-scoped defects that have a defect state other than Closed,
and have not been scheduled into a release or iteration.
Additional filtering is available.

Defect Suites Project-scoped defect suites with a Schedule State less than
Accepted that are not scheduled in a release or iteration.
Additional filtering is available.

Test Sets Project-scoped test sets with a Schedule State less than Accepted
that are not scheduled in a release or iteration.
Additional filtering is available.

Scheduling Work Into Iterations Using the Team Planning Page
Once your team has reviewed the backlog, it's time to start scheduling work into iterations for the next release.

You can drag work items from the backlog or release backlog and drop them into the iterations.

NOTE
Work items that have already been scheduled in an iteration no longer display in the backlog section.

Schedule a Work Item with Drag-and-Drop

You can drag-and-drop work items between iterations. For example, if you want to move a story from Iteration 1 to
Iteration 2, you can do that by dragging the story from Iteration 1 and dropping it into Iteration 2.

1. Select Plan, Team Planning.
2. Select the Planning

 374



 Rally®

or Planned

view.
3. Use the drop-down at the top of the page to select the corresponding release you want to schedule.

4. Select the list (backlog, release backlog, or iteration) you want to work with.
5. Hover your cursor on the left side of the work item row you want to move.
6. Drag the row to a new location, either an iteration or to a backlog.

Schedule a Work Item with the Gear Menu

1. Select Plan, Team Planning.
2. Select the Planning

or Planned

view.
3. Use the drop-down at the top of the page to select the corresponding release you want to schedule.

 375



 Rally®

4. From the Gear

menu of the work item, select Move to Iteration.

NOTE
If you want to unschedule a work item, select Remove from Plan. This option is not available in the Backlog
pane on the Planning view.

Unschedule a Work Item on the Team Planning Page

You can easily return a work item to the backlog.

1. Select Plan, Team Planning.
2. Select the Planning

or Planned

view.
3. Select Remove

on the work item row to return the work item to the backlog.

 376



 Rally®

Identify Issues on the Team Planning Page
The bar next to each iteration displays the size of each work item relative to the velocity of the iteration.

The percentage is an indicator of how much capacity the team has for the iteration. If the percentage is over 100%, the
iteration name and the issues icon display in red, indicating that work needs to be removed from the iteration in order to
resolve the over-capacity issue.

The Issues column displays the

icon if there are problems with the iteration. Hover over the icon to view more details.

Examples of issues may include:

• A story does not have a plan estimate.
• An iteration's velocity is greater than 100%.

View Dependencies in the Team Planning Page
You can view whether a work item that is scheduled in an iteration has predecessors or successors.

If there are predecessors or successors that are associated with the work item, the number of dependencies displays in
the Dependencies column. Select the number to view those dependencies.

Learn more about dependencies.

1. Select Plan, Team Planning.

NOTE
The Dependencies column displays in all three views of this page. However,
to see this column in the Backlog list, you must switch to the Backlog

view.

2. Select the value in the Dependencies column for the work item to view the Dependencies dialog box.
This dialog box contains two tabs to let you see the Predecessors and the Successors for this work item.

3. To view the dependencies in the full detail editor, select Use Full Editor.

4. To add an existing work item as either a predecessor or successor for the current work item:
a) Select Link Existing from either the Predecessors or the Successors tab.
b) In the Choose dialog box, choose filters from the drop-down list and use the search field to locate the work item(s)

that you want to associate.
c) Select the check box for each work item that you want to associate.
d) Select Done.

The new dependency is added to the list of dependencies for this work item.

 377



 Rally®

Manage Tasks in the Team Planning Page
You can view tasks that are associated with work items or add new tasks to work items.

Remember that most list views allow you to inline edit the displayed fields or edit work items by selecting the FormattedID
of the work item.

1. Select Plan, Team Planning.

NOTE
The Tasks column displays in all three views of this page. However,
to see this column in the Backlog list, you must switch to the Backlog

view.

2. Select Tasks

for the work item to view the Tasks dialog box.

3. To view the tasks in the full detail editor, select Use Full Editor.

4. To quickly add a task to this work item:
a) Select Add New.
b) Enter the name of the task in the Name field.
c) Optionally, enter an estimate and select an owner for the task.
d) Select Create.

The new task is added to the list of tasks for this work item.

5. To add a task with more detail:
a) Select Add New.
b) Select Create with Details to view the task in the detail editor.
c) Complete the necessary fields.

Required fields are marked with an asterisk (*).
d) Select Create.

Defining Tasks
A task is a unit of work that contributes to the fulfillment and completion of a scheduled work item. Tasks allow
decomposition of scheduled items into manageable units of work. Tasks are the main units of work for a team member.

Team members can take responsibility or ownership for each task, providing estimates and remaining time for completion.
Tasks are owned by a single scheduled item for rollup reporting.

During iteration planning (also known as sprint planning) team members:

• Break stories into tasks
• Estimate the effort required to complete each task
• Assign owners
• Commit to the overall plan for the iteration

Once the iteration is underway, team members (also called contributors) work on their tasks and let the rest of the team
know how the work is progressing and whether they are blocked. As they get deeper into the task, they also have a better
picture of how many more hours of work remains. They update their tasks to share this information with their team and
with others in the organization who have a need to know.

This section includes the following topics:

 378



 Rally®

• Task State Updates Parent Schedule State
• Viewing Your Tasks
• Creating Tasks
• Editing Tasks
• Copying Tasks
• Assign Tasks
• Importing Tasks
• Task Fields

Your ability to manage a task is dependent upon the user role and permissions you have been assigned for the project.

Task State Updates Parent Schedule State
Updating the state of a task may update the schedule state of the schedulable work item it is parented to.
A schedulable work item can be a user story, defect, defect suite, test set, or risk.

If all tasks become Defined, the schedulable work item’s schedule state will become Defined. If all tasks become
Completed, the schedulable work item schedule state will become Completed. Otherwise, the schedulable work item
schedule state will become In Progress.

Defined Task? In Progress Task? Completed Task? Schedulable Work
Item Schedule State

Yes No No Defined
Yes Yes No In Progress
Yes No Yes In Progress
Yes Yes Yes In Progress
No Yes No In Progress
No Yes Yes In Progress
No No Yes Completed

For example:

• Adding a task to a story in Idea will make the story Defined. (The task will be created in the Defined state.)
• Making the first task In Progress for a story in Defined will make the story In Progress.
• Making the last task Completed for a story In Progress will make the story Completed.
• Adding a task to a story in Completed will make the story In Progress.

This existing logic has been frustrating to users who unexpectedly find their schedulable work items moving backwards or
forward. For Kanban teams, moving a story backwards in the flow is not advised as it disrupts Cumulative Flow Diagrams,
but this logic may do that if a task is added to a completed story to release it. It can also make Kanban teams break WIP
limits unintentionally.

Subscription or workspace administrators can enable or disable this project-level setting. Learn more.

Project administrators must be authorized by a subscription administrator to enable or disable this setting. Learn more.

Viewing Your Tasks
You can view the tasks for which you are responsible from several pages.

Some of the more commonly used are:

 379



 Rally®

• The Tasks page
• The Iteration Status page
• The Team Board page
• The Work Views page
• The My Tasks app
• The Task Board app

The Tasks page provides basic information regarding all tasks that have been created. You can view the status of each
task in a color-coded display that makes it easy to assess the progress of each task at a glance. You access the Tasks
page from Track, Tasks.

View the calculated rollup information for estimates and to do of tasks displayed in the Summary bar. Filter on any
available field and the rollup information is recalculated to reflect new totals based on the filter applied.

The Tasks page displays in a list view that you can customize. Learn more.

You can filter or sort the list to find the tasks of interest. Learn more.

To display the detail page for a task, select the FormattedID of the task from any page displaying the task.

Group Tasks

The Tasks or Work Views pages include the ability to group your tasks.

To organize your view into convenient categories, you can group work items into swimlanes. The Total Work Items in
each group displays to the right.

You can drag-and-drop work items between the groups. This updates the field value in that work item.

NOTE
If you display the Task Estimate field within your list, task estimates are rolled up by each Group By row.

1. Select Group By from the toolbar.
2. Select the field to group by from the drop-down list. Only one field can be selected.

– Items without a value for the selected field are grouped into a group called None.
– Select --No Entry-- to stop grouping.

3. Select Show Empty Groups to show all possible groups for the selected field, including groups that have no work
items.

Creating Tasks
You can create a task in Rally from multiple locations. This flexibility allows you to progress through work activities and
create a task whenever you need it from logical positions within Rally.

 380



 Rally®

NOTE

• Tasks exist only as work items associated to user stories, defects, defect suites, test sets, or risks.
• You cannot associate a task to a portfolio item.
• You cannot create a task as a stand-alone work item.
• You cannot add tasks to a parent user story that has child user stories; you can only add tasks to its children.
• You can add tasks to a parent user story that has child defects.

Use Drag-and-Drop

to drag the task up or down to prioritize your tasks.

Updating the state of a task may update the schedule state of the schedulable work item it is parented to. Learn more.

Create a Task from the Iteration Status Page

You can add a task from the Iteration Status page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Iteration Status.

2. Select the

toggle to switch to the list views.

3. Select the check box of a work item. The work item you select determines the parent of the work item you will add as a
child.

4. Select Add Child

from the toolbar.

5. Select Task as the work item type.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 381



 Rally®

7. Select Create.

Create a Task from the Release Status Page

You can add a task from the Release Task Status page.

1. Select Track, Release Status.

2. Select Tasks

.

3. To add a new task to a user story or defect:

• Select Inline New Task

and enter the task information.
• Select New Task

and enter the task information in the detail editor.

4. Select Save or Create (depending on the method used).

Add a New Task from the Tasks Page

You can add a new task as a peer of an existing task on a user story, defect, defect suite, test set, or risk work item.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Tasks.

2. Select the check box next to the task where you want to create a peer.

3. Select Add Peer

from the toolbar.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Select Create.

Add a Task from the Detail Editor

You can add tasks to a user story, defect, defect suite, test set, or risk from the detail editor.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

 382



 Rally®

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select the FormattedID of the work item.

2. Select Tasks

to open the Tasks page.

3. Select Add New from the toolbar.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Select Create.

Add a Task from the Team Board

You can add tasks from cards on your Team Board.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Team Board.

2. If the Tasks field is not displayed on the cards, add it. Learn more.

3. Select Tasks

to open the in-context Tasks editor.

4. Select Add New from the toolbar.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Add a Task from a Board-Style App

You can add a task from a board-style app, such as the Kanban board.

These instructions do not apply to the Team Board view.

1. Hover over a card and select

.

2. Select Tasks.

 383



 Rally®

.

3. Enter a name and select Add to quickly add the task, or select Add with Details to enter more information.

Editing Tasks
When you edit a task, you can modify information such as fields, resource values, and textual descriptions.

Rally offers multiple locations from which you can edit a task. Since all tasks are associated with a work item, you may
change, but not delete, a work item association.

Updating the state of a task may update the schedule state of the schedulable work item it is parented to. Learn more.

You may edit a task from any of the following locations:

• Task Summary
• A card on a board-style app
• Iteration Status (expanded) and Release Status pages
• My Tasks app
• Team Status page
• Task Board app

– If you prefer to update tasks during your daily meeting or standup, the Task Board app is a perfect tool for this. If
you don't already have a Task Board app tab, create one from the app catalog. During your standup, the scrum
master or any team member can update task status by dragging the task from state to state.

• IDE (Integrated Development Environment)
– If you use your own tools with Rally, you may be able to update tasks without leaving your development or test

tools. See Rally Integrations for details about which tools have built-in task updating.
• Timesheet page

– You can update task state and enter hours spent on development work daily, as well as update task to dos. Learn
more.

Copying Tasks
Copying existing tasks lets you create a set of similar work assigned under a work item.

You can copy tasks in the following ways:

 384



 Rally®

• Copy Tasks from Another Work Item
• Make a Copy of a Task
• Copy Tasks from a Work Item from the Release Status Page
• Copy Tasks from Detail Pages

Copy Tasks from Another Work Item

You can copy tasks between user stories, defects, defect suites, test cases, or test sets. Tasks can only be copied
between the same work item types (for example, from a user story to a user story).

If you have a common set of tasks that need to be completed for many, if not all, user stories or defects, you can copy a
set of common tasks from one work item to another. Create a user story or defect as a template and then copy tasks from
that template into new user stories or defects.

1. In a list view, select the work item to which you want to copy tasks.

2. Select Copy Tasks From

from the toolbar.

3. In the Choose an Item dialog box, enter search criteria. You may search by keyword or FormattedID.

4. Select the work item to copy tasks from.

5. Select Done.
The copies of the task display under the work item.

Make a Copy of a Task

You can make a copy of a task on the same work item.

The task is created with the same attributes as the original, but with a new FormattedID and name ((Copy of) is
prepended to the name).

1. Navigate to the page containing the work item where you want to make a copy of a task.

• Select Track, Tasks.
• Select Track, Iteration Status.
• Select Track, Release Status.
• Select Track, Team Status.

2. Expand the work item, and find the task to copy.

3. Depending on the page:

• Select the task and select Copy

from the toolbar.
• Select Inline Copy

.

 385



 Rally®

Copy Tasks from a Work Item from the Release Status Page

You can copy tasks from the Release Status page for user stories, defects, defect suites, test sets, or risks.

1. Select Track, Release Status.

2. Select Copy Tasks from another item

on the work item where you want the copied tasks associated.

3. In the choose an item dialog box, enter search criteria. You may search by keyword or FormattedID. Press Enter.

4. Select the radio button next to the work item that contains the tasks you want to copy. You may only copy from one
work item at a time.

5. Select Done.

Task copies display under the work item.

Copy Tasks from Detail Pages

Copy tasks from the detail pages of user stories, defects, defect suites, test sets, or risks.

You can only copy tasks between the same type of work items. For example, you may not copy tasks from a defect to a
user story.

1. Navigate to the detail page of a work item.

2. Select Tasks

to open the Tasks page.

3. Select Copy Tasks From

from the toolbar.

4. In the choose an item dialog box, filter by a project or enter search criteria. You may search by keyword or
FormattedID.

5. Select the work item that contains the tasks you want to copy. You may only copy from one work item at a time.

6. Select Done.

Task copies will display on the page.

Assign Tasks
You can assign tasks to users while editing the task.

1. Select the FormattedID of a task.
2. In the Owner drop-down list, locate and select the name of the new task owner.
3. Select Save.

Reassign Tasks

You can re-assign a task to a different work item from the Task detail page.

1. Select the FormattedID of a task.

 386



 Rally®

2. In the Work Product field, select Edit

.
3. Select the new work item for your task.
4. Select Save.

Importing Tasks
You can import tasks from another system using a CSV-formatted file.

You can import from the Tasks collection from the Detail Editor for a work item, the Iteration Status page, or the Tasks
page. Learn more.

NOTE
If you want to import a large set of data, you can use the  Rally Add-in for Excel.

When you import tasks, you need to include the FormattedID of the work item they will be associated with and the
associated work item must already exist in Rally.

Use the following guidelines when importing data:

• If your administrator has marked some fields as required, you must provide values for those columns in the CSV file.
• If drag-and-drop ranking is enabled for your workspace, you cannot export ranking values or make changes to them on

import.
• Importing values for timebox fields (Release, Iteration) is not supported.
• You cannot import a value for the Project field; all artifacts that are imported will be added to the current project.
• The schedule state of a task you import can update the state of the user story or defect it is associated to, if your

project settings allow this.
• If you refer to an item in the Recycle Bin or an item that has been deleted, that line will fail on import.

Example CSV Files

The import dialog contains a link to download data import templates which helps you format your CSV file correctly to
ensure all your data is imported. To successfully import a file, the column headers must be formatted in the same way as
the data import template. Rally suggests you download the provided template to verify correct formatting each time before
you import your file. You can modify this template by adding or deleting included fields (column headers).

You can view a sample CSV file by selecting the import template link that is provided in Rally's import wizard that is
available on most list pages.

CSV file formatting considerations:

• If a field value contains commas or quotes, enclose the value in quotes.
• Each line is individually processed and saved, and only the lines that fail are not imported. If you have failures and re-

run the same file, you will have duplicate objects. Note the failures and create a new file with only the failed lines.
• Embedded quotes in your input data are doubled.
• Embedded spaces do not require surrounding quotes.
• There is no comma following the last field on the line.
• Null fields are represented by two consecutive commas.
• Leading and trailing spaces on fields, even inside quotes, are ignored.
• File must normally end with a single CrLf (Carriage Return, Line Feed or both).
• The length of the path to your CSV file may not exceed 255 characters and cannot exceed a file size of 2 MB.

Example:
Importing a Task

In the following example, the first line of the CSV file consists of column headers (field names). The second
line of the template contains sample data. You must include the FormattedID of an existing work item in the
Work Product column in order for the import to succeed.

 387



 Rally®

"Work Product",Name,Description,Notes,Owner

"US65935","Development Task","Description of Task","Task notes","paul@acme.com"

Import Tasks

You can import tasks to a work item from several  Rallypages.

1. Do one of the following:

• Select Track, Tasks.
• Select Track, Iteration Status.
• From the detail editor of a work item, select Tasks

to open the Tasks page.

2. Download the example CSV file.
a) Select Import Task from Import/Export

.
b) On the Import dialog box, download the CSV file template using the Import template link.

3. Customize the downloaded CSV file with the field header columns you want to import and add values for the data.

Workspace fields that you are required to enter contain the text "required field" in the template contents.

You can add or delete field header columns as needed, although the file must remain in CSV format.

4. Upload your CSV file.
a) Select Import Task from Import/Export

.
b) Select Choose File to locate your CSV file.
c) Select your file and select Open.
d) Optionally, select your character encoding.

Depending on where you are when importing, this may require selecting the Advanced link.

5. Select Import.

Your data is imported and displayed at the top of the page.

Task Fields
Set these fields when creating or editing a task.

Required fields are marked with an asterisk (*).

The subscription or workspace administrator has the ability to hide fields.

FormattedID A system-generated ID is assigned to your task. It is unique and will never change. The FormattedID
consists of a tag prefix and a numerical value. The tag can be customized by your system administrator to
reflect a differentiating prefix for each work item defined in your project, such as US for user story, DE for
defect, and so on.

Description Enter a brief description of your task in this rich text field. Enter any text in the description that will help all
team members clearly understand the intent of the task.

Notes Use this textual field for recording additional information associated with the task such as team decisions,
customer input, or discussion results.

 388



 Rally®

Blocked Indicates that work on the task cannot continue until all issues preventing further progress are removed.
Any task that is blocked will automatically rollup to the related scheduled item and activate the blocked
status of the scheduled item. The blocked state will display in the Iteration Status or Release Status view in
red to indicate blocked, but will still carry the associated state letter so the initial state of the scheduled item
is not lost.

Blocked Reason Indicates the reason why a task is blocked. This field only displays when the task is blocked.
Ready This check box can be used to indicate that a task is ready to be worked. This field is primarily used by

teams using the Kanban Board or other board-based method of pulling work.
Rank A read-only numerical field that displays the relative importance of the related scheduled item.

Estimate Enter the number of units estimated to complete the task. This field is a real number and can accept three
digits followed by a decimal and two more digits.

To Do Enter the remaining amount of work to be completed for this task. When the task is created, this numerical
field is initially defaulted to match the value of the Estimate field.

Time Spent A read-only numerical field that displays the number of hours spent on the task.
Actuals (hidden

by default)
Enter the actual number of units it took to complete the task. Temporarily show this field to record time
actually spent on tasks as a way to detect lack of availability or software complexity underestimated during
planning if those root causes of missed commitments are not already detected during the retrospective. To
track software cost, use the Rally Time Tracker.

Using Tags
Tagging is a way to group or identify collections of work items. It provides all team members the ability to logically group
and filter user stories, defects, defect suites, test cases, test sets, and tasks. Tagging is one way teams can identify work
items as part of feature initiatives or projects that may span multiple timeboxes.

Tags are workspace-specific and can be used across all work items in a particular workspace. A single tag exists in the
workspace where it was created, but you can use it across defects, defect suites, stories, test cases, and test sets. For
example, you can tag both defects and user stories with the same tag.

Tags are case-insensitive, except when tagging a work item adds back an archived tag. In this case, you may
inadvertently create duplicate tags, for example, Regression and regression.

Only workspace administrators or subscription administrators can rename, archive, or delete tags. Learn more.

This section includes the following topics:

• Create a New Tag
• Assign an Existing Tag to a Work Item
• Remove a Tag from a Work Item
• Use Tags in Custom Views
• Tagging Multiple Work Items at Once

Create a New Tag
Before creating a new tag, verify that it does not already exist.

You should be careful not to create duplicate tags. Remember that tags are not case-sensitive so it is possible to create
two tags that differ only in capitalization.

 389



 Rally®

Users with viewer permissions cannot create new tags.

1. Select the FormattedID of the work item.

2. In the detail editor, navigate to the Tags field and select

.

3. Type the word you want to use as a tag. It can use both letters and numbers and be up to 32 characters.

4. Select Create New.

The tag is now available for use, and displays with a check box next to it.

5. Select Done to apply to the tag to the selected work item. If you do not want to apply the tag to the current work item,
clear the check box before selecting Done.

Assign an Existing Tag to a Work Item

You can assign a tag to an existing work item.

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

1. Select the FormattedID of the work item.

2. In the detail editor, navigate to the Tags field and select

.

3. Use the Search field to find the tag you want to use.

4. Select the check box next to the tag.

5. Select Done.

6. Select Save.

Remove a Tag from a Work Item

You can remove a tag from a work item at any time.

If you want to remove a tag from the workspace so it is no longer a selection when editing work items, your administrator
must archive or delete the tag. Your administrator can also rename an existing tag.

 390



 Rally®

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

1. Select the FormattedID of the work item.

2. In the detail editor, navigate to the Tags field and select Edit

.

3. Clear the check box next to the tag(s) you want to remove from the work item.

4. Select Done.

5. Select Save.

Using Tags in Saved Views
You can filter on the Tag field on most pages. This is particularly useful in helping you create work views of all work items
that have a specific tag.

You can save your filters and page settings in a saved view on most pages. This is useful for creating views that only
show work items tagged as part of your feature initiative or project.

NOTE
If you are unsure of your complete tag name, entering a partial name will show any tags that match. Rally
searches for matches while you enter text into the filter parameter field.

Tagging Multiple Items at Once
You can quickly apply the same tag to multiple items when using a list view.

1. Select the box of the work item(s).

2. Select Edit

from the toolbar to view the Bulk Edit dialog box.

3. In the Bulk Edit dialog box, select the Tags field and then select a tag(s) to use.

4. Select Apply to save your changes.

Use Timeboxes
The Timeboxes page allows you to manage iterations, releases, and milestones.

Iterations An iteration is a single, complete development timebox, typically two to four weeks in length. An iteration
produces intermediate deployable code that has been discussed, designed, implemented, and tested.
Teams work on a single iteration at a time. Iterations are also referred to as sprints.

Releases A release is a mid-range unit of time for planning and tracking. Consecutive iterations build towards the
larger goals or themes that have been planned in a release. Releases deliver incremental user functionality,
and allow teams-of-teams to coordinate iteration work with each other.

Releases do not represent an actual release in the sense of a deployment or shipment. Use milestones to
reflect these events, so that you execute on cadence and deliver on demand.

Milestones Milestones are target dates for events that are important to the business. Setting these dates in Rally is
beneficial to program, product development, and project managers as well as product owners to track
critical dates. A milestone could be a market event, a tradeshow, or even an important code deployment.

 391



 Rally®

This table provides a quick comparison between the timeboxes available in Rally.

Iteration (Sprint) Release Milestone

Typical Use How to deliver
Brief, repeating timebox
which produces intermediate,
deployable code

What to deliver
Mid-range timebox which
produces larger features
or code over the course of
consecutive iterations

Actual delivery
Event, deployment, deadline,
or date that is important to the
business

Types of Work Included Tasks based on user stories User stories based on lowest-
level portfolio items and theme

Associated to strategic portfolio
items and their hierarchy

Estimation Technique Based on historical velocity Based on iteration velocity and
team capacity

No estimation required

Recommended Duration 2 weeks 2-4 months (or 4-6 iterations) Independent of iteration and
release cadence, can happen
anytime

Purpose Task estimating Story writing Enablement

Planning Level Team level Team-of-teams level Organization level

The Timebox Administration feature provides greater control over the cadence, synchronization, periodic cross-domain
planning, and roll-up reporting for your organization by restricting the number of users that have permission to edit the
details of timeboxes. Restricting the ability to edit the details of your iterations and releases (including start and end dates)
helps to ensure that these timeboxes are consistent across teams and projects for cross-domain planning and reporting.

Subscription and workspace administrators can turn the ability to restrict timebox management on or off for a workspace
through the workspace configuration.  By default, when this feature is enabled, the ability to edit timeboxes is limited to
subscription and workspace administrators. Project administrators and editors are unable to edit timeboxes. However, you
can grant the permission to edit timeboxes to these users by adding the Timebox Admin permission to their profile.  For
more information, see Timebox Administration.

Work with Timeboxes

Common actions for iterations, releases, and milestones include filtering items on the page, selecting columns to display
on the page, and export (download) options.

Timeboxes uses a list page that you can customize to meet your needs. Learn More.

When you want to save the settings of a page for later use or to share with your team or others, you can create a saved
view. You can customize the settings on the page that you want to save. This can include filters, grouping, displayed fields
or columns, page count, and scoping. Learn more.

Printing is not directly available on the Timeboxes page. However, you can export to a CSV file, then open the file in your
preferred tool and print it. Learn more.

The advanced filtering option allows you to filter, set any field as a quick filter, search, and set up custom filter conditions.
Learn more.

NOTE
When you filter by the Owner field on a top-level item, the filter also displays all lower-level items (such as tasks
for user stories or user stories for portfolio items) for that owner, even if that owner does not own the top-level
item.

 392



 Rally®

Timebox-Based Planning
Timebox-based planning uses releases, iterations, velocity, and tasks to measure and plan a team's work within a set time
frame.

Create releases and iterations that align with your hierarchy. Establish a shared cadence to ensure your reports contain
consistent data about team progress.

Not using iterative development? Flow-based planning is also available with Rally's Kanban Board app.

It is important to understand the differences between the types of timeboxes. Learn more.

This section includes the following topics:

• Working with Iterations
• Working with Releases
• Working with Milestones

Working with Iterations
Scrum masters, product owners, and other organizers create iterations and modify their fields.

You can create your team's iterations prior to or after creating releases. Because multiple consecutive iterations rollup to
form a release, your team and organization should agree upon a development cadence first. Some smaller or independent
teams may not use releases. In this situation, the team should still agree on an iteration cadence. Use consistent lengths
of time for each iteration in order to gain insight to a team's progress over time.

Generally, teams create the next series of future iterations, to represent the team cadence, and serve as place holders
for discussion. During the Iteration Planning meeting, the entire team commits to a plan of work to be executed in an
upcoming iteration.

 393



 Rally®

The iteration artifact is unique for each Rally project. If your teams are aligned with each other in a project hierarchy, you
can create the same iteration for all teams at once. Create multiple iterations at once to ensure your teams are on an
aligned cadence, and to enable viewing of progress from multiple perspectives.

NOTE
For an iteration to be aligned, each hierarchical team's project must have iterations with matching Name, Start
Date, and End Date fields to take advantage of the rollup capability. This allows you to take advantage of the
Rally rollup charts and views.

This section includes the following topics:

• Iteration Planning
• Managing Iterations
• Iteration Fields

Iteration Planning

The purpose of the iteration planning meeting is for the team to commit to the completion of a set of the highest-ranked
product backlog items.

This commitment defines the iteration backlog and is based on the team's velocity or capacity and the length of the
iteration timebox.

Video: For more information, see the Agile Video Tutorials on Working in the Iteration or Sprint.

Who Is Involved?

Iteration planning is a collaborative effort involving these roles:

• Scrum Master: Facilitates the meeting
• Product Owner: Represents the detail of the product backlog items and their acceptance criteria
• Delivery team: Define the tasks and effort necessary to fulfill the commitment

Before the Planning Meeting

Before getting started, ensure:

 394



 Rally®

• The items in the product backlog have been sized by the team and assigned a relative story point value
• The product backlog is stack ranked to reflect the priorities of the Product Owner
• There is a general understanding of the acceptance criteria for these ranked backlog items

Equal Opportunity Backlog

The product backlog addresses new functionality and fixes to existing functionality. The order in which a product backlog
item is scheduled is completely independent of its ancestry.

For the purpose of iteration planning, the important characteristics for a product backlog item are:

• It is small enough to be completed in the iteration
• We can verify it has been implemented correctly

Right-Size Backlog Items

Product backlog items too large to be completed in an iteration need to be broken down into smaller pieces. The best way
to do this is by value, not by process.

If we can break down a product backlog item so that its children deliver value, then our iterations incrementally deliver
value. If we break down by process, then we impact time-to-market because value is not delivered until all the children are
complete.

Compound stories can be easily broken down through disaggregation. Complex stories present a different challenge. Bill
Wake enumerates twenty techniques at: http://xp123.com/xplor/xp0512/index.shtml.

Planning Process
Planning the contents of an iteration has two stages: determining how many user stories can fit into the iteration, then
breaking those stories down into tasks and assigning owners.

Sizing refers to the relative scope of a user story, and is usually done in relative points. The team periodically estimates
the size of a user story, when it is first created, during backlog refinement sessions, and before the planning meeting. By
the time planning begins, the team should know what stories near the top of the backlog can fit into the iteration.

Estimation refers to the breakdown of a user story into tasks. Once small steps necessary to deliver a user story are
identified, each task is given an hourly estimate. This figure keeps the team updated on how close a task is to being
completed. The team also knows how many task hours each team member has available in the iteration (known as
capacity), to prevent individuals from being overburdened.

User story points should not translate into or be compared with total task hours.

User Story Size

Mature teams use past velocity to determine what product backlog items to commit to during the iteration. Velocity is the
average number of user story points a team can complete in an iteration. For example, a new team completed 12, 14, and
8 points in their last three iterations. Review meetings revealed that the team was only able to complete 8 story points in
the most recent iteration, due to a technical issue that has since been solved. Based on these factors, the team would
estimate they have a velocity of 12 story points, to use in the next iteration.

When creating an iteration in Rally, use the Planned Velocity field to record how many user story points (or other value)
the team thinks it can complete. New teams may not know their velocity, or it may not be stable enough to use as a basis
for iteration planning. An approach for new teams is to make commitments with a best guess based on past project work.
If the team quickly completes all of the scheduled work, more can be pulled in. If the velocity estimate is too low, the team
should commit to less work in the following iteration.

 395

http://xp123.com/xplor/xp0512/index.shtml


 Rally®

Task Capacity for an Iteration

The capacity for the team is derived from three simple measures for each team member:

• Number of ideal hours in the work day
• Days in the iteration that the person will be available
• Percentage of time the person will dedicate to this team

For example, let's look at a team of five individuals, all committed to the team full-time. Each has about six ideal hours per
day to work on tasks, and no one is taking vacation. For a week-long iteration:

5 team members x 6 ideal hours x 5 working days = 150 hours of task capacity

Iteration Planning Steps

1. The Product Owner describes the highest ranked product backlog item.
2. The team determines the tasks necessary to complete each product backlog item.
3. Team members volunteer to own the tasks.

If any individual exceeds their capacity during iteration planning, then the team collaborates to distribute the load.
4. Task owners estimate the ideal hours they need to finish each task.
5. Planning steps repeat while the team can commit to delivery without exceeding optimum velocity.

Iteration Planning Agenda
Opening Welcome meeting participants, review purpose, agenda, and organizing tools.

Product vision
and roadmap

Remind the team of the larger picture.

Development
status, state of our

architecture, results
of previous iterations

Discuss any new information that may impact the plan.

Iteration name
and theme

Make a collaborative decision on name and theme.

Velocity in
previous iterations

Present the velocity to be used for this iteration.

Iteration timebox
(dates, working days)

Determine the timebox and total working days. Subtract days for holidays or other whole team-impacting
events.

Team capacity
(availability)

Each team member calculates their capacity based on personal availability, allocation to this and other
projects, productive time for tasks in this iteration each day.

Issues and concerns Check in on any currently known issues and concerns and record as appropriate.
Review and update
Definition of Done

Review the Definition of Done and make any appropriate updates based on technology, skill, or team
makeup changes since the last iteration.

Stories or items
from the product

backlog to consider

Present proposed product backlog items to be considered for the iteration backlog.

Tasking out Delivery team determines tasks, signs up for work, and estimates tasks they own. Product Owner answers
clarifying questions and elaborates acceptance criteria as appropriate; the scrum master facilitates
collaboration.

1. Tasks
2. Estimates
3. Owners

New issues
and concerns

Check in on any new issues and concerns based on tasking out and record as appropriate.

Dependencies
and assumptions

Check in on any dependencies or assumptions determined during planning and record as appropriate.

 396



 Rally®

Commit! The scrum master calls for a fist of five on the plan. The Agile team and product owner signal if this is the
best plan they can make given what they know right now and commit to moving to the next level of planning
—daily.

Communication
and logistics plan

Review and update communication and logistics plan for this iteration.

Parking lot Process parking lot—all items should either be determined resolved or turned into action items.
Action items/plan Process action plan—distribute action items to owners.

Retrospect the meeting Because we want these meetings to be useful for everyone, we solicit feedback on the meeting itself.
Close Celebrate a successful planning meeting!

Managing Iterations

Organizers can create, edit, and delete iterations from the Timeboxes page.

Your ability to create, edit, or view an iteration is dependent upon the user role and permissions you have been assigned
for the project.

IMPORTANT
If Restrict Timebox Management is enabled on this workspace, only subscription administrators, workspace
administrators, or users with the timebox admin permission can create, update, or delete release or iteration
timeboxes. For more information, see Timebox Administration.

Use the Timeboxes page to find information about your iterations, such as:

• Planned Velocity: The amount of estimate units the team anticipates they can complete in the release.
• Task Estimate: The rollup of the estimates for all of the tasks assigned to the iteration.
• To Do: The cumulative remaining amount of work units to be completed for all tasks in the displayed iteration.
• Actual: A rollup from all tasks which accumulates the true time the tasks assigned to this iteration took to complete.

This is helpful for estimating future tasks.

When creating an iteration, you have the option to share certain settings from the parent project to the child projects using
the Cascade toggle. This allows you to manage your iteration at one level of the hierarchy and cascade the changes
to the child projects. The easiest way to ensure effective data rollup is to cascade an iteration you create to other child
projects (teams) within your project hierarchy. Capturing rollup data gives you an overall picture of the iteration status. It
also saves time spent in configuration of dates and project state, and makes it easy to establish shared schedules across
child projects.

The Inherit toggle allows you to choose if you want to rollup data from a child to a parent. If you only want to track high-
level data, you can break the inheritance and remove data from the level you choose and the levels below. If you do not
select Inherit, data will no longer rollup to the parent project. This toggle is also an indicator that a timebox in the middle of
the hierarchy, functioning as both a parent and a child.

Add an Iteration
When you add an iteration, you must enter both start and end dates.

If your teams work together through a project hierarchy, ensure you are scoped to the top of your hierarchy when creating
new iterations. This method provides access to the Cascade option. This option ensures that your new timebox is present
in all hierarchical projects, which provides the rollup of data across teams and groups.

1. Select Plan, Timeboxes.

2. Select Iterations from the Type drop-down menu.

3. Select Add New from the toolbar.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 397



 Rally®

5. Enter the name of the new iteration.

NOTE
Avoid hyphens (–) in your iteration names. Using a hyphen in the name prevents data from this iteration from
displaying correctly in the Iteration Scope Change app. A dash (-) is an acceptable character.

6. Select both start and end dates.

7. Select Create.

Edit an Iteration
You can edit items inline by selecting an editable field. For example, Name, Date, Planned Velocity, and State are some of
the fields that are inline editable for iterations.

You can use the detail editor to edit your iteration. The detail editor displays all fields, not only those in your list view.

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

When you change the state of the iteration to accepted, it will not display in certain drop-down menus by default. You can
still find accepted timeboxes using search. You cannot add work items to an accepted iteration.

WARNING
You can accidentally disable the rollups of a hierarchical timebox when editing inline or bulk. Take care to ensure
all related iterations or releases have matching Name, Start Date, and End Date fields after editing. When bulk
editing these fields, select all copies of the hierarchical timebox in each project.

1. Select Plan, Timeboxes.

2. Select Iterations from the Type drop-down menu.

3. Select the

of an iteration to view the detail editor.

4. Enter the work item information in the detail editor.

Required fields are marked with an asterisk (*).

5. Select Save.

Cascade Iteration Settings
If you use a project hierarchy, you can create multiple iterations at once.

When you use a project hierarchy, you can use the cascade toggle to ensure that iterations are the same for all projects.
This saves time spent in configuration and makes it easy to establish shared schedules across child projects.

In order to use this feature:

• You must be in a parent project to use the Cascade option.
• You can only create iterations for those child projects for which you have create permissions.

When you use Cascade, the Name, Start Date, End Date, and State fields are automatically copied from the parent
project iteration to the child project iteration.

 398



 Rally®

NOTE
You cannot create another iteration in the same project with both the same start and end dates.

1. Select Plan, Timeboxes.

2. Select Iterations from the Type drop-down menu.

3. Select Add New from the toolbar.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Enter the name of the new iteration.

6. Select both start and end dates.

7. Complete the other fields in the editor as necessary.

8. In the detail editor, select the Cascade toggle to publish your iteration to all child projects.

9. Select Create.

Update Multiple Iterations
If you use a project hierarchy, you have the option of propagating edits made to the parent project to all related child
projects.

Rally tracks all linked child projects and updates specified fields to keep the entire project hierarchy in synch.

In order to update multiple iterations:

• You must be in a parent project to use the Cascade toggle.
• You can only edit iterations for those child projects for which you have update permissions.

When you cascade settings, changes to the following fields are updated in the linked child projects:

• Name
• Start Date
• Release Date
• State

When editing a child project, the State field can be individually edited, but as long as the child project is still linked to the
parent project through the Inherit toggle, any bulk update to the parent project will overwrite the individual edits.

 399



 Rally®

Turn off the Inherit toggle to unlink individual child projects from the parent project bulk update. When toggled off, the
Name and Release Date fields are enabled. Make a change to any of these fields and from this point on, the child project
release is unlinked and is not updated when bulk updates are made from the parent project.

1. Select Plan, Timeboxes.

2. Select Iterations from the Type drop-down menu.

3. Select the box of the work item(s).

4. Select Edit

from the toolbar to view the Bulk Edit dialog box.

5. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

6. Select Apply to save your changes.

Delete an Iteration

WARNING
There is no recovery or revision history for deleted iterations. If you delete an iteration that stories and defects
are scheduled in, they will all be updated to unscheduled.

1. Select Plan, Timeboxes.

2. Select Iterations from the Type drop-down menu.

3. Select the check box next to the iteration you want to remove.

4. Select Delete

from the toolbar.

5. Select Delete.

View Velocity Chart
When you select Iterations from the drop-down menu, you can view iteration velocity.

Select the Charts view in the toggle on the right side of the page to view the chart. The chart displays the number of
accepted points per iteration.

 400



 Rally®

Estimate Velocity for an Iteration
Velocity is a simple tool that measures the pace at which teams get work done.

The sum of the estimates for your work items—user stories, backlog, defects—successfully completed in an iteration is
your velocity. Measuring velocity helps you set realistic goalswhile planning for your iterations and releases. Measure
velocity using the same units asyour features, such as days, hours, or points.

Your iteration and release cycles should be relatively short, so velocity can be measured and validated early on in a
project. Team velocity generally becomes stable after three to six iterations. If velocity fluctuates too much for more than
one or two iterations, your team may need to re-estimate their release plan.

Velocity works best on the team level. Multiple teams and departments vary widely from each other, so estimating velocity
on a higher level than a team often produces inaccurate results. Velocity is most accurate for a stable team. When team
members leave, your velocity will change. For example, if 25% of your team moves to another team, decrease your
velocity by at least 25%.

Your goal should be optimal velocity, not maximum velocity. If your team is pushed into maximum velocity, often the
product suffers. Don't ignore defects, testing, and other quality factors just to show maximum velocity.

Record the total number of estimate units the team believes they can complete in an iteration or release with the Planned
Velocity field.

 401



 Rally®

Estimating Your First Iteration's Velocity

Your team's velocity will quickly become evident during the first iteration. If it is overestimated, velocity will decrease until
features are removed; if it is underestimated, velocity will increase until features are added. See the Sizing and Estimates
Overview for more information.

Schedule Work
Schedule prioritized user stories, defects, and defect suites into iterations.

Schedule Work Items

Plan work for each iteration by selecting user stories and defects from the backlog and scheduling them into an iteration.
You can use several pages, such as the Team Planning page and the User Stories page, to schedule work. Additionally,
you can install a copy of the Iteration Planning Board app.

You can use drag-and-drop or the gear menu on the Team Planning page to schedule into iterations. Learn more.

The Iteration Status page gives you access to multiple views of your scheduled work items, in the context of an iteration.
You can view a list, board, or charts to see the status of work items in your selected iteration. Learn more.

Schedule a Work Item

You can schedule a work item by editing the Iteration or Release field directly in the detail editor for the work item.

NOTE
Within most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes
are saved when you navigate away from the field.

You can also schedule a work item with the Iteration Planning Board app. Learn more.

1. Select Plan, User Stories.
2. Select the FormattedID of the work item.
3. In the detail editor, scroll to the Iteration and Release fields and select the timebox(es) you want.
4. Select Save.

View Scheduled Work Items

You can track which user stories, defects, and defect suites have been scheduled for a specific release or iteration on the
Artifacts page.

You can also create a work view of your work items, grouped by timeboxes, to view how work items are grouped into a
particular timebox. Learn more.

1. Select Plan, Timeboxes.
2. Select either Releases or Iterations from the Timeboxes drop-down menu.
3. Select the FormattedID of the work item.
4. Select Artifacts

to open the Artifacts page.

Iteration Fields

Set these field values when creating or editing an iteration.

Required fields are marked with an asterisk (*).

 402



 Rally®

Change descriptions are stored and displayed in the revision history. Learn more.

Cascade Select this toggle to apply this iteration to all child projects. This button displays when you are in a parent
project and create a new release. The iteration will be created using the same Name, Start Date, and End
Date in all child projects of your current parent project. This field defaults to on.

Inherit Turn this toggle on to allow name and date edits made to the parent project iteration to be replicated for all
child projects releases. Turn this toggle off from an individual child project iteration to remove its link from
the parent project iteration and allow a unique edit or update to the child project iteration. This field defaults
to on.

Name Enter the name of the iteration.

NOTE
Avoid hyphens (–) in your iteration names. Using a hyphen in the name prevents data from this
iteration from displaying correctly in the Iteration Scope Change app. A dash (-) is an acceptable
character.

Theme Use this rich text field to enter a theme for your iteration.
Start Date Select Calendar

and select the start date for the iteration of the software or application from the resulting calendar.
End Date Select Calendar

and select the date which targets an iteration of the software or application from the resulting calendar.
State Specify the current condition of the iteration. Valid values are:

• Planning: The iteration is not yet active and is still being planned for future activity.
• Committed: The team has committed to the proposed set of work and is ready to begin the iteration.

An iteration should be committed to before its start date.
• Accepted: The team has met the iteration criteria.

Planned Velocity Specify the total number of points that the team thinks it can complete within this iteration. Although points
is the recommended unit, you may customize the definition of units to indicate some other unit of measure.

Project The current project for the iteration. The project field defaults to the project you are in and cannot be edited.
To create an iteration in a different project, you must first switch to that project then create the iteration.

Plan Estimate,
Task Estimate,

Accepted, and To Do

These totals are rolled up from the estimates given for the associated scheduled items and their tasks
along with the actual number of units of remaining work to be done. The Accepted field calculates and
displays the total of scheduled item estimates whose state have been set to accepted. These figures
are presented to assist you in providing more accurate estimates for future iterations. These fields are
calculated in iteration units.

Notes Record additional information associated with the iteration such as team decisions or discussion results.

Working with Releases
A release is a mid-range unit of time for planning and tracking. Consecutive iterations build towards larger goals or themes
set out in a release.

A release is a timebox where work occurs to support delivery of a working, tested version of your system or
software. Releases deliver incremental user functionality and enhance the software solution to ensure an ongoing fit with
your customer needs. A release consists of multiple iterations.

Releases do not represent an actual release in the sense of a deployment or shipment. Use milestones to reflect these
events, so that you execute on cadence and deliver on demand.

Scrum masters, product owners, and other organizers create releases and modify their fields. Many teams use a quarterly
release cadence, with four releases per year. Each release typically contains 4–6 iterations. During the Release Planning
meeting, the entire team commits to a plan of work to be executed in an upcoming release.

 403



 Rally®

The release artifact is unique for each Rally project. If your teams are aligned with each other in a project hierarchy, you
can create the same release for all teams at once. Create multiple releases at once to ensure your teams are on an
aligned cadence, and to enable viewing of progress from multiple perspectives.

NOTE
For a release to be aligned, each hierarchical team's project must have releases with matching Name, Start
Date, and Release Date fields to take advantage of the rollup capability. This allows you to take advantage of
the Rally rollup charts and views.

This section includes the following topics:

• Release Planning
• Managing Releases
• Release Fields

Release Planning

The purpose of release planning is to commit to a plan for delivering an increment of product value.

The purpose of release planning is to commit to a plan for delivering an increment of product value.

Release planning is a collaborative effort involving these roles:

• Scrum master  – Facilitates the meeting
• Product owner – Represents a general view of the product backlog
• Delivery team or agile team – Provide insights into technical feasibility and dependencies
• Stakeholders – Act as trusted advisors as decisions are made around the release plan

Before the Planning Meeting

Before getting started, you should have the the following:

 404



 Rally®

• A ranked product backlog managed by the product owner
• Input from the team about overall capabilities, known velocity, and technical impacts
• High-level vision, market, and business objectives
• An acknowledgment of whether new product backlog items may be needed

Release Planning Checklist

• Where is your product owner?
Make sure the person responsible for making priority decisions about big features is available, whether it is an analyst,
product manager, or executive.

• Do you have a ranked backlog?
Five to fifteen high-level features the product owner hopes to include in this release. Write each one on an index card.

• How will you size your items?
Establish a common baseline for sizing. Consider bringing a broad group of individuals representing various teams
together and have them size a dozen or more product backlog items.

• Who is coming?
Everyone who is impacted by the release needs to be in this meeting to help develop the plan, identify dependencies,
and commit to the release.

• Plan for logistics.
Create an agenda in advance. Consider room size. Review the agenda beforehand with scrum masters or team leads.
Provision for breakout rooms, flip charts and sticky notes, and refreshments.

• What about multiple or distributed teams?
Consider plane tickets if planning is only four times per year. Alternatively, assign a scribe for each distributed team to
enter planning information from the whiteboard into your Agile project management tool. Use breakout rooms for each
team if they are all onsite.

• Do I need help?
This is an expensive and potentially large meeting. If you haven't facilitated large group meetings before, especially
when multiple teams are involved, consider bringing in an experienced facilitator to help.

Materials Needed for a Release Planning Meeting

• Posted purpose and agenda
• Organizing tools: Working agreements, parking lot, communication and logistics plan, issues and concerns,

dependencies and assumptions, decisions
• High touch: Flip chart or whiteboard and markers
• High tech: Projector, computer that can access needed data and tools, and a way for the computer to be shared
• Planning data (see below)

Data for a Release Planning Meeting

• Results of previous iterations and releases
• Feedback from stakeholders on the product, market situation, and deadlines
• Action plans and SMART goals from prior release and retrospective
• Items and defects to consider
• Development and architecture information
• Velocity from previous iterations or estimated
• Organizational and personal calendars
• Input from other teams and subject matter experts to manage dependencies

 405



 Rally®

Output of a Release Planning Meeting

• Release plan and commitment
• Issues, concerns, dependencies, and assumptions to be monitored
• Any new items for the release backlog
• Suggestions to improve future planning meetings

Release Planning Meeting Agenda
Opening Welcome, review purpose and agenda, organizing tools, and business sponsor's introduction. Along with a

typical opening, it is helpful for the business sponsor to share a few words on the importance of this release
and the team's upcoming work.

Product vision
and roadmap

Remind the team of the larger picture.

Development
status, state of

architecture, results
of previous iterations

in the prior release

Discuss any new information that may impact the plan.

Release name
and theme

Inspect current status as it relates to your roadmap themes and collaboratively decide on adjustments to
the name and theme to achieve a specific, current business goal for the release.

Velocity in previous
releases and

iterations, or your
estimated velocity

Present the velocity (if available) to be used for this release.

Release schedule and
number of iterations

Review key milestones and special events followed by a collaborative decision on timeboxes for the release
and iterations within the release.

Issues and concerns Check in on any known issues and concerns and record as appropriate.
Review and update

the definition of Done
Review the definition of Done and make any appropriate updates based on technology, skill, or changes in
team membership since the last release.

Stories and items from
the backlog to consider

Present proposed backlog items to be considered for scheduling into this release.

Determine sizing values Agree upon sizing values to be used in the release planning if velocity is unknown.
Coarse sizing of stories
intended for the release

Delivery team determines the size of items under consideration for the release and breaks down items too
large for iterations in the release. Product owner and subject matter experts answer clarifying questions and
elaborate acceptance criteria. Scrum master facilitates collaboration.

Map stories to
iterations in the release

Delivery team and product owner move items in to iterations based on size and velocity. Scrum master
facilitates.

New issues
and concerns

Check in again on any new issues and concerns based on the previous work and record as appropriate.

Dependencies
and assumptions

Check in on any dependencies or assumptions determined during planning and record.

Commit! Scrum master calls for fist of five on the plan. Delivery team and product owner signal if this is the best
plan they can make given what they know right now and commit to moving to the next level of planning—
iterations.

Communication
and logistics plan

Review and update the communication and logistics plan for this release.

Parking lot Process the parking lot—all items should either be resolved or turned into action items.
Action items

and action plan
Process the action plan—distribute action items to owners.

Retrospect the meeting Because we want these meetings to be useful for everyone, we solicit feedback on the meeting itself.
Close Celebrate a successful planning session!

 406



 Rally®

Managing Releases

Organizers can create, edit, and delete releases from the Timeboxes page.

Your ability to create, edit, or view a release is dependent upon the user role and permissions you have been assigned for
the project.

IMPORTANT
If Restrict Timebox Management is enabled on this workspace, only subscription administrators, workspace
administrators, or users with the timebox admin permission can create, update, or delete release or iteration
timeboxes. For more information, see Timebox Administration.

Use the Timeboxes page to find information about your releases, such as:

• Release Date: The targeted date for the end of the release cycle.
• Planned Velocity: The amount of estimate units the team anticipates they can complete in the release.
• Task Estimate: The rollup of the task detail estimates for all of the tasks assigned to the release.
• To Do: The cumulative remaining amount of work units to be completed for all tasks in the displayed release.
• Actual: A rollup from all tasks which accumulates the true time the tasks assigned to this release took to complete. This

is helpful for estimating future tasks.

To effectively rollup data, each release must have matching Start Date and Release Date fields.

When creating a release, the Cascade toggle lets you share certain settings from the parent project to the child
projects. This allows you to manage your release at one level of the hierarchy and cascade the changes to the child
projects. The easiest way to ensure effective data rollup is to cascade a release you create to other child projects (teams)
within your project hierarchy. Capturing rollup data gives you an overall picture of the release status. It also saves time
spent in configuration of dates and project state, and makes it easy to establish shared schedules across child projects.

The Inherit toggle allows you to choose if you want to rollup data from a child to a parent. If you only want to track high-
level data, you can break the inheritance and remove data from the level you choose and the levels below. If you do not
select Inherit, data will no longer rollup to the parent project. This toggle is also an indicator that a timebox is in the middle
of the hierarchy, functioning as both a parent and a child.

Add a Release
When you add a release, you must enter both start and end dates.

If your teams work together through a project hierarchy, ensure you are scoped to the top of your hierarchy when creating
new releases. This method provides access to the Cascade option. This option ensures that your timebox is present in all
hierarchical projects, which provides the rollup of data across teams and groups.

1. Select Plan, Timeboxes.

2. Select Releases from the Type drop-down menu.

3. Select Add New from the toolbar.

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 407



 Rally®

6. Enter the name of the new release.

NOTE
Avoid hyphens (–) in your release names. Using a hyphen in the name prevents data from this release from
displaying correctly in the Release Scope Change apps. A dash (-) is an acceptable character.

7. Select both start and release dates.

8. Select Create.

Edit a Release
As work is defined, you may need to update a release you created earlier. For example, you may need to rename the
release or update the release date to reflect changes in the project.

You can use the detail editor to edit your release. The detail editor displays all fields, not only those in your list view.

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

When you change the state of the release to accepted, it will not display in certain drop-down menus by default. You can
still find accepted timeboxes using search. You cannot add work items to an accepted release.

WARNING
You can accidentally disable the rollups of a hierarchical timebox when editing inline or bulk. Ensure all related
iterations or releases have matching Name, Start Date, and End Date fields after editing. When bulk editing
these fields, select all copies of the hierarchical timebox in each project.

1. Select Plan, Timeboxes.

2. Select Releases from the Type drop-down menu.

3. Select the

of a release to view the detail editor.

4. Within the detail editor, make any changes.

5. Select Save.

Cascade Release Settings
If your teams work together through a project hierarchy, ensure you are scoped to the top of your hierarchy when creating
new releases. When you use a project hierarchy, you can use the cascade toggle to ensure that releases are the same for
all projects.

In order to use this feature:

• You must be in a parent project to use the Cascade option.
• You can only create releases for those child projects for which you have create permissions.

When you use Cascade, the Release Name, Start Date, End Date, and State fields are automatically copied from the
parent project release to the child project release.

1. Select Plan, Timeboxes.

2. Select Releases from the Type drop-down menu.

3. Select Add New from the toolbar.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 408



 Rally®

5. Enter the name of the new release.

6. Select both start and release dates.

7. Complete the other fields in the editor as necessary.

8. In the detail editor, select the Cascade toggle to publish your release to all child projects.

9. Select Create.

Update Multiple Releases
If you use a project hierarchy, you can propagate edits made to the parent project to all related child projects. Rally tracks
all linked child projects and updates specified fields to keep the entire project hierarchy in synch.

In order to update multiple releases:

• You must be in a parent project to use the Cascade toggle.
• You can only edit releases for those child projects for which you have update permissions.

When you cascade settings, changes to the following fields are updated in the linked child projects:

• Name
• Start Date
• Release Date
• State

When editing a child project, the State field can be individually edited, but as long as the child project is still linked to the
parent project through the Inherit toggle, any bulk update to the parent project will overwrite the individual edits.

 409



 Rally®

Turn off the Inherit toggle to unlink individual child projects from the parent project bulk update. When toggled off, the
Name and Release Date fields are enabled. Make a change to any of these fields and from this point on, the child project
release is unlinked and is not updated when bulk updates are made from the parent project.

1. Select Plan, Timeboxes.

2. Select Releases from the Type drop-down menu.

3. Select the box of the work item(s).

4. Select Edit

from the toolbar to view the Bulk Edit dialog box.

5. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

6. Select Apply to save your changes.

Delete a Release

WARNING
There is no recovery or revision history for deleted releases. If you delete a release that iterations are scheduled
in, they will all be updated to unscheduled.

1. Select Plan, Timeboxes.

2. Select Releases from the Type drop-down menu.

3. Select the check box next to the release you want to remove.

4. Select Delete

from the toolbar.

Release Fields

Set these field values when creating or editing a release.

Required fields are marked with an asterisk (*).

Change descriptions are stored and displayed in the revision history. Learn more.

Cascade Select this toggle to apply this release to all child projects. This button displays when you are in a parent
project and create a new release. The release will be created using the same Name, Start Date, and End
Date in all child projects of your current parent project. This field defaults to on.

Inherit Turn this toggle on to allow name and date edits made to the parent project release to be replicated for all
child projects releases. Turn this toggle off from an individual child project release to remove its link from
the parent project release and allow a unique edit or update to the child project release. This field defaults
to on.

Name Enter the name of the release.

NOTE
Avoid hyphens (–) in your release names. Using a hyphen in the name prevents data from
this release from displaying correctly in the Release Scope Change apps. A dash (-) is an
acceptable character.

Theme Use this rich text field to enter a theme for your release.
Start Date Select the Calendar

and select the start date for the release from the resulting calendar. This field is required.

 410



 Rally®

Release Date Select the Calendar

and select the date which targets a release from the resulting calendar. This field is required.
Version Enter an identifying version number for your release.

State Specify the current condition of the release. Valid values are:

• Planning: The release is not yet active and is still being planned for future activity.
• Active: The release is active and is currently in progress. If multiple releases have been defined with a

state of Active, the release with the earliest start is considered the Active release.
• Accepted: The release has met the release criteria.

Planned Velocity Specify the total number of points that the team thinks it can complete within this release. Although points is
the recommended unit, you may customize the definition of units to indicate some other unit of measure.

Project The current project for the release. This field defaults to the your current project and cannot be edited. To
create a release in a different project, you must first switch to that project and then create the release.

Plan Estimate, Task
Estimate, Accepted,

and To Do,

These totals are rolled up from the estimates given for the associated scheduled items and their tasks
along with the actual number of units of remaining work to be done. The Accepted field calculates and
displays the total of scheduled item estimates whose state has been set to accepted. These values may
assist you in providing more accurate estimates for future releases

Notes Record additional information associated with the release such as team decisions or discussion results.

Working with Milestones
Milestones are target dates for events that are important to the business.

A milestone could be a market event, a tradeshow, or even an important code deployment. Setting target dates is
beneficial to program, product, project and development managers, as well as product owners and engineering directors
to track critical dates.

Watch a short YouTube tutorial on how to use milestones.

This section includes the following topics:

• Managing Milestones
• View Milestone Charts
• Milestone Examples

Managing Milestones

Use milestones to track progress towards deliveries and deadlines instead of tags or releases. Milestones offer more
flexibility for tracking important dates.

Consider the following about milestones:

• You can associate a milestone with multiple work items.
• You can associate a work item with multiple milestones.
• Work items and milestones must share the same project.

If you move a work item to a new project after associating it with a milestone, the work item will keep existing
milestone(s) only if they exist in the new project.

• When you reparent projects or related projects associated to a milestone, the milestone is unaffected and the work
items continue to be associated with the milestone.

• Child projects automatically inherit all milestones of the parent project.
• Your permissions level determines which milestones you can see. Subscription administrators can see all milestones,

regardless of the project. However, the page only display milestones defined in the current workspace. Workspace and
project administrators are limited to viewing milestones associated with projects that they have permission to see.

 411



 Rally®

You can associate a milestone with portfolio items or individual user stories. When you associate a milestone with
a portfolio item such as a feature, all of the associated user stories and work items are also associated with that
milestone. A milestone goal is complete when all children under the feature are complete. When a user story inherits a
milestone from its parent feature, the milestone does not display on the work item.

If you do not want to associate an entire feature with a milestone, you can associate a milestone with individual work
items. When you do so, the associated milestone displays on the work item.

If you do not want all child stories under a feature associated with a milestone, associate the individual stories and not the
parent feature to ensure scheduled work items are properly associated to the milestone. When you do so, the associated
milestone displays on the work item.

Add a Milestone
To add a milestone, you must be a project editor for at least one respective project in the workspace.

Your permissions level determines which milestones you can see. Subscription administrators can see all milestones,
regardless of the project. However, workspace and project administrators are limited to viewing milestones that are
associated with projects that they have permission to see.

Learn more about permissions.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select Add New from the toolbar.

4. Enter the name of the new milestone. You can use up to 32 characters.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select the Target Date for the milestone.

7. To scope a milestone to all projects in the workspace, select the Workspace Scoped check box.

NOTE

• You must be a subscription or workspace administrator to select Workspace Scoped.
• If you associate a milestone with a closed project, the Project field indicates the number of closed

projects selected.

8. To scope the milestone to one or more specific projects:
a) Select Edit

in the Projects field to open a list of available projects.
b) Select the check box for each project you want this milestone to apply to.
c) Select Done.

NOTE

• If you associate a milestone with a closed project, the list of projects and the Project field indicate the
number of closed projects selected.

 412



 Rally®

9. Select Create.

Edit a Milestone
You can change the properties of a milestone such as the associated project(s), target date, or name.

Your permissions level determines which milestones you can see. Subscription administrators can see all milestones,
regardless of the project. However, workspace and project administrators are limited to viewing milestones that are
associated with projects that they have permission to see. If a milestone is associated with multiple projects, and you do
not have editor access to any of those projects, you are unable to edit the project field for that milestone.

If you change the project of a milestone, any work item associations can be removed. You are prompted to confirm or
cancel the project change. Changes are recorded in the milestone's revision history.

Even though a subscription or workspace administrator may have created a milestone, another user can change the name
and date of the milestone at a lower portion of the project hierarchy.

You can use the detail editor to edit your milestone. The detail editor displays all fields, not only those in your list view.

NOTE
Within most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes
are saved when you navigate away from the field. The Workspace Scoped field does not display as a column in
the Timeboxes page and cannot be inline edited.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select the FormattedID of the work item.

4. Enter the milestone information in the detail editor.

Required fields are marked with an asterisk (*).

5. To scope a milestone to all projects in the workspace, select the Workspace Scoped check box.

NOTE

• You must be a subscription or workspace administrator to select Workspace Scoped.
• If you associate a milestone with a closed project, the Project field indicates the number of closed

projects selected.
• You can only add or remove up to 100 projects in one operation.

6. To scope the milestone to one or more specific projects:
a) Select Edit

in the Projects field to open a list of available projects.
b) Select the check box for each project you want this milestone to apply to.
c) Select Done.

NOTE

• If you associate a milestone with a closed project, the list of projects and the Project field indicate the
number of closed projects selected.

• You can only add or remove up to 100 projects in one operation.

 413



 Rally®

7. Select Save.

Update Multiple Milestones
You can quickly update multiple milestones at once to change all of the associated colors or move them to a new project.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select the box of the work item(s).

4. Select Edit

from the toolbar to view the Bulk Edit dialog box.

5. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

6. Select Apply to save your changes.

Associate Artifacts with a Milestone
You can associate a variety of work item types with a milestone including portfolio items, user stories, test artifacts, or
defect artifacts.

When associating work items, you can either choose an existing work item or create a new one to associate. You can also
associate a work item with a milestone when modifying the work item.

Once artifacts are associated with a milestone, you can view roll-ups for Plan Estimate, Leaf Story Plan Estimate
Total, Accepted Leaf Story Count, Un-Estimated Leaf Story Count, To Do, and Actuals fields on the Artifacts collection
page.  When you move a work item to a new project, the work item will keep existing milestones if they exist in the new
project.

 414



 Rally®

Choose an Existing Work Item to Associate to a Milestone
You can choose to associate an existing work item with a milestone.

NOTE

In the Artifacts collection, when you remove a work item type from your list view, fields that are solely associated
with that work item type will no longer be visible. This includes columns in your view as well as fields you can
choose to show or filter by.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select the FormattedID of the work item.

4. Select Artifacts

to open the Artifacts page.

5. Select Link Existing

from the toolbar.

6. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

7. Select Done.

Add a Work Item to Associate to a Milestone
You can add a new work item to a milestone.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select the FormattedID of the work item.

4. Select Artifacts

to open the Artifacts page.

5. Select Add New from the toolbar.

6. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

7. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

8. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 415



 Rally®

9. Select Create.

Delete Milestones
You must have at least project editor permissions for all projects associated with a milestone in order to delete a
milestone.

Deleting a milestone also removes the association from each work item that was associated with the milestone. The work
item itself is not deleted.

1. Select Plan, Timeboxes.

2. Select Milestones from the Type drop-down menu.

3. Select the box of the work item(s).

4. Select Delete

from the toolbar.

The work item is moved to the Recycle Bin.

View Revisions of a Milestone
Each time you save a milestone, your changes are recorded and tracked.

You can view the change history at any time.

Learn more.

Viewing Milestone Charts

Two milestone charts are available in the Charts collection of the milestone detail page: a burnup chart and a cumulative
flow diagram.

These charts visually represent how work is progressing towards a milestone. Both charts display user stories and
defects, including children of items in a milestone. For example, if a milestone contains a feature (portfolio item), the
burnup chart includes points for all stories in the feature.

Both charts allow selecting points or count for the y-axis. The count is the total of user stories and defects. Points are the
sum of Plan Estimate values. Only user stories and defects with no children are included in the scope total. Portfolio items
and epic stories are not counted.

1. Select Plan, Timeboxes.
2. Select Milestones from the Type drop-down menu.
3. Select the FormattedID of the work item.
4. Select Charts

to open the Charts page.
5. Use the drop-down menus on the right to update how the charts display information.

Milestone Burnup Chart

The milestone burnup chart shows how work is tracking to the target date. The blue line indicates the scope and the green
bars are the accepted work on a given date.

 416



 Rally®

From the Burnup Chart Unit drop-down menu on the right, you can select the count of user stories and defects instead of
points, or you can select to view both points and count.

Milestone Cumulative Flow Chart

The cumulative flow chart shows the flow of work in a milestone. This is helpful for Kanban teams or those looking for
bottlenecks in the process. Elements in the chart legend are selectable to show/hide series on the chart. For example, it is
easy to hide states to focus on parts of the workflow.

From the Cumulative Flow drop-down menus on the right you can specify the following:

 417



 Rally®

• Chart Unit: Select to view points or count on the chart.
• Field: Select Schedule State (selected by default) or a custom drop-down list.
• Shown States: Select the check box of the state you want to display on the chart. You can select multiple states.

Milestone Examples

The following are examples of milestones.

Tradeshow Milestone

A product manager or product owner could create a milestone for a tradeshow that will showcase a new feature or
enhancement.

Here's how a milestone can be created for a tradeshow:

1. Create and name the milestone.

2. On the Artifacts collection, create or choose the work items that will collectively need to be completed to meet the
milestone.

3. View the progress of the milestone on the Timeline.

Code Deployment Milestone

An engineering director could create a milestone to track an important code deployment.

Here's how a milestone could be created for a code deployment:

1. Create and name the milestone.

 418



 Rally®

2. On the Artifacts collection, create or choose a work item that needs to be completed to meet the milestone. 

3. Track the progress on the milestone using the burnup charts on the Charts collection.

 419



 Rally®

Timebox-Based Tracking
If your team works according to timeboxes, track your team's progress throughout the iterations and releases to ensure its
success.

This section includes the following topics:

• Iteration Status Page
• Release Tracking
• Release Status Page
• Release Metrics Page
• Managing Unfinished Work

Iteration Status Page
The Iteration Status page provides your team with a view of work items within an iteration organized by schedule state.

 420



 Rally®

You can view the page either as a list or a board, with each view providing a different look into your iteration.

NOTE
Iteration Status page features are also available as an app to use on custom pages and dashboards. Learn
more.

With the Iteration Status page, you can:

• Quickly evaluate an iteration's status and progress with comprehensive metrics and charts on the Iteration Progress
banner.

• Easily switch between list and board views that you can customize.
• Visualize iteration data in multiple ways using charts.
• Make rapid changes within a card or list line without opening the detail page.

NOTE
The Iteration Status page will show a defect twice if it is associated to a user story but it is only counted once.

Watch a short YouTube tutorial on how to use the Iteration Status page.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

This section includes the following topics:

• Set Up the Iteration Status Page
• Using the Iteration Progress Banner
• Updating Schedule States from the Iteration Status Page
• Adding Work Items
• Use the Card Actions Menu
• Print Work Items

Set Up the Iteration Status Page

You can customize the Iteration Status page for your needs.

When viewing work items for your iteration, you can switch between a board view with cards representing work items or a
list view that organizes work items so you can easily view relationships and dependencies.

NOTE
You can view predecessors and successors associated with the work items listed on the Iteration Status page by
choosing to display the Dependencies field as a column. Within a list view, a column displays. Within a board
view, the Dependencies field displays on the cards.

When using the board view, you can configure swimlanes. In each type of view, you can change the schedule state, drill-
down into a work item, as well as perform other work item tasks.

You can filter the page, save a view of the page to use later or share with others, and you can also export the work items
listed on the page to a CSV file.

Learn more about filtering, sharing and saving views, or importing and exporting data.

 421



 Rally®

Filter by Owner

Filtering by the Owner field works differently on the Iteration Status page than on other pages.

• Iteration Status page: The Owner filter considers the owner of the top-level work item (User Story, Defect, Defect Suite,
Test Set), as well as the owner of any associated child work items (Task, Test Cases).

• Other pages: The Owner filter considers the top-level work item only.

Select an Iteration

Choose an iteration from the drop-down menu from the top of the page to display the work items that apply to that
iteration.

Switch Between Board and List Views

When viewing work items for your iteration, you can switch between a board view with cards representing work items or a
list view that organizes work items so you can easily view relationships and dependencies. Learn more about setting up
your list view or your board view.

1. Select Track, Iteration Status.
2. Select the

toggle to switch between these two views.

Show the Age of the Card

An administrator (subscription, workspace, or project) can set this value on the board view. The age of the card represents
the amount of time it has spent in a specific schedule state (column).

The number of days determines when the age displays on the card. For example, if the administrator enters 2, the age of
the card will start displaying on the card after it has spent two days in a specific schedule state. The default is 3 days.

1. Select the Gear

in the upper-right corner to open the page settings.
2. Select Age of cards.
3. Enter a number corresponding to the number of days after which you would like the age to show on the card.
4. Select Confirm.

 422



 Rally®

Using the Iteration Progress Banner

The Iteration Progress banner provides a quick view of some popular metrics used for reporting when using Scrum.

You can collapse or expand the banner as necessary by selecting Expand

at the far right of the page. It also includes three charts that you can view. You can view the different charts by using the
arrows within the chart section of the banner.

Iteration Progress Banner Element Description

Planned Velocity Total number of story points (or another unit type) the team
estimates they can complete within the iteration. This value comes
from the Planned Velocity field on each iteration.

Iteration End Number of days left in the iteration out of the number of total days
in the iteration.

Accepted Percentage and number of accepted points out of the total points
in the iteration.

Defects Number of active defects in the iteration.
Defects are considered active unless they are in the Closed state.

Tasks Number of active tasks in the iteration.
Tasks are considered active unless they are in the Completed
state.

Pie Chart • Displays all work items in the iteration.
• Hover over any slice of the pie to view details for a specific

work item.
• The inner ring in the chart displays the stories in the iteration.
• The outer ring of the chart displays all associated defects,

tasks and test cases for each story in the iteration.

Burndown • Displays the amount of work to do for the iteration (blue bars)
and the amount of work that has been accepted in the iteration
(green bars).

• The Ideal Burndown line is calculated by averaging the amount
of work needed to be completed each day in order to meet the
deadline of the iteration.

Cumulative Flow • Displays the states of work in the iteration so you can analyze
the trend in lead time for delivery of working code.

• View the proportions of work in each state as the iteration
progresses.

• View the size of work in each state in plan estimate points.

Updating Schedule States from the Iteration Status Page

In the list view, you can update the Schedule State for a work item by using the drop-down list.

Select the Schedule State column for the respective work item and choose a new schedule state from the drop-down list.

 423



 Rally®

In the board view, each card resides in a column according to its current Schedule State field value. If you are starting a
new iteration, your cards should be in the left-most column. When work begins, cards are moved to the right.

To update the state of a card, drag it into the appropriate column. If the work item has tasks associated with it, the card
moves to a column automatically after updating the state of a task.

Adding Work Items

Use vthe Add New button on the Iteration Status Page to add work items to your iteration.

If you are using the list view, you can use toolbar actions such as add peer or add child. You must have the list sorted by
rank in order to add peer work items.

The type of children you can add to a parent depends on the parent type. For a user story, you can add a child task,
defect, user story or test case. For a test case within a test set, you can add a defect. Although it is possible to created
nested user stories, keep in mind that a user story should be already broken down to a minimal piece of value so that
nesting wouldn't be necessary. Nesting user stories impacts the plan estimation roll-up value.

Add New Work Items from the Iteration Status Page
You can add new work items from either the list view or the board view.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

 424



 Rally®

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Iteration Status.

2. Select Add New from the toolbar.

3. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Select Create.

Add New Child or Peer Work Items from the Iteration Status Page
The type of children you can add to a parent depends on the parent type.

For a user story, you can add a child task, defect, user story, or test case. For a test case within a test set, you can add a
defect.

NOTE
Use caution when using the Add Child or Link Existing toolbar action on the Iteration Status page. Once a
story becomes a parent to a child story, it will not display on the Iteration Status page since parent stores are not
scheduled (both the Release and Iteration field values are changed to Unscheduled).

1. Select Track, Iteration Status.

2. From the List view, select the check box next to the work item.

3. Select + Add Peer or + Add Child from the toolbar.

4. When adding a child work item, select a type from the Work Item Types drop-down list.

NOTE
If you add a peer, the Work Item Type matches the selected story.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Ranking Work Items from the Iteration Status Page
You can prioritize the work on the Iteration Status page by using rank.

On a list view, you can change the rank of an item with drag-and-drop or with a toolbar action. Learn more about
prioritizing work.

NOTE
The display of rank is only relative to the view you are displaying and not an absolute rank relative to all items.
For example, if you are viewing a list of all work items on the Iteration Status page but then customize the list
view with a filter, the rank of work items on the list will be relative to the filter that you applied to the list.

 425



 Rally®

Use the Card Actions Menu

You can modify work items directly from the board using the Actions menu on the card.

The Actions menu lets you make quick updates without navigating to a different page.

1. Select Track, Iteration Status.

2. Select Board to view the cards.

3. Select

Actions
on the card.

4. Select one of the following:

• Edit: Opens the detail editor for the work item.
• Pin: Adds the work item to the Pinned Items list. Learn more.
• Rank Highest: Sets the card's rank highest on the board and moves card to top of the column.
• Rank Lowest: Sets the card's rank to lowest on the board and moves card to bottom of column.
• Delete: Moves the work item to the Recycle Bin.

Print Work Items

You cannot print the work item list directly. However, you can export your work item list to a CSV file, using your current
view or selecting additional fields. You can then open the file in your preferred tool and print it.

1. Select Track, Iteration Status.

2. Select List.

3. Select Import/Export

and select one of the following:

• Download CSV of this view: Create a CSV file using the fields currently selected on your window
• Download CSV with more columns: Select additional fields to include in the CSV file

 426



 Rally®

4. Use an application such as Microsoft Excel to view the downloaded CSV file.

5. Use the application to print the list.

Release Tracking Page
Program managers, product owners, engineering leads, and other organizers can track the status of teams and features
in a common release from the Release Tracking page.

Features (or your custom-named, lowest-level portfolio items) that have been planned into a release display on the left
side of the page, which can be compared against a matrix of teams and iterations on the right.

This section includes the following topics:

• View Overall Release Status
• Track Features and Work
• Track Across Iterations in a Single Release
• View the Release Burnup Chart

View Overall Release Status

You can view the overall release status from the Release Tracking page.

When you view the release status, you can also customize your view by dependencies, matrix, or chart.

1. Select Portfolio, Release Tracking.
2. The release with the earliest start date is displayed by default. Select the release you want to track from the drop-down

menu at the top of the page.

 427



 Rally®

3. Use the Grid Unit drop-down list in the upper-right corner to track the status of work by story points or count of
associated stories.
The values in feature blocks and status indicators will update to reflect your choice.

4. Use the buttons in the upper-right corner of the page to switch between chart, matrix, and dependency views.

View Dependencies by Release

Select Dependencies

to view all the features in the selected release that have dependencies on other features. All items that have a
dependency relationship that have the release assigned will show in the list, even if the other item involved in the
dependency relationship is not assigned to the selected release.

 428



 Rally®

Track Features and Work

The left side of the page lists all features and work that has been planned in the selected release.

 429



 Rally®

 430



 Rally®

Three types of features are displayed as rows in the list:

• Direct Features are portfolio items that have been associated with the selected release and have corresponding work
in iterations. These features display a numerical rank number.

• Derived Features display with a rank value of D. These portfolio items are associated with a release other than the one
selected in the drop-down menu at the top of the page, but may have stories or defects associated with the release
selected in the drop-down menu. Features assigned to the release, but not to the scoped project team or teams also
display as derived features.

• Unparented rows represent the group of user stories or defects that are associated with the selected release or related
iterations, yet do not have a portfolio item set as a parent.

Select the FormattedID of any feature to view or edit the feature.

You can search the list by typing part of the name or ID into the search field at the top of the list to find a specific feature.

Rank and Sort the Release Tracking Page

The list is sorted in rank order ascending by default. Rank is determined by the position of any work item in the release,
so you may see some derived features, identified with a rank of D, listed among numerically ranked features. This is due
to the ranking system's process, which first ranks all items (direct and derived) in the list, and then re-numbers direct
features to show a sequential rank order.

Select the column name to sort the rank and other columns.

Track Individual Features

Select a row in the list to track the progress of a feature:

Associated work is highlighted in the iterations list to the right.

Teams who have not worked on the feature display as collapsed rows in the list.

Select the feature row again to clear the feature selection and return the list to its original state.

NOTE
Only direct features associated with the release are selectable.

 431



 Rally®

Identify Issues

The status indicator provides a quick glance at status for each feature either in percentage completed or number of work
items completed.

Direct features display a percentage complete value in the status indicator, as the entire feature is planned into the
release. Derived features display a count of completed versus planned work items, as only some of the work from the
feature is planned into the current release and project scope.

Select the status indicator to view additional details in a pop-up window.

Details include:

• Planned start and completion dates
• Story points accepted
• Story count accepted
• Defect count accepted
• Teams involved
• Issues

The Issues column displays the Issues

icon if there are problems with the feature, user story, or defect. Select the icon to view more details.

 432



 Rally®

Issues are reported for the following scenarios within the feature:

• Blocked user stories or defects.
• Release mismatch, one or more user stories have a release assignment that does not match the parent feature.
• A user story is dependent on another through a predecessor relationship, but the predecessor is not scheduled into an

earlier iteration.
• The list on the Issues pop-up window is limited to displaying 20 items in order of oldest to newest order. If there are

more than 20 issues, those beyond the limit are not displayed until the older issues are resolved.

NOTE
The Issues

icon only displays next to direct features that have a schedule state other than Accepted.

Track Across Iterations in a Single Release

The right side of the Release Tracking page is an iterations list that provides a breakdown of work by iterations and teams:

 433



 Rally®

Teams are represented as rows. Select a team name to collapse or expand the row.

Columns display for each iteration that falls within the start and end dates of the release. An Unscheduled column displays
any user stories or defects that have been assigned to the release without iteration assignments.

Status indicators display above team work in each iteration column. The numeric values are tied to the units in the Grid
Unit drop-down list. The status indicator displays the percentage complete and is also color-coded, according to the rules
used on the Iteration Status page:

• Green indicates all work in the iteration has been completed by the team
• Light blue indicates work is current and in-progress
• Dark blue indicates work was not completed in a past iteration

NOTE
Create matching iterations and releases through the bulk create method to ensure all data correctly displays on
the page.

Tracking Feature Completion

Features display in the list when a team works on an associated user story or defect. The numbers to the right of each cell
indicate the ratio of planned versus accepted work. These numbers change depending on your selection in the Grid Unit
drop-down list. Select a feature within the list to see details about the work in that iteration.

 434



 Rally®

Select the FormattedID of a work item to view it in the detail editor.

User stories and defects that are in the iteration, but do not rollup to a portfolio item, can be found in the US/DE cell.

Track Dependencies in a Release

If a feature cell contains the Predecessor

icon, there is a predecessor relationship present with other work items. Select the cell to display more information about
the dependencies in a pop-up window. Select any FormattedID in the pop-up window to view the item in the detail editor.

NOTE
If a story is dependent on a story outside of the release, a yellow triangle displays on the story's feature.

 435



 Rally®

View the Release Burnup Chart

Select Chart

in the upper-right corner of the Release Tracking page to switch to the chart view.

By default, the chart burns up all points or counts from all user stories and defects from all direct features in the Features
list. For derived features, only work assigned to the scoped project in the selected release is reflected in the chart.

Select a row in the Portfolio Items (Feature) list to scope the chart to just that feature or group of user stories.

To refine the data displayed on the chart, select the label in the legend to toggle the line on or off.

Hover over a point in the chart to access more details in a pop-up window:

 436



 Rally®

Release Burnup Chart Fields

Label Meaning

Preliminary Estimate Sum of the numeric preliminary estimate for all features in the
list. This indicates the high-level scope of the release. This scope
value changes only when a feature is added or removed from the
release.

Planned Points Sum of plan estimate values of stories and defects in features
in the list, plus unparented user stories and defects. This value
changes when:
• A feature is added to or removed from the release
• A user story or defect is added to or removed from a feature in

the release
• A user story or defect is added to or removed from the release
• The plan estimate value of any artifact included in the release

is changed, including stories on a feature that is scoped to the
release

Accepted Points Sum of plan estimate values of stories and defects whose
schedule state is accepted. The stories and defects must be
scoped to a release or associated with a feature scoped to the
release.

Released Points Sum of plan estimate values of stories and defects whose
schedule state is released. This value is zero if the release state
is not used. Note that the chart shows accepted points stacked on
top of released, but the released point value does not include work
that is in an accepted state.

 437



 Rally®

Label Meaning

Prediction (Planned Points) Using recent activity as a trend, this line provides an estimated
(predicted) change in scope.
Where the Prediction (Planned Points) and Prediction (Accepted
Points) lines intersect is the predicted completion date.

Prediction (Accepted Points) Using recent activity as a trend, provides an estimated (predicted)
rate of acceptance.
Where the Prediction (Planned Points) and Prediction (Accepted
Points) lines intersect is the predicted completion date.

Release Status Page
The Release Status pages display tasks, test cases, or defects on work items scheduled for the selected release.

When using a project hierarchy, this page reflects any view scoping settings that you have indicated in the project drop-
down menu. All charts and columns display the cumulative totals for all projects that have the same release name and
end date.

Work Item Type Which page to use

Release Task Status Use the Release Task Status page to assess work items and their
related tasks scheduled for the selected release.

Release Test Case Status Use the Release Test Case Status page to assess work items and
their related test cases scheduled for the selected release.

Release Defect Status Use the Release Defect Status page to assess all work items
scheduled for the selected release and any related active defects
and defect suites. Defects are considered active if they are in the
open, or fixed state (non-closed). The Release Defects Status
page makes it easy to assess and locate the total number of
active defects based on priority and severity as you move toward
completing releases.

View Release Status

You can customize the Release Status page to display the status of the tasks, test cases, or defects on work items
scheduled for the selected release.

This page displays the release status for the project that you have currently selected. You can select a release and view
the status of specific work items for the release: tasks, test cases, or defects. If you are scoped to a parent project, all
charts and columns display the cumulative totals for all projects that have the same release name and end date.

1. Select Track, Release Status.
2. Select a release from the drop-down list, or scroll through all listed releases by selecting the previous and next arrows

adjacent to the drop-down list.
3. Select the Task, Test Case, or Defect icon to view the respective status for the release.

 438



 Rally®

Work Product Status Page
Use the Work Product Status summary page to display work items (user stories and any associated defects or defect
suites) associated with a specific release.

On the Work Product Status page, you can:

• Filter and sort the work item list using the provided columns.
• Navigate to any listed work item to view more details or edit the work item.
• Edit the scope of the list to include or exclude child or parent projects by using the scoping settings in the project drop-

down list.
• View the number of work items that have been accepted during the release using this page. User stories that have

related defects and defect suites include the percentage of accepted items for the parent work item. A rollup total of all
accepted work items displays at the top of the Accepted column.

• Use drag-and-drop ranking on the page if it is enabled for your workspace.

Use the Work Product Status Page

You can view information such as:

• All parent-level work items: Including user stories, defects, and defect suites that are either scheduled or have child
work items scheduled into the displayed release.

• Iteration: If an item has been scheduled into an iteration, the iteration name displays here. Select the iteration name to
navigate to the detail view of the iteration.

• State: The state for the work item. The display gives a quick assessment of each item scheduled for the release. You
can easily view the progress of each work item and its children as it moves toward completion in relation to the release
date.

• Accepted: The number of items that have been accepted out of the total number of items scheduled for the work item,
and the percentage this represents for the entire parent work item. The total for all work items in the release is rolled
up and displayed at the top of the column.

• Active defects: The number of active defects related to each work item is displayed in this column.

1. Select Track, Work Product Status.
2. Select the release from the drop-down menu.
3. User stories are listed by default. Select Show Defects

to show defects. Select Show Defect Suites

to show defect suites. To remove a category of work items from the list, select the related icon again.
4. Quickly locate a specific work item by entering its FormattedID directly into the ID# text box, then pressing Enter. You

can use the following operators with a specific number to refine your ID search: <= , >= , = , < , > .
5. Select Actions, Print Report to print a summary or detail report. All work items and their scheduled items are printed

in a hierarchical display for both reports.
6. View predecessor and successor relationships by hovering over the related inline icon.

Release Metrics Page
The Release Metrics page summarizes work items that directly impact your progress toward achieving your milestones.
Use this information to help you plan possible future resource needs, identify trends, determine software quality, and help
predict velocity.

View the big picture of your work items—categorized by iterations—and assess your progress by viewing such iteration
statistics as the:

 439



 Rally®

• Number of work items accepted
• Total number of work items scheduled
• Total amount of units available per iteration (planned velocity)
• Amount of accepted units of all scheduled work items per iteration
• Percentage of accepted units of all scheduled work items (accepted and divided by plan estimate) per iteration
• Remaining amount of work to be completed (represented as total of remaining to do units for all scheduled work items

per iteration)
• Number of test cases that have passed test execution
• Total number of test cases that have been executed
• Number of existing defects in an open state
• Total number of defects logged
• Totals for individual iterations are displayed under the respective column headings on each iteration row

View Release Metrics

The Release Metrics page displays a summary of iterations within a release.

An iteration is within a release if it has a work item scheduled in an iteration and release. After an iteration is selected, the
Release Metrics page summarizes the items in the iteration, regardless of whether all the items are associated with the
release.

1. Select Track, Release Metrics.
2. Select a release from the drop-down list. You can also scroll through all existing releases using the previous and next

arrows on either side of the release drop-down box. The state of the selected release is displayed adjacent to the
release drop-down box.

3. Select an iteration to view the Iteration detail page.

Managing Unfinished Work
There are several ways you can manage unfinished work.

As you finish your iteration, you may find that you did not complete all of the work that your team committed to finish. This
can happen for a variety of reasons:

You Overestimated
What You Could

Complete in
the Iteration

New teams that are still understanding their velocity may struggle with incomplete work for a few iterations.
This is normal. Teams should continuously adjust their planned velocity for new iterations until unfinished
work becomes the exception rather than the rule.

One of Your Work Items
Ended Up Much Larger
Than you Anticipated

At some point, all teams will encounter a work item that greatly surpasses its initial estimation, pushing out
other work. If this becomes a common occurrence, the team should consider two preventive measures:

• Spend more time discussing, estimating, and tasking out user stories during iteration planning, or
• Rigorously break down larger features and user stories into smaller, value-add stories.

A Work Item
Became Blocked

Sometimes blockages can be avoided and other times they cannot. Always include blocked items as part of
your iteration retrospective so that you have an opportunity to improve your process and communication for
the next iteration.

This section includes the following topics:

• Manage Unfinished User Stories
• Move an Unfinished Story
• Split an Unfinished Story
• Manage Unfinished Tests

 440



 Rally®

Manage Unfinished User Stories

For each incomplete user story, you'll want to work with your team to:

• Understand the root cause and how to avoid it next time.
• Discuss the future of the user story:

– Is it still a priority to work on this story?
– Do we want to take a different approach this time?
– What work is remaining?
– Can we break this story down any further to reduce risk?

Based on how your team and organizations use Rally, you will need to choose one of two options for handling the
unfinished work. Each option has different impacts on reporting and charts:

• Move the story out of the recently completed iteration, preferably into the next iteration. This method makes
management of the unfinished story easy, but may negatively affect historical iteration charts.

• Split the story in two, leaving a history of unfinished work in the recently completed iteration. This method preserves
the fact that the total work planned in the iteration was not completed, but charts that track release scope, parent
portfolio items, and time in process may never show 100% completion.

Review both the move and split options with your teams and organization, and decide on a standard way to handle this
scenario. Consistency is important to retain historical records.

Move an Unfinished User Story

When you move a user story, you simply edit the work item and change its Iteration value to reflect scheduling in a new
iteration.

Unfinished work in a past iteration should be the top priority for the next iteration. Discuss this move in both your iteration
retrospective and iteration planning meetings.

1. Navigate to the detail page of the story you want to move.
2. Change the Iteration field to the next upcoming iteration.
3. Retain the same Plan Estimate value.
4. Edit the tasks under the story that were completed in the past iteration:

– Set the task Estimate and To Do values to 0, to prevent completed task hours from affecting the next iteration's
burndown chart.

– If your team is new and has temporarily activated the Actuals field, leave those values as-is.
– Add new tasks or update remaining task descriptions if necessary.

Impact of Moving an Unfinished User Story

Using this method can affect your statistics and charts in a few different ways.

The number of points in a moved story's Planned Estimate field will no longer be applied to the past iteration. This can
impact the % done indicator on the Iteration Status page.

For example, a team plans 20 points worth of work into their iteration, but are unable to complete one of the 5 point stories
in the plan. Prior to moving the incomplete story, the team's iteration correctly displayed that 15 points were accepted in
the iteration, out of 20 planned. After moving the incomplete story into the next iteration, the team sees an incorrect chart
value: 15 points were accepted, out of 15 total points planned. This can make it more difficult to locate historical failures or
other events.

Other locations in Rally may show altered historical data:

 441



 Rally®

• The Velocity chart will not display the fact that work was unaccepted or accepted late in the iteration.
• The Cumulative Flow chart will show a change in scope on the day the story is moved.
• The Iteration Scope Change report will show a story was removed from the plan, if the move is done on or before the

last day of the current iteration.
• If in-progress tasks are moved, "extra credit" can occur if the tasks have To Do values lower than the original Task

Estimate. For example, if a moved story had 5 total task hours estimated, but only 3 hours remain, the next iteration's
burndown will show 2 hours of work were completed on the first day. In reality, those hours were done during the past
iteration, when the work was not completed.

Split an Unfinished User Story

When you split a user story, the result is an unfinished story in the past iteration (as a historical placeholder) and
the orginal story is continued in the next iteration.

For the historical user story, we recommend that you:

• Leave all completed tasks and defects with the historical story.
• Remove the story from its parent.
• Leave the plan estimate unchanged so that you understand how many points you planned versus how many you

actually accepted.
– Exception: If you are using a user story hierarchy or charts such as Story Burnup and Release Burnup, you may

have a situation where the plan estimate roll-ups become artificially inflated due to unfinished work. To avoid this,
you can either zero out the plan estimate on the unfinished user story or disconnect it from its parent user story or
release.

• Leave the Schedule State field unchanged so that you can easily see which user stories did not reach acceptance
during the iteration.
– Exception: If you are using a user story hierarchy and you want a parent user story to show 100% acceptance

when it is truly finished, you may need to go back and accept all of the unfinished user stories. Do not include any
part of the unfinished user story's plan estimate in your expected velocity when planning your next iteration. Taking
partial credit, while appealing, can lead to overcommitment in future iterations.

• Change the Release field to unscheduled. This action will retain the team's history in the iteration, but the overall
release will correctly show that the planned work was eventually done. This assumes that the iteration the work was
missed in and the iteration the work was completed in are both in the same release.

For the continued user story:

• Retain the Plan Estimate value. You are not doubling-up! Teams get full velocity credit for their work in the iteration that
the work is accepted.

• Re-evaluate the priority of the continued user story.
• Discuss different approaches.
• Break the story down to reduce risk, if possible.
• Re-estimate the tasks based on the work remaining.

These steps will reduce the risk of not finishing the user story a second time.

When you split a user story, Rally automatically:

• Sets the Schedule State of the unfinished (historical) story to Complete.
• Copies discussions and attachments forward with the continued user story.

 442



 Rally®

NOTE
You can also split a user story from a list view. Select the check box next to the user story, then select Split

from the toolbar.

1. Navigate to the detail editor of the story you want to split.
2. Select Actions

, Split.
The original story displays on the right with the Name field prepended with [Continued]. The new (historical) story
displays on the left with the Name field prepended with [Unfinished]. The continued story is considered the split, or
ongoing, story.

3. Select values for the following fields:
– Name
– Release
– Iteration

NOTE
You cannot change the iteration of the parent story.

– Schedule State
– Plan Estimate

4. Use drag-and-drop to move tasks, defects, or test cases between the new and original stories. By default, completed
tasks, defects, and test cases display in the unfinished (historical) story while incomplete tasks, defects, or test cases
display on the continued story.

5. Select Split.
You are redirected to the detail page of the continued story.

Impact of Splitting a Story

Splitting the story can affect your charts and statistics in the following ways:

• If you do not remove the historical story from the release as recommended, Release Scope and Release Burnup
charts will never achieve 100% acceptance, due to the unfinished work in the timebox.

• If you do not remove the historical story from the feature parent, that feature's scope will be artificially inflated. The
feature's burnup will never achieve 100% acceptance due to the unfinished work in the list of child user stories.

• Advanced Insights charts such as Time in Process will be negatively impacted, because a story will never be finished
or accepted.

• Splitting a story causes two entries on the Release Scope Change report. Scope is added due to the new story
creation, and scope is removed when you unschedule the unfinished work from the release.

 443



 Rally®

Split Story Fields

You can set these field values when splitting a user story. If a field is hidden for the project, it does not display on the story
splitting screen.

Field Description

Name You may change the names of the continued and unfinished
stories. Be sure to use a name that is meaningful and contextual.

Release The selected release (if any) is used in the unfinished story and
is selected by default on the continued story. You can update this
field.

Iteration The current iteration is selected by default for the unfinished story.
The next iteration is selected for the continued story by default. If a
future iteration does not exist, it stays in the current iteration.

Schedule State The default schedule state for the continued story is derived from
the schedule states of the tasks on the story.
The schedule state for the unfinished story is set to Complete.
After you split the story, the parent story reflects the rolled up state
of the child stories.

Plan Estimate The original value defaults in the unfinished and completed
stories.

Manage Unfinished Tests

Test cases may be present in an iteration through an association to a user story, defect, or test set. Results for test cases
are recorded in Rally as separate work items, so you are not required to make a new copy of a test case for each iteration.

If you are unable to complete a defect that has an associated test case, edit the defect to move it into the next iteration.

If you are unable to complete a user story with an associated test case, follow the instructions to split a story. You will be
able to move the test case between the old and continued copies of a user story as you may with tasks and defects.

If you are unable to complete a test set in an iteration, you may copy or move the test set. We recommend using the
copy function to create a separate test set for the next iteration. The copy will include references to the same test cases
assigned to the previous test set. This method allows you to keep any test case results that were run in the previous
iteration separate from results in future iterations, and prevents naming confusion.

Use Flow-Based Boards (Kanban)
Kanban usually means a board for visualizing the flow of work. It can also mean the cards that populate the board. The
Kanban method is a set of principles and practices for managing and improving the flow of work.

 444



 Rally®

If you use the Kanban method, you will always have a board. People use Kanban boards even if they are not following the
rules of Kanban to help understand and communicate the progression of work on a project or other endeavor.

This is a simple Kanban. Work items on cards flow from left to right through columns or states.

The objective of a Kanban system is the smooth flow of work from start to completion without unnecessary slowdown or
stoppage.

Kanban teams limit the number of items they work on at one time (WIP) in order to reduce the cycle time it takes to get
individual things to completion.

Kanban topics include:

• Metrics
• Principles
• Additional Concepts

Core Practices of Kanban

These are the fundamental aspects of an operating Kanban system. It often makes sense to introduce these sequentially
to a team.

1. Visualize flow. This may start with a diagram of how work gets done in a team: the steps, hand-offs, decisions, work
queues, demand patterns, and so on. Ultimately, it takes the form of a Kanban board, either in an electronic tool or
with sticky notes on a whiteboard.

 445



 Rally®

This is a simple work flow...

...and how it might be translated to a Kanban board.
2. Limit WIP. Kanban teams set limits for the number of work items in each column on the board. WIP limits are meant to

represent the capacity of the team, and it is normal for them to evolve as the team learns more about what works best
to balance smooth flow and low cycle time.

The Done column does not have a limit, but most or all of the others do.
3. Make management policies explicit. Kanban teams define simple rules for how work flows for different types of work

items, when to pull an item into the next state, how to flag and manage blocked items. These are often posted near the
board. They evolve as the team improves.

 446



 Rally®

It is common to have policies for each state, as well as overall policies or working agreements inside the team and with
stakeholders.

4. Manage flow. Teams use data they gather on average cycle time and other metrics, along with information from the
current state of work on the board, to manage the work in a way that delivers the maximum value the fastest.

Teams strive to balance minimum cycle time with maximum throughput.
5. Improve collaboratively. A Kanban system highlights the most critical opportunities for improvement. Teams work on

these as a group and apply problem-solving methods to get to causes and to hypothesize and test solutions.

 447



 Rally®

This board has items blocked (shown with red flags). Column C has no work, and A is stuck because both A and B are
at their WIP limit.

Improvement

Teams using Kanban pay close attention to bottlenecks. They work quickly to remove the bottleneck and get work flowing
again, and will look for ways to prevent the bottleneck from occurring again in the future. This is at the heart of continually
improving the overall flow of work, which is a fundamental concept in Kanban.

This is a sample of a board with a severe bottleneck in column B, which is over limit. Column A is blocked and C is needs
work. WIP limits are in red.

Kanban Boards

Most boards start with Ready and end with Done. Ready means work is accepted into the team's flow. This column is a
queue—no work is done while a card is in this state. Each state indicates the principal type of work going on while the
card is in the column. But the team could, for example, be doing early testing while the card is in Build.

 448



 Rally®

Expedite Work

When a team needs to deal with an emergency or critical work that suspends other cards, an expedite process may
be used. When an expedited card is on the board, the team may ignore WIP limits until the card work is complete. We
recommend setting up an expedite agreement such that only one card may have this status at any time.

In Rally, use card coloring to indicate an expedited request. Agree on a color beforehand, and do not use that color on
other cards.

Kanban Metrics
Kanban only defines a few specific metrics.

The purpose of this data is to aid the team in making decisions to optimize flow and to drive and measure improvement.

Cycle Time (CT) This is the most fundamental Kanban metric. It is the time an item spends on the board, from Ready to
Done. It is not a measure of effort, but elapsed time in days. Reducing average CT is often a primary
objective of Kanban teams.

 449



 Rally®

Cycle Time (CT)
confidence levels

A team can apply simple statistics to the cycle times of items and determine confidence levels for how long
new work is likely to take, and use this to set expectations with stakeholders.

In this example, 75% of the team's work items get done in around 8 days, and 95% in around 12 days.

Throughput (TP) This is the number of items that the team reliably completes in some specific span of time. TP is the main
capacity metric.

 450



 Rally®

Little's Law: CT and TP are related by a simple formula known as Little's Law, which states that TP = WIP/CT. From this
it is clear that, for a given amount of WIP, throughput will increase if cycle time can be reduced. (Source:
Little's Law is more formally stated as L=λW.)

Due Date Performance If some work items have specific due dates (and there are policies to govern this), then it is useful to have
a metric that tracks the number of days over or under for each item. The objective is to get done as close to
the due date as possible.

Blocks A record of blocks and their duration helps describe how the system is improving over time. Reducing
blocks naturally leads to lower CT.

Quality Most teams agree that it is fundamental to have a metric that tracks quality over time. This is often
something like initial or escaped defects per time period. Since increased WIP frequently correlates to lower
quality, this an important aspect to measure.

Kanban Principles
Kanban was developed by adapting principles from Lean manufacturing, along with other disciplines, and shares many of
its core concepts.

These concepts include:

System thinking Maintaining a focus that includes the entire delivery system and how events and changes impact the whole.
Learning Emphasizing the need to collect, interpret and apply data, experiences, and understanding to drive

improvement of the system.
Flow Promoting and maintaining the smooth progression of work through a system, minimizing the wastes of

rework, stoppages, bottlenecks, and queues.
Pull Drawing work into the overall system—or into a specific state—only when capacity becomes available,

rather than pushing work in based on a schedule or outside decision.
Slack Reserving capacity to respond to normal variations and unexpected conditions, rather than attempting to

maximize utilization of individuals.
Swarm Quickly handling work problems with all needed resources to promote flow.

Additional Concepts
The topics below introduce somewhat more advanced Kanban concepts.

Your team may want to delay detailed consideration of these concepts until it has experience running its Kanban system
and has collected sufficient data to inform further decisions.

Work Item Types Most teams will try to understand the demand patterns of their work and to identify of the types of items
they work on. This may be as simple as classifying them into S‐M‐L sizes, or creating whatever divisions
are helpful. Metrics can then be filtered based on these types, and this information can help to substantially
improve the team's overall predictability.

Classes of Service With sufficient data and experience, a team can potentially identify a limited number of work item types and
then develop policies to optimize the flow of work and value delivered. Policies might include guidance on
prioritization and pulling of work, and triggers for tackling problem situations.

Teams develop classes of service that address their specific needs. David Anderson has suggested four
classes of service with an intention of improving stakeholder flexibility and satisfaction:

• Expedite
• Fixed Delivery Date: Items with a valid reason to meet a specific date, such as a contractual or

regulatory obligation. Kanban discourages assigning dates arbitrarily.
• Standard: The common class of items with normal urgency.
• Intangible: Lower priority items that do not have a significant (or urgent) cost of delay.

SLAs Based on information on cycle times and confidence levels and the policies associated with different
classes of service, it is possible to create Service Level Agreements (SLAs) with stakeholders. SLAs
address stakeholder expectations of how long a work item can be expected to take to complete, with a
certain level of confidence, based on the team's performance in delivering similar items in the past. SLAs

 451

https://en.wikipedia.org/wiki/Little's_law


 Rally®

are not promises to deliver in a specified time, leading some to suggest Service Level Expectations as a
better name.

Scaling Kanban

Kanban is evolving rapidly and finding ways to manage larger and more complex delivery contexts. Multi-level systems
can help teams of teams manage and improve their work.

Kanban is also being applied to wider aspects of work management, including discovery and decision processes for
managing programs and portfolios, and for providing rolled up views of complex delivery scenarios.

Additional Reading

• Implementing Lean Software Development, Mary and Tom Poppendieck, Addison-Wesley, 2007.
• Kanban: Successful Evolutionary Change for Your Technology Business, David J. Anderson, Blue Hole Press, 2010.
• Lean from the Trenches, Henrik Kniberg, Pragmatic Programmers, 2011.
• Priming Kanban, Jesper Boeg, Trifork A/S, 2011.
• Scrumban, Corey Ladas, Modus Cooperandi Press, 2008.
• Theory of Constraints, Eliyahu Goldratt, North River, 1999.

Flow-Based Planning
Flow-based planning (often called Kanban) is a popular lean methodology that maximizes a team's efficiency and
eliminates bottlenecks.

In flow-based planning, there are no timeboxes, task estimates, or review meetings. There is also no scrum master
role—the team owns the process of how work gets done. Using measurements of queues, cycle time, and work-in-
progress (WIP), the team decides how well their process is working and whether it needs adjustment. Flow, not cadence,
determines a team's success.

Flow-based work includes holding a daily standup meeting to discuss recently-completed stories and prioritizing and
assigning stories in progress. Instead of creating tasks, a team member takes the next item from the queue of stories.

Build a Kanban Board

The central tool of flow-based work is the Kanban board. The Kanban board gives teams the option of managing pull-
based, lean software development projects.

 452



 Rally®

The Kanban board allows all team members to communicate and prioritize with each other.

Product backlog, time-boxed iterations and estimation are unnecessary when using a Kanban system since work is pulled
into Kanban and the queue is the only work of interest. Assign defects and stories to the first Kanban state visible on your
board.

Use the Portfolio Kanban Board

You can use the Portfolio Kanban board to plan feature delivery in a continuous flow. The Portfolio Kanban Board helps
you track the status of your portfolio items as they move along in your portfolio process.

 453



 Rally®

Use the Team Board Page

Teams use the Team Board Page to establish their own workflow process and visualize all of the team’s work in one
place. Users can create, edit, and move cards on the team board.

The scrum master customizes how the team board looks. You can determine the name for each column and map it to a
schedule state, set up work-in-progress (WIP) limits, decide what fields to display on the card, as well as document the
team's own exit agreements within the board itself.

 454



 Rally®

Estimate Throughput

Maximum throughput is the objective by finding bottlenecks in your process and limiting the work-in-progress to get work
done effectively and efficiently.

Consider the following when estimating throughput:

• How effective is your current process? Should it be adjusted?
• Which team members are overloaded?
• How much time will it take to release this feature?
• Are there any bottlenecks—now or potentially in the future?
• What is the planned release date for this feature?

Flow-Based Tracking
You can track your team's flow-based work may be done with the Team Board page or use the Portfolio Kanban page to
track portfolio items.

This section includes the following topics:

• Team Board Page
• Portfolio Kanban Board
• View Charts

Team Board Page
The Team Board page is easy to set up and gives teams the autonomy to work in a way this is best for them while
maintaining consistent data for the enterprise by rolling up metrics to the program and portfolio levels.

On the Team Board page, you can see all your team’s work in one place. A team board provides a visualization of your
work flow. Team members and editors can create new cards, edit cards, and move cards on the team board. Select the
FormattedID to open a detail editor. Learn more.

This section includes the following topics:

 455



 Rally®

• Set Up Your Team Board
• Customize the Flow State Columns on your Team Board
• Set Up Work In Progress (WIP) Limits
• Work with Cards on the Team Board

For information on the charts available on the Team Board page, see:

• View Charts

NOTE
The Team Board page only displays work items from the current project.

Watch a short YouTube tutorial on how to use the Team Board page.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

***************************ICE CONTENT STARTS HERE - TITLES DEFINED IN ICE (BASED ON DIV
ID)***********************************

On the Team Board page, you can see all of your team’s work in one place. A team board provides a visualization of your
work flow. Team members and editors can create new cards, edit cards, and move cards on the team board.

The Team Board page is easy to set up and gives teams the autonomy to work in a way this is best for them while
maintaining consistent data for the enterprise by rolling up metrics to the program and portfolio levels.

The scrum master generally handles customizing the team board for the team. However, team members can create their
own boards according to their needs.

How a scrum master customizes the team board depends on how the team decides to represent their workflow. You can
determine the name for each column and map it to a schedule state, set up work-in-progress (WIP) limits, decide what
fields to display on the card, as well as document the team’s exit agreements within the board itself. There are a few
settings that are determined at the workspace level such as schedule states.

You represent your team’s workflow with corresponding flow states (columns) on the board. Flow states are represented
as columns on the team board and can differ from one team/project to another. For example, if you include a separate
testing process within your team’s workflow, you can create a “Testing” flow state or column that represents that part of
your process.

To ensure that your team’s data can roll up to workspace-level reporting, map each Team Board column to the schedule
states that are used in your workspace. As a best practice:

• Map the initial column in the board to either Idea or Defined.
• Include a column that is mapped to In Progress.
• Map the final column to Released or Accepted.

Define How Cards Look

You can customize how the cards on your team board display. You can choose up to 10 fields to display on the card itself
as well as determine whether the card's age displays. Viewing the card's age can help you determine how long a card has
been in a certain column. This number resets when it is moved from column to column.

 456



 Rally®

Determine How Long to Display Cards

You can choose when to display the age of a card per column, and when to archive (hide) cards that are in the far right
column. To show cards indefinitely or to view cards that have been archived (hidden), remove any value entered into the
Age field. Archived cards continue to display in Search and other pages in Rally. These settings will only hide the cards
on the Team Board page.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. In all columns except the far right column, use the Age of Cards field to enter a value (in number of days) to indicate

when you want to start viewing the age of the card. For example, if you enter a value of 2, the age of the card displays
on the card after it is in the column for two days.

4. In the far right column, use the Archive field to enter a value (in number of days) to indicate when you want to archive
or hide cards from view.

5. Select Save.

Add Display Fields to Cards

You can choose to display many different fields on the cards on a board. Each card displays the ID, Name, and Owner.
The other fields you choose can be custom to your workflow. For example, you can choose to display the release
associated with the work item or ensure that the Discussions field is displayed so that team members are encouraged to
use it.

1. Select Show Fields from the toolbar. 
2. Select the fields to display on the card.

You can also de-select fields so that they do not display on the card.
3. Select Apply to save your changes.

You can perform actions on cards directly from the Team Board page.

Move a Card Between Swimlanes

You can drag-and-drop cards between swimlanes. When you do this, the associated attribute of the card (such as Owner
or Scheduled State) changes as well. For example, if you have swimlanes set up by Owner and move a card to a different
swimlane, the value of the Owner attribute is updated to match the value of the Owner attribute in the new swimlane.

Add a New Work Item from the Team Board Page

You can add a new user story, defect, test set, or defect suite from the Team Board page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Team Board.
2. Select Add New from the toolbar.
3. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

 457



 Rally®

4. Select Create with details to view the item in the detail editor and complete any necessary fields.
Required fields are marked with an asterisk (*).

5. Select Create.

Mark Cards as Blocked on the Team Board

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to
notify your team of a problem. Blocked cards display on the board with a red blocked icon

and optional comment. When a card is ready to move to the next stage of development, you can remove the block.

1. Select Track, Team Board.
2. On the board, hover over the correct card.
3. Select Blocked

on the top right of the card.
The icon turns red

( )
and a text field displays.

4. Optionally, enter a reason for the block in the text field.
5. Press Enter to save your description or exit the text field.

Use the Card Actions Menu

You can modify work items directly from the board using the Actions menu on the card. This allows you to make quick
updates without navigating to a different page.

1. Select Track, Team Board.
2. Select

(Actions) on the card.

3. Select one of the following:
– Edit: Opens the detail editor for the work item.
– Rank Highest: Sets the card's rank highest on the board and moves card to top of the column.
– Rank Lowest: Sets the card's rank to lowest on the board and moves card to bottom of column.
– Delete: Moves the work item to the Recycle Bin.

{"URL":["/#/*/teamboard"],"heroDescriptionIdentifier":"ice-team-board-page","troubleshooting":{"text":"Knowledge
Base","URL":["https://knowledge.broadcom.com/external/article?articleId=113094"]},"video":["https://youtu.be/

 458



 Rally®

NQXybhmrW_Q"],"customCards":[{"id":"ice-set-up-your-team-board","type":"use","title":"Set Up Your Team Board"},
{"id":"ice-work-with-cards-on-the-team-board","type":"use","title":"Work with Cards on the Team Board"}]}

Set Up Your Team Board

Team members and project administrators can edit the settings of a board from the Settings page.

The scrum master generally handles customizing the team board for the team. If the scrum master wants to ensure
that the team is using a specifically configured team board, she can create a saved view and share it with all team
members. However, team members can create their own boards according to their needs. Typically, the saved team board
view is used for standups.

How a scrum master customizes the team board depends on how the team decides to represent their workflow. You can
determine the name for each column and map it to a schedule state, set up work-in-progress (WIP) limits, decide what
fields to display on the card, as well as document the team's exit agreements within the board itself. There are a few
settings that are determined at the workspace level such as schedule states. For more information, see Document Exit
Agreements.

You represent your team’s workflow with corresponding flow states (columns) on the board. Flow states are represented
as columns on the team board and can differ from one team/project to another. For example, if you include a separate
testing process within your team’s workflow, you can create a “Testing” flow state or column that represents that part of
your process.

To ensure that your team’s data can roll up to workspace-level reporting, map each Team Board column to the schedule
states that are used in your workspace. As a best practice:

• Map the initial column in the board to either Idea or Defined.
• Include a column that is mapped to In Progress.
• Map the final column to Released or Accepted.

Define How Cards Look

You can customize how the cards on your team board display. You can choose up to 10 fields to display on the card
itself as well as determine if the card's age shows up on the card when viewed on the board. Viewing the card's age can
help you determine how long a card has been in a certain column. This number resets when it is moved from column to
column.

Determine How Long to Display Cards

You can choose when to display the age of a card per column, and when to archive (hide) cards that are in the far right
column. To show cards indefinitely or to view cards that have been archived (hidden), remove any value entered into the
Age field and an infinity symbol will display. Archived cards continue to display in Search and other pages in Rally. These
settings will only hide the cards on the Team Board page.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. In all columns except the far right column, use the Age of Cards field to enter a value (in number of days) to indicate

when you want to start viewing the age of the card. For example, if you enter a value of 2, the age of the card displays
on the card after it is in the column for two days.

4. In the far right column, use the Archive field to enter a value (in number of days) to indicate when you want to archive
or hide cards from view.

5. Select Save.

 459



 Rally®

Add Display Fields to the Cards on the Team Board

You can choose to display many different fields on the cards on a board. Each card displays the ID, Name, and Owner.
The other fields you choose can be custom to your workflow. For example, you can choose to display the release
associated with the work item or ensure that the Discussions field is displayed so that team members are encouraged to
use it.

1. Select Show Fields from the toolbar. 
2. Select the fields to display on the card.

  You can also de-select fields so that they do not display on the card.
3. Select Apply to save your changes.

Customize How Your Team Board Displays

Learn more about customizing your board.

 460



 Rally®

Learn more about filtering.

Manage Team Board Views

You can set up and save your modifications to the Team Board page so you can view them later and share them with
team members. Learn more.

Customize the Flow State Columns on your Team Board

The Team board provides a visualization of your workflow, represented by columns.

Customizing your flow state columns allows you to configure the Team Board page to meet your team's workflow and
process needs. Flow states are represented as columns on the Team Board page and can differ from one team/project to
another. You can use up to 12 flow states on your Team Board page. This allows you to customize the board for a team
but continue to rollup workspace data to meet reporting needs. Each flow state column you create maps to a value in the
Flow State field within Rally.

The Flow State field is available from the detail editor by default and can be displayed in list views and on cards. Teams
that use a Team Board can edit the Flow State field directly when this field is present. This means that users can move
a work item through your team's flow by updating this field wherever they are in Rally without needing to navigate to
the Team Board page. The Flow State field is mapped to the Schedule State field, editing either the Flow State or the
Schedule State field also updates the other.

Users can customize the detail editor by displaying the Flow State field with the Schedule State field so that they can
easily view the relationship. They can also choose to hide the Flow State field. Learn more.

NOTE

You can map each flow state to a schedule state, and map multiple flow states can map to a single schedule
state. For example, your team may have flow states Building, Code Review, and Testing, all of which map to the
In-Progress schedule state.

Flow states are scoped to a project while schedule states are workspace-scoped.

You can customize the number of flow state columns you use on your board, where a flow state (column) represents
each flow state at a different part of your team's process. The number of flow state columns you have depends on your
team workflow. To make things easier to track, you can map schedule states to your flow state columns. Then, when a
team member moves a card, the schedule state is also updated where applicable. You can rename or delete flow state
columns as needed. Changing the name of the column does not affect the mapped schedule state. Keep in mind that after
the team starts using the board, moving and deleting columns becomes more difficult when work items are associated
with the columns.

If artifacts change projects, flow states can be affected if the flow state is not present in the target project.

When mapping columns to schedule states, you can map multiple columns to the same schedule state to represent your
workflow. For example, many teams choose to have a Backlog column and a Ready to Pull column. You can map both
of these columns to the Defined schedule state. By default the board displays four columns representing four schedule
states: Defined, In-Progress, Completed, and Accepted.

Learn more about schedule states here. Remember that schedule states are workspace specific and cannot be changed
at the project (team) level.

NOTE
Many board customizations are made on the page settings from the Gear

icon. To exit the page settings, select Board.

 461



 Rally®

Change the Name of a Flow State Column

You can customize the names of the Team Board page columns to provide team members a way to understand how to
use them and how they relate to your team's workflow.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. Select the title field of any column to change the name.
4. Select Save.

Add a New Flow State Column

You can add new columns as needed to represent your workflow.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. Select the + Add Flow State column on the far left of the page settings.
4. Give the column a name (required).
5. Select Save.

Move or Delete a Flow State Column

If a column is mapped to a schedule state with cards in that state, you will not be able to move or delete it. You typically
move columns around when doing initial set up and not after.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. Select Actions

to view the move and delete options.
4. Select Delete, Move Left, or Move Right.
5. Select Save.

Map Columns to Schedule States

If you map a column to a schedule state, cards are automatically updated to that schedule state when team members
move cards between columns. When you map a schedule state to a column, you can only choose from valid schedule
states. For example, you cannot go directly from the Defined schedule state to the Released schedule state when
mapping successive columns on your board. Your mapped schedule states must follow the prescribed schedule states for
your workspace.

When you map flow states to schedule states, team members can edit the Flow State field for a work item to update both
the flow state and the associated schedule state for the work item.

 462



 Rally®

WARNING
If you change the schedule state mapping for a column while existing work items are in that column, Rally
updates the schedule state of every work item in that column to the schedule state that you choose. This may
not be what you intended. Generally, if you want to make updates to flow state column mappings, you should do
so while no work items are currently in the column or schedule state it is mapped to.

1. Select Track, Team Board.
2. Select the Gear

in the upper-right corner to open the page settings.
3. Select a schedule state from the Mapped Schedule State drop-down list.

4. Select Save.

 463



 Rally®

Set Up Work In Progress (WIP) Limits

The work in progress (WIP) value represents a work in progress limit for each column on the board. This value is the
maximum number of cards that the team agrees should be in a column at any given time. When this limit is exceeded, the
column will turn red. Leave the field blank for unlimited WIP. An infinity symbol will display.

1. Select Track, Team Board.

2. Select the Gear

in the upper-right corner to open the page settings.

3. For each column on your board, enter a number for the WIP Limit. If you don't want to limit the WIP for a column, leave
the value blank.

4. Select Save.

View Work Rules

Use the following procedure to view the work rules for your workspace and project.

1. Navigate to the Team Board or to the Portfolio Kanban page. 

2. Turn on the Show Work Rules toggle to view the required and read-only work rules for your workspace and project.

3. Hover on the i

to view additional information about the work rule.

Work with Cards on the Team Board

You can perform actions on cards directly from the Team Board page.

Move a Card Between Swimlanes

You can drag-and-drop cards between swimlanes. When you do this, the associated attribute of the card (such as Owner
or Scheduled State) changes as well. For example, if you have swimlanes set up by Owner and move a card to a different
swimlane, the value of the Owner attribute is updated to match the value of the Owner attribute in the new swimlane.

Add a New Work Item from the Team Board Page

You can add a new user story, defect, test set, or defect suite from the Team Board page.

 464



 Rally®

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Team Board.
2. Select Add New from the toolbar.
3. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.
4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).
5. Select Create.

Mark Cards as Blocked on the Team Board

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to
notify your team of a problem. Blocked cards display on the board with a red blocked icon

and optional comment. When a card is ready to move to the next stage of development, you can remove the block. Learn
more about blocked work.

1. Select Track, Team Board.
2. On the board, hover over the correct card.
3. Select Blocked

on the top right of the card.
The icon turns red

( )
and a text field displays.

4. Optionally, enter a reason for the block in the text field.
5. Press Enter to save your description or exit the text field.

Use the Card Actions Menu

You can modify work items directly from the board using the Actions menu on the card. This allows you to make quick
updates without navigating to a different page.

1. Select Track, Team Board.
2. Select

(Actions) on the card.

 465



 Rally®

3. Select one of the following:
– Edit: Opens the detail editor for the work item.
– Rank Highest: Sets the card's rank highest on the board and moves card to top of the column.
– Rank Lowest: Sets the card's rank to lowest on the board and moves card to bottom of column.
– Delete: Moves the work item to the Recycle Bin.

Portfolio Kanban Board
The Portfolio Kanban Board helps you track the status of your portfolio items as they move along in your portfolio process.

Using cards and columns, the Portfolio Kanban Board helps you visualize and manage work during each stage of
development. The Portfolio Kanban Board gives you a view into the flow of work at the organization level, instead of the
team level like the Team Board, so you can see how work from the teams rolls up into organizational initiatives.

As the name implies, the board is specific to the Kanban lean methodology. Learn more.

Rally provides you with information on designing a Portfolio Kanban Board. Learn more.

For information on the charts available on the Portfolio Kanban Board page, see View Charts.

NOTE
The Portfolio Kanban Board is also available as an app. See the Rally App Catalog.

Setting Up the Portfolio Kanban Board

You can customize the board to meet your needs so that the columns and cards on the board represent information that
is valuable to your team. You can determine the name for each column and map it to a schedule state, set up work-in-
progress (WIP) limits, decide what fields to display on the card, as well as document the team's exit agreements within
the board itself. There are a few settings that are determined at the workspace level such as schedule states. For more
information, see Document Exit Agreements.

You can change swimlanes, fields displayed on cards, and more. Learn More.

NOTE
Since the Portfolio Kanban Board is a view at the organizational level, your system administrator is responsible
for decisions like defining the columns on the board and defining WIP.

Defining Work-in-Progress (WIP) Limits for your Portfolio Kanban Board

The WIP (work-in-progress) and WIP limit display at the top of the board under the state name. For example, if your
current WIP in a state column is three and your WIP limit is eleven, (3/11) displays. If the WIP limit is exceeded, the
numbers turn red.

 466



 Rally®

Administrators can set WIP limits for each portfolio item state in your workspace for each portfolio item type. This setting
can be found when editing the State field. The WIP limits on the Portfolio Kanban Board help to define "done" at the
organizational level.

WIP limit displays for the workspace and project you are currently scoped to. To track whether you are exceeding WIP
at the portfolio level, change your project scoping to the top of the project tree in your workspace. The Kanban board
displays the portfolio WIP for each state for the type you have chosen, and the number of cards in each state for the
scoping you have selected.

Define a Query on the Portfolio Kanban Board

A query lets you filter the cards displayed on the board, based on the field values of the portfolio items. The query is
scoped to the project; all project users are impacted by the query. Only workspace admins can change the query but all
users have view access.

Samples of query syntax are available on Portfolio Item Query Examples.

NOTE
Although you can use filters to determine which cards display on your Portfolio Kanban Board, there may be
some cases where do not want a card to display on the board at all, independent of other filters. In this case,
you can set the Archived field to "Yes" and set up query that excludes all archived cards. Learn more about
using the Archived field.

1. Select Portfolio, Portfolio Kanban.
2. Select the Gear

in the upper-right corner to open the page settings.
3. Add your queries to the Query field.

Select the Portfolio Item Type

You can specify the type to control which level of your portfolio hierarchy to view.

1. Select Portfolio, Portfolio Kanban.
2. Select the Type drop-down menu.
3. Select the correct portfolio item type. The available portfolio item types varies depending on your configuration.

 467



 Rally®

Managing Portfolio Kanban Board Views

You can set up and save your modifications to the Portfolio Kanban Board page so you can view them later and share
them with team members. Learn more.

Add a New Work Item from the Portfolio Kanban Board Page

The type of portfolio item is determined by your selection in the portfolio item type drop-down list.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Portfolio, Portfolio Kanban.

2. Select Add New from the toolbar.

3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 468



 Rally®

4. Select Create.

Mark Cards as Blocked on the Portfolio Kanban Board

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to notify your team of a
problem.

Blocked cards display on the board with a red Blocked icon

and optional comment. When a card is ready to move to the next stage of development, you can remove the block.

Learn more about blocked work.

1. Select Portfolio, Portfolio Kanban.

2. On the board, hover over the correct card.

3. Select Blocked

on the top right of the card.

The icon turns red

( )
and a text field displays.

4. Optionally, enter a reason for the block in the text field.

5. Press Enter to save your description or exit the text field.

Filter Options

The filtering component provides additional features, such as search, quick filters, and custom filter conditions.

Filtering is a quick and easy way to create advanced searches, similar to the functionality provided by Custom App
Queries.

Learn more about filtering.

NOTE
When you filter by the Owner field, you will see all work items associated with that owner instead of just the top-
level work items. For example, if you filter user stories by Owner, you also see the tasks associated with the
owner on which you are filtering. When you filter portfolio items by Owner, you will see all work items associated
with the owner on which you are filtering, including user stories and so on.

Add Display Fields to the Cards on the Portfolio Kanban Board

You can choose to display many different fields on the cards on the Portfolio Kanban board.

Each card displays the ID, Name, and Owner. The other fields you choose can be custom to your workflow. For example,
you can choose to display the release associated with the work item or ensure that the Discussions field is displayed so
that team members are encouraged to use it.

1. Select Portfolio, Portfolio Kanban.

2. Select Show Fields from the toolbar. 

3. Select the fields to display on the card.

 469



 Rally®

  You can also de-select fields so that they do not display on the card.

4. Select Apply to save your changes.

Change State

Changes in the Portfolio Kanban board trigger an update to the State field for any drag-and-drop action from one column
to another column.

1. Select Portfolio, Portfolio Kanban.

2. Select the card and drag it to the new state column.

NOTE
You can also re-rank portfolio items with drag-and-drop (if your workspace uses the drag-and-drop ranking
mode).

 470



 Rally®

Inline Edit

You can edit the Name, Owner, and the estimate fields inline (select once on the field on the card).

1. Select Portfolio, Portfolio Kanban.

2. To change the name of a portfolio item, select the text and make your changes. Press Enter or select outside of the
area to save your changes.

3. To change the owner of a portfolio item, select the Owner

in the header of the portfolio item. Select the new owner from the drop-down to save.

Update Cards

You can quickly modify the cards to reflect changes to the work item.

1. Select Portfolio, Portfolio Kanban.

2. Select the FormattedID of the work item.

3. Select the field to update and make your changes. For example:

• Select Actions, Copy to immediately create a new portfolio item.
• Select Actions, Delete to delete a card.

NOTE
If you delete an item, the portfolio item is immediately removed from the workspace with no confirmation
pop-up. Restore a portfolio item from the Recycle Bin.

• Select Actions, Convert to change the portfolio item type.

 471



 Rally®

Portfolio Item Discussions

You can review and add discussions for each card on the Portfolio Kanban board.

Discussions allow team members to provide detailed updates and comments on a portfolio item.

An icon

( )
displays on each card, indicating the number of comments present.

1. Select Portfolio, Portfolio Kanban.

2. Hover over a card and select the select Discussion

.
The list of discussion posts displays in a pop-up dialog box.

3. On the pop-up dialog box, select Edit.

4. To add a new comment, enter it in the text field and select Post.

• To edit a discussion post, select Edit

,
make the desired changes to the post, and select Post.

• To delete a discussion post, select Delete

and select Confirm in the confirmation dialog.

NOTE
Only the original author and administrators can edit or delete a discussion post.

Visualize Dependencies

Cards can indicate dependencies. If selected, the Dependencies field appears on the card and displays the number of
dependencies.

1. Add the Dependencies field from Show Fields.

2. Select

on the card to view details of predecessors and successors.

Use the Card Actions Menu

You can use the Actions menu on the card to modify work items directly from the Portfolio Kanban board.

Using the Actions menu lets you make quick updates without navigating to a different page.

1. Select Portfolio, Portfolio Kanban.

2. Select

Actions
on the card.

 472



 Rally®

3. Select one of the following:

• Edit: Opens the detail editor for the work item.
• Pin: Adds the work item to the Pinned Items list. Learn more.
• Rank Highest: Sets the card's rank highest on the board and moves card to top of the column.
• Rank Lowest: Sets the card's rank to lowest on the board and moves card to bottom of column.
• Delete: Moves the work item to the Recycle Bin.

View Charts

View Charts on the Team Board Page

NOTE
There is a new Chart feature coming soon. This feature is currently in Beta, but it is not available to all
customers. For more information, see View Charts with the New Beta Chart Feature

The Team Board provide charts that display your team metrics (cumulative flow, cycle time, and throughput).

1. Select Track, Team Board.
2. Select one of the following chart types from the View drop-down menu:

NOTE
The links that display in this menu are determined by where your subscription is hosted, not the geographic
location of your users.

– Cumulative Flow
If you are in the US, this displays the Smart Cumulative Flow Diagram.
If you are in Europe, this displays the Story Cumulative Flow Diagram.

– Cycle Time
If you are in the US, this displays the Cycle Time Chart.
If you are in Europe, this displays the Cycle/Lead Time Chart.

– Throughput
The Throughput chart shows the last twelve months of data (the last completed month plus eleven more). It shows
work for the selected Team, and parents or children depending on your scoping selection in the navigation.

3. To return to the Team Board, select View, Team Board.

View Charts on the Portfolio Kanban Page

The Portfolio Kanban page provides a cycle time chart that displays metrics for your portfolio items.

 473



 Rally®

NOTE
The Cycle Time chart for the Portfolio Kanban page is not yet available to users in Europe.

1. Select Portfolio, Portfolio Kanban.
2. Select Cycle Time from the View drop-down menu.

The Cycle Time Chart displays.
3. To return to the Portfolio Kanban, select View, Portfolio Kanban.

View Charts with the New Beta Chart Feature

1. On the Team Board, select Charts at the top of the page.

2. Select the tab for the chart that you want to view.
– Select Cycle Time to view the Cycle Time Chart for the selected team.
– Select Cumulative Flow to view the Smart Cumulative Flow Diagram for the selected team.
– Select Flow Metrics to view a collection of Flow Metrics Charts that are designed to provide a view into the

efficiency and predictability of the selected team and their deliverables
3. To return to the the board view of the Team Board or Portfolio Kanban, select Board at the top of the page.

Smart Cumulative Flow Diagram

The Rally Smart Cumulative Flow Diagram (Smart CFD) is a powerful tool with smart analytics that detect workflow
patterns and offer coaching advice. These analytics help you interpret the data and identify action items for continuous
improvement.

At a high level, this chart shows the cumulative work items that are in each flow state that is defined in the Team Board on
a given day across a specified time period.

The cumulative work items can be shown as either the total number or count of work items (user stories and defects) or as
the total point values of those work items. Each flow state shows as a color-coded band across the chart.

 474



 Rally®

IMPORTANT
This Smart Cumulative Flow Diagram is not currently available to users hosted in Europe.

Cumulative Flow

Seeing how work items move from one state to the next helps you detect workflow patterns and identify issues that can
affect the performance of the team. For example, you can quickly see spikes in work-in-progress (WIP) or in the work that
is coming into a team. You can identify periods where work is taking longer than expected to complete. You can also see
lags between work being completed and accepted.

The Smart CFD lets you look at all of the flow states at once so you can see the relationships between the states. But
you can also isolate one or more specific states to more easily identify the specific state where an issue is occurring. This
chart also provides additional metrics that help you drill into the details of a team’s WIP, flow time, and much more.

Pattern Sensing

In addition to charting the flow of work through a team or project, the Smart CFD also provides smart analytics that sense
patterns in the data. This pattern sensing can identify potential problems and areas of focus that you might not easily see
by just looking at the chart. Each pattern that is identified also provides a descriptive insight into the data and an action
that you can take to further investigate and resolve a potential problem in your workflow.

Healthy Teams

The Smart CFD, along with agile coaching, can help transform a team to follow a consistent and predictable pace. A
release train of healthy teams can make and meet commitments more efficiently. You can use this chart to analyze the
efficiency of your team's work system and to look for ways to control waste in the process. You can also use the chart to
improve your team's predictability and balance the input and output of work.

 475



 Rally®

What Data Am I Seeing?

To help you see active work, the Smart Cumulative Flow Diagram only counts items that are currently on the board or that
have been accepted and released. If an item is deleted, it is removed from the history of the cumulative flow diagram as
if it never appeared there in the first place. When an item moves backward on the board, it is removed from the history of
the cumulative flow diagram for the forward state as if it never moved there.

IMPORTANT
The Smart CFD does not reflect live changes to the Team Board. It displays data through the prior day, in your
workspace timezone.

Features of the Rally Smart Cumulative Flow Diagram:

• Customize your date ranges.
• Review agile recommendations for recognized chart patterns.
• Choose the flow states you want to see in the diagram as well as the work item measurement you want to use (story

points or item counts).
• Review a single state or compare all states simultaneously.

This section includes the following topics:

• View the Smart Cumulative Flow Diagram
• Settings for the Smart Cumulative Flow Diagram
• Using the Smart Cumulative Flow Diagram to Analyze Your Workflow
• Smart Cumulative Flow Diagram Frequently Asked Questions

View the Smart Cumulative Flow Diagram
The Smart CFD shows the number of work items (user stories and defects) that are in each flow state that is defined in
the Team Board on a given day across a specified time period.

This chart follows the project scoping of the Team Board and only shows work items for the selected team or project.

1. Select Track, Team Board.
2. From the View drop-down menu, select Cumulative Flow.
3. Select the Calendar

in the Start Date and End Date fields to define the date range for the data in the chart.
By default, the Smart CFD selects a one-month period. But you can expand that date range to identify patterns and
trends over a longer time frame.

4. Select from the settings on the right of the chart to update your view. For more information, see Settings for the Smart
Cumulative Flow Diagram.

5. Hover over any point in the chart for additional details for a specific day.
– A vertical line appears to help indicate the specific day that you are viewing on the time axis.
– A horizontal line shows either the WIP Flow Time, or the time taken for all work to move to the final state, typically

Accepted or Released.
• If you have System selected in the State Tooltips section, the horizontal line shows you the amount of time

taken for the total number of work items across all flow states to move from the first flow state to the last flow
state.
For example, in the image below the mouse is hovering over a day with a total of 36 work items across all
flow states. 15 of those work items are already in the last flow state. 21 work items are in earlier states. The
horizontal line is drawn to show the point at which all 36 work items are in the last flow state. The text indicates
that it took 35 days to complete those remaining 21 items.

• If you have State selected in the State Tooltips section, the horizontal line shows the WIP Flow Time. WIP Flow
Time is calculated as the amount of time taken for the number of work items in a selected state to move out of

 476



 Rally®

that state and into the next state. For more information, see Work-in-Progress Flow Time in Using the Smart
Cumulative Flow Diagram to Analyze Your Workflow.

– A tooltip shows the number of work Items that were in each flow state and the number of work items that moved
into each flow state (Arrival) for the selected date. You can choose to show values in the tooltip for all flow states or
for the specific flow state that your cursor is hovering over. For more information, see State Tooltips in Settings for
the Smart Cumulative Flow Diagram.

Settings for the Smart Cumulative Flow Diagram
You can change the Smart CFD settings on the right pane of the chart to adjust your view of the data and the patterns that
are represented. Adjusting how the data is represented makes it easier to focus on your team's needs.

The settings pane is divided into the following sections:

• Sensed Patterns
• Metrics
• States
• Units
• State Tooltips
• Color Scheme

Sensed Patterns

Select the Sensed Patterns toggle to turn on the smart analytics that detect workflow patterns and offer coaching advice.
This pattern sensing can identify potential problems and areas of focus that you might not easily see by just looking at the
chart.

Sensed patterns appear as icons across the top of the chart. These patterns indicate points of interest for your team that
might require investigation, such as a spike in WIP.

Select the pattern indicator in the chart to see more information about a specific pattern and guidance for further analysis
and actions to address a potential issue.

 477



 Rally®

If multiple patterns are sensed for the same point in the chart, the number of patterns appear as an icon. Select the
pattern indicator to see the specific patterns and view the details for each pattern.

When you select a pattern indicator, the flow states that are affected by that pattern remain in color. Flow states that are
not affected display in gray.

The Smart CFD senses the following types of patterns:

Configuration Patterns
NS (New State) Indicates that a new flow state was created.

SN (State Renamed) Indicates that a flow state was renamed. If both flow states were active during the selected time range, both
states show in the chart. The sensed pattern indicates the date that the state was renamed.

SR (State Removed) Indicates that a flow state was removed. If the flow state was active during the selected time range, it still
shows in the chart. But the sensed pattern indicates the date that the state was removed.

MMS (Mapped Schedule
State Change)

Indicates that a flow state to schedule state mapping has changed.

IFC (Improper Flow
Configuration)

Indicates that at least one necessary flow state is not defined for the team board. The Smart CFD requires
at least one flow state to be mapped to the In-Progress schedule state and at least one flow state to be
mapped to a schedule state after the In-Progress state. To address this issue, ensure that your flow states
are mapped to the appropriate schedule states.

Activity and Process Patterns
TFD (Too Few Days) The Smart CFD requires at least 7 days of data. This pattern indicates that there is not enough data for the

chart. This pattern can be caused by an Improper Flow Configuration that prevents at least 7 days of data
from showing, but it often indicates a new team that does not have at least 7 days of data yet.

 478



 Rally®

FI (Flow Inactive) Indicates that all flow states in the chart are flat with no work moving into any flow state for the entire
selected date range. This pattern typically indicates that a team is no longer active. If this pattern is sensed,
the Smart CFD does not attempt to sense any other patterns.

FL (Flat Lines) Indicates that work is stalled or blocked. No work has moved into the flow state for 10 days or more.

This pattern can indicate a workflow problem that should be investigated. This pattern could also indicate
that Rally is not being updated regularly.

PI (Period of Inactivity) Indicates that there are Flat Lines patterns in all in-progress and after in-progress flow states at the same
time. No work as moved into any of these states for 10 days or more. When this pattern is sensed, Flat Line
patterns in individual flow states do not show.

This pattern could indicate offsite activities or holidays. But it could also indicate that work has stopped
across multiple flow states and should be investigated further.

SS (Stair Steps) Indicates a significant increase in the cumulative work items in one or more states. A relatively flat line that
is followed by a steep stair step can indicate that work is being batched rather than continuously flowing.
For example, even though the work is being completed early in the iteration, it is not being accepted until
the end of the iteration.

Stair steps in pre in-progress states might be fairly common. For example, you might add multiple stories at
once as the result of a planning session. But stair steps in the later, in-progress (or later) states can indicate
a workflow issue that should be investigated.

NOTE
Small increases in multiple flow states on the same day can combine to create a stair step in
upstream flow states.

WS (Work-In-
Progress Spike)

Indicates a Work-In-Progress (WIP) Limit violation. That is, the number of work items that were in a given
in-progress state was larger than the defined WIP Limit on a particular day or range of days. This pattern is
only found if you have WIP Limits defined on your Team Board.

This pattern can indicate a bottleneck in a downstream state or that the team is taking on new work before
finishing in-progress work. Consider reducing story size or swarming on the highest value work first.

NOTE
You will never see a WIP spike on the last flow state. Because work does not exit this state, the
work in this state is always increasing.

Metrics

Select the Metrics toggle to open the Metrics window to see additional data related to the Smart CFD.

You can view how long it generally takes your team to burn down WIP in a state, see if your team is typically within
their WIP limits, and how quickly items arrive in each state. Are your teams able to consistently deliver value or do they
get blocked, stall, and experience flat line patterns? Switch between the tabs and use the tooltips to view additional
information.

For more information about using these metrics, see Smart CFD Metrics in Using the Smart Cumulative Flow Diagram to
Analyze Your Workflow.

 479



 Rally®

States

Select the check box for each flow state that you want to display in the chart. Clearing the check box for a state removes
that state from the chart. You can select multiple flow states to compare activity between them. Available states are
specific to the project or team that you selected from the project picker at the top of the page.

Next to each State option, select Rate Lines

to display the rate lines and see how fast items move to completion in the final flow state, typically Accepted or Released.
The State must be selected to add the associated Rate Line to the chart. For more information about rate lines, see Rate
Lines on the Smart CFD in Using the Smart Cumulative Flow Diagram to Analyze Your Workflow.

Units

Select the units used for the y-axis of the diagram. The available options reflect the values configured for your workspace,
such as Items or Points.

• Selecting Items displays a count of the total number of work items that are in each flow state in the chart.
• Selecting Points displays the total number of story points that are in each flow state.

NOTE
If you choose to use Points for your units, consider the following:

• If you have work items that are in early flow states that have not been sized, those points are not reflected in
your chart.

• If you are looking at data for multiple teams, those teams might size work differently.

State Tooltips

The State Tooltip displays when you hover over any point in the chart.

• The Items column shows the number of work items and the WIP limit for that flow state for the selected date. For
example, if there are 17 items in that flow state, and the WIP limit is 25, the Items column shows 17 / 25. If no WIP
limit is defined, this column shows the infinity symbol for the WIP limit.

 480



 Rally®

If a team has defined WIP Limits, and the number of work items exceeds the WIP Limit, the number of work items in
the Items column is highlighted in red. By moving your cursor across the chart, you can easily see when WIP Limit
violations occurred, and if they were for short or extended periods of time.

• The Arrival column shows the number of work items that moved into each flow state on the selected date.

Your selection in the State Tooltips section of the setting pane affects the data in the tooltip and how the chart itself
behaves. There are two options in this section:

State With this option selected:

• The tooltip shows Items and Arrival data for the flow state that you are currently hovering over.
• The flow state bands are dynamic. As you hover over a flow state, that state is highlighted and the other

states are dimmed.
• The horizontal line in the chart shows the WIP Flow Time. WIP Flow Time is calculated as the amount

of time taken for the number of work items in a selected state to move out of that state and into the
next state. For more information, see Work-in-Progress Flow Time in Using the Smart Cumulative Flow
Diagram to Analyze Your Workflow.

System With this option selected:

• The tooltip shows Items and Arrival data for for all flow states in the chart.
• The flow state bands are static and do not change as you hover over them.
• The horizontal line in the chart shows the amount of time taken for the total number of work items

across all flow states for the selected date to move from the first flow state to the last flow state.

Color Scheme

You can choose from three color schemes when viewing the Smart CFD.

• Qualitative assigns a color to each flow state and alternates between lighter and darker colors to make it easier to
distinguish between states.

• Sequential assigns colors to each state that are gradients of the same color family and move from light to dark. This
option is designed to improve content perception for users with visual disabilities.

• Generalized States groups your flow states into three categories and assigns a color to each category. The flow
states are grouped into before in-progress, in-progress, and after in-progress categories, based on the schedule states
that they are mapped to. For teams with a large number of flow states, this simplified view can make it easier to see
your in-progress work.

Using the Smart Cumulative Flow Diagram to Analyze Your Workflow
This section provides descriptions and examples of some of the common use cases that you might encounter and the
tools that you can use to investigate and resolve potential issues.

 481



 Rally®

• Sensed Pattern Examples
• Rate Lines on the Smart CFD
• Work-in-Progress Flow Time
• Smart CFD Metrics

Sensed Pattern Examples

The following examples illustrate some of the most common sensed patterns that you might encounter. Remember you
can select the pattern indicator in the chart to see more information about a specific pattern and guidance for further
analysis and actions to address a potential issue.

Flat Lines (FL) If your team has stopped moving work through the workflow, the Smart CFD senses a Flat Lines pattern.
This pattern is sensed when no work has moved into a given flow state for 10 days or more.

This pattern can indicate a problem that puts your work system at risk of slower cycle times and reduced
predictability. This pattern could also indicate that Rally is not being updated regularly.

When a flat line occurs without a known reason, the team should investigate to determine why work is
stalled or blocked. They might consider swarmming together to figure out how to get work moving again.

Work-In-Progress
Spike (WS)

A spike in work-in-progress (WIP) occurs when there is a WIP Limit violation. That is, the number of work
items that were in a given in-progress state was larger than the defined WIP Limit on a particular day or
range of days.

There are many reasons a spike can occur, but this often a bottleneck in a downstream state. A common
scenario is that the team has multiple developers updating code, but only one quality assurance person
testing. A spike can occur while QA reviews the code changes.

Instead of a bottleneck, a spike could also indicate that the team is taking on new work before finishing in-
progress work. Consider reducing story size or swarming on the highest value work first.

NOTE
You will never see a WIP spike on the last flow state. Because work does not exit this state, the
work in this state is always increasing.

 482



 Rally®

Stair Steps (SS) Ideally, you should see work consistently flowing through your system. A Stair Step indicates a significant
increase in the cumulative work items in one or more states. A relatively flat line that is followed by a
steep stair step can indicate that work is being batched rather than continuously flowing. For example,
even though the work is being completed early in the iteration, it is not being accepted until the end of the
iteration. This behavior can lead to a Stair Step in the Accepted state and a WIP Limit violation in the In-
Progress state since work is not moving out of that state.

Stair steps in pre in-progress states might be fairly common. For example, you might add multiple stories
at once as the result of a planning session. But stair steps in the later, in-progress states can indicate a
workflow issue that should be investigated.

NOTE
Small increases in multiple flow states on the same day can combine to create a stair step in
downstream flow states.

 483



 Rally®

Rate Lines on the Smart Cumulative Flow Diagram

Use the dynamic rate lines to show where scope is moving in the right direction.

Parallel lines indicate a balance of work coming in and going out. Typically, you want to see parallel lines in your team's in-
progress states. In the following example chart, the parallel lines help you visualize a balanced workload for your team.

Converging rate lines show you that the team is burning down scope, which suggests that the upstream scope is
increasing more slowly than you are accumulating work further down your workflow. For example, in a backlog state,
converging rate lines with a completion state means that you are reducing scope, such as finishing assigned work.

Diverging rate lines can mean the opposite of converging and show that your team's scope is increasing over time.

NOTE
In practice, you should always select the last flow state when using rate lines to see the cumulative nature that
the rate lines represent.

Work in Progress Flow Time

WIP Flow Time is the amount of time taken for the number of work items in a selected state to move out of that state and
into the next state.

To see Flow Time in the Smart CFD, you must select the State option in the State Tooltips section. With this option
selected, when you hover over any point in the chart, a horizontal line shows you the WIP Flow Time.

For example, in the image below the mouse is hovering over a day with a total of 11 work items in the Defined state.
The horizontal line is drawn to show the point at which the 11 work items are in the next flow state. The Flow Time text
indicates that it took 19 days for those 11 items to move to the next state.

 484



 Rally®

If you select the System option in the State Tooltips section, the horizontal line shows you the amount of time taken for
the total number of work items across all flow states to move to the last flow state, typically Accepted or Released.

Smart CFD Metrics

Select the Metrics toggle to open the Metrics window to see additional data related to the Smart CFD.

This window contains the following tabs:

 485



 Rally®

Work In
Progress (Items)

This tab shows the number of work items per day that are in each state. For example, you can see the
average (Mean) number of work items that are in a given state each day.

Flow Time (Days) This tab shows the flow time in days for each flow state in the chart. Flow time is the amount of time taken
for the number of work items in a selected state to be depleted. That is, the average number of days for a
work item to enter that state and then move into the next state. Keep in mind that the flow time for your in-
progress states should be significantly shorter than an iteration.

Arrival / Departure Rate This tab shows the rate at which work items are entering or arriving in each flow state, and the rate at which
they are leaving or departing that state. In a healthy team, the arrival and departure rates should be fairly
close to one another. If the arrival rate is significantly higher than the departure rate, that flow state is going
to start bulging with too much work and WIP limit violations.

Sensed Patterns This tab lists all of the sensed patterns in the chart. This tab is especially useful if you have a time period
with a large number of sensed patterns, because it can be difficult to see all of them clearly in the chart.
The list of patterns are sorted by pattern type. This sorting lets you see like patterns together to more easily
identify areas for further investigations.

For example, if you have multiple Work-In-Progress Spike patterns in your in-progress states, it might be
difficult to see them all clearly in the chart. You might have to filter the chart to only show that one status
to identify them all. But this tab not only lets you see how many spikes there were, but it also shows the
duration of each pattern. Maybe each spike only lasted one day, which lets you know this might be a less
urgent issue, even though you still want to investigate what is going on.

Smart Cumulative Flow Diagram Frequently Asked Questions
The following are frequently asked questions about the Rally Smart Cumulative Flow Diagram (Smart CFD).

Why do I see a Stair
Step pattern indicator

in a flow state that
doesn’t actually have
a stair step pattern?

This is a scenario that can occur when you have small increases in multiple flow states on the same day.
Those small increases can combine together to present as a Stair Step in a downstream flow state.

When investigating stair steps, it can be useful to isolate each flow state in the chart and examine each
state individually to confirm whether it is a true Stair Step situation.

I moved some cards/
stories to another flow

state, why doesn't
the Smart Cumulative

Flow Diagram
reflect my changes?

The Smart CFD does not reflect live changes to the Team Board. It displays data through the prior day, in
your workspace time zone.

I see what appear to
be Flat Lines in my

Smart CFD, but why is
there not a Flat Lines

pattern indicator?

The Flat Lines sensed pattern only applies to in-progress or after in-progress states. If the flat line is in a
before in-progress state or an accepted state, this pattern will not show up. For applicable states, Flat Lines
indicate that no work has moved into the state for 10 days or more.

However, if all of your in-progress and after in-progress flow states are showing Flat Lines patterns at the
same time, you will see a Period of Inactivity pattern instead. The Period of Inactivity pattern indicates that
there are Flat Lines patterns in all in-progress and after in-progress flow states. No work as moved into any
of these states for 10 days or more.

What if my team
doesn’t use the

Team Board page?

Even if your team does not actively use the Team Board and has never configured flow states, you can still
use the Smart CFD to analyze your work flow and to identify patterns that are based on the default states.
However, if you want to see sensed patterns for Work-In-Progress Spikes, you must configure WIP Limits
for each state.

Why does my Smart
Cumulative Flow
Diagram rapidly

increase/decrease on
a certain day? Why

did a large number of
artifacts move from

one state to another?

It is possible that you changed your flow states on those days. When you change your flow states then the
artifacts in those states have to be moved around.

 486



 Rally®

Why don't my counts
match the Team Board?

There a couple of reasons that your Smart Cumulative Flow Diagram results may not appear as expected.

• Only user stories and defects are counted in the Smart Cumulative Flow Diagram. Defect Suites and
Test Sets are not counted.

• The Team Board page shows counts in real time. The Smart CFD displays data through the prior day, in
your workspace time zone. If you made recent changes to the Team Board, those changes might not be
reflected in the Smart CFD until tomorrow.

Cycle Time Chart

The Cycle Time chart helps you use historical information to estimate how long it might take for work to pass through your
defined flow states to acceptance.

This chart displays the average number of days it takes work to flow through your process to acceptance for each week,
and a metrics summary (in days) over the time period you choose (up to the past 12 months). Adjusting how the data is
represented makes it easier to focus on your team's needs.

The cycle time analysis chart includes flow efficiency calculations so you can analyze cycle times for particular flow states
and get an idea of where to make efficiency improvements in your process.

Each section of the Cycle Time Chart includes interactive visualization graphs to make it easier to read the data in the
chart.

This section includes the following topics:

• Cycle Time and Software Flow Efficiency (SFE)
• Using the Cycle Time Chart
• Cycle Time Report Fields

Cycle Time Chart - Team Board Page

 487



 Rally®

Cycle Time Chart - Portfolio Kanban Page

 488



 Rally®

Cycle Time and Software Flow Efficiency (SFE)
Cycle States Cycle states are the set of states that define a cycle. In general, the states should be contiguous. A cycle is

defined by the set of states from state “From” up to, but not including, state “To”. For example, given a set
of states [A, B, C, D, E, F], a cycle from C to E would result in Cycle States [C, D].

Cycle Time The period of time that an artifact spent in the Cycle States. When the term “in cycle” is used, it is referring
to this period of time. In order to have a cycle time, an artifact must currently be in or past the To state. This
can be thought of in two ways:

1. Time In State: The set of all time periods spent in Cycle States. Under this definition, the cycle may not
be a contiguous chunk of time. An artifact may move out of the cycle, and then back in.

 489



 Rally®

2. Cycle Time: The time period between the first time an artifact entered the cycle (moved into or past the
From state) and the last time it exited the cycle (moved into or past the To state).

Lead Time The time period between the creation of an artifact and the last time the artifact exited the cycle. In order to
have a Lead Time, an artifact must currently be in or past the To state. Note that Lead Time equals Cycle
Time if From is the first state.

Value Add (VA) Time The time an artifact was actively in progress in cycle. In both Time In State and Cycle Time methods, value
add time is the same. Value add time is the sum of all time an artifact is not blocked/ready/deleted in cycle
states that are designated as value add.

Non Value Add
(NVA) Time

The time an artifact spent blocked, ready, deleted, or not in a cycle state within the cycle. This applies to
both blocked and ready time, they must occur within the cycle to be counted. This can be calculated two
ways:

• Time In State: Non value add time is the sum of all blocked/ready/deleted time in cycle states.
• Cycle Time: Non value add time is the sum of all blocked/ready/deleted time and time spent out of cycle

states in cycle.

Software Flow
Efficiency (SFE)

The ratio of time an artifact was actively being worked. With the two methods, this translates to:

1. Time In State:
(Value-Add Time) / (Sum of Time in Cycle States)

2. Cycle Time:
(Value-Add Time) / (Cycle Time)

NOTE
Both the Time in State and Cycle Time calculations can provide valuable insights to the pace of work flowing
through your system. However, the Cycle Time calculations are generally preferred as they better handle
unusual cases when work is brought back to a previous state or exits the cycle entirely and subsequently
returns. Look at the following examples to see when Time in State results can provide a misleading picture of
how work is passing through your defined flow states.

Examples

In all of the following examples, we are interested in the cycle from C to E. Cycle states consist of [C, D], and both are
value-add. The states are shown on the first line. The day the artifact moved is shown on the subsequent lines. If an
artifact skipped states during a move, as in example 3, there is no time shown.

• b: blocked in state (NVA)
• r: ready in state (NVA)
• u: not blocked or ready (VA)

1. Simple Case
 A   B   C   D   E   F

 1   2   3   4   5   6

Time in C: 1 (VA=1, NVA=0)

Time in D: 1 (VA=1, NVA=0)

Time in States: 2 (VA=2, NVA=0)

Cycle Time: 2 (VA=2, NVA=0)

Blocked: (time in state): 0 | (cycle time): 0

Ready: (time in state): 0 | (cycle time): 0

SFE (time in state): 2/2 = 1.0 | (cycle time): 2/2 = 1.0

2. Moving Backwards
 A   B   C   D   E   F

 1   2   3   4   5

         6   7   8   9

Time in C: 2 (VA=2, NVA=0)

Time in D: 2 (VA=2, NVA=0)

 490



 Rally®

Time in States: 4 (VA=4, NVA=0)

Cycle Time: 5 (VA=4, NVA=1)

Blocked: (time in state): 0 | (cycle time): 0

Ready: (time in state): 0 | (cycle time): 0

SFE (time in state): 4/4 = 1.0 | (cycle time): 4/5 = 0.8

3. Skipping States
The artifact moved past C and D, into E at time 3.
 A   B   C   D   E   F

 1   2           3

Time in C: 0 (VA=0, NVA=0)

Time in D: 0 (VA=0, NVA=0)

Time in States: 0 (VA=0, NVA=0)

Cycle Time: 0 (VA=0, NVA=0)

Blocked: (time in state): 0 | (cycle time): 0

Ready: (time in state): 0 | (cycle time): 0

SFE (time in state): 0/0 = ~ | (cycle time): 0/0 = ~

4. Moving Backwards and Skipping States
 A   B   C   D   E   F

 1   2   3   4   5

     6   7       8   9

Time in C: 2 (VA=2, NVA=0)

Time in D: 1 (VA=1, NVA=0)

Time in States: 3 (VA=3, NVA=0)

Cycle Time: 5 (VA=3, NVA=2)

Blocked: (time in state): 0 | (cycle time): 0

Ready: (time in state): 0 | (cycle time): 0

SFE (time in state): 3/3 = 1.0 | (cycle time): 3/5 = 0.6

5. Moving Backwards and Skipping the Cycle
 A   B   C   D   E   F

 1   2   3   4   5

     6           8   9

Time in C: 1 (VA=1, NVA=0)

Time in D: 1 (VA=1, NVA=0)

Time in States: 2 (VA=2, NVA=0)

Cycle Time: 5 (VA=2, NVA=3)

Blocked: (time in state): 0 | (cycle time): 0

Ready: (time in state): 0 | (cycle time): 0

SFE (time in state): 2/2 = 1.0 | (cycle time): 2/5 = 0.4

6. Blocked/Ready NVA Time
 A   B   C   b   u   D   r   E   F

 1   2   3   4   5   6   7   8   9

Time in C: 3 (VA=2, NVA=1)

Time in D: 2 (VA=1, NVA=1)

Time in States: 5 (VA=3, NVA=2)

Cycle Time: 5 (VA=3, NVA=2)

Blocked: (time in state): 1 | (cycle time): 1

Ready: (time in state): 1 | (cycle time): 1

SFE (time in state): 3/5 = 0.6 | (cycle time): 3/5 = 0.6

7. NVA Cycle State (Z is an NVA Cycle State)
 A   B   C   b   u   Z   D   r   E   F

 1   2   3   4   5   6   7   8   9   10

 491



 Rally®

Time in C: 3 (VA=2, NVA=1)

Time in D: 2 (VA=1, NVA=1)

Time in Z: 1 (VA=0, NVA=1)

Time in States: 6 (VA=3, NVA=3)

Cycle Time: 6 (VA=3, NVA=3)

Blocked: (time in state): 1 | (cycle time): 1

Ready: (time in state): 1 | (cycle time): 1

SFE (time in state): 3/6 = 0.5 | (cycle time): 3/6 = 0.5

8. NVA Cycle State, Moving Backwards, Skipping States (Z is an NVA Cycle State)
 A   B   C   b   u   Z   D   r   E   F

 1   2   3   4   5   6   7   8   9   10

     20                              21

Time in C: 3 (VA=2, NVA=1)

Time in D: 2 (VA=1, NVA=1)

Time in Z: 1 (VA=0, NVA=1)

Time in States: 6 (VA=3, NVA=3)

Cycle Time: 18 (VA=3, NVA=15)

Blocked: (time in state): 1 | (cycle time): 1

Ready: (time in state): 1 | (cycle time): 1

SFE (time in state): 3/6 = 0.5 | (cycle time): 3/18 = 0.17

9. NVA Cycle State, Moving Backwards, Skipping States, Pre/Post Cycle Time (Z is an NVA Cycle State)
 A   B   r   C   b   u   Z   D   r   E   b   r   F

 1   2   3   4

         5   10  11  12  13  14  15  16  17  18  19

     30                              40  41  .........

Time in C: 4 (VA=3, NVA=1)

Time in D: 2 (VA=1, NVA=1)

Time in Z: 1 (VA=0, NVA=1)

Time in States: 7 (VA=4, NVA=3)

Cycle Time: 36 (VA=4, NVA=32)

Blocked: (time in state): 1 | (cycle time): 2

Ready: (time in state): 1 | (cycle time): 2

SFE (time in state): 4/7 = 0.57 | (cycle time): 4/36 = 0.11

Using the Cycle Time Chart
Use the Cycle Time chart to calculate and display historical cycle time data.

Enter the setup information for your Cycle Time chart, then select Update to display the Summary and Artifact Detail
charts.

1. Do one of the following:

• To view cycle time for the user stories on your Team Board, select Track, Team Board.
• To view cycle time for portfolio items on your Portfolio Kanban Board, select Portfolio, Portfolio Kanban.

2. Select Cycle Time from the View drop-down menu.

3. Complete the following fields:
State Type (Team

Board Only)
Select whether you will be using Flow State or Schedule State.

Work Item Type (Team
Board Only)

Select one or more work item types. The available types are Defects, Defect Suites, Test Sets, and User
Stories.

 492



 Rally®

Start State Select the beginning flow state or schedule state, depending on your State Type selection, for the cycle
time calculation.

End State Select the end flow state or schedule state, depending on your State Type selection, for the cycle time
calculation.

NOTE
Remember that the end state is not included in the cycle time calculations.

Value Add States Select the available states that add value to your calculation. For example, a Backlog flow state may
not add value to your calculation because that state is a holding area for work items before the work is
pulled into development.

Start Date Select the Calendar

and select the start date for cycle time calculation.

End Date Select the Calendar

and select the end date for cycle time calculation.

4. Select Show Filters to set up filters. You can use Quick Filters or Advanced Filters. Learn more.

5. Select Update to apply any changes.

6. The Summary and Artifact Detail charts display by default. You can hide either chart by selecting one of these check
boxes. The display updates automatically.

Hide Summary Select this check box to hide the summary report.

Hide Artifact Detail Select this check box to hide the artifact detail report.

7. The visualization graphs display for each section by default. You can hide or show these graphs by selecting or
clearing the Hide Visualization check box.

Select a cycle state
in the graph legend

to hide or show
the details of that
state in the graph.
The graph in the

Summary section
shows the total

cycle time for each
cycle state. Hover
over the graph to
see the specific

details for each state.

The graph in the
Artifact Detail section

shows the amount
of time each artifact
spent in each cycle

 493



 Rally®

state. Hover over
the graph to see

the specific details
for each artifact.

8. Once you have your Cycle Time chart set up the way you want, you can save the view for future use. Learn more.

Cycle Time Report Fields

Columns
Cycle Time Overall time, can include Non-Value Add time

Time in States Total time spent the states in this cycle
In Blocked Total time spent blocked in the states in this cycle
In Ready Total time spent ready in the states in this cycle

Non Value Add Overall time spent not adding value

The sum of all time blocked, ready, recycled (deleted), or not in a cycle state. Only counts while INSIDE the
cycle.

Value Add Time spent adding value

The sum of all time not blocked, ready, recycled (deleted) in cycle states.

SFE (Software
Flow Efficiency)

The ratio of time spent delivering value
Value Add / Cycle Time

States Metrics for each cycle state

Summary Rows
Totals Total time in the cycle

Averages Mean of the total time in the cycle
Medians 50th percentile of total time in the cycle
Counts Number of artifacts in the cycle

Totals Blocked Overall time blocked while in the cycle
Averages Blocked Mean of all the blocked times over all of the artifacts in that cycle
Medians Blocked 50th percentile of all the blocked times over all of the artifacts in that cycle
Counts Blocked Number of artifacts blocked while in the cycle

Totals Ready Overall time ready while in the cycle
Averages Ready Mean of all the time ready while in the cycle
Medians Ready 50th percentile of all the time ready while in the cycle
Counts Ready Number of artifacts ready while in the cycle

Flow Metrics Charts

The Flow Metrics charts tab displays a variety of charts that show you the current state of data for the selected team.
These metrics are designed to provide a view into the efficiency and predictability of the team and their deliverables.

For example, you can see when cycle time for feature work is increasing or if your work-in-progress is increasing.

 494



 Rally®

These metrics always include historical data, regardless of the current relationships, because the flow metrics reflect what
your team has completed or are in progress of completing. Flow metrics help you focus on the efficiencies of how your
teams are delivering work.

NOTE
The Flow Metrics feature is currently in Beta, and is not available to all customers.

Each chart includes color-coded lines or graphs to visually represent the data.

• Hover over any graphical element in these charts to see the specific data behind an element in the chart.

• Click anywhere in a chart and drag your mouse to select a portion of the chart to zoom in and see that portion of the
chart in greater detail.

• Select Reset Zoom to return to the default zoom level.

 495



 Rally®

• Select any item in a chart legend to hide or show the metrics for that item. For example, select User Stories to hide
the graphical data for user stories in the chart. Select User Stories again to show user stories in your chart.

NOTE
Flow Metrics charts always are generated for the specific project that is selected from the project picker at the
top of the page. The data is based on Schedule States.

This page includes the following flow metrics charts:

• Flow Velocity
• Flow Load
• Flow Time
• Flow Efficiency
• Flow Predictability

View Flow Metrics

1. Select Track, Team Board.
2. Select Charts at the top of the page.

3. Select the Flow Metrics tab.
4. Select the parameters for the data in these charts:

– State Type

 496



 Rally®

Flow Metrics are currently based on Schedule State only.
– Work Item Type

Select whether you want to view data for Defects, User Stories, or both.
– Group By

Select whether you want to view data by Weeks, Months, Quarters, Releases, or Iterations.

NOTE

• If you select Weeks, Months, or Quarters, the data is based on the date that work items entered the
End State.

• If you select Releases or Iterations, the data is based on the work items that are associated with each
release or iteration.

– Start State
Select the beginning state for your data.

NOTE
By selecting your first state for yourStart State and your last state for your End State, you can view
your end-to-end delivery of Lead time. By selecting steps in between, you can view the cycle time for the
selected states.

– End State
Select the end state for your data. Data tracking typically ends with the Accepted state.

– Flow Distribution by
You can choose to group flow velocity data by Investment Category or by select custom fields that you want to
use to show the investment that the delivered work aligns to. The data that is shown is at the work item level (user
stories and defects), but the flow distribution is aggregated by the parent portfolio item for each work item. The
investment category or custom field in the portfolio items.
The default value is None.

– Flow Velocity by
You can choose to look at Flow Velocity and Flow Load based on Items Count (the total number of user stories and
defects) or by Plan Estimate (the story points associated with each user story and defect). A work item that does
not have a planned estimate is ignored when you select Plan Estimate.

NOTE
You can update your parameters at any time by selecting new values for one or more these fields and then
selecting Update.

Flow Velocity

This chart tracks the number of work items (user stories and defects) that were completed (assigned the selected end
state) in the selected timebox.

Tracking your flow velocity over time helps determine whether the delivery rates for the team have improved. This data
also helps you provide more accurate estimates and forecasts for how much work can be delivered in the future.

Selecting an investment category or custom field from the Flow Distribution field provides a secondary lens of analysis.
You can see the specific categories that the delivered work aligns to, based on the parent portfolio items. In addition to the
defined categories, you might also see the following values when a flow distribution is selected:

• None: User stories with a parent portfolio item that has no Investment Category selected.
• UnParented: User stories with no parent portfolio item (and therefore no Investment Category).

NOTE
Flow Velocity includes work items with a cycle time of zero.

Answers the question:

 497



 Rally®

How much work is the team delivering?

Flow Load

This chart tracks the Work in Progress (WIP) for each timebox in the chart for all work items. WIP is defined as work items
that were In Progress, Completed, or Accepted in a given timebox.

Tracking your Flow Load over time helps to determine the most efficient levels of WIP that maximizes Flow Velocity while
minimizing Flow Time. Excessive Flow Load can lead to inefficiencies and reduced output.

NOTE
Flow Load includes work items with a cycle time of zero.

Answers the question:

How much work should be In-Progress in my team at any given time so that it executes effectively?

Flow Time

This chart tracks how long it takes, on average, for work items to flow from the Start State to the End State. It shows the
cycle time of work items that were assigned the selected end state in a given timebox.

By analyzing trends over time, the Flow Time metrics can tell you if your acceleration investments are actually improving
your time-to-value.

NOTE
Flow Time includes work items with a cycle time of zero.

Answers the question:

How long does it take for my team to deliver value?

Flow Efficiency

This chart provides insight into your team's delivery in terms of Value Add and Non Value Add time.

Non Value Add time is defined as any time that a work item spent in a Blocked or Ready state in a given timebox. Value
Add time is defined as the remainder of the cycle time. That is, the time the work item was being actively worked. The
higher the Value Add percentage, the more efficient your team's process is.

Flow Efficiency is calculated as the time each story was actively worked (not in a Blocked or Ready state) divided by the
total time required for the story to move from  the selected Start State to the selected End State.

Flow Efficiency % = (Cycle Time - Time in Blocked - Time in Ready) / Cycle Time

NOTE
Flow Efficiency excludes work items with a cycle time of zero and zero time spent in Non Value Add states.

Answers the question:

How much Non Value Add is in my team's cycle time?

Flow Predictability

This chart provides insight into your team’s cycle times and predictability. Ideally, the percentile lines should stay close to
each other, while slightly going down over time. This means that your workflow is predictable and that your teams deliver
value at a fast and consistent pace.

Percentiles are used to establish SLAs and to define the probability of meeting different commitment points. A higher
percentile means there is a greater chance of completing an assignment on time.

 498



 Rally®

For example, in a high-functioning Scrum team that uses two-week iterations, you would expect most of the stories (90th
percentile) to be Accepted in 14 days or less.

Cycle Time is defined as the number of days required for stories to move from the selected Start State to the selected End
State.

• 90th Percentile: Total Cycle Time for 90% of stories to move to Accepted.
• 80th Percentile: Total Cycle Time for 80% of stories to move to Accepted.
• 70th Percentile: Total Cycle Time for 70% of stories to move to Accepted.

NOTE
Flow Predictability includes work items with a cycle time of zero.

Answers the question:

How well does my team plan and how good is it at meeting its objectives?

Using Portfolio Items
In Rally, you can use a portfolio item to represent a specific initiative or feature.

You can use portfolio items to create higher-level roadmaps. Often, organizations use these to track the high-level
business initiatives that they need to report on.

Learn more about the Rally Project Hierarchy.

Building Your Portfolio

Building your portfolio means understanding when and how to use the portfolio item types to help you track your product
roadmaps.

As you get started with creating portfolios, it may not be clear when you should create a portfolio item instead of a new
project. Create a portfolio item if these statements are true:

• It has a life cycle (start and end dates)
• You need to track whether it is started or completed and the percentage of work remaining

Similarly, it may not be clear when you should create a portfolio item instead of a parent user story (epic). A portfolio item
is a strategic initiative that requires a business case and a clear value statement. A parent user story (epic) is usually an
engineering resolution of the problem.

Create a portfolio item if the above two statements are true and the work is important from a strategic perspective. In large
companies, certain job roles are concerned with strategy while others are concerned with execution. Knowing who cares
about the work will help decide whether it should be a portfolio item or a user story.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

Create New Portfolio Items

You can create new portfolio items or convert existing epic story hierarchies to a portfolio item. Learn more.

If you need to transfer requirements from another system or document, you can import a portfolio item to Rally. Learn
more.

Use the hierarchy apps for a way to manage hierarchies using drag-and-drop. Learn more.

 499



 Rally®

Adopt Portfolio Kanbans

Portfolio Kanbans visualize the value creation workflow at the Feature level, and track your governance and investment
planning at higher levels. The Portfolio Kanban page displays the rank and progress of portfolio items, with each column
mapping to one of the portfolio item State values. You can also add the Portfolio Kanban Board app to your dashboard or
to a custom page that contains multiple boards and other information. You can rank and compare new portfolio work with
the app.

Learn more.

Finding Portfolio Items
Use the following locations to find your portfolio items.

NOTE
When you delete a portfolio item, child stories are disassociated, not deleted.

• Portfolio Items Page: Available under Portfolio, Portfolio Items, this page provides a list view of all portfolio items
in the select project. You can specify which fields display and filter or can sort the content. You can also edit, create,
copy, rank, and delete portfolio items on this page.

• Portfolio Kanban Board: Available under Portfolio, Portfolio Kanban (or add the Portfolio Kanban Board app to
a custom page), this board provides a view of portfolio progress for a given type. You can set up custom states to
represent progress and set up custom exit agreements to remind teams of requirements. You can also filter the board
by custom criteria. The board also allows you to track, edit, create, copy, rank, and delete portfolio items.

• Timeline: Available under Portfolio, Timeline, this page is primarily focused on use cases where facilitators of teams
of teams can visually display planned portfolio items over a time-based view, that is organized by project.

• Custom List App: You can add this app to your dashboard or a custom page. This app provides a list view of portfolio
items. You can filter, including by custom criteria, and present specific data. You can also sort, edit, bulk edit, copy, and
delete portfolio items.

• Work Views: Available under Plan, Work Views, this page provides cross-project views of portfolio items and
associated children. You can also edit, create, copy, rank, and delete portfolio items on this page.

Portfolio Best Practices
When setting up and using portfolio items, we recommend the following best practices to get the best results.

If you are new to Rally or newly using portfolio items, consider the concepts described in these topics before you start.

• Structuring Your Project Tree
• Managing You Portfolio Items

Structuring Your Project Tree
As you structure you project tree, it is important to understand that there are Strategy Projects and Execution Projects.

Strategy projects have the following characteristics:

• Product companies or software vendors use a strategy project to represent a product or an area of a product.
• Information Technology (IT) organizations use a strategy project to represent a multi-year program, a system, or a

subsystem.
• You create portfolio items in strategy projects.

Structuring your project tree into strategy and execution projects allows all levels of your organization to view and use
portfolio management in Rally portfolio management in a meaningful way. Learn more about setting up your project
hierarchy.

Execution projects have the following characteristics:

 500



 Rally®

• Execution projects represent a scrum team, a Kanban team, or a group of such teams.
• You create user stories in execution projects.

 501



 Rally®

Your Rally project tree should follow one of these two recommendations.

Teams Dedicated to Specific Products or Programs

Arrange strategy and execution projects as shown below to identify teams that work on each product or program.

This model assumes that each team only works on one product and that all work done by a team is for only one product.

• Org Name (ex: Company X)
– Product1 (strategy)

• Team Group 1 (execution)
• Team 1 (execution)
• Team 2 (execution)

– Product2 (strategy)
• Team Group 2 (execution)

• Team 3 (execution)
• Team 4 (execution)

Teams Work on Any or Several Products or Programs at a Time

Clearly separate the strategy projects from the execution projects so that execution teams are not associated with any
particular strategy area.

• Org Name (ex: Company X)

 502



 Rally®

– Strategy Organization (Product Manager group)
• Product Line 1 (strategy)

• Product 1 (strategy)
• Product 2 (strategy)

• Product 3 (strategy)
• Product 4 (strategy)

– Execution Organization (Engineering)
• Team Group 1 (execution)

• Team 1 (execution)
• Team 2 (execution)

• Team Group 2 (execution)
• Team 3 (execution)
• Team 4 (execution)

Project Hierarchy Examples

A portfolio item rolls up its percent done from the associated stories regardless of where they exist in the project hierarchy.
The children of a portfolio item do not need to be stored in the same project, nor a child project of the portfolio item itself.

There are no firm rules about exactly how to set up your project hierarchy. Organizations that have been using Rally
for a long time before adopting portfolio management may have a different structure than an organization that is new to
Rally. The following examples illustrate different ways in which to set up your project hierarchy in Rally:

Example of an organization with teams dedicated to specific products or programs

 503



 Rally®

Example of an organization where teams work on any or several products or programs at a time

 504



 Rally®

Example of an organization with teams dedicated to specific products or programs

 505



 Rally®

Example of a corporate IT organization where teams work on any or several products or programs at a time

 506



 Rally®

• The Strategy Organization layer consists of portfolio items crossing all programs. This is the scope point for the
portfolio manager to view plans and WIP for all programs.

• The strategy layer for portfolio items specific to Program 2 is the scope point for the portfolio manager to view plans
and WIP for that program.

• You should not create portfolio items below the Execution Organization level.
• The Team level is the scope for a project manager to view plans and WIP for her team.

Example of a product/IT hybrid organization with teams dedicated to specific products or programs

 507



 Rally®

Setting Permissions on Projects

For program managers, product managers or others tasked with working with your portfolio items:

• Set editor permission on strategy projects (where portfolio items are created)
• Set view permission on execution projects

For engineering:

• Set editor permission on execution projects
• Set view permission on strategy projects you want engineering to see

NOTE
Once a lowest-level portfolio item is accepted to flow through a team, you should relocate it to the execution
project. The execution team can then add user stories to the portfolio item. This applies to any project tree
structure.

Learn more about permissions.

Managing Your Portfolio Items
Once your project tree is created, you can begin adding your portfolio items to the correct projects in that tree and
managing them within those projects.

 508



 Rally®

Adding Portfolio Items to the Correct Projects

A higher-level portfolio item (higher than the lowest portfolio item type) affecting multiple strategy areas should be defined
in a strategy project encompassing all affected strategy areas, such as product family.

In deciding where to create portfolio items, be aware that the project hierarchy does not affect portfolio item rollups, such
as % Done. The children of a portfolio item do not need to be stored in the same project nor a child project of the portfolio
item itself. Rollups are calculated following the parent-child association between a portfolio item and its child stories (the
lowest user story level if there are several levels of user stories below portfolio items).

If you use the Also show items from child projects option on the project picker when selecting a strategy project, you see
portfolio items located in the selected project as well as those located in projects children of that selected project.

Moving Portfolio Items to Other Projects

Portfolio items change projects only at the lowest-level portfolio item. In an Initiative → Feature portfolio hierarchy, a
feature should be manually relocated from a strategy project to an execution project as the feature flows through the
execution team. This is especially true when an execution team works on several strategies at a time.

Comparing Portfolio Items and Projects

Create a project to represent either strategy (product, multi-year program, system) or execution. Create a strategy project
to represent either a product, program, or system.

Create a portfolio item to describe the actual work (for example an initiative or feature) that will flow through execution.

Use this analogy to help you differentiate:

• If you need to know whether something is started and how far along it is, create a portfolio item.
• If you need to protect resource allocation, create an Investment Category value.
• If you need to scope to something, create a project for it.

It is ok to create one of each for the same thing if you have more than one need.

Defining Programs as a Project or a Portfolio Item

Programs can be either a project or a portfolio item. To track the program dates as well as progress status (% Done), a
program (in the PMI definition: a collection of projects) should be represented as a portfolio item of type Program (with its
projects as children portfolio item of type Project). Additionally, for the program manager to scope to just that one program,
create a strategy project to represent the program.

Portfolio Item Planning
When development teams adopt Agile practices, they still need to answer business questions about actual progress,
delivery dates, and cost. The business also needs to collaborate with development to create realistic roadmaps and
provide clear visibility into strategic priorities to optimize development work beyond the iteration and release level.

Portfolio items solve these challenges by providing the necessary feedback loops between leadership and development in
a single system of record.

Learn more about using portfolio items to perform roadmap planning:

 509



 Rally®

• Customizing Portfolio Item Fields
• Creating Portfolio Items
• Manage Portfolio Dependencies
• Release Planning Page
• Capacity Planning
• Using Investments

Creating Portfolio Items
Portfolio Items represent specific initiatives or features and are used to create higher-level roadmaps.

A portfolio item must represent market value to your organization. Someone from marketing, business, or management
must understand the value delivered by a portfolio item to customers or to the business. All portfolio items of the same
type should share the same level of granularity, duration, order of magnitude, and idea-to-deliver value stream.

User stories are the smallest unit of work to implement the lowest-level portfolio items. User stories are short, simple
descriptions of a wanted feature. They are written from the perspective of the person wanting the new functionality, often a
customer of the application.

Creating a New Portfolio

If you are creating a new portfolio that you have not previously modeled using Rally's user story hierarchy, here are a few
ideas to help you get started quickly:

• Import portfolio items from a CSV file
NOTE
The CSV import for portfolio items does not allow automatic parenting. Use Bulk Actions to add the parent in
multiple items.

• Create portfolio items from the Portfolio Items page for each type
• Create portfolio items from the Portfolio Items page for the highest type, then add children going down the hierarchy

until you reach the lowest type in the hierarchy

Once you have created your portfolio item hierarchy, you may create new user story children from a portfolio item of the
lowest level type, or you may parent existing user stories to a portfolio item of the lowest level type.

Your portfolio is administered at the workspace level. You cannot share a portfolio or its contents across workspaces.

Portfolio items, projects, and custom fields cannot be shared or rolled up across different workspaces. We recommend
that you limit the number of workspaces you create.

User Access and Permissions for Portfolio Items

User permissions at the project-level dictate which users can create or modify portfolio items, or have view-only access.

If you want to separate your portfolio items from the project where development teams can edit, we recommend you
create a new project above your teams and provide read-only access to those teams. This also allows teams to scope
their views up and maintain context while also enabling portfolio and program managers to scope down to understand
overall status of work contributing to a portfolio item. It is important to ensure that users have at least view permissions
to any projects where their work, or any context about their work resides. Teams will also need edit rights if they need to
create dependencies between work items across projects.

This section consists of the following topics:

 510



 Rally®

• Create Portfolio Items
• Create a Portfolio From an Existing User Story Hierarchy
• Associate Multiple User Stories and Portfolio Items
• Manually Ranking Portfolio Items
• Drag-and-Drop Rank Portfolio Items
• Block Portfolio Items
• Portfolio Item Fields

***************************ICE CONTENT STARTS HERE - TITLES DEFINED IN ICE (BASED ON DIV
ID)***********************************

Portfolio Items represent specific initiatives or features and are used to create higher-level roadmaps.They represent
strategic market value to your organization.

A portfolio item must represent market value to your organization. Someone from marketing, business, or management
must understand the value delivered by a portfolio item to customers or to the business. All portfolio items of the same
type should share the same level of granularity, duration, and order of magnitude.

User stories are the smallest unit of work to implement the lowest-level portfolio items. User stories are short, simple
descriptions of a wanted feature. They are written from the perspective of the person wanting the new functionality, often a
customer of the application.

When creating a portfolio item, be sure to use a portfolio item type that represents the strategy value that you are tracking.
Each portfolio item type defines:

• A level of granularity appropriate for its respective audience. The highest-level portfolio item type maps to the highest-
level of product leadership in your organization.

• An order of magnitude for its duration to complete (the higher the magnitude, the longer the duration). For example,
portfolio items at the lowest level should be small enough in effort to be delivered within a one to three month release.

• A business process to go from idea to delivery.

All portfolio items of the same type should share the same level of granularity, duration, order of magnitude, and idea-to-
delivery value stream. Keep in mind the following guidelines for portfolio items:

• You cannot skip levels. May only have parents of the next-higher type in the hierarchy
• You can only associate user stories with the lowest type of portfolio item

NOTE
When you delete a portfolio item, child stories are disassociated, not deleted.

• You cannot associate defects, defect suites, test cases, tasks, or other work items
NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New,
complete the suggested fields, and then select Create. Some required fields may have default values. You
can edit the work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Portfolio, Portfolio Items.
2. On the Portfolio Items page, select the Portfolio Item type.

NOTE
Portfolio item names may not match your configuration. Your administrator may customize the names of the
portfolio items for your organization.

3. Select Add New from the toolbar.

 511



 Rally®

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.
The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.
Required fields are marked with an asterisk (*).

6. Select Create.

{"URL":["/#/*/portfolioitemstreegrid"],"heroDescriptionIdentifier":"ice-portfolio-items-page","troubleshooting":
{"text":"Knowledge Base","URL":["https://knowledge.broadcom.com/external/article?articleId=193301"]},"video":
["https://youtu.be/hoUZYbr_ZB4","https://youtu.be/kXhrG0yD9R8","https://youtu.be/KBCH9DP2X9M","https://
youtu.be/5jB0tDCwT6w"],"customCards":[{"id":"ice-create-portfolio-items","type":"use","title":"Create Portfolio Items"}]}

Create Portfolio Items

Portfolio items are designed to represent strategic market value to your organization.

When creating a portfolio item, be sure to use a portfolio item type that represents the strategy value that you are tracking.
Each portfolio item type defines:

• A level of granularity appropriate for its respective audience. The highest-level portfolio item type maps to the highest-
level of product leadership in your organization.

• An order of magnitude for its duration to complete (the higher the magnitude, the longer the duration). For example,
portfolio items at the lowest level should be small enough in effort to be delivered within a one to three month release.

• A business process to go from idea to delivery.

All portfolio items of the same type should share the same level of granularity, duration, order of magnitude, and idea-to-
delivery value stream.

Keep in mind the following guidelines for portfolio items:

• You cannot skip levels. May only have parents of the next-higher type in the hierarchy
• You can only associate user stories with the lowest type of portfolio item

NOTE
When you delete a portfolio item, child stories are disassociated, not deleted.

• You cannot associate defects, defect suites, test cases, tasks, or other work items

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Portfolio, Portfolio Items.

2. On the Portfolio Items page, select the Portfolio Item type.

 512



 Rally®

NOTE
Portfolio item names may not match your configuration. Your administrator may customize the names of the
portfolio items for your organization.

3. Select Add New from the toolbar.

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Create a Portfolio From an Existing User Story Hierarchy

You can create a portfolio from an existing user story hieararchy by converting respective user stories to portfolio items.

If you are creating a portfolio that you already modeled in Rally's user story hierarchy:

1. Import portfolio items from a CSV file or create portfolio items from the Portfolio Items page for upper-level types.
2. Convert a user story to a portfolio item of the lowest level type. The conversion process will move user story children

to the portfolio item, and will keep the original user story in its pre-conversion schedule state along with any associated
defects, defect suites, test cases, and tasks. Learn more.

3. Associate the newly converted portfolio item to its appropriate portfolio item parent.
4. Ensure that only a single level of child user stories exist beneath your lowest level portfolio items. Do not use parent-

child user story hierarchies when using a portfolio hierarchy.

NOTE
You can convert an existing user story to a portfolio item. Learn more.

Associate Multiple User Stories and Portfolio Items

You can assign multiple user stories or portfolio items to a parent portfolio item in a single action.

If you do not have editing permissions to a user story or portfolio item, it will not be added. A brief message displays,
listing the work items that could not be added.

 513



 Rally®

If you choose a large number of children, it may take a few moments to load.

1. Do one of the following:

• For user stories: On a lowest-level portfolio item detail page, select the User Stories collection.
• For portfolio items: On any level of a portfolio item detail page (except the lowest level), select the Children

collection. On a lowest level portfolio item detail page, select the User Stories collection.

2. Select Link Existing

from the toolbar.

3. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

4. Select the work item(s) you want to associate and select Done.

Manually Ranking Portfolio Items

If you have manual ranking set up in your workspace, you can drag-and-drop a work item in either the same column or
across columns.

Rally shows you where that card will automatically fall, according to its manually entered rank.

For example, if you have a work item that is ranked second in the column according to its manual rank, and you try to drag
it up or down in the column, a green bar displays between the first and second cards. This is the only place it can land
regardless of where you drop it in the column.

Drag-and-Drop Rank Portfolio Items

Drag-and-drop ranking uses position to establish the relative priority order of a work item on a particular page.

With drag-and-drop ranking, you can prioritize work items by dragging them up or down in priority, relative to other work
items on the page. Drag-and-drop ranking is the default configuration for new workspaces and can be used on most work
item pages where ranking is valuable.

From the summary page, you can use drag-and-drop ranking on work items.

1. Select the

next to the work item and drag it up or down on the page with respect to its siblings.

2. Drop the work item at its new position on the page.

Block Portfolio Items

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to notify your team of a
problem.

Blocked cards display on the board with a

icon and optional comment. When a card is ready to move to the next stage of development, you can remove the block.

You can block a portfolio item if you need to. When you a block a portfolio item, the portfolio item displays as blocked, but
the associated work items remain unblocked. Blocking a portfolio item has no affect on the work items associated with that
portfolio item, including parent portfolio items. When you block a portfolio item, you are prompted to enter an explanation
for the block.

 514



 Rally®

You block a portfolio item when viewing a card view such as Portfolio Item Kanban or Release Planning or a list view like
Portfolio Items. The following steps assume you are using the Portfolio Kanban board.

Learn more about blocked work.

1. Select Portfolio, Portfolio Kanban.

2. On the board, hover over the correct card.

3. Select Blocked

on the top right of the card.

The icon turns red

( )
and a text field displays.

4. Optionally, enter a reason for the block in the text field.

5. Press Enter to save your description or exit the text field.

Portfolio Item Fields

ID A system-assigned value. Select the ID of a portfolio item in the summary view to go to the detail view.
Name Enter a unique, meaningful name for the portfolio item. This is a required field.

Portfolio Item Type Select a type for the portfolio item from the drop-down menu if the portfolio item has no parent or children.
Otherwise, Rally will assign this value for you. This is a required field.

Tags Select one or more tags to associate to the portfolio item. Assigning tags helps with sorting, filtering, and
reporting.

Description Enter a meaningful description to help other users understand the purpose of the portfolio item. Use the rich
text editor to apply fonts, formatting, links, and more. You can copy and paste images in this field.

Attachments Select Browse to upload any attachments, such as images or .pdf files that help describe the portfolio item.
Notes Enter any relevant notes that will help team members understand the progress of the portfolio item.
Owner Specify the owner for the portfolio item. This value defaults to the user who creates the portfolio item, but

can be changed at any time.
Project Specify the project within Rally to which the portfolio item is assigned. This is a required field.

Discussions From the detail page, select the Discussions link to add or view discussions. Discussions has a rich text
editor. Learn more.

Revision History From the detail page, select the Revision History link. Revisions include a revision number, detailed
description, date stamp, and author.

Parent A parent may not be assigned to a portfolio item of the highest type. A portfolio item can only have a
portfolio item parent. A user story may have either a portfolio item parent or a user story parent. Use Edit

to assign or change a parent portfolio item. Clear the Parent field to remove the association (clear is
unavailable if the parent is required). This does not delete the parent or the work item. Learn more.

Children From the detail page, select the Children link to view or add children to the portfolio item. Portfolio items of
the lowest level type will see a User Stories link instead, since they can only have user stories as children.

Release Use the Release attribute on the lowest level of portfolio item (typically referred to as Feature) to schedule a
feature into a roadmap timeframe.

State Use this drop-down list to filter portfolio items as they display on summary pages or Kanban boards.
Archived Use this check box to mark portfolio items as archived on summary pages or Kanban boards. You can

then filter or query on Archived = No to ensure that archived portfolio items do not appear on your Portfolio
Kanban board or list.

Percent Done by
Story Plan Estimate

The value of this field is calculated by dividing the number of accepted points by the total user story points
for user stories associated with the portfolio item.

 515



 Rally®

The calculation of the Percent Done values may be delayed (for example, when changes
are made to accepted child user stories or when user stories are removed from a
feature). You can check the Last Rollup Date field in the detail editor to see when the
values were last updated. You can force the values to update by selecting the gear

and then selecting Correct rollup discrepancy.

Percent Done
by Story Count

The value of this field is calculated by the number of accepted user stories divided by the total number of
user stories associated with the portfolio item.

The calculation of the Percent Done values may be delayed (for example, when changes
are made to accepted child user stories or when user stories are removed from a
feature). You can check the Last Rollup Date field in the detail editor to see when the
values were last updated. You can force the values to update by selecting the gear

and then selecting Correct rollup discrepancy.

Last Rollup Date The last date and time that the values for Percent Done by Story Plan Estimate and Percent Done by
Story Count were updated. This is a system-generated field, and cannot be edited.

Callouts Hover over either of the Percent Done fields to see the number of accepted points and user stories. If these
fields have a warning flag, the callout describes the warning.

Actual Start Date The earliest date an associated user story is moved to an In-Progress schedule state.

Actual Start Dates for portfolio items with work-in-progress before 11/19/2011 will be null until another
associated user story goes into progress, then the Actual Start Date will reflect that user story's in-progress
date.

Actual End Date The latest date the final associated user story is moved to an Accepted (or later) schedule state.
State Specify the status of a portfolio item. This value also determines which state column on the Portfolio

Kanban Board a portfolio item is located.
State Changed Date The date on which a portfolio item moved from its previous state to its current state. If a portfolio item

already has a state prior to 4/28/2012, the value is set to the current system date until the state changes
again.

Preliminary Estimate Gauge the size of a portfolio item during planning.
Refined Estimate Enter an updated estimate during capacity planning as more is known about the features being planned.

Investment Category Assign portfolio items to an investment category to ensure they align with your organization's goals.

The Investment Category field captures portfolio allocations, or budget buckets.

Value Score Enter the value this portfolio item could bring to a feature or initiative. Use a score determined by your
organization.

Risk Score Enter the potential risk to deliver the portfolio item. Use a score determined by your organization.
Planned Start Date Enter the date you intend to begin work on this item.
Planned End Date Enter the date you intend to finish work on this item.

 516



 Rally®

WSJF Score The Weighted Shortest Job First (WSJF) Score is a prioritization method that you can use to choose which
features to schedule soonest.

Manage Portfolio Dependencies
As organizations coordinate planning and execution, product managers, product owners, and release train engineers will
need to visualize dependencies between teams at varying levels of detail.

Rally allows you to create predecessor and successor relationships between either portfolio items or between user stories.
This allows you to track dependencies.

IMPORTANT

• You should only create predecessor and successor relationships at levels of your portfolio hierarchy that are
critical for tracking a chain of execution. Generally, this is your lowest level portfolio item type.

• When you need to indicate that mid- and top-level portfolio items should be finished together, you can create
these associations with milestones.

Create New Dependencies

You can create dependencies only between portfolio items of the same type.

You can create new portfolio items that must be assigned as a predecessor or successor to the current item.

1. Select the FormattedID of a portfolio item from a list view or board to navigate to the item's detail page.

2. Select Dependencies

to open the Dependencies page.

3. Select Add New from either the Predecessors or the Successors tab.

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 517



 Rally®

6. Select Create.

Link Existing Dependencies

You can associate existing portfolio items as a predecessor or successor to the current item.

1. Select the FormattedID of a portfolio item from a list view or board to navigate to the item's detail page.

2. Select Dependencies

to open the Dependencies page.

3. Select Link Existing

from either the Predecessors or the Successors tab.

4. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

5. Select the work item(s) you want to associate and select Done.

Edit Dependencies

You can edit the fields of a successor or predecessor from a portfolio item's detail page.

1. Select the FormattedID of a portfolio item from a view or board to navigate to the item's detail page.

2. Select Dependencies

to open the Dependencies page.

3. Select the FormattedID of a predecessor or successor item from the corresponding tab.

4. Select Edit

from the toolbar to view the Bulk Edit dialog box.

5. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

6. Select Apply to save your changes.

Remove Dependencies

You can remove a predecessor or successor of a portfolio item.

1. Select the FormattedID of a portfolio item from a view or board to navigate to the item's detail page.

2. Select Dependencies

to open the Dependencies page.

3. Select the check box of the predecessor or successor item from the corresponding tab to remove. You may select
more than one.

4. Select Remove

from the toolbar.

Review Dependencies from Summary Views

Most list and board pages can display dependency information if you add the Dependencies field to your view.

 518



 Rally®

Board pages and apps that display portfolio items as cards may include the Dependencies field, displaying the number of
dependencies. You can add the Dependencies field from the Show Fields chooser. Select the number of dependencies to
view details of predecessors and successors.

Release Planning Page
The Release Planning page provides program managers with a view of portfolio items ready to be scheduled to a release.
Use the board to prepare for and carry out mid-range planning. Release Planning facilitates release preparation and the
planning process at the program level.

The Release Planning page displays a backlog list of lowest level portfolio items that are not assigned to a release, and
release columns showing the lowest level portfolio items assigned to that release.

The Release Planning page is a board view that supports filtering and saving views.

Learn more about filtering.

Learn more about saving and sharing views.

This section includes the following topics:

• Setting or Updating Planned Velocity
• View Card Details on the Release Planning Page
• Schedule Portfolio Items Into a Release
• Add and Update Lowest Level Portfolio Items

Setting or Updating Planned Velocity

The status bar at the top of each release column represents the release capacity, displayed according to the project(s)
you have scoped. You can select the status bar to set or update the planned velocity for this project in the release
represented by the column.

Updating the planned velocity from the status bar automatically updates the value in the release timebox. Learn more.

 519



 Rally®

The release capacity algorithm is the total number of points included in your planned feature estimates divided by the
preliminary estimated release velocity. When scoped to a parent project that has child projects, the release velocity
defaults to a rollup of all child projects under the project you have scoped for the page.

The parenthetical number indicates the aggregation of release planned velocity for child projects. If you are scoped to a
leaf level project (one that has no children) there will be no parenthetical number displayed.

View Card Details on the Release Planning Page

You can customize the information displayed on your cards by adding or removing fields.

1. Select Portfolio, Release Planning.

2. Hover over the FormattedID field of a card to view its title and description.

3. To add additional fields, select Show on Cards from the toolbar and select the fields to display on each card. You can
also de-select fields so that they do not display on the cards.

4. Select Apply to save your changes.

Schedule Portfolio Items

NOTE
The Release Capacity is updated each time the page loads; the calculation of the Release column percentage
bar is updated when you drag a lowest-level portfolio item in or out of a Release column. If the Release Capacity
is updated, you will need to refresh the page to view updated values.

Backlog portfolio items display on the board as cards in the left-most column.

1. Select Portfolio, Release Planning.

2. To search for a card in the Backlog column, enter your search criteria in the field at the top of the column, then select
Search

or press Enter.

3. Drag a card into a column to schedule it in a release.

Add and Update Lowest Level Portfolio Items

Add new lowest level portfolio items to your backlog, edit details, make copies, or delete from the board.

Add New Lowest Level Portfolio Items

NOTE
You can quickly create a lowest level portfolio item by using the toolbar. Select Add New and then select Add.
You can edit the portfolio item to add details at a later date.

1. Select Portfolio, Release Planning.
2. Select Add New from the toolbar.
3. Enter a name for the portfolio item you want to add.
4. Select Add with Details.
5. From the detail editor, complete additional fields. Required fields are highlighted.
6. Select Create.

 520



 Rally®

Edit Release Planning Board Portfolio Items

1. Select Portfolio, Release Planning.
2. You can edit the Name, Plan Estimate, and Owner fields inline. Enter or select the new field value.
3. Press Enter to save your changes. You can also select outside of the card area after editing to save. Press Esc to

cancel any changes
4. To view or edit other fields, hover over the card, select the Gear

at the bottom of the card, and select Edit.

Copy or Delete Cards

The Copy option creates a copy of the portfolio item itself, not including any child work items.

The Delete option immediately removes the feature from the board and moves it to the Recycle Bin. To delete all
associated work items, delete them first before deleting the feature.

NOTE
When you delete a portfolio item, child stories are disassociated, not deleted.

1. Select the card Gear

,
and select Copy or Delete.

Card Actions

Action What it does

View or edit card details Displays the details of a portfolio item.
Hover over the card, then select the Gear

and select Edit.

Change the name of a card Select the name in the middle of the card to enter inline editing
mode. Type in the new name, then select outside of the field.

Change the owner of a card Select the owner name in the header of the card to enter inline
editing mode. Use the drop-down list to select a new owner, then
select outside of the card to save.

 521



 Rally®

Action What it does

Add child Add a child to the portfolio item directly from the
card. Hover over the card, then select the Gear

and select Add Child.

Copy a card Creates a copy of the portfolio item.
Hover over the card, then select the Gear

and select Copy.

Delete a card Removes the portfolio item from the board and places
it in the Recycle Bin. Child stories are disassociated,
not deleted. Hover over the card, then select the Gear

and select Delete.

Mark a card ready-to-pull Highlights the card with a green border, indicating
the portfolio item is ready to move to the next stage.
Hover over a card, and then select the Check Mark

at the bottom to mark it ready. Use this same method to remove a
ready status.

Mark a card blocked Highlights the card with a red border, indicating the portfolio
item is blocked. Hover over a card, and then select Blocked

at the bottom to mark it blocked. Enter a reason for the block in
the field displayed. Use this same method to remove a block.

Change the top border color of a card Hover over the card, then use the Color Picker

to change the card's top border color.

Capacity Planning Page
Capacity planning facilitates the events leading up to big room planning. Create what-if scenarios and plans inside Rally
without changing artifacts and execution data for teams and projects.

Capacity planning provides the ability to model backlogs, teams, capacity, and portfolio items to team allocation for a
given release, or a start and end release. It enables product and engineering management to bring the right work into the
room for release planning, where management can focus on dependencies and risk conversations instead of what will be
accomplished.

Plans are not user-specific. Any changes you make to an unpublished plan can be viewed by other planners, only
published plans can be viewed by all users. Any associations or allocations of features to teams made in unpublished
plans do not change any other values in Rally.

Planners such as executives, program managers, product managers, development managers, product owners, release
train engineers, and team leads can all benefit from capacity planning.

NOTE
Only users that have been designated as planners can use capacity planning. Contact your subscription or
workspace administrator to set you up as a planner.

 522



 Rally®

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

Designate Planners

Subscription or workspace administrators must designate individual users as planners.

Only planners can create, modify, publish, and view draft plans. All users can view published plans.

A planner can publish or edit anyone's plans. Carefully consider which users in your organization to designate as planners
to avoid accidental overwrites.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. On the Users tab, locate the user you wish to designate as a planner.

3. Select the Gear

next to the user's name and select Edit.

 523



 Rally®

4. On the Edit User screen, select the Planner check box in the Planner section.

5. Select Save & Close.

Working with Capacity Plans

A plan represents a set of portfolio items and a set of teams for a specified timeframe (release).

Since all items in a portfolio may not have a refined estimate when the initial capacity plan is being created, you need to
have at least a preliminary estimate on the portfolio item. Learn more.

The initial capacity plan calculation is based on the preliminary estimate until a refined estimate is determined. This allows
you to determine the initial portfolio backlog cutline. Once a refined estimate is available, the capacity plan is recalculated
based on the refined estimate.

NOTE
The Preliminary Estimate field displays on the Capacity Planning page regardless of whether the administrator
has marked it as visible.

If a feature is partially allocated to a team, the allocation estimate is used to calculate team capacity.

Create Plans

Users assigned the planner role can create plans. A plan represents a set of portfolio items and a set of teams for a
specified timeframe (release). Plans are at the project you are scoped to in Rally. Consider starting your scope at the level
that contains the portfolio items related to your program or release train.

1. Select Portfolio, Capacity Planning.
2. On the Capacity Planning page, enter a name in the New Plan field and select Add Plan.
3. Select the ID of the plan to add details.
4. On the plan's detail page, select the portfolio item type you want to include in your capacity plan. For example, select

feature if you are planning according to feature. Your portfolio item types may have different names.

 524



 Rally®

5. Select a start release and an end release.
The release drop-down list contains all the releases in the scoped project. Selecting a release adds it to the plan.

Modify Plans

You can modify an unpublished plan at any time. Editing a published plan reverts it back to unpublished, or draft, status.

NOTE
When you modify a published plan, the plan reverts to an unpublished state. No changes are made to the field
values in the portfolio items when a plan reverts to being unpublished. If you want to clear any field values in the
portfolio items that are related to this unpublished plan, you must do that manually.

1. Select Portfolio, Capacity Planning.
2. Select the ID and make any necessary changes:

– Add or remove portfolio items. Learn more.
– Add or remove teams. Learn more.
– Change allocations. Learn more

Copy Plans

If you have the correct permissions, you can copy an existing plan, even if the plan is published.

1. Select Portfolio, Capacity Planning.

 525



 Rally®

2. Select the Gear

next to a plan's name on the Capacity Planning page.
3. Select Copy.

A copied plan includes all associated releases, teams, portfolio items, and allocations from the original plan. The
original name is copied and prepended with (Copy of). Copied plans default to draft (unpublished) status.

Delete Plans

If you have the correct permissions, you can delete an existing plan, even if the plan is published.

1. Select Portfolio, Capacity Planning.
2. Select the Gear

next to a plan's name on the Capacity Planning page.
3. Select Delete.
4. Select Confirm.

Select Work for the Backlog

Use the backlog to select work for your teams.

1. Select Portfolio, Capacity Planning.
2. Select the ID of the plan.
3. Select the portfolio item type you want to use to populate your plan's backlog. For example, select Feature if you are

planning according to feature. Your portfolio item types may have different names.

NOTE
Changing the portfolio item type for an existing plan removes all allocations and clear the backlog. If you
would like to change the item type but still keep the plan, consider creating a new plan.

4. Select Select Portfolio Items to populate your backlog.
5. Select the portfolio items you want to use.

You can search for a portfolio item in whole or part by ID, name, parent ID, or project name.You can also sort the
columns on the portfolio item picker, as well as filter the portfolio items list.
a. Select Show Filters.
b. Select Add or Remove Filters and choose the fields by which you want to filter.

6. After selecting a portfolio item, select Add to Plan.

Expanded View

Select the expand arrows on the backlog panel to see a more detailed view, including the portfolio item's parent,
dependencies, leaf story rollups, and preliminary and refined estimate values. Select the arrows again to view the
collapsed backlog. You can re-rank portfolio items in both the expanded and collapsed views.

 526



 Rally®

A portfolio item's preliminary estimate value is used to calculate percent capacity. If there is a value for refined estimate,
that value is used instead.

A portfolio item highlighted in gray indicates it is already assigned to a team in the plan.

Capacity Cutline

The capacity cutline initially displays at the top of the backlog. Use the cutline to help you to prioritize backlogs, determine
teams, and see capacity for the release. Drag the cutline down your prioritized backlog to get a visual representation of
work that can be realistically completed in a release.

 527



 Rally®

In the expanded backlog view, the capacity cutline displays capacity calculations based upon the summation of the
Preliminary Estimate column and the Refined Estimates column versus the teams' aggregated capacities. If no capacity is
defined, the capacity calculations aggregate data in the Preliminary Estimate column and the Refined Estimates column
and do not display capacity calculations.

Figure 1: Null Capacity

Figure 2: Under Capacity

Figure 3: Over Capacity

Select Teams and Allocate Work

Planners can select the individual teams within their hierarchy to include in the plan.

1. Select Portfolio, Capacity Planning.
2. Select the Select Teams button to view a list of all the teams in the workspace.
3. Select your teams, then select Save.

The teams you selected now display with expandable rows in the Team Allocations panel.

Specify Team Allocations

The default capacity of any team is 100. Select directly in the Capacity field to change its value. Capacity is stored only in
an individual plan. Based on a team's capacity, you can drag-and-drop a feature from the backlog to a team's allocation
row. A feature may only be assigned to one team.

You can set a team's capacity to zero to indicate that team should not be assigned features for that timebox. A zero
capacity displays as --% for the percent capacity.

 528



 Rally®

When you add a feature to a team, its estimate is added to the progress bar. The progress bar uses the team's capacity
with a color-coded indicator. The color corresponds to the portfolio item's assigned color. If a team is over capacity, the
entire bar turns red.

Expand a team's row to view details for the assigned features, such as dependencies, leaf story rollups, and preliminary
and refined estimate values.

To remove a feature from a team, select Remove

.
You can reassign a removed feature to another team from the backlog.

Share Portfolio Items

If a portfolio item is too large for one team to finish in a release, you can share it between two or more teams.

Sharing portfolio items is useful if a portion of a portfolio item requires a specific expertise that one team has over another.
Also, sharing a portfolio item between teams ensures a large feature can be completed within a release.

1. Select Portfolio, Capacity Planning.
2. To share a portfolio item, select the Gear

next to the portfolio item and select Allocate.

 529



 Rally®

Add Group Estimates to Allocations

After you have determined which teams can commit to parts of a portfolio item, update the group estimate fields for each
team. The initial value that is pre-populated in this field is based on the preliminary or refined estimate. You can change
this value based on the work each team can commit to for the feature.

 530



 Rally®

The values assigned in the group estimate fields for a portfolio item are considered more accurate than the preliminary
or refined estimate values. The values do not need to be equal between teams, nor does the sum of the values need to
be equal to the original estimate (preliminary or refined). The group estimate value overrides any previous value when
calculating team load.

The group estimate value for each team determines the team load value in the Group Allocations section. This value is
only available in capacity planning. It does not change the actual estimate on the work item elsewhere in the application.

All groups assigned to a portfolio item display in the allocations summary table.

 531



 Rally®

View the Plan Summary

You can view the plan summary.

1. Select Portfolio, Capacity Planning.

2. Select the Summary button to view or print a detailed list of features allocated in the plan.

Publish a Plan

Only users designated as planners can view unpublished plans. When you are ready for your plan to be viewed by all
users, you can publish it.

When you select Publish, you can choose to publish without updating fields in Rally, such as Release, Planned Start
Date, and Planned End Date, for all the portfolio items allocated in the plan. This option also allows everyone to view the
published plan. The Release field is only updated when the start and end dates match in the plan.

 532



 Rally®

If you choose to update fields when you publish a plan, the assigned portfolio items are viewable on the timeline with
updated values for Release, Planned Start Date, and Planned End Date.

NOTE

• Because you can share a single portfolio item between two or more teams in a plan, the Project field in the
planned portfolio items is NOT updated when you publish a plan. When you publish a plan, only the Release,
Planned Start Date, and Planned End Date fields are updated in the planned portfolio items.

• The Release, Planned Start Date, and Planned End Date fields will not be updated in the planned portfolio
item if:
– The selected release has already been "Accepted".
– The work item is in a project (team) where the release does not exist.

Once your plan is published, you can view and track your published plan's progress.

Viewing Plan Progression

Use the Plan Progression page to see which features (the lowest-level portfolio items) were added, removed, and
completed after a plan is published on the Capacity Planning page. Tracking the progress of a plan allows product
managers, program managers, and release train engineers to steer and monitor progress in a release.

Capacity plans are published immediately after quarterly planning or by the first day of the release. This information is
used as the baseline snapshot and represents the committed plan for the release train. Changes made on the first day
of the release are considered part of the baseline plan. If the plan is changed mid-release and republished, this will not
impact the baseline plan unless new teams or projects are added or removed from the plan that have lowest-level portfolio
items associated to them prior to the first day of the release.

You can use the Plan Progression page as long as you have met the following requirements:

• The capacity plan you are tracking has been published on the Capacity Planning page.
• The capacity plan uses the lowest-level portfolio item.
• The capacity plan has start and end release dates. If the plan has a different start and end release, the data on the

page will only capture information related to the start release.
• All of the teams that have features that are part of the plan have been added. If you have included a feature in the

capacity plan but did not include the team, the planned progression will not load.

The Plan Progression page only displays work by teams that are part of the capacity plan. If a team outside the capacity
plan takes ownership of a feature, it is not included.

Watch a short YouTube tutorial on how to monitor a capacity plan with the Plan Progression page.

 533



 Rally®

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

View Completed Work Against Time Elapsed

You can view the completed work against the time elapsed in the release.

1. Select Portfolio, Plan Progression.
2. The Plan Tracker section of the page shows the work completed (by story points).

Viewing Planned Feature Status

The Plan Progression page has tabs to view features that were added, removed, and completed since the plan was last
published. The number in parentheses indicates the total number of features in each tab.

1. Select Portfolio, Plan Progression.
2. Select a tab.

– In Plan - All of the lowest-level portfolio items that are currently in the plan.
– Added - The lowest-level portfolio items that were not part of the published plan but have the same corresponding

release as the plan and associated to the teams within the plan.
– Removed - The lowest-level portfolio items that were originally part of the plan but after day one of the release, the

Release field was set to something other than the corresponding release of the plan and associated to the teams
within the plan. Added items that were later removed also display in the Removed section.

– Completed - The lowest-level portfolio items that have an Actual End date populated and are associated to the
teams within the plan.

Program Increment Scope Chart

The Program Increment Scope Chart displays a chart form of what work has been added, removed, completed, and is
still in progress. The Work Completed value is based on accepted leaf story points on a feature that are associated to any
team or project in the plan.

 534



 Rally®

The gear menu

provides options to print the chart or download it in various formats.

Using Investments
Investments are a business-centric view of work across projects and timeboxes. You can associate and track financial
information with a collection of work. Investments are scoped at the workspace level. Custom fields are allowed.

NOTE
Viewing and editing of investments is permission-based. If you need access to investments, contact your
workspace or subscription administrator.

Investments Versus Milestones

Milestones Investments

Are target dates for events that are important to the business,
such as a trade show

Track a collection of work that rolls up to a shared funding amount,
such as financial data

Can be project specific Can be created at the workspace level

Can be associated to any work item Can only be associated to the lowest-level portfolio item

Learn more about milestones Show all the work associated with an investment

 535



 Rally®

Create a New Investment

You can create a new investment to track financial information.

1. Select Portfolio, Investments.

2. Select Add New from the toolbar.

3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

4. Enter the investment information in the detail editor.

• Name: Must be a unique value.
• Start Date
• End Date
• Amount: Must be a numeric value with a maximum of 13 digits. The value is currently only in US Dollars.

5. Select Create.

Create and Associate a Portfolio Item with an Investment

Add new portfolio items to associate work with an investment.

NOTE
Only the lowest-level portfolio item can be associated with an investment.

1. Select Portfolio, Investments.

2. Select the FormattedID of the work item.

3. From the investment's detail editor, select Portfolio Items

to open the portfolio items page.

4. Select Add New from the toolbar.

5. Select a work item type from the drop-down list.

In some cases where only one work item type is available, this drop-down list is grayed out.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. Select Done.

Associate an Existing Work Item with an Investment

Select already existing portfolio items to associate work with an investment.

 536



 Rally®

NOTE
Only the lowest-level portfolio item can be associated with an investment.

1. Select Portfolio, Investments.

2. Select the FormattedID of the work item.

3. From the investment's detail editor, select Portfolio Items

to open the portfolio items page.

4. Select Link Existing

from the toolbar.

5. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work
item(s) you want to associate.

6. Select the work item(s) you want to associate and select Done.

Remove a Portfolio Item from an Investment

This removes the portfolio item from the investment, but does not delete the portfolio item.

1. Select Portfolio, Investments.

2. Select the FormattedID of the work item.

3. From the investment's detail editor, select Portfolio Items

to open the portfolio items page.

4. Select the portfolio item or items to remove.

5. Select Remove.

Tracking the Status of an Investment

There are three ways to track the percent done for an investment:

• Percent Done by Story Plan Estimate: Story aggregate of the percentage done on each associated feature.
• Percent Done by Workdays: The number of workdays that have elapsed beginning from the Start Date to the End Date

of the investment.
• Percent Child Artifacts Scheduled: The number of features associated to the investment that have the Release field set

with a value other than Unscheduled.

 537



 Rally®

View Dependencies

See all the dependencies that are associated with your investment to monitor potential risks to your release schedule.

On an investment's detail page, you can see the number of associated dependencies.

Learn more about dependencies.

1. Select Portfolio, Investments.

2. Select the FormattedID of the work item.

3. Select Dependencies

to view a list of all items assigned to the investment that have a dependency relationship with another work item. Items
will display even if the other item involved in the dependency relationship is not assigned to the selected investment.

Portfolio Item Tracking
Rally has several tools available to help you track the progress of your portfolio items (roadmaps).

• Using the Portfolio Items Page
• Using the Portfolio Kanban Board
• Using the Custom List App to Track Portfolio Items

Using the Portfolio Items Page
The Portfolio Items page (Portfolio, Portfolio Items) helps you visually track your portfolio's progress (Percent Done) and
status (green, yellow, red, blue) with respect to planned end dates.

This page lets you track the progress and status of multiple portfolio items at once. You can specify the type of portfolio
item displayed from the Type drop-down menu.

 538



 Rally®

The Portfolio Items page is a list view and supports filtering, customizing display columns, and saving views.

Learn more about filtering.

Learn more about customizing your list.

Learn more about saving and sharing views.

Print the Portfolio Items List

You cannot print the portfolio items list directly. However, you can export your portfolio items list to a CSV file, then open
the CSV file in your preferred tool and print it.

Using the Percent Done Fields

By default, two tracking fields display on the Portfolio Items and detail editor pages: Percent Done by Story Count and
Percent Done by Story Plan Estimate. Your team's estimating practices dictate what field should be used to see the
most accurate status.

• If your team estimates the amount of work necessary to complete user stories, and enters data into the Plan Estimate
field of stories assigned to portfolio items, use the Percent Done By Story Plan Estimate field. Because story size
may vary, this field will show the most accurate representation of points remaining to complete the portfolio item.

• If your team does not estimate the size of user stories and leaves the Plan Estimate field blank, use the Percent
Done By Story Count field. Because all stories are viewed as equal segments of work, you will only need to see the
number of stories remaining to complete the portfolio item. The accuracy of this number is dependent on your ability to
normalize story sizes across your development teams.

NOTE

The calculation of the Percent Done values may be delayed (for example, when changes
are made to accepted child user stories or when user stories are removed from a
feature). You can check the Last Rollup Date field in the detail editor to see when the
values were last updated. You can force the values to update by selecting the gear

and then selecting Correct rollup discrepancy.

In addition to the numerical percentage of work done displayed in these fields, more details of the portfolio item's status
are displayed through hover callouts and field coloring.

Callouts

Detailed callouts display when you hover over the Percent Done By fields. The fields in this callout vary depending on the
status of the portfolio item and user stories associated to it.

 539



 Rally®

Field Description

Status Based on the progress of the portfolio item compared to the
planned start and end dates, one of the following values displays:
On Track, At Risk, Late, Complete.

Accepted Points The number of story points on user stories in an Accepted state
and total number of story points. Disregard if your team does not
estimate the size of user stories.

Accepted User Stories The number of user stories in an Accepted state compared to the
total number of user stories assigned to the portfolio item.

Missing Estimates
Missing Planned End Date

The orange warning indicator displays if one or more user stories
or portfolio items do not have values entered into the Plan
Estimate or Planned End Date fields. Disregard if your team tracks
with the % Done By Story Count column.

Actual End Date Displays when all work has been accepted using the date that the
final story was set to an Accepted state.

Feature Planned End Date If your planned end date is past the release date, you can select
the Update link to move it to the next release or iteration.

Assigned to later releases or iterations If you have user stories that are scheduled for later releases or
iterations, you can select the View link to edit the current release
or iteration for the user stories.

Percent Done Field Coloring

Both of the Percent Done fields are colored based on the status of the work needed to complete the portfolio item. Rally
uses an algorithm that takes the number of stories, story points (if applicable), current date, dates work is set to Accepted,
and Planned start/end date fields into account to generate a colored status indicator. See the table below for the meaning
of each color.

 540



 Rally®

The portfolio item duration is defined by the Planned Start Date and Planned End Date fields.

Color Meaning

Blue Complete: If the current date is after the Planned End Date and
the artifacts in the portfolio item are 100% done, the Percent Done
field will be blue.

Green On Track: If the current date is before the Planned End Date and
the portfolio item is not late or at-risk, the Percent Done field will
be green.

Yellow At Risk: Completing the portfolio item before the Planned
End Date is in jeopardy. Considering the current date and the
timeframe for the portfolio item, the rate of work being accepted
is more than 20% lower than the necessary rate of acceptance in
order to complete the portfolio item before the Planned End Date.
The Percent Done field will be yellow.

Red Late: Work is not being accepted at a sufficient rate to complete
the portfolio item before the Planned End Date. Considering the
current date and the timeframe for the portfolio item, the rate of
work being accepted is more than 40% lower than the necessary
rate of acceptance in order to complete the portfolio item before
the Planned End Date. The Percent Done field will be red.

Light gray progress bar The Planned Start Date is not defined or is in the future.

Dark gray progress bar Some work has been accepted but the Planned Start Date is in
the future.

Using the Portfolio Kanban Board
The Portfolio Kanban Board provides visibility into work-in-flight in the context of your idea-to-delivery (concept-to-
cash) workflow.

NOTE
The Portfolio Kanban Board is available as a page or an app.

Using the app, you can set up separate portfolio Kanban boards for each of your types. This eliminates confusion between
settings when viewing a board in different projects or workspaces, and gives organizers an option to send links to type-
specific boards on custom pages. To change the type setting, select the Settings option from the gear drop-down menu at
the top of the app.

Each card displays how many days or weeks the portfolio item has been in its current state column. Cards indicate age in
days for the first 20 days in a column, and in weeks after the 21st day. Age data is calculated for existing cards beginning
April 28th, 2012, and does not include historical data. The next time a portfolio item is moved on the board, the work-in-
progress age counter is reset. Aging is calculated using a seven-day week.

Archive Portfolio Items

If you want to hide portfolio items from your Portfolio Kanban board or Portfolio Items list page, you can mark them as
archived and then set up a filter or query that will hide them from view. This is helpful you decide to drop a feature for a
period of time but do not want to delete it.

 541



 Rally®

When using the Portfolio Items page, you can use filters to limit what you see. When using the Portfolio Kanban page
you can use a query.

Learn more about using filters on a list page.

Learn more about using a query on the Portfolio Kanban board.

1. Use the Show Fields button to show the Archived field on the Portfolio Kanban board or on the Portfolio Items page.
2. Set the Archived field to Yes on the respective portfolio items.
3. Use a filter (Portfolio Items page) or query (Portfolio Kanban board) to exclude portfolio items with the Archived

field set to yes.

Using the Custom List App to Track Portfolio Items
You can use one or more Custom List apps to view portfolio item status. For example, you can create a list that tracks all
Features, or a list that tracks Initiatives.

The Custom List app has a Query field located in the settings menu. You may enter SQL-style queries into the field to filter
the portfolio items displayed. You may filter by any field that can be queried through the Web Services API.

Using the Timeline Page
The Timeline page helps facilitators of teams of teams who need to visually display planned portfolio items over a time-
based view, organized by project.

You can use the Timeline page to manage priorities and to help determine where work fits into the schedule, based on the
information you currently have. This page shows plan data across multiple teams and helps you to visualize how the work
relates across those teams and schedules.

Portfolio managers, product managers, and other executives can use the Timeline page to quickly view portfolio items
in relation to other portfolio items, milestones, and the planned start and end dates. Teams use the Timeline page to
establish the team's intentions for a given amount of time. As the team provides additional input, and project details are
further defined, this page reflects those refinements. Remember that the timeline represents the intentions of each team,
but not commitments. This allows for refinement.

 542

https://rally1.rallydev.com/slm/doc/webservice


 Rally®

Regardless of your role, the Timeline page collates valuable project schedule information into a single view. On the
Timeline page, you can:

• Filter your work types and date ranges
• View portfolio items within the dates you specify
• View milestones
• See a list of your projects on the left side of the timeline
• Zoom and scroll the timeline
• See dependencies between portfolio items
• Edit the planned dates for portfolio items

This section includes the following topics:

• View Portfolio Item Progress on the Timeline Page
• Filter the Timeline Page
• Adjust Portfolio Item Date Ranges on the Timeline Page
• Adjusting Your Timeline Page View
• View Milestones on the Timeline Page
• View Dependencies on the Timeline Page
• Use Edit Mode on the Timeline Page
• Move Portfolio Items on the Timeline Page

***************************ICE CONTENT STARTS HERE - TITLES
DEFINED IN ICE (BASED ON DIV ID)***********************************

The Timeline page displays planned portfolio items over a time-based view.

You can use the Timeline page to manage priorities and to help determine where work fits into the schedule, based on the
information you currently have. This page shows plan data across multiple teams and helps you to visualize how the work
relates across those teams and schedules.

 543



 Rally®

Portfolio managers, product managers, and other executives can use the Timeline page to quickly view portfolio items
in relation to other portfolio items, milestones, and the planned start and end dates. Teams use the Timeline page to
establish the team's intentions for a given amount of time. As the team provides additional input, and project details are
further defined, this page reflects those refinements. Remember that the timeline represents the intentions of each team,
but not commitments. This allows for refinement.

Regardless of your role, the Timeline page collates valuable project schedule information into a single view. On the
Timeline page, you can:

• Filter your work types and date ranges
• View portfolio items within the dates you specify
• View milestones
• See a list of your projects on the left side of the timeline
• Zoom and scroll the timeline
• See dependencies between portfolio items
• Edit the planned dates for portfolio items

You can track progress in several ways from the Timeline page.

1. Select Portfolio, Timeline.
2. View the timeline information for the currently selected project in your project hierarchy.

Portfolio Items and Projects

Each portfolio item displays on the left on a separate line.

• Select the FormattedID of the portfolio item to open the detail editor.
• Hover your mouse over the portfolio item ID or status bar to view a pop-up window that provides summary information

for that item.
• An arrow next to the portfolio item indicates that item has one or more child portfolio items. Select the arrow to expand

the portfolio item and view the child items. Select the FormattedID of any child portfolio item to open the detail editor.
NOTE
When you expand a portfolio item, all child portfolio items display, including those items that are not
scheduled for the current date range of the timeline. Child portfolio items that are not scheduled in the current
date range appear without a progress bar.

• By default, the portfolio items are sorted by project in ascending order. Select any column header that includes the Sort
icon

to sort portfolio items by that column, in either ascending or descending order. Your sorting selections are saved and
used the next time that you access the Timeline page unless you select Clear Filters.

NOTE
The Milestones section of the timeline is always sorted by the milestone name.

Project Column

The Project column displays the project for each portfolio item.

You can filter the Timeline page to show only the projects that you need. Learn more.

Progress Column

The Progress column displays the percentage complete and status indicator for each portfolio item. You can drag the right
side of the Progress column to provide more or less space for viewing your timeline.

 544



 Rally®

• This column shows the Percent Done by Story Plan Estimate, which is based on the story points that are entered
in the Plan Estimate field for each child work item. This column shows the number of plan estimate values that
are complete as a percentage of the total plan estimate for all work items that are associated with the portfolio
item. Because story size may vary, this percentage tends to be the most accurate representation of the points
remaining to complete the portfolio item. To see the Percent Done By Story Count, select the FormattedID of the
portfolio item to open the detail editor.

• The Percent Done by Story Plan Estimate is also reflected in the status bar for the portfolio item in the timeline.
• The status indicator is based on the status of the work needed to complete the portfolio item. Rally uses an algorithm

that takes the number of stories, story points (if applicable), current date, dates work is set to Accepted, and Planned
start/end date fields into account to generate a one of the following status indicators, when appropriate.

• Based on the progress of the portfolio item as compared to the planned start and end dates, one of the following
values can also display:
– Not Started: No child work items have been started for this portfolio item.
– Blocked: The portfolio item is blocked. Blocking the portfolio item does not block the child work items.
– Late: Work is not being accepted at a sufficient rate to complete the portfolio item before the Planned End

Date. Considering the current date and the timeframe for the portfolio item, the rate of work being accepted is more
than 40% lower than the necessary rate of acceptance in order to complete the portfolio item before the Planned
End Date.

Timeline Bars

Each portfolio item shows two colored bars on the timeline.

• The top bar indicates the planned dates for the portfolio item.
• The bottom bar indicates the actual dates for the portfolio item and lets you easily see whether the portfolio item took

less or more time to complete than was planned.
• The bar for the actual dates is initially empty and outlined with dotted lines. As work is completed, this bar fills in with

color to visually indicate the progress of the portfolio item and the percent complete. The percent complete is based on
the Percent Done by Story Plan Estimate, which is also displayed in the Progress column.

NOTE
You can also chose to hide the actuals bar in your display options. Learn more.

• The color of a portfolio item on the Timeline page is based on the color selected for the portfolio item in the Color field.
• Hover your mouse over the top bar to view a pop-up window that provides summary information for that portfolio item.

When you access the Timeline page, The selected filters and options are based on your selections from the last time you
viewed this page.

To access the Timeline page and configure your display options:

1. Select Portfolio, Timeline.
The Timeline page opens.

2. Select Edit View.
The View Editor dialog opens. Select the filters and options for your timeline from the following tabs:
– Timescale
– Portfolio Items
– Milestones
– Display Options>

 545



 Rally®

NOTE
When defining a new view, you do not have to complete every field on every tab. When you have your
desired filters and options defined, select View.

Timescale

To modify the timescale for your timeline:

1. Select Edit View.
2. Select the Timescale tab, and use the date pickers to select the start and end dates for your timeline.

You can also select the date range at the top of the page to go directly to the Timescale tab.

NOTE
If a portfolio item does not have planned start and end dates, it does not appear on the Timeline page.

3. Select another tab or select View to see the timeline with your selections applied.

Portfolio Items

To filter the portfolio items for your timeline:

1. Select Edit View.
2. Select the Portfolio Items tab.

You can also select the number of portfolio items at the top of the page to go directly to the Portfolio Items tab.
3. Select the type of portfolio item that you want to search for from the Hierarchy Level list.
4. Select the Show Child Items toggle to include child items for the selected portfolio item type.

NOTE
Selecting a project filters the data on the timeline to that project and its child projects. Filters only apply to
your chosen hierarchy level. All children of the selected level display.

5. You can use either Quick Filters or Advanced Filters to filter your portfolio items.
To use advanced filters:
a. Select a value from the Field drop-down list to use as a filter.

For example, to filter your timeline to a specific project, you can select Project from the list.
b. Select an operator from the Operator drop-down list. Available operators are dependent on the field type.
c. Select or enter a value for the field.
d. To add an additional filter, select

.
To remove a filter, select

.
To reset all filter values, select Clear Filters.

e. Select the Project(s) or Releases that you want to search.
To use quick filters:
a. Select Switch to Quick Filters.
b. Select Add or Remove Filters to view the Manage Filters list.
c. Select one or more fields from the drop-down list or use search criteria to add filters. Once you have selected all

applicable filters, select Apply.
d. For each field you chose, select the correct value to use as a filter.

For example, if you choose the Project field, you can select which projects to use as filters. You can select more
than one value per field. Use the No Entry option to display work items that do not have a field value. Select Clear
Filters to reset the values used by the filters.

6. Select another tab or select View to see the timeline with your selections applied.

 546



 Rally®

Milestones

To filter the milestones for your timeline:

1. Select Edit View.
2. Select the Milestones tab.

You can also select the number of milestones at the top of the page to go directly to the Milestones tab.
3. Select the type of milestones that you want to include (Workspace, Project, or both).
4. You can use either Quick Filters or Advanced Filters to filter your milestones.

NOTE
The selections that you make on this tab determine which milestones display on your timeline. These filters
do not affect the portfolio items that display and do not limit your timeline to the portfolio items that are
assigned to the selected milestones.

5. Select another tab or select View to see the timeline with your selections applied.

Display Options

To define the display options for your timeline:

1. Select Edit View.
2. Select the Display Options tab.
3. Select Add / Remove Column Field to customize the fields that display in your timeline. Select the check box for

each field that you want to display and select Apply.
Name, Project(s), Progress, and Timeline display by default.

4. To organize your timeline by a category, select the field that you want to group by from the Group Portfolio Items By
list.

5. Select whether you want to calculate progress on the timeline by Plan Estimate or Item Count.
6. Select the Show Actuals Bars option to include bars in the timeline for the actual dates in addition to the planned

dates.
7. Select another tab or select View to see the timeline with your selections applied.

Save Your View

You can save the settings for your timeline for later use or to share with your team or others.

1. Select Save As New View from the Saved Views drop-down list.
2. Enter a name for the view.
3. If applicable, select the appropriate sharing option from the Sharing drop-down list.

Only users with workspace or project administrator permissions can share views.
4. Select Save.

{"URL":["/#/*/timeline"],"heroDescriptionIdentifier":"ice-timeline-page","troubleshooting":{"text":"Knowledge
Base","URL":["http://Message%20in%20Roadmaps%20when%20viewing%20Timeline"]},"video":["https://youtu.be/
oNjGypQZctE"],"customCards":[{"id":"ice-view-portfolio-item-progress-timeline","type":"use","title":"View Portfolio Item
Progress on the Timeline Page"},{"id":"ice-filter-the-timeline-page","type":"use","title":"Filter the Timeline Page"}]}

View Portfolio Item Progress on the Timeline Page
You can track plan progress in several ways from the Timeline page.

To access the Timeline page:

1. Select Portfolio, Timeline.
2. View the timeline information for the currently selected timeline filters.

 547



 Rally®

The selected filters and options are based on your selections from the last time you viewed the Timeline page.
– To select a different saved view, select the view from the Saved Views field at the top of the page. For more

information see Saving and Sharing Views.
– For more information about modifying the filters on this page, see Filter the Timeline Page.

Portfolio Items and Projects

Each portfolio item displays on the left on a separate line.

• Select the FormattedID of the portfolio item to open the detail editor.
• Hover your mouse over the portfolio item ID or status bar to view a pop-up window that provides summary information

for that item.
• An arrow next to the portfolio item indicates that item has one or more child portfolio items. Select the arrow to expand

the portfolio item and view the child items. Select the FormattedID of any child portfolio item to open the detail editor.
NOTE
When you expand a portfolio item, all child portfolio items display, including those items that are not
scheduled for the current date range of the timeline. Child portfolio items that are not scheduled in the current
date range appear without a progress bar.

• By default, the portfolio items are sorted by project in ascending order. Select any column header that includes the Sort
icon

to sort portfolio items by that column, in either ascending or descending order. Your sorting selections are saved and
used the next time that you access the Timeline page unless you select Clear Filters.

NOTE
The Milestones section of the timeline is always sorted by the milestone name.

Project Column

The Project column displays the project for each portfolio item.

You can filter the Timeline page to show only the projects that you need. Learn more.

Progress Column

The Progress column displays the percentage complete and status indicator for each portfolio item. You can drag the right
side of the Progress column to provide more or less space for viewing your timeline.

• This column shows the Percent Done by Story Plan Estimate, which is based on the story points that are entered
in the Plan Estimate field for each child work item. This column shows the number of plan estimate values that
are complete as a percentage of the total plan estimate for all work items that are associated with the portfolio
item. Because story size may vary, this percentage tends to be the most accurate representation of the points
remaining to complete the portfolio item. To see the Percent Done By Story Count, select the FormattedID of the
portfolio item to open the detail editor.

• The Percent Done by Story Plan Estimate is also reflected in the status bar for the portfolio item in the timeline.
• The status indicator is based on the status of the work needed to complete the portfolio item. Rally uses an algorithm

that takes the number of stories, story points (if applicable), current date, dates work is set to Accepted, and Planned
start/end date fields into account to generate a one of the following status indicators, when appropriate.

• Based on the progress of the portfolio item as compared to the planned start and end dates, one of the following
values can also display:
– Not Started: No child work items have been started for this portfolio item.
– Blocked: The portfolio item is blocked. Blocking the portfolio item does not block the child work items. Learn more.
– Late: Work is not being accepted at a sufficient rate to complete the portfolio item before the Planned End

Date. Considering the current date and the timeframe for the portfolio item, the rate of work being accepted is more

 548



 Rally®

than 40% lower than the necessary rate of acceptance in order to complete the portfolio item before the Planned
End Date.

Timeline Bars

Each portfolio item shows two colored bars on the timeline.

• The top bar indicates the planned dates for the portfolio item.
• The bottom bar indicates the actual dates for the portfolio item and lets you easily see whether the portfolio item took

less or more time to complete than was planned.
• The bar for the actual dates is initially empty and outlined with dotted lines. As work is completed, this bar fills in with

color to visually indicate the progress of the portfolio item and the percent complete. The percent complete is based on
the Percent Done by Story Plan Estimate, which is also displayed in the Progress column.

NOTE
You can also chose to hide the actuals bar in your display options. Learn more.

• The color of a portfolio item on the Timeline page is based on the color selected for the portfolio item in the Color field.
• Hover your mouse over the top bar to view a pop-up window that provides summary information for that portfolio item.

Filter the Timeline Page
The Timeline page gives you a quick view of portfolio items in your project, within a set date range. You can filter the page
to see the information that you need.

When you access the Timeline page, the selected filters and options are based on your selections from the last time you
viewed this page.

To access the Timeline page and configure your display options:

1. Select Portfolio, Timeline.
The Timeline page opens.

2. Select Edit View.
The View Editor dialog opens. Select the filters and options for your timeline from the following tabs:
– Timescale
– Portfolio Items
– Milestones
– Display Options

NOTE
When defining a new view, you do not have to complete every field on every tab. When you have your
desired filters and options defined, select View.

Timescale

To modify the timescale for your timeline:

1. Select Edit View.
2. Select the Timescale tab, and use the date pickers to select the start and end dates for your timeline.

You can also select the date range at the top of the page to go directly to the Timescale tab.

NOTE
If a portfolio item does not have planned start and end dates, it does not appear on the Timeline page.

 549



 Rally®

3. Select another tab or select View to see the timeline with your selections applied.

Portfolio Items

To filter the portfolio items for your timeline:

1. Select Edit View.
2. Select the Portfolio Items tab.

You can also select the number of portfolio items at the top of the page to go directly to the Portfolio Items tab.
3. Select the type of portfolio item that you want to search for from the Hierarchy Level list.
4. Select the Show Child Items toggle to include child items for the selected portfolio item type.

NOTE
Selecting a project filters the data on the timeline to that project and its child projects. Filters only apply to
your chosen hierarchy level. All children of the selected level display.

5. You can use either Quick Filters or Advanced Filters to filter your portfolio items.
To use advanced filters:
a. Select a value from the Field drop-down list to use as a filter.

For example, to filter your timeline to a specific project, you can select Project from the list.
b. Select an operator from the Operator drop-down list. Available operators are dependent on the field type.
c. Select or enter a value for the field.
d. To add an additional filter, select

.
To remove a filter, select

.
To reset all filter values, select Clear Filters.

e. Select the Project(s) or Releases that you want to search.
To use quick filters:
a. Select Switch to Quick Filters.
b. Select Add or Remove Filters to view the Manage Filters list.
c. Select one or more fields from the drop-down list or use search criteria to add filters. Once you have selected all

applicable filters, select Apply.
d. For each field you chose, select the correct value to use as a filter.

For example, if you choose the Project field, you can select which projects to use as filters. You can select more
than one value per field. Use the No Entry option to display work items that do not have a field value. Select Clear
Filters to reset the values used by the filters.

6. Select another tab or select View to see the timeline with your selections applied.

Milestones

To filter the milestones for your timeline:

1. Select Edit View.
2. Select the Milestones tab.

You can also select the number of milestones at the top of the page to go directly to the Milestones tab.
3. Select the type of milestones that you want to include (Workspace, Project, or both).
4. You can use either Quick Filters or Advanced Filters to filter your milestones.

NOTE
The selections that you make on this tab determine which milestones display on your timeline. These filters
do not affect the portfolio items that display and do not limit your timeline to the portfolio items that are
assigned to the selected milestones.

 550



 Rally®

5. Select another tab or select View to see the timeline with your selections applied.

NOTE
You can collapse the Milestones section to provide more room on the timeline to view your portfolio items. When
you collapse the Milestones section, all milestone icons display in the single row of the Milestones header. This
behavior lets you see where the milestones fall on the timeline and provides access to the details of a milestone,
even when the Milestones section is collapsed.

Display Options

To define the display options for your timeline:

1. Select Edit View.
2. Select the Display Options tab.
3. Select Add / Remove Column Field to customize the fields that display in your timeline. Select the check box for

each field that you want to display and select Apply.
Name, Project(s), Progress, and Timeline display by default.

4. To organize your timeline by a category, select the field that you want to group by from the Group Portfolio Items By
list.

5. Select whether you want to calculate progress on the timeline by Plan Estimate or Item Count.
6. Select the Show Actuals Bars option to include bars in the timeline for the actual dates in addition to the planned

dates.
7. Select another tab or select View to see the timeline with your selections applied.

Save Your View

You can save the settings for your timeline for later use or to share with your team or others. For more information, see
Saving and Sharing Views.

1. Select Save As New View from the Saved Views drop-down list.
2. Enter a name for the view.
3. If applicable, select the appropriate sharing option from the Sharing drop-down list.

Only users with workspace or project administrator permissions can share views.
4. Select Save.

Adjust Portfolio Item Date Ranges on the Timeline Page
You can quickly change the date ranges of a portfolio item on the Timeline page. The ability to adjust date ranges is based
on your permissions.

You must be a project editor to update the date range for a portfolio item.

1. Select Portfolio, Timeline.

2. Select Edit Mode

.
The Edit Mode message window opens.

3. Select Continue.

The Edit Mode icon is highlighted to indicate that you are in edit mode. You can now edit displayed portfolio items.
Your changes save automatically.

 551



 Rally®

4. Select either end of a portfolio item and drag to the appropriate date to adjust the beginning or ending date. You can
also select the middle and drag the portfolio item to a new date without adjusting the planned date span.

NOTE

Adjusting the planned end date for a portfolio item that is not in a completed state also adjusts the end date
of the actuals bar. For example, assume you have a feature portfolio item, all of the user stories associated
with that feature are completed, but the portfolio item itself is not in a completed state. If you drag the end
date for that portfolio item further to the right, it will also drag the actuals bar with it.

WARNING
Changing a portfolio item on the Timeline page saves automatically and without a confirmation message.
You can undo certain changes. Learn more.

5. Select any location off of the portfolio item to confirm your changes.

Adjusting Your Timeline Page View
Zoom and pan on the Timeline page to adjust your view of the portfolio items you are tracking.

Adjust your views to see a different level of detail about a specific point on the timeline. Once you have your scope dates
set, try using zoom and pan together to move between the big picture of an entire project and the details of a specific
portfolio item. Use the scroll bar at the bottom of the page to scroll horizontally along your timeline view.

Component Description

Select and drag the blue dot between the minus and plus icons to zoom.

Select to activate edit mode.

Select to undo recent actions.

Select to view or hide the dependencies between portfolio items.

 552



 Rally®

View Milestones on the Timeline Page
Milestones are target dates that are important to the business. When you associate a milestone with a portfolio item such
as a feature, all of the associated user stories and work items are also associated with that milestone. A milestone goal is
complete when all children under the feature are complete.

Milestones display on the timeline page in their own section. You can hide or show milestones to customize your view of
the Timeline page. You are not able to see milestones that are associated with projects that you do not have permission to
view.

Each milestone appears on the left side of the timeline, in its own row. A milestone icon

( )
displays in the row on the timeline to indicate the milestone date.

You can collapse the Milestones section to provide more room on the timeline to view your portfolio items. When you
collapse the Milestones section, all milestone icons display in the single row of the Milestones header. This behavior
lets you see where the milestones fall on the timeline and provides access to the details of a milestone, even when the
Milestones section is collapsed.

For more information about milestones, see Managing Milestones.

NOTE
When converting a defect to a user story, be aware of the following:

• The original defect is not deleted. The defect is closed, its resolution is changed to Converted, and it is
unscheduled.

• Attachments, Tasks, and Test Cases for the original defect are moved to the new user story.
• Each attribute is moved to the user story if it exists on the target type.
• Associated milestones are not removed from the original defect and must be manually removed.
• If any work rules are violated during the conversions, they are triggered as warnings.

 553



 Rally®

To view milestones:

1. Select Edit View.

2. Select the Milestones tab.
You can also select the number of milestones at the top of the page to go directly to the Milestones tab.

3. Select the type of milestones that you want to include (Workspace, Project, or both).

4. You can use either Quick Filters or Advanced Filters to filter your milestones.

NOTE
The selections that you make on this tab determine which milestones display on your timeline. These filters
do not affect the portfolio items that display and do not limit your timeline to the portfolio items that are
assigned to the selected milestones.

5. Select View to see the timeline with your selections applied.

• Selecting the Milestone

icon in the timeline displays a vertical line to make it easier to see the milestone date across the timeline page.
This vertical line displays until you select the milestone again, hide all milestones, or exit/refresh the page. You can
select multiple milestones.

• Hovering over the Milestone vertical line displays the name of the milestone.
• Selecting the formatted ID in the left column displays the full details for the milestone.
• Hovering over the formatted ID displays a summary of the milestone.

View Dependencies on the Timeline Page
You can show or hide dependencies to customize your view of the Timeline page.

Dependencies are predecessor and successor relationships between portfolio items. Any dependencies are shown as
lines between the portfolio items on the Timeline page.

NOTE
If a portfolio item is not in the view (it could be filtered out or in a project that is not being displayed), and there is
a dependency relationship with a portfolio item that is in the view, no line is displayed.

1. Select Portfolio, Timeline.

2. Select Dependencies

.
The Dependencies icon is highlighted to indicate that you are in dependencies mode.

Any dependencies between portfolio items are shown by a line between the predecessor (line starting at the right side
of the portfolio item) and successor (line ending with an arrow pointing to the left side of the portfolio item).

 554



 Rally®

3. To turn off Dependencies mode, select Dependencies

again.

Use Edit Mode on the Timeline Page
To prevent unintended changes, the list on the Timeline page defaults to view-only mode for all users.

By default, you can filter the Timeline as well as select portfolio items to edit. However, if you want to adjust where
portfolio items exist on the timeline, you need to enable edit mode. Once you enable edit mode, it persists for your active
session or until you manually return to view-only mode.

Until you navigate to a different page or log off, you can undo your changes to items on the Timeline page. Select Undo

to revert your most recent changes.

1. Select Portfolio, Timeline.

2. Select Edit Mode

.
The Edit Mode message window opens.

3. Select Continue.

The Edit Mode icon

( )
is highlighted to indicate that you are in edit mode. You can now edit displayed portfolio items. Your changes save
automatically.

4. Select Edit Mode

to return to view-only mode.

TIP
Select Edit Mode

to switch between edit mode and view-only mode.

 555



 Rally®

Move Portfolio Items on the Timeline Page
Quickly move portfolio items on the Timeline page to change the dates (not the span of time) or move the portfolio item to
a different project. The ability to adjust date ranges or move portfolio items is based on your permissions and may not be
available to all users.

1. Select Portfolio, Timeline.

2. Select Edit Mode

.
The Edit Mode message window opens.

3. Select Continue.

The Edit Mode icon is highlighted to indicate that you are in edit mode. You can now edit displayed portfolio items.
Your changes save automatically.

4. Select the portfolio item again and drag to the appropriate date, without changing the original time scope.

WARNING
Changing a portfolio item in the Timeline page saves automatically and without a confirmation message. You
can undo certain changes. Learn more.

Using Objectives and Key Results (OKRs) in Rally
Use the Objectives and Key Results (OKRs) feature in Rally to provide a goal-setting framework for your organization and
teams to align around the same goals. This alignment creates clarity and focus, and helps ensure that the most important
work gets prioritized.

OKRs are aspirational in nature and help to focus your teams on the “why” behind the goals you set. Each OKR is
composed of two parts:

• A short qualitative objective.
• Two to five quantitative key results that can be measured to track your progress.

Your organization can customize the way that you track OKRs by creating an alignment with your objectives. You
can associate each objective level with a different level of work by associating each level with a portfolio item type in
Rally. Although you can associate an objective with a particular team, all users can see all OKRs regardless of where
they are in your organization and project structure. This visibility reinforces the goals of the OKR framework itself, which
includes transparency and focus.

Aligning the actual work to be done (output) to an objective helps team members at all levels understand the business
outcomes that the organization is striving to achieve. Using the OKR methodology aligns well to the Agile concept
of “inspect and adapt”. The time frame that you set for an OKR should be short enough to allow for evaluation and
adaptation of the key results. You should revisit your OKRs on a monthly or quarterly basis to determine whether the
business outcome that you want to achieve is still within reach. If not, you can change the OKRs to align with new
corporate strategies, market changes, or alignment with new initiatives.

Currently, the OKR feature does not support searching for Objectives. Also, you can access only a few options in the
toolbar on the Objectives list view page. This is by design because objectives are not meant to be managed the same way
that you manage work items. 

This section includes the following topics:

 556



 Rally®

• OKR Transparency
• Creating Aspirational Objectives
• Creating Measurable Key Results
• Using Interim Targets and Schedules
• Associating OKRs with Work
• Creating OKRs
• Viewing OKRs
• Creating an OKR Hierarchy in Rally

Watch a short YouTube tutorial that introduces you to working with the new OKRs feature in Rally.

OKR Transparency

The main goal of using an OKR framework is to set goals for your organization and build focus and provide transparency
across your value stream.

To support transparency in your organization, all OKRs, regardless of their hierarchy level, are visible to all
users. However, you can limit the ability to create and edit OKRs to a subset of your users by assigning those users OKR
Admin permissions.

Any member of any team can view the OKRs in your organization. This access includes the ability to associate portfolio
items with an OKR and discuss comments in the Discussion tab if you have the edit permission for the project where the
portfolio item resides. However, permissions for portfolio items still apply. Users can only associate work to an OKR that
they have permission to see. The same is true for viewing associated portfolio items. Users cannot view portfolio items
that are associated with an OKR if they do not have permissions to view the respective portfolio item.

Creating Aspirational Objectives

OKRs are based on aspirational and motivational objectives instead of restated versions of your organization’s delivery
goals. Objectives must be qualitative and should help you understand why the organization is driving towards the
associated business outcome. By setting an objective, you are creating a way for your organization to focus on a specific
goal.

Counter to other goal-setting systems, the objective should not be easy to meet. Each objective should encourage your
teams to stretch and think differently about the ways their work can contribute to the goal. Typically, achieving more than
70 percent of an aspirational objective can be counted as a success.

For each objective you set, you must set a start and end date. You can also set a confidence score for each objective. A
confidence score is a manual score that you enter and change as the objective time frame progresses. As a best practice,
you should revisit your confidence score on a regular cadence, either weekly or monthly. Only users with the OKR
Admin role can modify a confidence score.

Creating Measurable Key Results

Key results are quantifiable data that helps you measure a specific outcome. Typically, these results are traceable metrics
that are related to your goal. You use the key results as indicators that you are moving closer to achieving your goal.

As a best practice, you should add no more than four key results for each objective. Your key results help your
organization maintain focus on the objective. Associating too many key results with your objective may indicate that your
objective is not focused enough.

You must distinguish between the key results that measure the outcome from the activities that lead to that outcome.
Key results are not activities or work that your team accomplishes. They are the measurable results of a business goal
that those activities support. Listing all the activities or work as key results is a common error when learning to define
objectives and key results.

 557



 Rally®

Using Interim Targets and Schedules

In order to facilitate the tracking of OKRs, Rally has added interim targets to the schedule for OKRs. Interim targets are
dates between the start date and the end date for the OKR. A maximum of 30 interim targets are supported for each
schedule.

Watch a short YouTube tutorial on best practices for OKRs Rally.

Associating OKRs with Work
You can track your OKRs in the context of the work that you track in Rally.

The true measures of success for a particular objective are the key results that you measure and track. However,
it is important to support those key results with the associated activities or work that will lead to achieving those
metrics. Associating specific activities and work items with your OKRs helps you determine whether teams are focused on
supporting your objectives.

For this reason, when your organization creates your objective hierarchy, you must decide what level of portfolio item
you want your teams to be able to associate with an objective. Higher-level objectives should be paired with higher-level
portfolio items.

Understanding the Difference Between an OKR and a PI Objective

OKRs differ from Release (PI) Objectives in important ways.

Although your team may be tempted to use the OKR framework to set objectives for their releases, they should note the
important differences between the two. An OKR should not be used as a PI objective or the other way around.

Release objectives are typically going to be more granular and tied to work and activities. OKRs are always tied to
metrics. Release (PI) objectives provide teams with the flexibility to track work-related accomplishments without worrying
about high-level metrics that are tracked elsewhere.

Creating OKRs
Objectives and Key Results (OKRs) are a goal-setting framework that helps organizations and their teams align around
the same goals. This alignment creates clarity and focus, and can help ensure that the most important work gets
prioritized.

OKRs are aspirational in nature and help to focus your teams on the “why” behind the goals you set. Each OKR is
composed of two parts:

• A short qualitative objective.
• Two to five key results that can be measured to track your progress.

NOTE
You must have the OKR Admin role assigned to you before you can create, edit, or delete objectives.

Users who do not have the OKR Admin role can view all objectives, regardless of who created them and where the
objective resides in the project hierarchy. If the objective has profile items that are associated to it, users can only see the
profile items that they have access to view or edit.

IMPORTANT
Work with your administrator before you create any objectives. The Objectives page is blank unless your
administrator has configured your organization to use objectives. Be sure that your administrator is finished
preparing your workspace before adding any objectives.

 558



 Rally®

Create an Objective
You must assign an objective to a hierarchy level before you create the objective. These levels are defined by OKR
administrators. Each hierarchy level can be associated to a specific portfolio type, such as a theme, initiative, or
feature. Users can only associate portfolio items of the specified type to the objective you create. For more information
about creating an objective hierarchy, see Customize Objective Levels.

As you create an objective, you can also add one or more key results to that objective. Key results are quantifiable data
that helps you measure a specific outcome. Typically, these are traceable metrics that you can use as indicators that you
are moving closer to achieving your goal. For more information about defining key results, see Add Key Results to an
Objective.

NOTE
You must have the OKR Admin role assigned to you before you can create, edit, or delete objectives.

1. Select Portfolio, Objectives.

2. Select the objective hierarchy level for this objective from the Objective drop-down list.

3. Select Add New from the toolbar.

4. Enter a name for the objective in the Name field.

5. Enter a Start Date and Target Date.
The time frame you use for an objective should be short enough to allow for evaluation and adaptation of the key
results. Revisit your objective often to determine whether the business outcome that you want to achieve is still within
reach. If not, you can change the objective to align with new corporate strategies, market changes, or alignment with
new initiatives.

NOTE
Name, Start Date, and Target Date are required fields for creating an objective.

6. Select Create with details to view the objective in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. You can change the default values for Owner, Projects, and Color.

8. Enter a description for your objective in the Description field.

9. Optionally, select a Parent Objective, if this objective is a child of a larger objective.

10. Select the current state of the objective from the State drop-down list.

11. Enter a score in the Confidence Score field to indicate how confident you are about achieving the objective.
Valid values are from 0 through 1, where 1 is 100%. For example, a value of 0.4 displays as a 40 percent confidence
score.
A confidence score is a qualitative value that expresses your belief in the ability of your organization to achieve the
objective. Consider the progress of your key results and outside influences. Learn more.

12. Enter values for any relevant custom field that are defined for your workspace in the Custom Fields section.

13. Enter the Start Date and Target Date for the objective in the Schedule section.

14. Add the key results for the objective in the Key Results section. Learn more.

15. Select Save.

Watch a short YouTube tutorial that shows you how to create an Objective.

 559



 Rally®

Add Key Results to an Objective
After you have refined your objective and collaborated across your organization to understand the goal, you can associate
key results.

As a best practice, you should add no more than four key results for each objective. Your key results help your
organization maintain focus on the objective. Associating too many key results with your objective may indicate that your
objective is not focused enough.

Ensure that your key results are metrics-based. You should have a measurable outcome in mind, not just  the activities
or work that supports an objective. For example, if your objective is to lower friction for new shopping customers, you can
add a key result that measures completed account registrations.

In this example, the work (activities) that supports this goal might be a feature that improved the user design for the
account registration process.

NOTE
You must have the OKR Admin role assigned to you before you can create or edit key results.

1. Select Portfolio, Objectives.

2. Select the type of objectives that you want to modify from the Objective drop-down list.

3. Select the FormattedID of the objective that you want to modify.
An overview of the selected objective opens.

4. Select Edit.
The objective editor opens.

5. In the Key Results section of the editor, select + Add Key Result.

6. Summarize your key result in the Name field and select Create.

7. In the Target Values section, enter the Starting and Final Target values for the metric that you are tracking for your
key result.
The Starting and Final Target values cannot be the same.

8. Select Save.

Enter a Confidence Score
You use a confidence score to track your objective and communicate the progress of the objective.

Your confidence score is both qualitative and subjective. Confidence scores can be impacted by different factors, such as
market conditions, staffing, supply chain issues. Much of the data that impacts your confidence score might not reside in
Rally.

After you enter an initial score, you should revisit your confidence score regularly and frequently. You want to ensure that
the score captures any changes in how you feel about accomplishing the goal.

Score your objective using a value from 0 through1. For example, a value of 0.4 displays as a 40 percent confidence rate.

0.7-1.0 You are confident that you can achieve your goal.
0.4-0.6 You believe you can achieve your goal, but there are risks.
0.0-0.3 You do not think you can achieve your goal and must consider a new approach.

 560



 Rally®

You must have the OKR Admin role that is assigned to you before you can modify a confidence score.

1. Select Portfolio, Objectives.

2. Select the type of objectives that you want to modify from the Objective drop-down list.

3. Select the FormattedID of the objective you want to modify.
An overview of the selected objective opens.

4. Select Edit.
The objective editor opens.

5. In the Status section, enter a value in the Confidence Score field.

6. Select Save.

Viewing OKRs
All users can view all objectives and key results (OKRs) in Rally from the Objectives page.

When configuring OKRs for Rally, an OKR administrator must define the objective hierarchy levels for your organization.
For example, you could have Strategic, Product, or Functional levels. Each OKR is assigned to one of these objective
hierarchy levels. You can select the level of OKRs you want to view from the Objective drop-down list at the top of the
Objectives page.

Objectives are displayed in a list view that you can customize by showing fields as columns and using filters. You cannot
scope the Objectives page to a team or teams that the OKRs are associated with. You must use filters to limit the
objectives shown on this page. For example, you can filter on the project that the objective is associated with or by the
confidence score.

You must have the OKR Admin role assigned to you to create and edit the values of an existing OKR. Users without
this role can associate work with an OKR. However, they must have edit access to the project that is associated with
the portfolio item that they want to associate with the objective. The Objectives page uses Discussions to encourage
communication and transparency around the goal. Any user can use the Discussions tab on an objective.

Watch a short YouTube tutorial on how to view and manage OKRs in Key definition for "product-name" not found in the
DITA map. .

1. Select Portfolio, Objectives.

2. Select the type of objectives that you want to view from the Objective drop-down list.

• The Key Result Average Progress column is calculated from the Current and Target values for each key result
that is defined for the objective.

• The Associated Work column shows the number of work items that are associated with the objective. Select the
number in this column to view a summary of the work items.

 561



 Rally®

3. Select the check box for an objective to open the Work Item Toolbar. The Work Item Toolbar lets you perform the
following tasks:

• Edit one or multiple objectives at the same time.
• Delete one or more objectives.
• Add an associated work item to an objective.
• Rank an objective

4. Select the FormattedID of an objective to view an overview of the objective.

• The top of the page shows the objective name and description, the average progress of your key results, start and
target dates, and the current confidence score.

• The bottom of the page shows the progress of your key results. You can select a Chart or Table view of this data.
• This page includes the following tabs:

– The Overview tab displays a snapshot of the objective, including a graphical progress of the key results and the
confidence score. 

– The Associated Work tab lets you associate portfolio items with the objective.
– The Sub Objectives tab lets you add a sub-objective and align it with the current objective.
– The Discussions tab lets you post conversational comments regarding the specific objective.
– The Revisions tab lets you view the revision history for the objective.

5. To edit the key result data, select Update.

6. To edit the objective details, select Edit .
For more information about the editor, see Create an Objective.

NOTE
Remember that you cannot edit the field values of an objective unless you have the OKR Admin role. When
you do not have the OKR admin role, you can associate work or add a discussion to an objective.

Watch a short YouTube tutorial on viewing and managing OKRs.

Associate Work with an OKR
Associating work with an OKR lets your organization view an OKR in the context of the work that is being completed by
your teams.

When configuring OKRs for Rally, an OKR administrator defined the objective hierarchy levels for your organization. Each
level in this hierarchy can be mapped to a portfolio item type. For example, the lowest level in the hierarchy (Functional)
might be mapped to the lowest level portfolio item type (Feature). The names of these levels, portfolio item types, and the
associated mappings are unique to your organization.

Work that is associated with an OKR must match the portfolio item type that is mapped to the OKR. Using the previous
example, you can only map Feature portfolio items to a Functional OKR.

You must have permissions for the project in which the portfolio item resides to be able to associate it with an objective.

You can associate an existing portfolio item or create a portfolio item to associate with the objective.

1. Select Portfolio, Objectives.

2. Select the type of objectives that you want to modify from the Objective drop-down list.

3. Select the FormattedID of the objective you want to modify.
An overview of the selected objective opens.

 562



 Rally®

4. Select the Associated Work tab.

5. To associate an existing portfolio item to the OKR:
a) Select Link Existing.

The Choose Associated Work dialog box opens. The available choices depend on the portfolio items you have
permission to view and the portfolio item type that is associated with the objective.

b) Select the project for the portfolio item that you want to associate from the Project drop-down list.
You can also search for a specific item by entering a keyword or ID in the Search field.

c) Select the check box for each portfolio item that you want to associate.
d) Select Done.

The selected items display in the list of associated work.

Watch a short YouTube tutorial on how to associate work with an objective.

Add a Sub-Objective to an Objective
Use the Sub Objectives tab to add a sub-objective and align it with the current objective. You can use the Sub
Objectives tab to view how teams are supporting a selected objective. Sub-Objectives can only be viewed within the
hierarchy of the objective and not with the key results or associated work. The Sub Objectives tab does not display for
the lowest level of objectives in your system. 

You must be an OKR Admin to add a sub-objective to an objective. For more information on the OKR Admin role, see
Create OKR Administrators.

For more information on creating objectives, see Create an Objective.

1. Select Portfolio, Objectives.

2. Select the type of objectives that you want to modify from the Objective drop-down list.

3. Select the FormattedID of the objective.
An overview of the selected objective opens.

4. Select the Sub Objectives tab.

5. Select Add New from the tool bar.
a) Enter a name for the sub-objective in the Name field.
b) Enter a Start Date and Target Date.
c) Select Create with details to view the objective in the detail editor and complete the necessary fields.

6. To associate an existing item to the Objective:
a) Select Link Existing.

The Choose Objectives dialog box opens. 
b) You can select the project for the objective that you want to associate from the Project drop-down list.

You can also search for a specific item by entering a keyword or ID in the Search field.
c) Select Done.

The selected items display in the list of sub-objectives.

Use the Add or Remove Filters option to limit the sub-objectives that are displayed. For example, you can filter on the
project that the objective is associated with or by the confidence score.

 563



 Rally®

Manage Objectives from the Toolbar
The work item toolbar on the Objectives page provides quick access to multiple functions to help you manage your
objectives.

From the toolbar, you can edit, delete, and rank your objectives. You can also add a child item.

Access the detail editor for an objective item by selecting the FormattedID to view or edit the item.

Edit Objectives from the Toolbar

You can edit one or multiple objectives at once from the toolbar on the Objectives page. You can update parent-child
relationships, as well as associate related objectives.

NOTE

• Your ability to create and edit objectives is dependent upon the user permissions you have been assigned for
the workspace.

• You cannot rank or re-rank objectives if you do not have edit permissions for all of the projects you have
scoped for a page.

You can select up to four values to update across the selected objectives. You can only edit multiple fields that apply to all
objectives selected in the list. Hidden fields can be edited. When you are editing multiple objectives at once, some fields
cannot be edited.

WARNING
If two users edit the same objective, and one user is in bulk edit mode, the bulk edit the user's work overwrites
the other user's changes. For example, if User1 bulk edits objectives A, B and C, and User2 edits the description
of objective B, when User1 finishes editing, User2's description is overwritten with the original description of
objective B. However, the changes are still accessible in User2's history.

1. Select Portfolio, Objectives.
The Objectives page opens.

2. Select the type of objectives that you want to modify from the Objective drop-down list.

3. Select the check box of the objective(s).
4. Select Edit

from the toolbar to view the Bulk Edit dialog box.
5. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  
6. Select Apply to save your changes.

Delete an Objective from the Toolbar

You can delete one or more objectives from the toolbar on the Objectives page.

Objectives are sent to the Recycle Bin when they are deleted. Learn more about the Recycle Bin.

1. Select Portfolio, Objectives.
The Objectives page opens.

2. Select the type of objectives that you want to modify from the Objective drop-down list.
3. Select the check box of the objective(s).

 564



 Rally®

4. Select Delete

from the toolbar.

Add a Child Item from the Toolbar

Use the Add Child toolbar action to add a new child objective to an existing objective. If you want to link to an existing
objective as a child, use the Link Existing toolbar action.

1. Select Portfolio, Objectives.
The Objectives page opens.

2. Select the type of objectives that you want to modify from the Objective drop-down list.
3. Select the check box of a objective. The objective that you select determines the parent of the objective you want to

add as a child.
4. Select Add Child

from the toolbar.
The next lower level in your objective hierarchy is selected by default.

5. Complete the suggested fields presented in the toolbar. Required fields are marked with an asterisk (*).
6. Select one of the following:

– Create with Details if you want to view the new objective in the detail editor.
– Create + New to add this objective and continue adding objectives at this position in the list.
– Create to add a single objective at this list position.

Rank an Objective from the Toolbar

You can select a objective and can use the ranking action in the toolbar to move the objective to the bottom, top, or a
specific location in the list. Moving to a specific position can help you quickly ensure that a objective is in the correct
priority in your backlog without needing to drag-and-drop through all objectives. As with other ranking actions, you can
only do this if the list is set to rank ascending.

NOTE
When you choose Rank Lowest, the objective moves to the end of the list, not to the end of the page. For
example, suppose you have 30 objectives in your backlog and the list is set to display 25 at a time. Setting a
objective Rank Lowest will cause it to display on the second page.

Learn more about prioritizing work.

1. Select Portfolio, Objectives.
The Objectives page opens.

2. Select the type of objectives that you want to modify from the Objective drop-down list.
3. Ensure that the list of objectives is set to rank ascending order.
4. Select the check box of the objective(s).
5. Select from the following on the toolbar:

– Rank Highest or Rank Lowest to move the objective to the beginning or the end of the list.
– Move to Position to find and select a specific location within the list. The bold blue line on the Move to Position

window indicates the new position in the list.

 565



 Rally®

Add a Discussion to an Objective
Any user can create or add to a discussion for any OKR. The ability to post on the Discussions tab of the Objectives
page is not restricted by the objective hierarchy level or the associated project (team). Providing access to all users
encourages transparency and sharing within your organization.

Discussions in Rally are a collection of conversational comments regarding a specific work item. A discussion provides
a collaborative forum for all team members to record input, such as issues, customer feedback, observations during
development, and other information.

Discussions are:

• Not threaded conversations, but rather a flat listing of time-ordered comments
• Available for rich text formatting
• Able to include an image or table
• Limited to 4K in size (including formatting)
• Indexed for keyword searches
• Eligible for email notifications
• Not recoverable from the Recycle Bin once deleted

You can add a discussion comment through a detail page or directly from a work item.

NOTE
Copying a work item does not copy related discussion comments.

Add a Discussion Comment through the Detail Editor

You can add a discussion comment through the Detail Editor.The Discussions tab displays:

• The username that submitted a comment.
• The date and time a comment was added.
• All comments sorted in descending order, with the most recent comment first.

1. From the Detail Editor, select the Discussions tab.
2. Enter your comment in the Discussion field.
3. Optionally, add additional information or formatting.

– Select anywhere inside the field to enable editing or scrolling.
– Drag-and-drop a table into the field for instant upload.
– Add or update an image:

• Drag-and-drop an image for instant upload.
• Edit image properties on an existing image by double-clicking the image.
• Select Image to add an image and specify image properties.

– Expand the space by:
• Dragging the bottom right corner to expand.
• Selecting Maximize.
• Selecting Show All.

– Add a code snippet, and select from multiple code formats.
– Format your content, including multiple fonts and font sizes.
– Copy and paste content from Microsoft Word, maintaining the original formatting.
– Use the

to create @ mentions that sends instant email notification to the user you mentioned.
4. Select Post.

 566



 Rally®

View or Add a Discussion Comment from a List View

You may quickly view how many comments exist on a specific work item and add or remove comments without leaving
the page or app.

If the Discussions field is not visible on a list view, you can add it. Learn more.

Import Objectives for OKRs
Use the following procedure to import existing OKRs into Rally.

NOTE
You must have the OKR Admin role assigned to you to import objectives.

1. Select Portfolio, Objectives.

2. Select the Import icon.

 567



 Rally®

3. Select Import Objective.

4. Select Choose File and navigate to the location of the CSV file that you want to import. If you do not have a CSV file,
you can use the import template option to download a template and populate it with your objectives and key results.
For  more information on using the import template, see Import OKRs Using the Template.

5. Retain the default on the Character Encoding field. 

6. Select Validate.
The imported objectives display on the Objectives page.

7. Use the Download CSV of this view option to export a CSV file with your current objectives and key results.

8. Use the Download to CSV with more columns to select extra columns and display in your CSV file. 

Import OKRs Using the Template

You can import OKRs as a CSV (comma-separated value) file using the import template provided in Portfolio,
Objectives.

When importing objectives, you can customize the provided CSV template to include the fields that you want to import for
each objective. Not all fields for objectives are available for import.

For more information on importing OKRs, see Import Objectives for OKRs.

Use the following guidelines for importing objectives using the template:

• The Owner field and any custom user fields uses the Rally username for the user.
• The  Confidence Score field is named Score.
• Imported dates must be in the format of the Date Format in the User profile. If the user profile does not have an explicit

date format that is defined, the workspace date format is used.
• The Objective Type is the Type path of the objective that you are importing. For example, Objective/Team Objective.
• The Parent field uses the FormattedID for the objective.  
• You can import custom fields for Single Dropdown List, Text, String, Decimal, Integer, Boolean, Custom Date,

Custom User, and Custom Multi Dropdown List.
• For Multi-Dropdown List values, separate each value with a semi-colon. 
• You can import the key results for an existing objective by referencing the line of the objective. 
• You can import the key results separately for an existing objective by using the FormattedID of the objective.
• If you are importing objectives and key results in the same file, all rows must have the same number of columns, even

if the columns do not apply to the object type.
• The following fields cannot be imported: Tags, State, Projects, Discussions, Sub-Objectives, Associated Work,

Weblink Custom Fields, and Read-Only Fields. 

 568



 Rally®

Example CSV Formats for Importing OKRs

The following examples demonstrate how you can use a CSV file for importing OKRs.

Import an Objective with a Key Result

The following CSV example imports an Objective that is called Sample Objective and associates it with a key result
called Sample Key Result. 

Note the following considerations for CSV file formatting:

• You must indicate the FormattedID of the objective in order to import the associated key result.
• You must use quotes when importing values that contain spaces.
• You cannot import key results that are not associated with an objective.
• The Objective field is also required for importing test case steps.
• Alternatively, you can use the Web Services API reference of the objective in the Objective column when associating a

key result with an objective. For more information on exporting and importing data, see Importing and Exporting Data. 
• Add a null value to any properties that are not applicable to a particular object type. The following example shows the

null values that are included for the Objective line where the fields apply only to the Key Result. You can do the same
in the Key Result line where fields do not apply to the associated Key Result.

"Object Type",Objective,Score,Owner,"Start Date",Description,"Target Date","Starting Value",Name,"Target

 Value"

Objective/TeamObjective,,0.8,"Sample username: name@example.com","MM/dd/yyyy","Sample Description","MM/dd/

yyyy",,"Sample Name",

"Key Result",TO123,,,,,,14.66,"Sample Name",19.09

Associate a Key Result Using the Line[ ] Syntax

The following example shows how you can use the Line[ ] syntax to associate an imported key result with an objective.
You can use this syntax instead of the FormattedID of the new objective on the line for a key result.
"Object Type",Objective,Score,Owner,"Start Date",Description,"Target Date","Starting Value",Name,"Target

 Value"

Objective/TeamObjective,,0.7,"Sample username: name@example.com","MM/dd/yyyy","Sample Description","MM/dd/

yyyy",,"Sample Name",

"Key Result",line[2],,,,,,10.50,"Sample Name",15.75

Creating an OKR Hierarchy in Rally
This topic describes how you can create a simple and effective OKR hierarchy for your organization and provides some
examples of OKR hierarchies.

  Rally recommends the following process for setting up an OKR hierarchy:

• Understand your team, work, operational, and implementation considerations 
• Design your OKR hierarchy
• Validate the OKR hierarchy with your stakeholders
• Construct the hierarchy
• Train and provision users
• Conduct a brief proof of concept to establish the hierarchy

 569



 Rally®

Understand Your Team, Work, Operational, and Implementation Considerations 

As a starting point, assess the various requirements that guide the design of your OKR hierarchy. The requirements are
grouped into four areas:

• Team: First, determine which teams are creating and tracking OKRs and consider your organization's hierarchy and
the teams in Rally. Next, determine which teams set and track OKRs and the timeboxes that are required for tracking
the objectives. Time zones can be yearly for strategic OKRs, quarterly for standard OKRs, or a mix of both depending
on the nature of the OKR.

• Work: Determine your organization's Portfolio item hierarchy and the time horizon of each level of work. Assess
which Rally work item levels require association to Rally Objective levels. Also, understand if teams have objectives
that are associated with how they build rather than what they build as part of their work.  

• Operational: Consider if the entities creating OKRs are also associating work with OKRs and if you plan to use
Objective States in Rally to manage your objectives. 

• Implementation: Consider if you are migrating an existing OKR implementation in Rally. Assess the start times for
the implementation and the possible time frames, and how the elements in the OKR hierarchy align with each other.

Design Your OKR Hierarchy

You can use the guidelines in the following figure as an example for designing your hierarchy. Rally recommends that you
keep your hierarchy simple as you begin the process of designing your hierarchy.

You can have one to five levels in the Objective hierarchy. Focus on maintaining consistency around the timeboxes and
the organizational hierarchy levels of each team that use an Objective level. The example shows a zero-to-one mapping
between Portfolio Item types and Objective levels, and each Portfolio Item type can only be associated with a single
Objective level. Think carefully about the Portfolio Item types that are commonly used by the teams at each level. You can
build your objectives from the lowest level. Ensure that your foundational, base level is correct and work up from there. It
is much easier for teams working at higher levels in the hierarchy to shift up (or down) a level than for teams at the lowest
levels to change the way they are using the hierarchy.

 570



 Rally®

NOTE
You may want to delay assigning Rally Portfolio Item Types to Objective Levels until you have validated the
Objective hierarchy. It is difficult to change the hierarchy after you start associating work items with objectives.

Validate the OKR Hierarchy With Your Stakeholders

You must validate the OKR hierarchy with the stakeholders. Schedule meetings with the stakeholders using
the OKR hierarchy that you have designed.

Ensure that everyone agrees on the following key points:

• All the teams using Rally for OKRs have been identified.
• The hierarchy provides a level for every team to create their OKRs.
• The timeboxes intended for each level are correct.
• The work item types assigned to each level of the hierarchy are appropriate for the teams using those levels.
• If you plan to use the Objective States to support the organization’s operational model, make sure the State values are

understood and agreed on by all the stakeholders.
• Users who are creating and updating OKRs are known. They will need to be assigned the OKR Admin role.

NOTE
Do not get bogged down in the details of using Rally for OKRs at this point. The key is to make sure that the
hierarchy you have constructed meets the needs of the stakeholders.

Construct the Hierarchy

You are now ready to construct the hierarchy. Note the following additional details about OKR hierarchies.

• You must be a workspace administrator to build the hierarchy.
• You can have one hierarchy for each workspace. The levels start at the bottom and build up.
• The Rally Administrator creating the hierarchy must ensure that they have the OKR Admin  role toggled on for

themselves so that they can test the hierarchy. The OKR Admin role is not on by default, even for Rally workspace
administrators. Plan on adding the associations between Objectives and Rally work items later in the process,
preferably after users have had an opportunity to make sure that the hierarchy meets their needs.

Train and Provision Users

After the hierarchy is set up, ensure that all users using or viewing Objectives receive training. Users must understand
what OKRs are and how the model is supposed to work before they receive specific Rally OKR training.  Also, some
users creating and updating OKRs might not be familiar with Rally. Ensure that these users have access to basic Rally
training. All users who will be creating and updating OKRs should have the OKR Admin flag set by their Workspace
Administrator.

Conduct a Brief Proof of Concept to Establish the Hierarchy

It is difficult to change the OKR hierarchy for a workspace after the objectives have been created and work items have
been associated to those objectives. Rally recommends that you conduct a brief Proof of Concept with the key groups to
determine if the hierarchy you have defined will meet user needs. You may be able to conduct the Proof of Concept in a
single day in a workshop format. Focus on creating a minimal number of Objectives in the new hierarchy during the Proof
of Concept so that they can easily be deleted, and the hierarchy changed, if necessary. It is important to work through the
full operational model that you envision to ensure that the hierarchy meets user needs.

Here are some typical steps in ensuring the success of an OKR operational model:

 571



 Rally®

• Teams create OKRs for the next timebox and period.
• The OKR check-ins occur typically weekly or biweekly for quarterly OKRs and monthly for Strategic OKRs.
• Any updates to Key Result can be done as part of the OKR check-ins.
• Conduct an end of timebox and period review.
• Conduct an end of period retrospective with the timebox/period review.
• Update and prepare for creating OKRs for the next timebox and period.

NOTE
For more information on examples of OKR hierarchies, see Examples of OKR Hierarchies.

Examples of OKR Hierarchies
This topic provides some examples of OKR hierarchies.

NOTE
The OKR hierarchy models that are described in this topic are intended to be used as examples and not
as recommendations. You must design OKR hierarchies based on what makes the most sense for your
organization.

For more information on creating OKR hierarchies, see Creating an OKR Hierarchy in Rally.

Standard Model

The Standard Model is a basic model and can be used as a starting point for most organizations.

The Standard Model has a single Strategic OKR level with a yearly timebox (period) and two lower levels for
Standard OKRs with quarterly (or shorter) timeboxes. If the organization does not use Strategic OKRs, this level may be
changed to a Standard cadence.

This model accommodates most scenarios and can be expanded to accommodate up to two more levels. This model
maps well to the Scaled Agile Framework (SAFe) recommendations for OKRs. Note that SAFe uses Strategic Theme as
the term for Strategic Objectives.

The basic features of the Standard Model are as follows:

• Three OKR hierarchy levels are supported: Strategic, Group, and Team.
• The Strategic OKRs have a yearly cadence and can be changed, if necessary.
• The Rally Portfolio items are attached at each level. The exact items depend on the specific types of Portfolio Item

used by the organization. 
• You can add extra levels.Try to keep the hierarchy as simple as possible.

The following graphic shows an example.

 572



 Rally®

Two-Level Model

The Two-Level Model is intended for smaller organizations, or organizations with a flat organizational structure, and wants
to implement both Strategic and Standard OKRs. As in the Standard Model, an organization not using Strategic OKRs can
change them to a Standard Cadence.

The basic features of the Two-Level Model are as follows:

• There are two OKR hierarchy levels: One level of Strategic OKRs. This can be modified to Standard if Strategic OKRs
are not used. This model has one level of Standard OKRs for all teams.

• The Rally Portfolio items are attached at both levels. The exact items depend on the organization’s specific Portfolio
item types.

The following graphic shows an example.

 573



 Rally®

ValueOps Model

For a ValueOps integration using Clarity and Rally, a variation on the Standard Model can be used with a single Strategic
level and two more Standard levels.

The Strategic level is managed in Clarity and is synchronized between Clarity and Rally. The lower two Standard levels
are managed in Rally and optionally may be synchronized back to Clarity.

This model maps well to the model the Scaled Agile Framework (SAFe) recommends for OKRs. Note that SAFe uses
Strategic Theme as the term for Strategic Objectives.

The basic features of the ValueOps Model are as follows:

• One level of Strategic (Business level) OKRs in Clarity and implemented as a Clarity Custom Investment Type
(CIT). These objectives should have a longer cadence than Standard OKRs. A cadence of one year is common.
Multiple groups or teams may use this single level for their Strategic OKRs because a Department and Organizational
Breakdown Structure (OBS) can be specified for each objective.

• Integrate the Strategic OKR level with the highest level in the Rally objective hierarchy. This is a recommendation and
not a requirement.

• The lower-level OKRs (for example, engineering and development level OKRs) are maintained and managed in Rally
and can use Rally’s ability to link work items with objectives.

• Optionally, you can pull in other levels of the Rally hierarchy into Clarity and view the lower objective levels from Rally
in Clarity.

The following graphic shows an example.

Check Status
Rally provides many ways to check the status of future, past, or current work. You can also check the status of team
members and projects.

Check status includes:

 574



 Rally®

• Collaborate with Team Members
• Report Blocked Work
• View Build Status
• Set Up Email and RSS Notifications
• View Revision History
• View Team Status
• View Percent Done for Portfolio Items

Collaborate With Team Members
Rally provides several ways for your team to communicate and collaborate on shared work. Depending on your working
agreements, your team may choose to collaborate using fields inside of work items, apps, shared page views, shared
pages and apps, or a combination of these options.

Here are some recommendations on how to utilize each feature:

• @mentions
• Discussions
• Attachments
• Dashboards
• Shared Views, Pages, and Apps

@mentions
You can quickly notify team members about work with @mentions.

The @ button is available on user stories, portfolio items, defects, and tasks.

1. Select the @ button in the rich text editor of the Description, Notes, and Discussion fields.

Only team members of the artifact’s project display in the dialog box. Disabled users do not display. Users must have
their email notifications turned on in their settings to receive @mention notifications.

2. Enter the text to send in an instant email notification to the user you mentioned.

 

Discussions
Discussions in Rally are a collection of conversational comments regarding a specific work item.

 575



 Rally®

A discussion provides a collaborative forum for all team members to record input, such as issues, customer feedback,
observations during development, and other information.

Comments are:

• Not threaded conversations, but rather a flat listing of time-ordered comments
• Available for rich text formatting
• Able to include an image or table
• Limited to 4K in size (including formatting)
• Indexed for keyword searches
• Eligible for email notifications
• Not recoverable from the Recycle Bin once deleted

You can add a discussion comment through a detail page or directly from a work item.

NOTE
Copying a work item does not copy related discussion comments.

Add a Discussion Comment Through the Detail Editor

You can access the Discussions page of a work item through the detail editor.

The Discussions page displays:

• The username that submitted a comment
• The date and time a comment was added
• All comments sorted in descending order, with the most recent comment first

1. From a detail editor, select Discussions.
2. Enter your comment in the New Post area.
3. Optionally, add additional information or formatting.

– Select anywhere inside the field to enable editing or scrolling.
– Drag-and-drop a table into the field for instant upload.
– Add or update an image:

• Drag-and-drop an image for instant upload.
• Edit image properties on an existing image by double-clicking the image.
• Select Image

to add an image and specify image properties.
– Expand the space by:

• Dragging the bottom right corner to expand.
• Selecting Maximize.
• Selecting Show All.

– Add a code snippet, and select from multiple code formats.
– Format your content, including multiple fonts and font sizes.
– Copy and paste content from Microsoft Word, maintaining the original formatting.
– Use the

to create @ mentions.
4. Select Post.

 576



 Rally®

– To edit a discussion post, select Edit

,
make the desired changes to the post, and select Post.

– To delete a discussion post, select Delete

and select Confirm in the confirmation dialog.
NOTE
Only the original author and administrators can edit or delete a discussion post.

View or Add a Discussion Comment from a List View

You may quickly view how many comments exist on a specific work item and add or remove comments without leaving
the page or app.

If the Discussions field is not visible on a list view, you can add it. Learn more.

View or Add a Discussion Comment from a Board View

Discussion icons found on cards within board-style apps change color depending on the time the last comment was
posted. A discussion with a post less than four hours old displays as dark blue, while older posts display as a lighter blue
or grey, so you can see which work items have new information.

 577



 Rally®

If the Discussions icon is not visible on a board view, you can add it. Learn more.

Recent Activity App

The Recent Activity app allows you to see all recent comments in your current workspace on the Dashboard page, or
when installed on a custom page. The app will show any new comments sorted by time.

 578



 Rally®

Learn more about adding a dashboard app.

Attachments

You can attach separate documents and files to Rally work items to further elaborate or explain them.

• Attach mock-ups to describe stories
• Attach error logs and screen shots to clarify defects
• Attach configuration or setup information to prepare test cases

NOTE

• Your ability to create or delete attachments is dependent on the permissions you have been assigned for the
project.

• Attachments are limited to 50 MB in size.

NOTE
When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have 200 or
more attachments, only the newest 200 display on the page. Older attachments still exist in Rally; however, you
must delete newer ones to view those hidden from view on the page.

Add Work Item Attachments

You can add attachments to a work item in the detail editor.

1. Create or edit your work item, to have a work item detail editor window open.
2. Select

in the Attachments field to browse for the file to attach, or drag a file and drop it on the Attachments field.
3. Optionally, enter a description for the attachment by selecting the Description field. The Description field for

attachments is limited to 256 bytes of data (256 ASCII characters).
4. Select Save to save the attachment and any other changes in the editor window.

 579



 Rally®

Remove Work Item Attachments

You can remove attachments.

1. Edit your work item.
2. From the work item editor window, select the Gear

to the left of the attachment.
3. Select Delete.
4. Select Save.

Link to Attachments

Share a direct link to an attachment with other team members.

1. Right-click the attachment file name on the work item detail page.
2. Select Copy Link Address to save the attachment URL.
3. Paste the attachment URL into another work item field, email message, or other communication.

Dashboards
Each Rally user has a customizable page under the Home tab called the Dashboard.

This page lets you configure multiple pre-built and custom apps to show a desired set of data. You can use your
dashboard to collaborate with one or more teams.

Set Up Your Dashboard

Consult these topics for detailed information on how to configure and use apps in your dashboard:

• Add, Set Up, and Move Apps
• Custom Apps
• App Catalog

Collaborative Apps

Here are some suggested apps from the catalog that can help your team collaborate on vital information.

Blocked Work The Blocked Work app shows any work that you or another team member have marked as blocked, due to
factors outside of the team's control.

Custom List App The Custom List app allows you to use sql-like queries to show a set of Rally work items.
Custom HTML App The Custom HTML app allows you to use a custom web script or app. This is useful for linking to other web

resources your team may need.
Dependency Status

Dashboard #2
If you use predecessors and successors in Rally to manage dependencies, the Dependency Status
Dashboard #2 app can help identify those relationships across multiple projects.

Iteration Burndown Perhaps the most important graph for determining a team's progress during and after an iteration, the
Iteration Burndown chart is available as an app. If you are involved with multiple teams, you can set up
more than one app, each pointing to a different Rally project.

Iteration Dashboard Want to view your iteration progress data in chart form? Use the Iteration Dashboard app. It will show
scheduled work, test cases, and defects in a pie chart format, and also include additional burndown charts.
This app also allows you to view work from multiple projects simultaneously.

Iteration Summary The Iteration Summary app provides status information for a team's iteration, using simple measurements.
The app shows a quick view of the percent of completed work, open defects, and testing status.
Recommendations are also provided in the app text if potential issues are detected.

 580



 Rally®

My Action Items Apps There are three apps that can help you keep track of your commitments to a team. My Defects, My Tasks,
and My Test Cases are all set up to show applicable work items that you own. You can create multiple
instances of these apps to report on more than one team.

Ready to Accept The Ready to Accept app displays user stories that are in a completed state with no open defects. This is
useful for seeing recently completed work that still needs acceptance by a team lead, product owner, or
scrum master.

Shared Views, Pages, and Apps
Rally provides a wide range of customization to help you manage and track your work as efficiently as possible. This
customization includes custom views of many pages as well as completely custom pages and apps. You can share each
of these custom elements with other teams and team members.

You can use a shared view to display specific data on a Rally  page. Learn more about sharing saved views.

Rally lets you create your own custom pages under each of the main menus. These can be personal pages for your use,
or you can share them with other users in the workspace. You can use a custom page to link to a Rally catalog app, your
own custom app, another personal dashboard, or an external URL. Learn more about how to create and use a custom
page.

Report Blocked Work
The Blocked field in Rally provides an easy way for you to identify problems with current team work. Any time an issue
outside your team's control prevents progress, you should mark the work item as blocked to notify team members and
other stakeholders.

Blocked status is most effective when the team is holding daily stand-up meetings. This is where team members can
discuss why work was blocked.

Blocked status may be applied to many Rally work items, including:

• User stories
• Portfolio items
• Defects
• Defect suites
• Tasks
• Test sets

Blocked status can also rollup to work items that are related to the work item. If a block rolls up to a related or parent item,
you can manually edit the item to remove the block.

Item blocked Related items also blocked

Task • User story
• Defect
• Test set

Child user story • Parent user stories

Portfolio Items • No related work items are blocked.

Mark a Work Item or Portfolio Item as Blocked
You can block a work item or portfolio item from most pages. You first mark the item as blocked and then provide a
reason.

 581



 Rally®

You unblock a work item by selecting the red Blocked

icon. The icon turns gray
( )
and the blocked reason is removed.

Mark a Work Item in a List as Blocked

You can block a work item from a list view, such as the Backlog page or the Portfolio Items page. If the Blocked column is
not shown in the list display, add it. Learn more.

1. Select the gray Blocked icon in the Blocked column. The

blocked icon turns red

( ).
2. Optionally, enter a reason for the block in the text field.
3. Select Save.

Mark Cards as Blocked

If you cannot work on a card, or a task associated with a card, you can mark it as
blocked to notify your team of a problem. Blocked cards display on the board as

with an optional comment. When a card is ready to move to the next stage of development, you can remove the block.

1. On the board, hover over the correct card.
2. Select Blocked

on the top right of the card.
The icon turns red

( )
and a text field displays.

3. Optionally, enter a reason for the block in the text field.
4. Press Enter to save your description or exit the text field.

Block a Work Item in a Board App

You can block a work item from a board app such as the Kanban Board.

1. To add a blocked status to a work item from a board app, such as Kanban Board, hover over the work item card and
select Blocked

.
  The blocked icon turns red

( ).

 582



 Rally®

2. Optionally, enter a reason for the block in the text field.
3. Press Enter to save your description or exit the text field.

View Blocked Work Items

When a work item is blocked, the Schedule State field is red on summary pages. You may use custom views on summary
pages to show only blocked work items.

The Revision History page displays an entry when a block is placed. This will also reveal the date, time, and user that set
the block.

You can use the Blocked Work app to get a quick view of any blocked work in your workspace.

 583



 Rally®

View Build Status
The Rally connectors to your build and SCM (Source Code Management) systems enable you to connect your work items
in Rally to your build and SCM work items.

This connection allows you to identify changesets associated with stories and defects, and also provides analytics data
that you can use to gain insights about your build health, file churn, and code quality.

The following VCS connectors post changeset items to Rally: Git, Subversion, Mercurial, Microsoft TFS (TFVC), GitHub
and GitHub Enterprise, Bitbucket, and Microsoft TFS/VSTS (Git).

This section includes the following topics:

• View Changesets Associated with a Work Item
• Display Build Reports on Your Dashboard or Custom Page
• View Build Status Analytics

View Changesets Associated with a Work Item
The work item detail editor Connections collection shows you which changesets are associated with a particular user story
or defect.

NOTE
If you do not see the Changesets tab in the Connections collection of a work item, ask your administrator to
enable the feature for your workspace.

 584



 Rally®

1. Open your work item in the detail editor.

2. Select Connections

to open the Connections page.

The number of connections is displayed next to the

.

3. Select the Changesets tab.

4. Select a link to view the information in your SCM system.

Display Build Reports on Your Dashboard or Custom Page

You can use a Custom List app to display a report that shows details related to your builds, changesets, and repositories.

You can add multiple apps to present the information that you are interested in tracking.

 585



 Rally®

1. For each report, add a Custom List app to your dashboard or a custom page.

2. Enter a title for the report.

3. Choose between Global Project and Specific Project scoping options. The Global Project setting follows the scoping
you set using your Workspace and Project picker. You may set specific project scoping for the app by selecting the
Specific Project setting and indicating the desired project.

4. Select the type of report. The types that relate to Build and SCM traceability are:

 586



 Rally®

• Build
• Build Definition
• Change
• Changeset
• SCM Repository

5. Select Save.

Build Status Analytics
The Build Status Analytics charts help you identify possible issues around build and source code management. You can
find these charts in the Reports menu.

NOTE
If you do not see these reports, ask your administrator to enable the feature for your workspace.

 587



 Rally®

Build Health

Learn more.
Build Health by Iteration

Learn more.

 588



 Rally®

Top Files by Changes

Learn more.
Top Files by Defects

Learn more.

Your scope settings that default to the workspace and project picker settings help Rally filter the data you see in pages,
charts, and reports. Analytics for build and SCM data sometimes require a departure from your project scoping so that
charts provide you with meaningful information:

• Builds are identified by looking both up and down your project hierarchy regardless of your project scope setting. In the
Top Files by Changes chart, files are scoped to all builds associated with the workspace.

• Builds that do not fall within an iteration are grouped with the last iteration that occurs before the build date.
• Build status reports the condition of builds associated only with the project in scope. It does not honor the up-down

scope settings for the project hierarchy.

 589



 Rally®

View Revision History
Rally systematically captures each field-level change any time you edit or update a work item, and records changes that
may be viewed on the Revision History page.

The change description displays in both the Revision History page and the My Notifications dashboard app to help you
understand and manage changes to Rally work items.

The revision history includes:

• The automatically generated revision number.
• The change description. Both system-generated and user comments display.
• The date and time of the revision.
• The name of the team member who authored the change.

1. Locate the work item of interest (on any page) and select the FormattedID.
2. Select Revision History

.

3. Review the revision history.

Revision Triggers

There are multiple circumstances which prompt a revision to be created for a work item in Rally. In some instances, the
system automatically generates the revision, and in other cases a user action initiates the revision by editing a work item.

The following table displays the triggers that produce a revision:

Work item Revision trigger

All work items • Any direct edit or update of a work item
• Add or remove attachments
• Multi-edit from Actions.

Releases and iterations Add, remove, delete work items

Test cases Add test case result

View Team Status Page
The Team Status page displays all project team members in bold font, with their assigned tasks and individual capacity
by project for the selected iteration. When using a project hierarchy, this page reflects any view scoping settings that you
have indicated in the project picker.

Expand each team member row to view all projects in which the team member is active. Further expand each project row
to view individual team member tasks and resource information. Columns display the cumulative totals per project and are
rolled up for all projects on the team member row. Use this page to track and manage your iteration resources for those
team members whose work spans multiple projects.

 590



 Rally®

A project team member is any user that has been added as a team member to a particular project. Project viewers are not
considered project team members.

In order to change a user's capacity, you must have edit permissions to change the current project artifacts. These users
have subscription administrator, workspace administrator, or project editor credentials for the project and workspace.

Non-team members who own tasks in the iteration are also displayed in regular font, but they cannot edit or update their
tasks until they are added to the project team.

Balance team member work load by using Rally's inline editing capability to change task owner assignments.

NOTE

• The Team Status page displays up to 200 tasks per project team member. If the number of tasks exceeds
200, a hyperlink is displayed at the bottom of the project team member grouping stating " Showing X of Y...".
Select the link to display of all tasks for the project team member.

• Non-team members that own tasks are displayed in regular font while project team members are bolded for
easy identification.

• You may set your own page size.

1. Select Track, Team Status.

2. Select a viewing timebox. From the drop-down list in the upper-left corner, select a specific iteration or choose to view
all tasks per project team member that have not been scheduled into an iteration (unscheduled).

3. Subscription or workspace administrators can manage teams by accessing the Project Users page.

 591



 Rally®

4. Set and track individual project team member work effort capacity for the displayed iteration. Each project team
member can select Add Capacity

to edit their capacity. Enter the capacity units in the text box and select Save or Cancel. Once entered, the individual
capacity can be changed at any time. Capacity units are measured in task units configured for the workspace.

5. Track each project team member's associated cumulative totals. The label icon on each of the following column
headers contains the first letter of your defined unit of measure configured for the workspace under the Units tab.
Hover over this icon to read the full label of your unit measurement.

Capacity The rolled up total of all capacity units entered by all team members. Compare this total to the Estimate
column to predict the ability of the project team to complete the work scheduled for the iteration.

Disabled users will also have their capacity removed from future iterations.

Estimate The automatic calculation, or rollup, of task estimates for all tasks per selected iteration.
To Do The amount of effort remaining to complete all tasks.

Actuals The actual amount of effort the tasks took to complete.

6. Easily assess each project team member's status using the Individual Load indicator. This color-coded box provides
an at-a-glance indication of the percentage of stated individual capacity taken up by tasks assigned to that person. The
percentage is calculated by dividing the task estimate total by the individual capacity. The team member must have an
individual capacity value entered and own tasks in the iteration before the individual capacity indicator appears.

• Green indicates the calculated percentage is 100% or less and the project team member's capacity is within the
recommended range of scheduled capacity.

• Red implies that the calculated percentage is greater than 100% and the project team member is over scheduled
and at risk of not being able to complete all scheduled work.

Managing Defects and Defect Suites
Managing your defects and defect suites is an important part of your development cycle. Tracking and closing defects
help you deliver the highest-quality product to your customers.

You can organize defects into groups of defects called defect suites. Defects and defect suites can be tracked and
scheduled in the same ways that you track other work items such as user stories.

• Defects
• Defect Suites

 592



 Rally®

Defects
A defect, or bug, is an error, flaw, mistake, failure, or fault in software that prevents it from behaving as intended, such as
producing an incorrect result. You can create, manage, and track defects in Rally.

Your ability to create defects is dependent upon the user permissions you have been assigned for the workspace.

Use the My Defects app to arrange your defects into a meaningful display. Only defects for which you are the owner
display in the app. Learn more.

This section includes the following topics:

• Viewing Defects
• Creating Defects
• Editing Defects
• Managing Duplicate Defects
• Delete a Defect
• Defect Fields

Viewing Defects
The defect page displays in a list view that you can customize.

Learn more about customizing a list.

NOTE
When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have 200 or
more attachments, only the newest 200 display on the page. Older attachments still exist in Rally; however, you
must delete newer ones to view those hidden from view on the page.

Group the Defect View

To organize your view into convenient categories, you can group work items into swimlanes. The Total Work Items in
each group displays to the right.

NOTE
If you display the Task Estimate field within your list, task estimates are rolled up by each Group By row.

1. Select Quality, Defects.
2. Select Group By from the toolbar.
3. Select the field to group by from the drop-down list. Only one field can be selected.

– Items without a value for the selected field are grouped into a group called None.
– Select --No Entry-- to stop grouping.

4. Select Show Empty Groups to show all possible groups for the selected field, including groups that have no work
items.

Print the Defect List

You cannot print the defect list directly. However, you can export your defect list to a CSV file, then open the CSV file in
your preferred tool and print it.

Creating Defects
You can create a defect directly or convert a user story to a defect.

 593



 Rally®

You can create new defects from the several locations within Rally. The following instructions walk you through creating a
defect on the Defects Summary page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Defects.
2. Select Add New from the toolbar.
3. Use the Projects field to select a project if you want to associate the work item with a different project than the one

currently in scope.
The Projects field defaults to the current project.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.
Required fields are marked with an asterisk (*).

5. Select Create.

Convert a Defect to a User Story

You can convert defects to user stories. This allows you to close a defect and create a user story in one action. When you
convert a defect, it is not deleted but is moved to closed state, the resolution is changed to Converted, and the release
and iteration will be unscheduled.

The defect's tasks, attachments, and test cases will be associated with the new user story.

NOTE
Field conversion information:

• Schedule information is included in the new user story.
• Defect fields that do not exist in a user story are stored in the Notes field as name-value pairs.
• Custom Fields are stored in the Notes field as name-value pairs.
• If there are required custom fields for user stories, an editor displays. Fill out the required fields to complete

the conversion.
• If a test case is only listed in the Test Case field of the defect and not in the Test Cases collection, the test

case will not be associated to the user story.

1. Select Quality, Defects.
2. Select the FormattedID of the work item.
3. Select

(Actions), Convert.
4. Select Confirm to create a user story.

Editing Defects
You can edit a single defect or edit multiple defects at once.

Editing multiple defects at once is useful if you need to update the same field on multiple defects, such as the Iteration
field or a parent field. When you edit a single defect, you can access all of the fields for that defect within the editor.

 594



 Rally®

NOTE
If multiple users edit the same work item at the same time, the first user to make and save their changes will
have their changes saved. When subsequent users make their changes to the same work item and then attempt
to save those changes, they are presented with the option to Review my changes or Overwrite with my version.

If you select Overwrite with my version, your changes are saved and the other users' changes are overwritten.
If there are attachments added or edited, Overwrite with my version will save both users' changes, as well as
apply deletions.

Edit a Single Defect

When you edit a single defect, you access all of the fields for that defect within the editor. You can also use the
editor to drill down into other relationships the defect has such as any tasks associated with the work item, as well
as changesets or other connections.

1. Select Quality, Defects.
2. Select the FormattedID of the work item.
3. Within the detail editor, make any changes.
4. Select Save.

Edit Multiple Defects at Once

You can edit multiple defects at once. For example, if you need to move multiple work items to a different release or
associate multiple work items with the same owner, you can edit them all at once. When you edit multiple work items at
once, you view only the fields you want to change.

IMPORTANT
You can only associate a defect with both a user story AND a test case if that test case is already associated to
the user story.

• If you bulk edit only the User Story, the Test Case is cleared.
• If you bulk edit only the Test Case, the User Story is cleared.
• If you bulk edit both the User Story and Test Case, the only Test Cases available are those associated with

the selected User Story.

1. Select Quality, Defects.
2. Select the check box of the work item(s).
3. Select Edit

from the toolbar to view the Bulk Edit dialog box.
4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  
5. Select Apply to save your changes.

Managing Duplicate Defects
Sometimes a defect is inadvertently entered into the system more than once. You can associate, then close, any duplicate
defects to the single defect you want to keep open.

Associate Duplicate Defects

You can associate duplicate defects with the defect you wish to keep.

1. Select Quality, Defects.
2. Select the FormattedID of the work item.

 595



 Rally®

3. In the editor, select the Duplicates collection.
4. Select Link Existing

from the toolbar.
5. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work

item(s) you want to associate.
6. Select Done.

The selected defects display on the Duplicates page.

Remove Duplicate Defects

Once you close a duplicate defect, you may wish to remove its association with the original defect.

1. Select Quality, Defects.
2. Select the FormattedID of the work item.
3. In the editor, select the Duplicates collection to view the list of duplicate defects.
4. Select the check box of the work item(s).
5. Select Remove from the toolbar.

The selected defects are removed from the list.

Navigate Between Duplicate Defects

Use this method to quickly navigate to the duplicate defect to close it.

1. Select the FormattedID of the duplicate defect.
2. On the editor page of the duplicate defect, select Duplicates to return to the original defect.

Delete a Defect
You can delete a defect at any time.

Remember that deleted work items are placed in the recycle bin for easy recovery.

1. Select Quality, Defects.

2. Select the box of the work item(s).

3. Select Delete

from the toolbar.

The work item is moved to the Recycle Bin.

Defect Fields
The following fields are available to help you describe or add detail to a defect.

You can set these field values when creating or editing a defect.

Change descriptions are stored and displayed in the revision history. Learn more.

Required fields are marked with an asterisk (*).

ID A system-generated ID assigned to your work item that is unique and does not change. The ID consists
of a tag prefix and a numerical value. The tag can be customized by your system administrator to reflect

 596



 Rally®

a differentiating prefix for each work item defined in your project, such as DE for defect, US for user story,
and so on.

State Select a state from the drop-down list. When the state is set to Closed, the date the defect was closed is
appended.

Environment Select a value from the drop-down list to describe the environment in which the defect was discovered.
Priority Select a value from the drop-down list that indicates the importance of the defect. These values can be

customized by your subscription administrator.
Severity Select a value from the drop-down list that indicates the severity of the defect. These values can be

customized by your subscription administrator.
Submitted By This field defaults to the team member that creates the defect.
Creation Date A read-only field that displays the date the defect was created.
Found in Build Enter the build number in which the defect was found. This field is alphanumeric and supports the use of

special characters.
Fixed in Build Enter the build number in which the defect was resolved. This field is alphanumeric and supports the use of

special characters.
Target Build Enter the build number in which the defect is expected to be resolved. This field is alphanumeric and

supports the use of special characters.
Verified in Build Enter the build number in which the defect was verified in. This field is alphanumeric and supports the use

of special characters.
Resolution Select a value from the drop-down list that best describes the resolution action for the defect.

Release Note/Affects
Documentation

Select either or both of these fields to help track those defects whose resolutions impact the documentation
or Release Notes.

User Story Associate the defect with a user story. If you create a defect from another user story, this association is
automatically established.

Test Case Associate the defect with a test case. This may be thought of as the test case where the defect was found
while running a test case for a user story. If the defect was created from a test case, this association is
automatically established and displayed in the Test Case field.

This is different from the Test Cases collection, which contains the test cases that will be run to test that the
defect was fixed.

Target Date Select the Calendar

and pick the date the defect is expected to be resolved.
Schedule State Indicates the progress that has been made toward the completion of the work item. There are six states

that can be set from the drop-down list. The first and last states can be customized by your subscription
administrator to help you better manage your process. The following list identifies the default states that the
user story can move through:

• Defined: The user story is elaborated enough that the development team can write tasks and provide
estimates. This is the defaulted state value for a new user story and cannot be customized. When the
states for all children user stories are set to defined, the parent user story is automatically rolled up to
reflect the Defined state regardless of its initial setting.

• In Progress: The user story has been committed to an iteration and work has begun on the user story.
When the state for any child user story or task is set to defined, the parent user story is automatically
rolled up to reflect the Defined state regardless of its initial setting. This state cannot be customized.

• Completed: All related tasks and user stories have been completed. When the states for all of the tasks
and children user stories are set to Completed, the parent user story is automatically rolled up to reflect
the Completed state regardless of its initial setting. This state cannot be customized.

• Accepted: All acceptance criteria for the user story has been met. When the states for all of the
children user stories are set to Accepted, the parent user story is automatically rolled up to reflect the
Accepted state regardless of its initial setting. This state cannot be customized.

Blocked Indicates that work for the work item cannot continue until all issues preventing further progress are
removed. If any related task or child work item has been marked blocked, this field will automatically be
set in the detail editor. You can also manually block the work item from the detail editor. The Blocked field
displays in the Iteration Status page (board view) and Team Board page (board view). On list views, use the

 597



 Rally®

Show Fields button to add the Blocked column. The work item remains in the associated schedule state
so the initial state of the work item is not lost.

Ready This can be used to indicate that a work item is ready to move into the next stage of development or
review. This field is primarily used by teams using a kanban board or other board-based method of pulling
work. You may set up notifications against the Ready field to be alerted when the field is checked.

Blocked Reason Use this field to notate why the work item is blocked.
Iteration Indicates the iteration to which the work item is assigned. The drop-down list includes the current iteration

as well as five future iterations and five past iterations to choose from. Choose Unscheduled to keep the
work item unscheduled from an iteration.

Release Indicates the release to which the work item is assigned. The drop-down list includes the current release as
well as one past release to choose from. Choose Unscheduled to keep the work item unscheduled from a
release.

Expedite Select whether this defect should be expedited. The default value is No. This value is useful as a swimlane
on kanban boards.

Plan Estimate Number of iteration units estimated to complete the work item. This field is a real number and can accept
three digits followed by a decimal and two more digits. The units are defined by your administrator. This
field is rolled up (accumulated) from child work items and displayed as a total.

Task Rollup • Task Estimate (read-only): Number of units estimated to complete a single task. Calculated in
increments of task units defined by your administrator. Task estimates are measured in iteration units.

• To Do (read-only): Amount of effort remaining to complete a task. Calculated in increments of task
units defined by your administrator. Task estimates are measured in iteration units.

• Actual (read-only): Amount of effort it took to complete a task.

Notes Record additional information to implement this work item such as team decisions, customer input, or
discussion results.

Defect Suites
Use defect suites to compile and schedule a logical collection of defects as a single unit for resolution in an iteration or
release. This allows tracking associated defects as a group rather than separately.

When you use defect suites, you can view a hierarchical display of the defect suites and their associated defects in your
selected project.

This section includes the following topics:

• Viewing Defect Suites
• Create a Defect Suite
• Adding Defects to a Defect Suite
• Editing Defect Suites
• Delete a Defect Suite
• Defect Suite Fields

Viewing Defect Suites
The Defect Suites page displays defect suites and their associated defects for the selected project.

Each defect displays its related state, priority, and severity. The State field accumulates and displays a total value for the
defect suite, such as 3/8 Closed. This allows you to easily identify the total number of defects in the defect suite and
how many have been closed.

The Defect Suites page displays in a list view that you can customize. Learn more.

 598



 Rally®

View Associated Defects

Associated defects are all of the defects that are included in the defect suite.

1. Select Quality, Defect Suites.
2. Select the Expand

next to the defect suite FormattedID. The associated defects display beneath the defect suite.

Create a Defect Suite

Create a new defect suite to group defects together for an iteration or release.

1. Select Quality, Defect Suites.

2. Select Add New from the toolbar.

3. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

5. Select an iteration or release where you want to track the defect suite.

6. Select Create.

Adding Defects to a Defect Suite
You can add defects to a defect suite at any time, including while you are creating the suite.

You can either add a new defect to a defect suite or associate an existing defect with a defect suite.

Add a New Defect to a Defect Suite

You can create a defect and add it to a defect suite at the same time.

1. Select Quality, Defect Suites.
2. Select the check box next to the defect suite.
3. Select Add Child

from the toolbar.
4. Select Defect from the Work Item Types drop-down list.
5. Use the Projects field to select a project if you want to associate the work item with a different project than the one

currently in scope.
The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.
Required fields are marked with an asterisk (*).

7. Select Create.

 599



 Rally®

Associate an Existing Defect with a Defect Suite

You can associate existing defects with a defect suite. Although defect suites are associated with a single project (team)
you can associate defects from multiple projects (teams) with a defect suite.

1. Select Quality, Defect Suites.
2. Select the check box next to the defect suite.
3. Select Link Existing

from the toolbar.
4. Within the Choose Defects dialog box, select the defect to associate. You can filter by project and use the search field

to help locate the defect(s) you want to associate.
5. Select the work item(s) you want to associate and select Done.

Editing Defect Suites
You can edit a single defect suite or edit multiple defect suites at once. Editing multiple defect suites at once is useful if
you need to update the same field on multiple defect suites, such as the Iteration field or a parent field.

When you edit a single defect suite, you can access all of the fields for that defect suite within the editor.

Edit a Single Defect Suite

When you edit a single defect suite, you access all of the fields for that defect suite within the editor. You can also use the
editor to drill down into other relationships the defect suite has such as any tasks associated with the work item, as well
as changesets or other connections.

1. Select Quality, Defect Suites.
2. Select the FormattedID of the work item.
3. Within the detail editor, make any changes.
4. Select Save.

Edit Multiple Defect Suites at Once

You can edit multiple defect suites at once. For example, if you need to move multiple work items to a different release or
associate multiple work items with the same owner, you can edit them all at once. When you edit multiple work items at
once, you view only the fields you want to change instead of being directed to a full editor.

1. Select Quality, Defect Suites.
2. Select the check box of the work item(s).
3. Select Edit

from the toolbar to view the Bulk Edit dialog box.
4. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  
5. Select Apply to save your changes.

Remove Defects from a Defect Suite

You can remove associated defects from a defect suite. When you do this, only the association is removed. The defect is
not deleted.

1. Select Quality, Defect Suites.
2. Select the FormattedID of the work item.

 600



 Rally®

3. Select Defects

to open the Defects page.
4. Within the list of associated defects, select the check box of the defect you want to remove from the defect suite.
5. Select Remove

from the toolbar.

Delete a Defect Suite
When you delete a defect suite, the associated defects are not deleted. Only the association between the defect suite and
defects are removed.

When you delete a defect suite, that deletion is permanent. You cannot restore defect suites from the Recycle Bin. Learn
more.

1. Select Quality, Defect Suites.

2. Select the check box next to the defect suite.

3. Select Delete

from the toolbar.

4. Select Delete to confirm that you want to permanently delete the work item.

Defect Suite Fields
The following fields are available to help you describe or add detail to a defect suite.

You can set these field values when creating or editing a defect suite.

Required fields are marked with an asterisk (*).

Change descriptions are stored and displayed in the revision history. Learn more.

NOTE
You can create custom fields on defect suites. Learn more.

ID A system-generated ID assigned to your work item that is unique and does not change. The ID consists
of a tag prefix and a numerical value. The tag can be customized by your system administrator to reflect
a differentiating prefix for each work item defined in your project, such as DE for defect, US for user story,
and so on.

Schedule State Indicates the progress that has been made toward the completion of the work item. There are six states
that can be set from the drop-down list. The first and last states can be customized by your subscription
administrator to help you better manage your process. The following list identifies the default states that the
user story can move through:

• Defined: The user story is elaborated enough that the development team can write tasks and provide
estimates. This is the defaulted state value for a new user story and cannot be customized. When the

 601



 Rally®

states for all children user stories are set to defined, the parent user story is automatically rolled up to
reflect the Defined state regardless of its initial setting.

• In Progress: The user story has been committed to an iteration and work has begun on the user story.
When the state for any child user story or task is set to defined, the parent user story is automatically
rolled up to reflect the Defined state regardless of its initial setting. This state cannot be customized.

• Completed: All related tasks and user stories have been completed. When the states for all of the tasks
and children user stories are set to Completed, the parent user story is automatically rolled up to reflect
the Completed state regardless of its initial setting. This state cannot be customized.

• Accepted: All acceptance criteria for the user story has been met. When the states for all of the
children user stories are set to Accepted, the parent user story is automatically rolled up to reflect the
Accepted state regardless of its initial setting. This state cannot be customized.

Blocked Indicates that work for the work item cannot continue until all issues preventing further progress are
removed. If any related task or child work item has been marked blocked, this field will automatically be
set in the detail editor. You can also manually block the work item from the detail editor. The Blocked field
displays in the Iteration Status page (board view) and Team Board page (board view). On list views, use the
Show Fields button to add the Blocked column. The work item remains in the associated schedule state
so the initial state of the work item is not lost.

Blocked Indicates that work for the work item cannot continue until all issues preventing further progress are
removed. If any related task or child work item has been marked blocked, this field will automatically be
set in the detail editor. You can also manually block the work item from the detail editor. The Blocked field
displays in the Iteration Status page (board view) and Team Board page (board view). On list views, use the
Show Fields button to add the Blocked column. The work item remains in the associated schedule state
so the initial state of the work item is not lost.

Iteration Indicates the iteration to which the work item is assigned. The drop-down list includes the current iteration
as well as five future iterations and five past iterations to choose from. Choose Unscheduled to keep the
work item unscheduled from an iteration.

Release Indicates the release to which the work item is assigned. The drop-down list includes the current release as
well as one past release to choose from. Choose Unscheduled to keep the work item unscheduled from a
release.

Plan Estimate Number of iteration units estimated to complete the work item. This field is a real number and can accept
three digits followed by a decimal and two more digits. The units are defined by your administrator. This
field is rolled up (accumulated) from child work items and displayed as a total.

Task Rollup • Task Estimate (read-only): Number of units estimated to complete a single task. Calculated in
increments of task units defined by your administrator. Task estimates are measured in iteration units.

• To Do (read-only): Amount of effort remaining to complete a task. Calculated in increments of task
units defined by your administrator. Task estimates are measured in iteration units.

• Actual (read-only): Amount of effort it took to complete a task.

Notes Record additional information to implement this work item such as team decisions, customer input, or
discussion results.

Managing Tests
Testing is a vital part of ensuring the quality and integrity of your product. Testing is broken down by test cases, test plans,
test sets, and test runs.

This section includes the following topics:

• Rally Test Management Overview
• Test Cases
• Test Plans
• Test Case Results
• Test Runs
• Test Sets
• Quality Management

 602



 Rally®

Rally Test Management Overview
Rally offers software test engineers the tracking tools that you need to provide test results in-step with the software
development lifecycle while also supporting the work that you do in a variety of automated software testing tools.

The test management features of Rally allow you to:

• Create test cases directly from user stories and defects
• Evolve acceptance tests simultaneously with—or ahead of—the coding efforts
• View status dashboards that automatically group test case results by user stories to assess quality and readiness
• Provide access to failing test cases for improved communication, easier defect re-creation, and lower management

burdens
• Manage regression tests that need to be run multiple times throughout the life of your system
• Create custom test plan lists based on criteria you specify
• Easily filter and sort tests outside of iterations and releases on the Test Case summary page

Test management within Rally has three organizational concepts:

• Test Case: A test case is created from a work item (user story or defect) to verify that the work is acceptable. Test
cases also capture test results.

• Test Folder: Test folders are a basic mechanism for organizing test cases that have similar functionality. Test cases
can only be assigned to one test folder.

• Test Set: Test Sets are a collection of test cases (optionally stored in test folders.) Test sets allow you to group and
schedule regression tests in iterations or releases. Test sets are only created and used on the Iteration and Release
Status pages. Copy test sets from one iteration or release to another.

 603



 Rally®

Life of a Test Case

1. Create a new test case (acceptance test) in association with a user story or defect. A test case can stand alone but we
do not recommend it.

2. The tester concludes that the work is acceptable. If the tester decides this test case should be included in regression
testing, continue to the next steps.

3. Optional: Add the test case to a test folder that contains similar test cases. Test folders represent test sets which help
organize tests, such as UI Tests for Firefox.

4. The test case is now just one of many regression tests that are scheduled together in a test set. Test sets are
associated with an iteration or release.

Test Management Related Rally Pages
This page describes the Rally pages that are related to the test management.

In addition to the following pages, you can view reports and dashboards that display the status of your test coverage,
including the number of test cases passing, failing, or pending.

 604



 Rally®

You can also use the Rally App SDK Toolkit to create custom Apps or reports that integrate Rally with data from third-party
testing systems.

Quality Management Page

This page provides testers with a single location to organize and manage test cases into folders. Each test folder
represents a test plan. When planning your test effort, use test plans to assemble test cases into a hierarchy of folders.
Run the tests in groups, log test results and defects, then see the summarized results.

When you create a new test folder, the test folder is associated with the current scoped project. If you want to share test
folders with other testers on other teams (projects), associate your test folders at a higher node in the project tree.

Learn more.

Work Views Page

You can work with testing artifacts from the Work Views page. This page allows you to create new test cases and test
sets.

Learn more.

Iteration Status Page

A test set is a container for test cases which can be run in an iteration or release. Test sets are a collection of test
cases (optionally stored in test folders.) Test sets allow you to group and schedule regression tests into iterations or
releases. When you create test sets on the Iteration Status page, the test set you create is automatically scheduled in the
selected iteration. You can also copy test sets from one iteration or release to another. A test set could include smoke,
configuration, system, and so on. Once you group them, you can schedule test cases to be run together.

Learn more.

Test Cases
A test case is a complete technical specification which defines how the system should perform as specified in the
requirements. You can associate test cases with work items. A work item is considered complete when you have indicated
that all associated test cases pass.

Your ability to manage test cases is dependent upon the user role and permissions you have been assigned for the
workspace. You need editor permissions for your project to create or associate test cases with work items.

NOTE
If you want to import a large set of data, you can use the  Rally Add-in for Excel.

You can also include the My Test Cases app as part of your personalized dashboard. Learn more. Only those test cases
that list you as the owner display. Use this app as your daily test case workplace. For more information on the My Test
Cases app, see the App Catalog.

Watch a short YouTube tutorial on how to use Rally test cases for acceptance testing.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

 605



 Rally®

This section includes the following topics:

• Creating Test Cases
• Add Test Case Details
• Adding Defects to Test Cases
• Edit a Test Case
• Delete a Test Case
• Import Test Cases
• Export Test Cases
• Test Case Fields

Creating Test Cases
To save time and have easier tracking, Rally recommends creating test cases directly from an associated work item.

When you create a test case from a work item, Rally creates an automatic association between the work item and the test
case. You can then view the association in the detail editor of either the work item or the test case. When you create a
standalone test case, you must manually associate the test case to a work item.

You can create a test case in Rally from several locations. This flexibility allows you to progress through work activities
and create a test case whenever necessary. You can create test cases from the following pages:

• Test Cases
• Quality Management
• Work Views
• Test Cases

collection for an associated work item (using the detail editor)

NOTE
The only way you can schedule a test case within an iteration is to include it in a test set. Test sets are groups of
tests that you can associate within an iteration. Learn more.

Create and Associate a Test Case with a Work Item

You can create a test case while you are viewing another work item such as a user story or defect and automatically
associate the test case with the work item.

When you create a test case in this way, the Work Product field of the test case is automatically populated with the ID and
name of the work item from which you chose to generate the test case.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

 606



 Rally®

If your workspace administrator has made some work item fields required, this feature is not available.

1. Navigate to a page that contains the work item of interest.

2. Select the FormattedID of the work item.

3. Select Test Cases

to open the Test Cases page.

4. Select Add New from the toolbar.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Associate an Existing Test Case with a Work Item

You can associate an existing test case with a work item.

When you associate a test case, the work item's name and ID are automatically populated in the test case's work product
field so that you can track the association.

1. Navigate to a page that contains the work item of interest.

2. Select the FormattedID of the work item.

3. Select Test Cases

to open the Test Cases page.

4. Select Link Existing

from the toolbar.

5. In the Choose dialog box, select a test case to associate. You can filter this dialog box by test folder and project and
use the search field to identify the test case you want to associate.

6. Select the work item(s) you want to associate and select Done.

Associate an Existing Test Case with a Test Plan (Test Folder)

You can associate an existing test case with a test plan (test folder).

As a best practice, you should associate test cases with both a work item and a respective test plan or test set to help you
better track your test efforts.

You can add test cases to a test plan by adding them as children of the test plan.

 607



 Rally®

NOTE
You can also associate a test case with a test plan (test folder) by dragging and dropping it onto a test folder.

1. Select Quality, Quality Management.

2. In the Test Folders pane, select the check box of the folder to which you want to associate a test case.

3. Select Link Existing

from the toolbar.

4. In the Choose dialog box, filter by test folder and project and use the search field to identify the test case you want to
associate.

5. Select the work item(s) you want to associate and select Done.

Create a Standalone Test Case

You can create a test case without associating it with a work item.

Although Rally does not recommend this approach, it may suit your process if you have a need to store test cases
independently of work items.

You can always edit the test case later to associate with a work item.

NOTE
The only way you can schedule a test case within an iteration is to include it in a test set. Test sets are groups of
tests that you can associate within an iteration. Learn more.

1. Select Quality, Test Cases.

2. Select Add New from the toolbar.

3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 608



 Rally®

4. Select Create.

Associate an Existing Standalone Test Case with a Work Item

If you created a standalone test case, you can edit it to ensure it is associated with a work item.

1. Select Quality, Test Cases.

2. Select the FormattedID of the test case.

3. In the detail editor, navigate to the Work Product field and select

to view the Choose dialog box.

4. In the Choose dialog box, select a work item to associate. You can filter this dialog by project and use the search field
to identify the item you want to associate.

5. Select the work item you want to associate and select Save.

Add Test Case Details
Rally provides you the flexibility to add different details to your test case.

You can document expected preconditions and postconditions of test as well as add detailed validation expectations. You
can also add steps to follow to complete the test itself.

1. Select Quality, Test Cases.

2. Select the FormattedID of the work item.

3. Select Steps

to open the Test Steps page.

4. In the Conditions section, complete any information about expected pre- or post- conditions.

5. Enter validation information. You can enter pre- and post- conditions as well as the input and expected result.

6. To add a specific step for the test, select + Add New at the bottom of the sections.
a) In the Input field, enter the step to be followed and then use the Expected Result field to enter the expected result

of the step.
b) After completing both fields, select the Create button to the far right.
c) Repeat these steps for all additional steps you want to include. Your changes are automatically saved when you

navigate away from the page.

Adding Defects to Test Cases
You can associate defects with test cases. When doing so, you can choose to create a new defect or select an existing
defect to associate with the test case.

Create a New Defect to Associate with a Test Case

You can associate new defects to a test case by viewing a test case in the detail editor or using the toolbar when viewing
a test case in a list view. These instructions explain how to associate a defect with the detail editor.

 609



 Rally®

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Test Cases.
2. Select the FormattedID of the work item.
3. Select Defects

to open the Defects page.
4. Select Add New from the toolbar.
5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).
6. Select Create.

Associate an Existing Defect with a Test Case

You can associate an existing defect with a test case when you view the test case in the detail editor.

1. Select Quality, Test Cases.
2. Select the FormattedID of the work item.
3. Select Defects

to open the Defects page.
4. Select Link Existing

from the toolbar.
5. In the Choose dialog box, select a defect to associate. You can filter this dialog by project and use the search field to

identify the item you want to associate.
6. Select the work item(s) you want to associate and select Done.

Edit a Test Case
When you edit a test case, you can update any information associated with the test case including its associated work
item (the Work Product field).

When you edit a test case, you can modify information such as field values and textual descriptions, reorder test case
steps, or add and remove steps.

 610



 Rally®

NOTE
When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have 200 or
more attachments, only the newest 200 display on the page. Older attachments still exist in Rally; however, you
must delete newer ones to view those hidden from view on the page.

1. Select Quality, Test Cases.

2. Select the FormattedID of the work item.

3. Within the detail editor, make any changes.

4. Select Save.

Delete a Test Case

You can delete a test case.

1. Select Quality, Test Cases.

2. Select the box of the work item(s).

3. Select Delete

from the toolbar.

The work item is moved to the Recycle Bin.

Import Test Cases
You can import test cases into Rally from the Test Cases page using a CSV file.

When you import test cases, you can also import associated test steps. Whenever you import data into Rally, you must be
sure to include any required fields. Required fields are indicated with an asterisk in the detail editor or you can ask your
administrator.

Use the following guidelines when importing data:

• If your administrator has marked some fields as required, you must provide values for those columns in the CSV file.
• If drag-and-drop ranking is enabled for your workspace, you cannot export ranking values or make changes to them on

import.
• Importing values for timebox fields (Release, Iteration) is not supported.
• You cannot import a value for the Project field; all artifacts that are imported will be added to the current project.
• The schedule state of a task you import can update the state of the user story or defect it is associated to, if your

project settings allow this.
• If you refer to an item in the Recycle Bin or an item that has been deleted, that line will fail on import.

You can also associate test cases with existing test folders when you import them. However, you cannot associate test
cases with test sets.

 611



 Rally®

NOTE
If you are attempting to import a large number of test cases that contain multiple test steps, we recommend that
you use the Rally Add-in for Excel.

1. Select Quality, Test Cases.

2. Use the project picker to select the project to which you want to import data.

3. Download the example CSV file.
a) Select Import Test Cases from Import/Export

.
b) On the Import dialog box, download the CSV file template using the import template link.

4. Customize the downloaded CSV file with the field header columns you want to import and add values for the data.

Workspace fields that you are required to enter contain the text "required field" in the template contents.

You can add or delete field header columns as needed, although the file must remain in CSV format.

5. Upload your CSV file.
a) Select Import Test Case from Import/Export

.
b) Select Choose File to locate your CSV file.
c) Select your file and select Open.
d) Optionally, select your character encoding.

Depending on where you are when importing, this may require selecting the advanced link.
e) Select Validate.

6. Select Import.

Your data is imported and displayed at the top of the page.

Example CSV Formats for Importing Test Cases

The import dialog contains a link to download data import templates which helps you format your CSV file correctly to
ensure all your data is imported.

To successfully import a file, the column headers must be formatted in the same way as the data import template. Rally
suggests you download the provided template to verify correct formatting each time before you import your file. You can
modify this template by adding or deleting included fields (column headers).

CSV file formatting considerations:

• If a field value contains commas or quotes, enclose the value in quotes.
• Each line is individually processed and saved, and only the lines that fail are not imported. If you have failures and re-

run the same file, you will have duplicate objects. Note the failures and create a new file with only the failed lines.
• Embedded quotes in your input data are doubled.
• Embedded spaces do not require surrounding quotes.
• There is no comma following the last field on the line.
• Null fields are represented by two consecutive commas.
• Leading and trailing spaces on fields, even inside quotes, are ignored.
• File must normally end with a single CrLf (Carriage Return, Line Feed or both).
• The length of the path to your CSV file may not exceed 255 characters and cannot exceed a file size of 2 MB.

When you create a CSV to import test cases, you must include the Object Type field as a header. This field is used
by Rally to differentiate between test cases and test steps in the same CSV file and is required whenever you import test

 612



 Rally®

cases even if you are not including test steps. Rally uses the Object Type header to indicate that you are importing test
cases instead of a different work item type. You can use the  Object Type field to include test steps associated with a
test case when you import.

NOTE

• When you import test case steps to a test case that already has test steps, the test case steps in the import
file are appended to the list of existing test case steps.

• If you edit your import template in Excel, be sure to specifically save it as a CSV file. Excel can change the
format of your file and rearrange columns. The error message you will receive is "Line 0: You must include an
Object Type column."

Example: Import
a Test Case with
a Test Case Step

The following CSV example imports a test case called Sample Test Case and associate a test case
step called Sample Input . Notice that in order to import a test case step, you must indicate the name
of the test case to which it will be associated. Quotes must be used when importing values that contain
spaces. The Test Case field is also required when importing test case steps. You cannot import test steps
that are not associated with a test case.

NOTE
Alternatively, you can use the Web Services API reference of the test case in the Test Case
column when associating a test case step with a step case. Learn more.

For any properties that are not applicable to a particular object type, add a null value. Notice that in this
example, null values are included for the Test Case line where the fields apply only to the test case step.
The same is done in the Test Step line where fields do not apply to the associated test case.

"Object Type",Name,Type, Owner, Method,Input,"Step Index","Test Case"

"Test Case","TC123",Acceptance,user@acme.com,Manual,,,

"Test Case Step",,,,,"Sample Input",1,"TC123"

Example: Associating
a Test Case Using

Line[] Syntax

This example shows how to use the line[] syntax to indicate you want to associate an imported test case
step with the test case created on line 2. You can use this syntax instead of including the name of the new
test case on the Test Case Step line.
"Object Type",Name,Type, Owner, Method,Input,"Step Index","Test Case"

"Test Case","TC123",Acceptance,user@acme.com,Manual,,,

"Test Case Step",,,,,"Sample Input",1,"line[2]"

Example: Importing
a Test Case

without a Test Step

The following CSV example imports a test case without any associating any test steps. Notice that you still
need to include the Object Type field with a value of "Test Case" to indicate that you are importing a test
case.
"Object Type",Name,Type,Method,Input,"Step Index"

"Test Case","Sample Test Case",Acceptance,Manual,,

Export Test Cases
You can export your test cases to a CSV file. This export can be based on the field you have currently selected, or you
can select additional fields to include.

1. Select Quality, Test Cases.

2. Select Import/Export

and select one of the following:

• Download CSV of this view: Create a CSV file using the fields currently selected on your window
• Download CSV with more columns: Select additional fields to include in the CSV file

 613



 Rally®

Test Case Fields
The following fields may be available to help you describe or add detail to a test case.

You can set these field values when creating or editing a test case.

Required fields are marked with an asterisk (*).

Title Bar
ID A system-generated ID for the test case. The ID consists of a prefix and a numerical value. The prefix can

be customized by your system administrator to reflect a differentiating prefix for each work item defined in
your project, such as US for user story, DE for defect, and so on. The default prefix for a test case is TC.

Name Enter a name of the test case. This is a required field.

Tabs Bar
Details View the main Details panel.
Defects View the Defects associated with this Test Case (if any).

Test Sets View the Test Sets associated with this Test Case (if any).
Results View the Results summaries of previous runs of this Test Case (if any).

Test Run View the Results summaries of previous runs of this Test Case (if any).
Discussions View the Discussions associated with this Test Case (if any).

Steps Validation Input and Validation Expected Result represent the actual steps entered for the test case and
each validation point. Validation Input is required.

Revision History View the history of revisions made to this Test Case (if any).
Connections View the Connections associated with this Test Case (if any).

Details Pane
Description A description of the test case.
Objective Detail the objective of the test case.

Pre Conditions Enter all of the necessary prerequisites to set up a test.
Validation Input Enter a description of what is being tested.

NOTE
This should not be the steps taken during the test, but the criteria for the test.

Validation
Expected Result

Enter the acceptance criteria expected for a successful test.

Post Conditions Enter the changes expected in the system after the conduction of a successful test.
Attachments Browse for a file to attach to your work item details.

NOTE
The maximum size of an attachment is currently 50 MB.

Right-Hand Pane
Color Optional color indicator for the test case.
Owner The owner of the test case.
Project The project that contains this test case. This is a required field.

Test Folder Add, remove, or change the test folder to which this test case is assigned. Each action creates an
automatic revision entry.

Expedite Select whether this defect should be expedited (useful as a swimlane on Kanban boards). The default value
is No.

 614



 Rally®

Work Product Specify the work item that is associated to the test case, such as a user story or defect. If you generated
the test case from a work item, this association is automatically created and the name of the work item from
which the test case was generated displays.

Tags Add tags that will be used to filter your data.
Type Specify the type of test that is being performed, such as regression, acceptance, and so on. This is a

required field.
Method Select either Manual or Automated to indicate the method of testing used for the test case. This is a

required field.
Priority Specify the importance of this test case. These values can be customized by your subscription

administrator.
Last Verdict The verdict from the most recent execution of the test case. The field is automatically updated each time

the test case is executed. Last Verdict is not displayed during an edit of a test case, but only when viewing
the test case detail.

Last Run The date of the test execution. Last Run is entered on the Test Case Result page and is displayed here as
a read-only field.

Last Build The number of the last software build which was tested. Last Build is entered on the test case result page
and is displayed here as a read-only field.

Test Plans
In Rally, you can use test plans to organize and manage test cases. You can represent a test plan with a test folder. When
you plan your test effort, use test plans (test folders) to assemble your test cases in a hierarchy of folders, and to view the
summarized results of all the tests in a group.

When viewing test plans, you can scope your view to a particular project or projects (teams). Your ability to view and edit
test plans is dependent upon the user permissions you have been assigned. Test plans are represented by test folders.

You can work with test plans on the Test Plans page or the Quality Management page. Rally recommends using the
Quality Management page when working with test folders (test plans). Learn more.

The Test Plans page displays in a list view that you can customize. Learn more.

Watch a short YouTube tutorial on how to use Rally test plans.

This section includes the following topics:

• Creating Test Folders
• Edit Test Folders
• Delete Test Folders
• Adding Test Cases to Test Folders
• Rank Test Cases in a Test Folders
• Remove a Test Case from a Test Folder
• View the Status of Test Cases in a Test Folder
• View a Test Run from a Plan

Creating Test Folders
Use test folders to organize and group your tests into functional areas. You can create a hierarchy of folders (parent-child)
or keep a flat structure of folders.

 615



 Rally®

Create a Test Folder

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Test Plan.
2. Select Add New from the toolbar.
3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).
4. Select Create.

Assign a Parent Test Folder

You can associate a test plan to an existing test folder.

1. Select Quality, Test Plan.
2. Select the FormattedID of the work item.
3. In the detail editor, select

in the Parent field.
4. Within the Choose dialog box, select a test folder to use as a parent.
5. Select Save.

Create Child Test Folders

You can create child test folders directly from the Test Plan page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Test Plan.
2. Select the check box of a work item. The work item you select determines the parent of the work item you will add as a

child.
3. Select Add Child

from the toolbar.
4. Select Test Folder from the Work Item Types drop-down list.
5. Use the Projects field to select a project if you want to associate the work item with a different project than the one

currently in scope.
The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

 616



 Rally®

Required fields are marked with an asterisk (*).
7. Select Create.

Edit a Test Folder
You can edit test folders.

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

1. Select Quality, Test Plan.

2. Select the FormattedID of the work item.

3. Within the detail editor, make any changes.

4. Select Save.

Delete Test Folders
If you delete a test folder that has child test folders, the child test folders are not deleted.

The Parent field of the child folder is cleared, and child folders display on the Test Plan page unless you delete them as
well.

1. Select Quality, Test Plan.

2. Select the box of the work item(s).

3. Select Delete

from the toolbar.

The work item is moved to the Recycle Bin.

Adding Test Cases to Test Folders
You can associate new or add existing test cases to test folders.

You can make these associations when you are editing the test folder, or when you edit the test case.

NOTE
Test cases can only be added to a single test folder.

Associate a New Test Case with a Test Folder

When editing a test folder, you can create a new test case to associate with the folder.

1. Select Quality, Test Plan.
2. Select the FormattedID of the work item.
3. Select Test Cases

to open the Test Cases page.
4. Select Add New to associate a new test case with this folder.
5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 617



 Rally®

6. Select Create.

Associate an Existing Test Case with a Test Folder

When editing a test folder, you can link an existing test case to the folder.

1. Select Quality, Test Plan.
2. Select the FormattedID of the work item.
3. Select Test Cases

to open the Test Cases page.
4. Select Link Existing to select an existing test case to associate.
5. Within the Choose dialog box, choose filters from the drop-down list(s) and use the search field to help locate the work

item(s) you want to associate.
6. Select the work item(s) you want to associate and select Done.

Associate a Test Case with a Folder By Editing the Test Case

When editing a test case, you can associate it with an existing test folder or change the folder with which it is associated.

1. Select Quality, Test Cases.
2. Select the FormattedID of the work item.
3. Select

in the Test Folder field.
4. Within the Choose dialog box, select the test folder you want to associate.
5. Select Save.

Rank Test Cases in a Test Folder
You can rank test cases within a test folder depending on the ranking method your administrator has configured for your
workspace.

Drag-and-drop Rank test cases on the Test Plan page in an executable order by using drag-and-drop. To change the order
of a test case in a folder, select the test case and drag it to the correct placement.

Learn more.

Manual ranking If your workspace is set to use manual ranking, you can change the order or priority of a test case on the
Test Plan page by double-clicking on the case and entering a rank value.

Learn more.

 618



 Rally®

Remove a Test Case from a Test Folder
You can remove a test case from a test folder.

1. Select Quality, Test Cases.

2. Select the FormattedID of the work item.

3. Within the detail editor, scroll to the Test Folder field, select the Gear

and then select Clear.

4. Select Save.

View the Status of Test Cases in a Test Folder
When you view a test folder, you can view the status of test cases included in that folder.

1. Select Quality, Test Plan.

2. Select the FormattedID of the work item.

3. Within the detail editor of the test folder, hover your cursor over the Test Folder Status bar for the test cases that are
associated with the folder.

 619



 Rally®

View a Test Run from a Plan
Use the Test Run page to track the execution of all of the test cases contained in a test plan from a single location.

When viewing the Test Run page for a test set, you can enter test results or defects from each test case within the test
set.

The test plan status rollup bar displays at the top of the page. The status bar reflects the state (pass, fail, inconclusive,
other) of the test cases in the plan. Hover over the test set status display to view the percentage and number of test cases
in each state.

For more information, see View a Test Run from a Test Plan.

Test Case Results
A test case result is a record of the outcome of a test case. Teams often execute a test case multiple times during the
development cycle with the goal of getting the test case to a passing state. You can track and document test case results
associated with respective test cases.

This section includes the following topics:

 620



 Rally®

• Set Up the Test Cases Page to View Test Case Results
• Add a New Test Case Result
• Edit a Test Case Result
• Delete a Test Case Result
• Test Case Result Fields

NOTE

• Your ability to record a test case result is based upon the user permissions you have been assigned for the
project or workspace. Your display will also vary based on these permissions.

• Test case results cannot be recovered from the Recycle Bin after deletion.

Set Up the Test Cases Page to View Test Case Results
You can customize the Test Cases page to display test case results.

1. Select Quality, Test Cases.

2. Select Show Fields from the toolbar. 

3. In the Show Columns dialog box, select the check box for the Results field.

4. Select Apply.

The Results field displays as a column in your list view

Add a New Test Case Result
You can add a new test case result when you view a specific test case.

NOTE
You can also add a new test case result from the list view. Select the check box of the test case and then select

Add Result from the toolbar.

1. Select Quality, Test Cases.

2. Select the FormattedID of the work item.

3. Select Results

to open the Test Results page.

4. Select

Add Result to add a test result.

5. Enter the work item information in the detail editor.

Required fields are marked with an asterisk (*).

 621



 Rally®

6. Select Create.

Edit a Test Case Result
These steps assume you are displaying the Results field as a column on the Test Cases page.

NOTE
If multiple users edit the same work item at the same time, the first user to make and save their changes will
have their changes saved. When subsequent users make their changes to the same work item and then attempt
to save those changes, they are presented with the option to Review my changes or Overwrite with my version.

If you select Overwrite with my version, your changes are saved and the other users' changes are overwritten.
If there are attachments added or edited, Overwrite with my version will save both users' changes, as well as
apply deletions.

1. Select Quality, Test Cases.

2. Select the Results box for the associated test case.

3. On the Results page, select the test case result that you want to edit by selecting the Build name.

4. On the Test Case Result detail editor, complete your edits.

5. Select Save.

Delete a Test Case Result
When you delete a test case result, it is permanent. You cannot recover deleted test case results from the Recycle Bin.

1. Select Quality, Test Cases.

2. Select the Results box for the associated test case.

 622



 Rally®

3. On the Results pop-up dialog box, select Edit.

4. Select the box of the work item(s).

5. Select Delete

from the toolbar.

Test Case Result Fields
The following fields are available to help you describe or add detail to a test case result.

You can set these field values when creating or editing a test case result.

Required fields are marked with an asterisk (*).

Build Enter the number of the build that was tested.
Date Select the date of the build from the calendar.

Test Case Displays the test case that the result is associated with when you created the test case.
Work Product Displays the work product to which the test case result was associated with when you entered the test case

result. This field is not editable and is blank if the test case is not associated with a work product.
Verdict Select the value that represents the result of your test execution: Pass, Fail, Inconclusive, Blocked, or Error.

Duration Enter the amount of time in minutes that it took to execute the test case. This information is helpful in
managing and planning your testing resources.

Test Set If applicable, specify the test set the result is associated with. If you access the Test Case Result editor
from a test set, this field defaults to that test set.

Test Runs
The Test Run page provides a view of one or more test cases and their test case steps listed in a single, summarized
display.

You can view a test run from several locations. This flexibility lets you progress through work activities and view test runs
whenever you need to from logical positions within the Rally application.

• View a Test Run Associated with a Work Item
• View a Test Run Associated with a Test Case
• View a Test Run from a Test Set
• View a Test Run from a Test Plan

View a Test Run Associated with a Work Item
Use the Test Run page from the detail editor of a work item to view acceptance or functional tests. When a test case is
added to a user story or defect, it is also added to the test run.

The Test Run page only shows the results of test cases that are directly linked to the user story or defect. This page does
not display results for child work items.

 623



 Rally®

You can access the test run summary from the work item detail page.

1. Navigate to any page that displays the work item that is associated with the test run you want to view.
For example: Select Plan, User Stories, or select Quality, Defects.

2. Select the FormattedID of the work item to display the detail editor.
3. Select Test Run

to open the Test Run page.
The Test Run page displays a list of available test runs that are associated with the selected user story or defect. This
list shows only the latest test run for each associated test case.
– Expand a test run to see the individual steps for that test run.
– The status bars at the top of the page show the passing and coverage percentages for the test run.

• Passing: Displays the percentage of all test cases that are passing for this work item.
• Covered: Displays the percentage of test case coverage for the selected work item.

– Select Show Filters to filter the list of test runs. You can filter the list by by Type, Method, or Last Verdict. For
more information, see Using Filters.

– Select New Test Case to create a new test case. For more information, see Creating Test Cases.
– Select a column header to sort the list by that column in ascending order. Select the column header again to sort in

descending order.
– The Action column contains the following icons:

• Select

to create  new test result.
• Select

to create a new defect.
• Select

to edit the current test case.

View a Test Run Associated with a Test Case
Use the Test Run page from the detail editor of a test case to view acceptance or functional tests.

You can access the test run summary from the test case detail page.

1. Navigate to any page that displays the test case that you want to view.
For example: Select Quality, Test Cases.

2. Select the FormattedID of the test case to display the detail editor.

 624



 Rally®

3. Select Test Run

to open the Test Run page.
The Test Run page displays the latest test run and the individual steps for the selected test case.
– The Action column contains the following icons:

• Select

to create a new test result.
• Select

to create a new defect.
• Select

to edit the current test case.

View a Test Run from a Test Set
Use the Test Run page for a test set to track and edit regression tests. This page lets you track the execution of all of the
test cases contained in a test set from a single location.

When viewing the Test Run page for a test set, you can enter test results or defects from each test case.

1. Navigate to a page where you can view test sets.
For example: Select Plan, Work Views

2. Select the FormattedID of the test set to display the detail editor.
3. Select Test Run

to open the Test Run page.
The Test Run page displays a list of all available test runs that are associated with the selected test set.
– Expand a test run to see the individual steps for that test run.
– The status bar at the top of the page show the status of the test runs as a percentage of the total. Hover over the

status bar to see the exact percentages.

 625



 Rally®

• Green = Passing test cases
• Red = Failing test cases
• Yellow = All other test case result verdicts not passing or failing (For example, inconclusive, error or custom

values.)
• Gray = No result

– Select Show Filters to filter the list of test runs. You can filter the list by by Type, Method, or Last Verdict. For
more information, see Using Filters.

– Select a column header to sort the list by that column in ascending order. Select the column header again to sort in
descending order.

– The Action column contains the following icons:
• Select

to create  new test result.
• Select

to create a new defect.
• Select

to edit the current test case.

View a Test Run from a Test Plan
Test plans (test folders) let you assemble your test cases in a hierarchy of folders and view the summarized results of all
the tests in a group.

Use the Test Run page to track the execution of all of the test cases contained in a test plan from a single location. When
viewing the Test Run page for a test plan, you can enter test results or defects from each test case.

1. Navigate to a page where you can view test plans.
For example: Select Quality, Test Plan

2. Select the FormattedID of the test plan to display the detail editor.

 626



 Rally®

3. Select Test Run

to open the Test Run page.
The Test Run page displays a list of all available test runs that are associated with the selected test plan.
– Expand a test run to see the individual steps for that test run.
– The status bar at the top of the page show the status of the test runs as a percentage of the total. Hover over the

status bar to see the exact percentages.

• Green = Passing test cases
• Red = Failing test cases
• Yellow = All other test case result verdicts not passing or failing (For example, inconclusive, error or custom

values.)
• Gray = No result

– Select Show Filters to filter the list of test runs. You can filter the list by by Type, Method, or Last Verdict. For
more information, see Using Filters.

– Select a column header to sort the list by that column in ascending order. Select the column header again to sort in
descending order.

– The Action column contains the following icons:
• Select

to create  new test result.
• Select

to create a new defect.
• Select

to edit the current test case.

 627



 Rally®

Test Sets
Test sets are a collection of test cases (optionally stored in test folders). Test sets allow you to group and schedule
regression tests into iterations or releases.

You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. We
recommend working with test sets from the Iteration Status page. When you add a test set from the Iteration Status page,
it is automatically scheduled for the iteration you have selected for the page. When you add a test set from the other
pages, you must manually specify the iteration when editing the test set.

You can also copy test sets from one iteration or release to another. A test set could include smoke tests, configuration
tests, system tests, and so on. Once you group them, you can schedule test cases together.

Watch a short YouTube tutorial on how to use test cases and test sets for regression testing in Rally.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

NOTE
Your ability to create test sets is dependent upon the user permissions you have been assigned for the
workspace.

Create a Test Set
A test set is a container for test cases that can be scheduled in an iteration or release.

You create test sets from the Iteration Status page.

NOTE
You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. Rally
recommends working with test sets from the Iteration Status page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Iteration Status.

2. Select Add New from the toolbar.

3. Select Test Set from the Work Item Types drop-down menu.

4. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 628



 Rally®

Add Test Cases to a Test Set
When you add a test case, you are adding a child work item (test case) to an existing test set.

You can expand the test set to view all associated test cases.

NOTE
You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. Rally
recommends working with test sets from the Iteration Status page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Track, Iteration Status.

2. Select the List

toggle to view the page in list view.

3. Select the check box of a work item. The work item you select determines the parent of the work item you will add as a
child.

4. Select Add Child

from the toolbar.

5. Select Test Case from the Work Item Types drop-down menu.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

7. Select Create.

Edit a Test Set
When you edit a test set, you can associate test cases with the test set or view a test run associated with the test set.

NOTE
You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. Rally
recommends working with test sets from the Iteration Status page.

 629



 Rally®

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

1. Select Track, Iteration Status.

2. Select the FormattedID of the work item.

3. Within the detail editor, make any changes.

4. Select Save.

Re-Order Test Cases in a Test Set

NOTE
When editing a test case from the Iteration Status or Release Status page, the editor will show the global test
case rank, not the test case's rank within the test set. The test cases will show in rank order on the test run page
for the test set. The rank value is only displayed in the editor if you are using a manually ranked workspace.

Drag-and-Drop Ranking

Manual Ranking

If your workspace is set to use manual ranking, you can change the order or priority of a test case by double-clicking on
the case and entering a rank value.

 630



 Rally®

Copy a Test Set
Save time and effort by copying an existing test set and then editing the copy to make necessary adjustments.

NOTE
You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. Rally
recommends working with test sets from the Iteration Status page.

1. Select Track, Iteration Status.

2. Select the FormattedID of the test set you want to copy.

3. Select

(Actions), Copy.

The new work item is created and saved.

 631



 Rally®

4. Within the detail editor, make any changes.

5. Select Save.

View a Test Run
When you create and populate test sets, you can easily track the execution of test cases contained in a test set from a
single location.

You can view and track test runs from a test set. When viewing the Test Run page for a test set, you can enter test results
or defects from each test case within the test set.

The test set status rollup bar displays at the top of the page. The status bar reflects the state (pass, fail, inconclusive,
other) of the test cases in the test run. Hover over the test set status display to view the percentage and number of test
cases in each state.

For more information, see View a Test Run from a Test Set.

Delete a Test Set
Deleting a test set does not delete the test cases or test case results. Only the association between the test set and test
cases is removed.

When you a delete a test set it is permanently deleted and cannot be restored from the Recycle Bin.

 632



 Rally®

NOTE
You can work with test sets from the Iteration Status page, Work Views page, or the Release Status page. Rally
recommends working with test sets from the Iteration Status page.

1. Select Track, Iteration Status.

2. Select the List

toggle to switch view the page in list view.

3. Select the check box of the test set(s) you want to delete.

4. Select Delete

from the toolbar.

5. Confirm the deletion.

Remove a Test Case From a Test Set
You can remove a test case from a test set.

1. Select Track, Iteration Status.

2. Select the List

toggle to switch view the page in list view.

3. Expand the test set to display the associated test cases.

4. Select the box of the work item(s).

5. Select Remove

to remove the test case from the test set.

Test Set Fields
The following fields are available to help you describe or add detail to a test set. Set these field values when creating or
editing a test set.

Required fields are marked with an asterisk (*).

ID A system-generated ID assigned to your work item that is unique and does not change. The ID consists
of a tag prefix and a numerical value. The tag can be customized by your system administrator to reflect
a differentiating prefix for each work item defined in your project, such as DE for defect, US for user story,
and so on.

Name The work item name allows you to easily reference a work item.
Owner Specify the owner of the work item.
Ready This can be used to indicate that a work item is ready to move into the next stage of development or

review. This field is primarily used by teams using a kanban board or other board-based method of pulling
work. You may set up notifications against the Ready field to be alerted when the field is checked.

Blocked Indicates that work for the work item cannot continue until all issues preventing further progress are
removed. If any related task or child work item has been marked blocked, this field will automatically be
set in the detail editor. You can also manually block the work item from the detail editor. The Blocked field

 633



 Rally®

displays in the Iteration Status page (board view) and Team Board page (board view). On list views, use the
Show Fields button to add the Blocked column. The work item remains in the associated schedule state
so the initial state of the work item is not lost.

Schedule State Indicates the progress that has been made toward the completion of the work item. There are six states
that can be set from the drop-down list. The first and last states can be customized by your subscription
administrator to help you better manage your process. The following list identifies the default states that the
user story can move through:

• Defined: The user story is elaborated enough that the development team can write tasks and provide
estimates. This is the defaulted state value for a new user story and cannot be customized. When the
states for all children user stories are set to defined, the parent user story is automatically rolled up to
reflect the Defined state regardless of its initial setting.

• In Progress: The user story has been committed to an iteration and work has begun on the user story.
When the state for any child user story or task is set to defined, the parent user story is automatically
rolled up to reflect the Defined state regardless of its initial setting. This state cannot be customized.

• Completed: All related tasks and user stories have been completed. When the states for all of the tasks
and children user stories are set to Completed, the parent user story is automatically rolled up to reflect
the Completed state regardless of its initial setting. This state cannot be customized.

• Accepted: All acceptance criteria for the user story has been met. When the states for all of the
children user stories are set to Accepted, the parent user story is automatically rolled up to reflect the
Accepted state regardless of its initial setting. This state cannot be customized.

Plan Estimate Number of iteration units estimated to complete the work item. This field is a real number and can accept
three digits followed by a decimal and two more digits. The units are defined by your administrator. This
field is rolled up (accumulated) from child work items and displayed as a total.

Iteration Indicates the iteration to which the work item is assigned. The drop-down list includes the current iteration
as well as five future iterations and five past iterations to choose from. Choose Unscheduled to keep the
work item unscheduled from an iteration.

Release Indicates the release to which the work item is assigned. The drop-down list includes the current release as
well as one past release to choose from. Choose Unscheduled to keep the work item unscheduled from a
release.

Milestones Add milestones to track progress towards deliveries and deadlines.

Quality Management
The Quality Management page provides you with a single location to organize and manage test cases into test folders.
When planning your test effort, assemble test cases in a hierarchy of folders, and then see the summarized results.

This section includes the following topics:

• Using the Quality Management Page
• Test Folders
• Test Cases

Using the Quality Management Page
You can manage test folders and test cases from the Quality Management page.

 634



 Rally®

View options are located in the upper-right corner of the Quality Management page. Switch between views to see the
following:

View Description

Test Cases View Test cases that are not structured in a test folder (unparented).

Mixed View Shows a side-by-side view of unparented test cases and test
folders.

Test Folders View Shows a more detailed view of your test folders.

Charts View Display a chart showing test case information. Test cases can be
displayed by:
• Method
• Type
• Verdict
• Owner
The default date range is the previous two weeks, starting today.
You can define the date range for the report using the Start Date
and End Date filters.

Filters

Use filters to narrow down what displays on the Quality Management page. Learn more.

Display Preferences

You can choose between three page display preferences. Select the preference that works best for your current needs
and the size of the display you’re using. Learn more.

Show Columns

You can configure your list view to use the fields you are interested in as display columns. After you configure your list
view, you can save it so you can use the same view later.

 635



 Rally®

NOTE
You can reorder columns (except for Rank, ID, or Name) by dragging and dropping the column header to the
new location.

1. Select Show Fields from the toolbar. 
2. Select the fields you want to display.
3. Select Apply to save your changes.

Display Test Folder Status

The following statuses display:

• Passing test cases (green)
• Failing test cases (red)
• Other (yellow), includes all other test case result verdicts not passing or failing, such as inconclusive, error, or custom

values
• No result (gray)
• No test cases (light gray)

1. Select Quality, Quality Management.
2. Add the Test Folder Status column. Learn more.
3. Hover over the status bar to display details.

Create a Test Folder or Test Case

You can create a test folder or test case on the Quality Management page.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Quality Management.

2. Select the + Add New button at the top of the respective pane.

3. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 636



 Rally®

4. Select Create.

Edit a Test Case or Test Folder with the Detail Editor

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

1. Select Quality, Quality Management.

2. Select the FormattedID of the test folder or test case you want to edit.

3. In the detail editor, make any necessary changes.

4. Select Save.

Edit Multiple Fields in a Test Case or Test Folder

You can edit one or more fields in a single work item, or one or more common fields in multiple work items.

You can only work with one pane at a time when editing work items, either the Unparented Test Cases pane or the Test
Folders pane.

1. Select Quality, Quality Management.

2. From the respective pane, select one or more work items and then select Edit

in the toolbar.

3. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field.  

4. Select Apply to save your changes.

Delete Test Folders or Test Cases

Child test folders are not deleted with parent test folders. The Parent field of the child folder is cleared and child folders
display on the Quality Management page unless you delete them as well.

You can only work with one pane at a time when editing work items on the Quality Management page, either the
Unparented Test Cases pane or the Test Folders pane.

1. Select Quality, Quality Management.

2. From the respective pane, select one or more work items that you want to delete.

3. Select Delete

from the toolbar.

Test Folders
Use test folders to organize and group your tests into functional areas. To organize your test cases, you can create a
hierarchy of test folders by assigning a parent test folder and creating child test folders.

You can also work with test folders on the Test Plan page. Learn more.

 637



 Rally®

Assign a Parent Test Folder

The Quality Management page allows you to easily view unparented test cases as well as available test folders. You can
easily drag-and-drop from one pane to another.

• Drag an unparented test case to a test folder.
• In the Test Folders pane, drag a test case or test folder to a different test folder.

Create Child Test Folders

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Quality, Quality Management.
2. From the Test Folders pane, select the check box of the test folder for which you want to create a child folder.
3. Select Add Child

from the toolbar.
4. Select Test Folder from the Work Item Types drop-down list.
5. Use the Projects field to select a project if you want to associate the work item with a different project than the one

currently in scope.
The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.
Required fields are marked with an asterisk (*).

7. Select Create.

Test Cases
Use the procedures in this section to manage test cases.

You can also work with test cases on the Test Cases page. Learn more.

Import Test Cases

You can import test cases with test steps by selecting Import/Export

and then selecting Import Test Case. Learn more.

Add Test Cases to Test Folders

Add test cases to test folders using drag-and-drop.

 638



 Rally®

NOTE

• Test cases can only be added to a single test folder.
• Only test cases from the selected project can be added to a test folder.
• The chooser only displays test cases that reside in the selected project.
• If a test case contained within a test folder is moved to a different project, the Test Folder field of the test

case is cleared.

Rank Test Cases in a Test Folder

To rank test cases on the Quality Management page in an executable order by using drag-and-drop:

1. Select the test case and drag it to the correct placement.

NOTE
You must sort the page by rank ascending in order to use drag-and-drop ranking. Drag-and-drop ranking is
enabled by default. Talk to your administrator to verify that your workspace uses the default.

If your workspace is set to use manual ranking, you can change the order or priority of a test case on the Quality
Management page.

1. Select the rank of a work item and enter a rank value.

Remove a Test Case From a Test Folder

You can remove a test case from a test folder.

• Select the test case and select Remove

.
• Drag-and-drop a test case to a different test folder, or to the Unparented Test Cases pane.

Managing Risks
The Risk feature in Rally ensures that risks are visible and accounted for as a plan is being executed.

You can:

• Create a ROAM board to help facilitate conversations at planning ceremonies and throughout the execution of a plan.
• Track the progress and resolution of Risks over time, assigning tasks to team members to ensure that the proper steps

are being taken to resolve them.

Watch a short YouTube tutorial on using risks.

NOTE
Most individual tutorial videos are also part of more comprehensive Rally training courses that are
available from the Rally Help menu. To view available free Rally courses, select the Rally Help menu

and then select Rally Learning Portal.

This section contains the following topics:

 639



 Rally®

• Create a Risk in Work Views
• Create a Risk on a Work Item
• Link a Risk to a Work Item
• Risk Fields
• Viewing and Editing Risks
• How to ROAM Risks With a Custom Board

Create a Risk in Work Views
You can create a standalone risk in Work Views, independent of a portfolio item or user story.

NOTE
You can quickly create a work item by using the toolbar in most list and board views. Select Add New, complete
the suggested fields, and then select Create. Some required fields may have default values. You can edit the
work item to add details at a later date.

You can use this method to add multiple items in succession such as multiple peer or child work items for a
selected work item.

If your workspace administrator has made some work item fields required, this feature is not available.

1. Select Plan, Work Views.

2. Select Add New from the toolbar.

3. In the Work Item Types drop-down list, select Risk.

4. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

5. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

6. Select Create.

Create a Risk on a Work Item
You can create one or more risks associated to the same portfolio item or user story.

1. Navigate to a page containing the work item where you want to create a risk.

2. Select the FormattedID of the work item.

3. Select Risks

to open the Risks page.

4. Select Add New from the toolbar.

5. Use the Projects field to select a project if you want to associate the work item with a different project than the one
currently in scope.

The Projects field defaults to the current project.

6. Select Create with details to view the item in the detail editor and complete any necessary fields.

Required fields are marked with an asterisk (*).

 640



 Rally®

7. Select Create.

Link a Risk to a Work Item
You can associate one or more risks to the same portfolio item or user story.

1. Navigate to a page containing the portfolio item or user story where you want to associate a risk.

2. Select the FormattedID of the work item.

3. Select Risks

to open the Risks page.

4. Select Link Existing

from the toolbar.

5. Within the Choose Risks dialog box, select the risk to associate. You can filter by project and use the search field to
help locate the risk(s) you want to associate.

6. Select the work item(s) you want to associate and select Done.

Risk Fields
Probability The probability value of the risk, where 1 is low and 5 is high. You can also assign a value of None.

Impact The impact value of the risk, where 1 is low and 5 is high. You can also assign a value of None.
Size of Loss The size of loss that this risk poses. This may be a monetary cost that can be represented by a dollar

amount, a number of days delayed or lost, or a relative value agreed to by the organization (similar to story
points). Be sure to pick a consistent method to ensure that the exposure calculation is consistent for all
risks.

Exposure This is a calculated field, and cannot be edited.

Exposure of the risk is calculated by multiplying the size of loss by the probability of the risk:

Size of Loss * Probability/5

As the portfolio item moves along, the exposure should burn down as the chance of risk is reduced or as
mitigating actions are taken.

Calculated Risk This is a calculated field, and cannot be edited.

Calculated risk is a measure of the severity of the risk that is based on the impact multiplied by the
probability. You can use this value to determine which risks need to be mitigated. This chart shows the
severity of calculated risk based on impact and probability.

 641



 Rally®

Calculated risk is an integer value from 1 to 25, calculated by multiplying the probability by the impact. You
cannot edit the value, except by changing the probability or impact value.

With this information, you can make decisions about which risks to mitigate, which ones to plan for, and
which ones to monitor or accept. For example:

Response If program risks are raised during Big Room Planning or Program Increment Planning, teams can ROAM
these risks using this field. It indicates whether the risk has been:

• Resolved
• Owned
• Accepted
• Mitigated

Resolution A short description of the response. Limited to 256 characters.

 642



 Rally®

Viewing and Editing Risks
You can view or edit risk work items in the detail editor.

NOTE
In most pages, you can inline edit displayed fields. Select the field and type your changes. Your changes are
saved when you navigate away from the field.

View a Risk in the Detail Editor

Risks are shown as a collection under the parent work item.

1. Select the FormattedID of the work item.
2. Select Risks

to open the Risks page.

Add Tasks to Mitigate or Resolve Risks

The Tasks collection for a risk allows you to create actions that can be included and planned for in team work to mitigate
or resolve risks if needed.

When a risk is deleted, all tasks associated to that risk are also deleted.

1. Select the FormattedID of the risk.
2. Select Tasks

to open the Tasks page.
3. Select Add New from the toolbar.
4. Add or update a task as necessary.

Associate a Risk to Work Items Affected

The Work Items Affected collection contains work items that are affected by the selected risk.

1. Select the FormattedID of the risk.
2. Select Work Items Affected

to open the Work Items Affected page.
3. Associate the risk to a work item, either by creating a new work item or choosing an existing work item.

How to ROAM Risks With a Custom Board
ROAM is a specific model for risk management where the team sorts risks into one of four categories.

The ROAM categories are:

• Resolved – the teams agree that the issue or risk is no longer a concern
• Owned – someone on the team accepts ownership of the risk
• Accepted – the team understands and accepts the potential risk; no additional action is required
• Mitigated – the team identifies a plan to reduce the impact of the risk

Rather than developing a specific ROAM board to allow you to set the risk Resolution to Resolved, Owned, Accepted, or
Mitigated, we recommend using Work Views, a custom list, or a custom board (shown in the example).

 643



 Rally®

After setting up this board, you can then use it to create risks and ROAM them in your planning events.

1. Create a custom page for ROAMing risks. Learn more.

2. Add a Custom Board app from the app catalog. Learn more.

3. Configure the Custom Board app so that it displays risks using the resolution for the columns.
a) Select the Gear

for the board and select Settings.
b) Complete the following fields as specified. Other available fields will vary depending on your configuration.

Field Value

Title ROAM Board

Type Risk

Columns Response

Order Rank
c) Select Save.

Importing and Exporting Data
You can import and export data in the format of a CSV (comma-separated value) file from most list pages in Rally.

When exporting data, you can customize what data you want to export by configuring the list view to display the fields you
are interested in.

When importing data, you customize a provided CSV template to includes the work item field values you want to import
for each work item, represented by a row in the CSV file. Not all work item fields are available for import. For example, you
cannot import values for a timebox field such as Release or Iteration.

When you import data, you can only create new work items. You cannot append or update existing work items when
importing data.

If you need to do advanced imports that include relationships, you should use the Rally Add-in for Excel.

If you are importing test cases, read more here.

Use the following guidelines when importing data:

 644



 Rally®

• If your administrator has marked some fields as required, you must provide values for those columns in the CSV file.
• If drag-and-drop ranking is enabled for your workspace, you cannot export ranking values or make changes to them on

import.
• Importing values for timebox fields (Release, Iteration) is not supported.
• You cannot import a value for the Project field; all artifacts that are imported will be added to the current project.
• The schedule state of a task you import can update the state of the user story or defect it is associated to, if your

project settings allow this.
• If you refer to an item in the Recycle Bin or an item that has been deleted, that line will fail on import.

This section includes the following topics:

• Import Data
• Export Data

Import Data
To import work items, start from the page where you want to import items and scope to the project to which you want to
import the work items.

The following table lists the supported field types.

Imported Field Type Work Item Type Field-Level Specifications

Name All Required. Limited to 256 characters.

Owner All Owner value must  be in email format:
user@example.com and already exist
in Rally.

Text field (including Description and Notes
fields)

All Limited to 32K (imported through
a CSV file).

Boolean All Valid values: t, f, T, F, True, False, true,
false.

Drop-down list, single value All

Drop-down list, multi-value All When importing multiple values for a
drop-down list, you must separate each
value with a semi-colon. For example,
value1;value2;value3

Date All Dates must be formatted as mm/dd/yyyy

String All Limited to 256 (or 128) characters.

Unified Parent (used in user stories) User Story May be a required field, depending
on workspace settings. Enter
the FormattedID or ObjectID of the parent.
The work item must already exist.

Parent (used in portfolio items) Portfolio Item May be a required field, depending
on workspace settings. Enter
the FormattedID or ObjectID of the parent.
The work item must already exist.

Work Product (used in tasks) Tasks Required field when importing tasks. Enter
the FormattedID of the associated work
item (ex, US123 or DE456). The work item
must already exist.

 645



 Rally®

Imported Field Type Work Item Type Field-Level Specifications

Test Folder (used for test cases) Test Cases Enter the FormattedID of the associated
test folder (ex, TF123). The Test Folder
must already exist.

Object Type Test Cases Required when importing test cases. Object
Type should be set to Test Case for test
cases and Test Case Step for test cases
associated with the imported test case.

1. Use the project picker to select the project to which you want to import data.

2. Download the example CSV file.
a) From the page where you want to import work items, select the appropriate menu item from the Actions menu or

Import/Export

.
b) Select Import.
c) On the Import dialog, download the CSV file template using the import template link in the dialog box.

3. Customize the downloaded CSV file with the field header columns you want to import and add values for the data.

Workspace fields that you are required to enter contain the text "required field" in the template contents.

You can add or delete field header columns as needed, although the file must remain in CSV format.

4. Upload your CSV file.
a) From the page where you want to import work items, select the appropriate menu item from the Actions menu or

Import/Export

.
b) Select Import.
c) Select Browse or Choose File to locate your CSV file.
d) Select your file and select Open.
e) Optionally, select your character encoding.

Depending on where you are when importing, this may require selecting the advanced link.

5. Select Import.

Your data is imported and displayed at the top of the page.

Example CSV Files
The import dialog contains a link to download data import templates which helps you format your CSV file
correctly to ensure all your data is imported. To successfully import a file, the column headers must be
formatted in the same way as the data import template. Rally suggests you download the provided template
to verify correct formatting each time before you import your file. You can modify this template by adding
or deleting included fields (column headers). You can view a sample CSV file by selecting the import
template link that is provided in Rally's import wizard that is available on most list pages. CSV file formatting
considerations:

Example: Importing
a Single User Story

In the following example, the first line of the data import CSV file consists of column headers
(field names). The second line of the template contains sample data. This example includes text
for the Notes field which includes commas. In this case, the Notes value is enclosed in quotes.
Name,Description,Notes,Owner,Schedule State,Plan Estimate

 646



 Rally®

Sample Name (required field),Sample Description,"These are three notes:

 one,two,three",name@example.com,Defined,1

Example: Importing
a User Story that
Includes a Multi-

Value Drop-down List

The following example includes adding values to a multi-value drop-down list field named
Browsers Tested. Notice how the multiple values are separated by semi-colons.
Name,Description,Owner,Schedule State,Plan Estimate,Browsers Tested   

Adding item to shopping cart,Add the ability to use the shopping

 cart,name@example.com,Idea,3,Chrome;Firefox

Export Data
You can export data from user stories, test cases, defects, releases, iterations, portfolio items, and tasks. You can
customize what data you want to export by configuring the respective list view to display the fields you are interested in.

You must have at least edit-level permissions for the work items you want to export. When you export a list, you export
only the top-level work item that exists in the list. For example, when you export a list of user stories from any page, the
exported file will not include the tasks associated with those user stories.

You can export your data to a CSV file. Open this file with any application that can access the file format and manipulate
your data to display in charts, reports, and other presentations. The date and time format in your exported data will have
the following format: 2019-06-10T21:26.13.984Z.

If the data in your export includes special characters like Unicode UTF-8 characters, you need to open the export with an
application that is configured to read UTF-8 characters. Otherwise, the characters will not appear in your export.

NOTE
You can export to XML from the legacy User Stories page.

Select Import/Export

and select one of the following:

• Download CSV of this view: Create a CSV file using the fields currently selected on your window
• Download CSV with more columns: Select additional fields to include in the CSV file

Exporting Data as XML
You can export to XML from the legacy User Stories page.

NOTE
If you are using the XML export option and have a large data set containing thousands of work items, the export
may time out causing the export to fail. To avoid this, reduce your data set or use the CSV export option or Rally
Add-in for Excel.

XML exports references to the objects, not the actual child collections. Collections include:

 647



 Rally®

• Artifact → Changesets
• Artifact → Tags
• Build → Changesets
• BuildDefinition → Builds
• BuildDefinition → Projects
• Change → Artifacts
• Change → Builds
• Change → Changes
• Defect → Changesets
• Defect → Duplicates
• Defect → Tasks
• Defect → Test Case Result
• Defect → Test Cases
• Defect Suite → Defects
• Defect Suite → Tasks
• Userstory → Changesets
• Userstory → Children
• Userstory → Defects
• Userstory → Predecessors
• Userstory → Successors
• Userstory → Tasks
• Userstory → Test Cases
• PortfolioItem/Feature → UserStories
• PortfolioItem/Initiative → Children (PortfolioItem/Feature)
• PortfolioItem/Strategy → Children (PortfolioItem/Initiative)
• Project → BuildDefinition
• Project → Children
• Project → Editors (Users)
• Project → Iterations
• Project → Releases
• Project → TeamMembers (Users)
• SCMRepository → Projects
• Subscription → Workspaces
• Test Case → Results (Test Case Results)
• Test Case → Steps (Test Case Steps)
• TestFolder → Children (Test Folder)
• TestFolder → TestCases
• TestSet → Tasks
• TestSet → TestCases

 648



 Rally®

Reporting
Learn how to use Rally to report on your work.

• Rally Reports and Charts
• Track and Report Billable Time
• Rally Insights

Rally Reports and Charts
Rally provides a number of reports and charts to help you track progress and obtain insights about your agile practices.

Select the Reports menu to view them all. Some reports are also available as apps in your dashboard.

Choose from these types of reports and charts:

• Burndown / Burnup Charts
• Cumulative Flow Charts
• Throughput and Velocity Charts
• Defect Analysis Charts
• Build Health Charts
• Custom Reports

NOTE
The data rollup for some charts and graphs occurs at the end of the time period, while the legend label indicates
the beginning of the time period. You will not see data for a time period while it is still being collected.

NOTE
Rally enforces the following two limits in order to ensure the optimal performance of Rally Reports.

• The maximum date range visible on a report is 13 months.
• The maximum number of projects viewable on a report is 200.

Attempting to view more than 200 projects at a time results in no data being returned to the report.

View Reports and Charts

Most charts are accessible through the Reports menu.

1. Select Reports, Reports.

• Enter a keyword in the Report Filter field to limit the list to reports that contain that keyword.
• Turn off the Show Details toggle to see only the report names and hide the images and descriptions.

2. Select a report or chart to view.

• You can hover over most chart elements to see additional details for that element.

Burndown / Burnup Charts
Rally provides the following reports that are related to the burnup and burndown of iterations, releases, and stories.

 649



 Rally®

• Iteration Burndown Chart
• Iteration Burnup Chart
• Release Burnup Chart
• Story Burnup Chart
• Story Burndown Chart
• Tagged Story Burndown Chart

You can access these charts through the Reports menu or add these charts as custom pages. Not all charts are available
as apps.

Iteration Burndown Chart
The Iteration Burndown chart displays work remaining and completed in the iteration to proactively anticipate whether the
committed work will be delivered by the iteration end date.

This chart is also useful during iteration retrospective meetings, to help identify events during the iteration or problems
with estimation during planning.

Features include:

• Remaining task hours are blue bars.
• Completed story points are green bars.
• Ideal burndown rate is a black line, based on the task estimate.
• Hover over the bars or line to see detailed figures on current and past progress.
• Enable the legend for the app from the Settings menu.

Iteration Burnup Chart
The Iteration Burnup chart displays work delivered so far in the iteration to proactively anticipate whether the iteration
scope will be delivered.

 650



 Rally®

Features include:

• The vertical axis represents the accepted work in hours.
• The horizontal axis represents the dates.
• Completed story points are green bars.
• Total scope of work in the iteration is a black line.
• Hover over the bars or line to see detailed figures on current and past progress.
• Enable the legend for the app from the Settings menu.

A burnup chart differs from a burndown chart in that the burnup includes a scope line that allows you to visualize when
work has been added or removed from the project. The chart also represents a more realistic completion date for a
project.

Release Burnup Chart
A burnup chart tracks how much work is done. The burnup chart can show more information than a burndown chart
because it also has a line showing how much work is in the project as whole (the scope as workload), and this can
change.

The burnup chart displays work delivered so far in the release to predict whether the release date will be met.

Hover over any section of either line to display the exact number of units accepted and those planned for the release per
day.

 651



 Rally®

Story Burnup Chart
The Story Burnup chart displays work completed on a story or a feature (epic story) supported by a group of stories.

Each day, the work on a story that has been delivered is calculated and graphed, resulting in a burnup chart. Stories
are frequently scheduled by many teams across many iterations and releases. As a result, the Story Burnup chart is
most useful when tracking features or products that have been defined as a collection of stories organized into an epic
hierarchy.

The amount of accepted work (completed, tested, and met acceptance criteria) is graphed in a burnup chart. The amount
of work in an accepted state starts at zero and shows the progress of epic stories by reporting over the collection of epic
children stories.

A burnup chart tracks how much work is done. The value in the burnup chart is that it clearly illustrates change in scope,
whether it is the addition of scheduled stories or a change in an estimate. Scope change is a common challenge for
teams.

Story metrics are displayed above the Story Burnup chart. Metrics include the following information:

• Estimated: Plan estimate
• Scheduled in a release: How many stories are scheduled in a release
• Number of points versus number of accepted: Points of estimated child stories
• Forecasted completion date: Based on current progress rate and scope, the date will change if scope is added or the

progress rate of teams working on the story changes

 652



 Rally®

The green bars represent accepted work. The amount of work completed becomes larger and larger as development
progresses until it reaches 100% completion. A red dotted line represents release dates.

The Story Burnup chart also includes a trend line. The trend line is the rate work is being accepted (done). The key value
of this report is when the trend line intersects the scope line. The intersection of these two lines indicates a forecast of
completion. Given that epics (stories) do not have fixed deadlines or dates, this is a unique way to get visibility into the
expected delivery of a set of stories, features, and so on.

The Story Burnup chart provides an expected completion date up for epic stories completed in a year or less. A trend line
not intersecting the scope line indicates a completion date further than a year away.

The date range on this report is automatic. The report begins when there are estimates on at least one child story. The
end date of the report is today if the trend line intersects the scope line today or earlier. Otherwise, the end date is the
date when the scope line intersects the trend line or 365 days after today, whichever comes first.

1. Select Reports, Reports.

2. Select Story Burnup.

3. Enter an ID or keyword (the keyword must include at least three characters) in the Story text box. A Story ID search
must include the story prefix before the ID number.

Story keyword search is case-sensitive.

4. Select a user story from the drop-down list to view the chart for that item.

Story Burndown Chart
The Story Burndown Chart displays the trend of total accepted points across all children stories, with release markers and
metrics.

Each day, the estimated work remaining to deliver a story is calculated and graphed, resulting in a burndown chart.
Stories are frequently scheduled by many teams across many iterations and releases. As a result, the Story Burndown
Chart is most useful when tracking features or products that have been defined as a collection of stories organized into an
epic hierarchy.

 653



 Rally®

Story metrics are displayed above the Story Burndown chart. Metrics include the following information:

• Estimated: Plan estimate
• Tasked: How many stories have at least one task
• Scheduled in a release: How many stories are scheduled in a release
• Number of points versus number of accepted: Points of estimated child stories

The green bars represent accepted work and the blue bar represents tasks. The amount of work remaining (Task To Do
and Accepted) becomes smaller and smaller as development progresses until it reaches point zero. A red dotted line
represents release dates.

1. Select Reports, Reports.

2. Select Story Burndown.

3. Enter an ID or keyword (the keyword must include at least three characters) in the Story text box. A Story ID search
must include the story prefix before the ID number.

Story keyword search is case-sensitive.

 654



 Rally®

4. Select a user story from the drop-down list to view the chart for that item.

5. Change the start date using the drop-down calendar.The default start date of any Story Burndown Chart is today
minus 30 days.

Tagged Story Burndown Chart
The Tagged Story Burndown chart displays the trend of total accepted points aggregated for all stories tagged with a
common tag.

Each day, the estimated work remaining to deliver a story is calculated and graphed, resulting in a burndown chart.
Stories are frequently scheduled by many teams across many iterations and releases. As a result, the Tagged Story
Burndown chart is an effective way to report on features or products worked on by multiple teams by leveraging a
common tag identifying the various parts of that feature or product.

Story metrics are displayed above the Tagged Story Burndown chart. Metrics include the following information:

• Estimated: Plan estimate
• Tasked: How many stories have at least one task
• Scheduled in a release: How many stories are scheduled in a release
• Number of points versus number of accepted: Points of estimated child stories

The green bars represent accepted work and the blue bar represents remaining task hours. The amount of work
remaining (Task To Do and Accepted) becomes smaller and smaller as development progresses until it reaches point
zero. Red dotted lines represent release dates.

 655



 Rally®

1. Select Reports, Reports.

2. Select Tagged Story Burndown.

3. The default start date defaults to today minus 30 days. Change the start date using the drop-down calendar.

4. Enter a tag in the Tag text box (the keyword must include at least three characters). Tag keyword search is case-
sensitive. The Tagged Story Burndown chart returns story information only (no defects or test cases). Multiple tags are
not supported.

5. Select a tag from the drop-down list to view the chart for that item.

Cumulative Flow Charts
Rally provides the following reports that are related to cumulative flow for iterations, releases, and stories.

• Iteration Cumulative Flow Diagram Chart
• Release Cumulative Flow Diagram Chart
• Story Cumulative Flow Diagram Chart

You can access these charts through the Reports menu or add these charts as custom pages. Not all charts are available
as apps.

Iteration Cumulative Flow Diagram Chart
The Iteration Cumulative Flow diagram displays the rolled up states of all scheduled items to help you plan and track your
iterations.

This diagram displays all scheduled work items for the iteration in incremental collections of days as the horizontal axis.
Each day displays the rolled up states of all scheduled items for the increment. The vertical axis of the chart references
the total plan estimates in your specified units.

 656



 Rally®

Use this diagram to:

• Forecast and track progress: The states of the scheduled work items indicate the progress of your development as
it moves to completion. To determine if you are on target to complete the work within the scheduled iteration, track the
accepted state.

• Manage scope: As your scheduled work item bars become level, it is easy to see when excess work is added to an
iteration. If the level of the bars do not remain uniform and instead continue to increase, you need to re-address the
scope of your iteration.

• Identify bottlenecks: Use the rolled up states of your scheduled work items to determine if there are trends that
indicate bottlenecks. For example, a large section of scheduled items in a completed state as compared to a small
amount of accepted may indicate a testing roadblock.

Release Cumulative Flow Diagram Chart
The Release Cumulative Flow diagram displays the rolled up states of all scheduled items for a selected release.

Use this diagram to easily track the progression of work item states as the release moves toward acceptance. This
diagram displays the amount of plan estimate units per state for all stories or work items within a release per day. The Y
axis references the amount of plan estimates displayed in your specified units, while the X axis records each day of the
release.

 657



 Rally®

Use this diagram to:

• Forecast progress: The states of the scheduled items indicate the progress of your development as it moves to
completion. To determine if you are on target to complete the work within the scheduled release, track the accepted
state.

• Manage scope: As your scheduled item bars become level, it is easy to see when excess work is added to a release.
The top level of the bars should correlate to the total scope line of your Release Burndown chart. If the level of the bars
do not remain uniform and instead continue to increase, you need to re-address the scope of your release.

• Identify bottlenecks: Use the rolled up states of your scheduled items to determine if there are trends that indicate
bottlenecks. For example, a large section of scheduled items in a completed state as compared to a small amount of
accepted may indicate a testing roadblock.

Hover over any bar section to display the exact number of units in each state per day.

Story Cumulative Flow Diagram Chart
The Story Cumulative Flow diagram helps you track your stories. Use this diagram to easily track the progression of
stories as the release moves toward acceptance.

This diagram displays all scheduled work items for the iteration in incremental collections of days within an iteration on
the horizontal axis. Each day displays the rolled up states of all scheduled items for the increment. The vertical axis
references the total plan estimates displayed in your specified units.

A story must contain scheduled tasks before the Story Cumulative Flow diagram displays.

 658



 Rally®

Use these charts to:

• Forecast and Track Progress: The states of the scheduled work item indicate the progress of your development as
it moves to completion. To determine if you are on target to complete the work within the scheduled iteration, track the
accepted state.

• Manage Scope: As your scheduled item bars become level, it is easy to see when excess work is added to an
iteration. If the level of the bars do not remain uniform and instead continue to increase, you need to re-address the
scope of your iteration.

• Identify Bottlenecks: Use the rolled up states of your scheduled items to determine if there are trends that indicate
bottlenecks. For example, a large section of scheduled items in a completed state as compared to a small amount of
accepted may indicate a testing roadblock.

Hover over any section to display the exact number of units in each state per day.

1. Select Reports, Reports.

2. Select Story Cumulative Flow.

3. Enter an ID or keyword (the keyword must include at least three characters) in the Story text box. A Story ID search
must include the story prefix before the ID number.

Story keyword search is case-sensitive.

4. Select a user story from the drop-down list to view the chart for that item.

5. The default start date of any Story Cumulative Flow diagram is today minus 30 days. Change the start date using the
drop-down calendar.

Throughput and Velocity Charts
Rally provides the following reports that are related to throughput and velocity.

• Cycle/Lead Time Chart
• Throughput Chart
• Velocity Chart

You can access these charts through the Reports menu or add these charts as custom pages. Not all charts are available
as apps.

 659



 Rally®

Cycle/Lead Time Chart
The Cycle/Lead Time chart lets you view the average number of days it takes work to flow through your process.

You can measure the time that it takes for work to pass through Rally schedule states to acceptance. This is useful for
teams who use Kanban and Lean practices in Rally.

NOTE
The data rollup for the Cycle/Lead Time chart occurs at the end of the time period, while the legend label
indicates the beginning of the time period. You will not see data for a time period while it is still being collected.

Use this chart to detect trends and consider questions like:

• How long does it take, on average, for a work item to pass from an idea to completion?
• Once completed, how long does it take to accept a work item?
• What is the nature of outliers?
• How many stories or defects of similar size should we be able to accept in a given time period?

You can also add this chart as an app on your dashboard. Once you add the chart as an app, you can specify the
following from Settings:

• The date range (default is 12 months).
• Work item(s) you want to display.
• The start schedule state that determines when the cycle measurement time should begin.

– For example, selecting a start schedule state of In-Progress means that the cycle time reported on the chart does
not include a work item in schedule states that occur prior to In-Progress.

• The end schedule state that determines when the cycle measurement time should end (default is Accepted).

 660



 Rally®

How is The Cycle/Lead Time Chart Calculated?

The Cycle/Lead Time chart displays the time that it takes for work to pass through Rally schedule states that you specify.
The x-axis displays the month, while the y-axis displays the average number of days to complete the work item within a
given month.

For example, a defect is marked In-Progress, then handed off by a team and placed back in Defined. The new team later
sets it back to In-Progress. Where does the clock start? The clock restarts once it crosses the boundary the second time.
It is measured from the last time that it crosses the first boundary to the last time it crosses the second boundary.

Helpful hints:

• The start schedule state (any value other than the custom final schedule state) and the begin date of the chart (default
is 12 months back) determine when you begin the clock for the average calculation.

• The final schedule state (Accepted or the final custom schedule state) and the end date of the chart (default is the
previous complete month) determine when you stop the clock for the average calculation.

• Work items are only included in the chart if they are set to the final schedule state (Accepted or custom value after
accepted) within the time period specified by the report.

• In order to display a period of time on the chart, the period of time must have completed. If the chart is showing weekly
data, the current week must complete before it will appear on the chart. This creates a lag in the chart to produce like
measurements across similar time periods.

NOTE

• If a work item crosses both boundaries at the same time, it is included, but its lead time is zero. The
Throughput and Cycle/Lead Time charts are not using different data; rather, the work item displays as non-
zero on the Throughput chart but zero on the Cycle/Lead Time chart.

• If you run the Kanban board, the chart processes non-null values in the field you use to organize in
your Kanban board.

Throughput Chart
The Throughput chart displays a count of work items that are accepted in a given interval such as weeks, months,
quarters.

This chart displays the number of accepted work items for the specified time period. You can display user stories, defects,
or both.

If defects are displayed on the chart, both defects that are associated to user stories and standalone defects that have
been accepted are included. However, if a defect is associated to an accepted user story, but the defect itself is not
accepted, it is not counted.

NOTE
The data rollup for the Throughput chart occurs at the end of the time period, while the legend label indicates the
beginning of the time period. You will not see data for a time period while it is still being collected.

 661



 Rally®

The Throughput chart helps you use past history to predict how much work your teams may accept in a similar time
period. The chart displays the number of work items that your teams have accepted over the past 12 months and a
metrics summary (number of work items) over the reporting period.

Use this chart to detect trends and consider questions like:

• How many work items of similar size should we be able to accept in a similar, future time period?
• What factors might affect throughput?

NOTE
If you want to set a custom date range, you must add the Throughput app.

Velocity Chart
The Velocity chart displays all accepted plan estimate units for each of the last 10 completed iterations. This chart helps
measure the pace at which teams get work done and how much work a team can accomplish in a given iteration.

Use this chart to determine your iteration velocity across projects within scope in the current workspace.

 662



 Rally®

The Iteration Velocity chart only displays values for the last 10 (or fewer) iterations in which work items have been
scheduled. Only iterations whose end dates are earlier than the current date display. Velocity charts are dynamic. If you
move a story out of the iteration after it ends, the results of the chart will change.

• Hover over any bar section to display the exact number of plan estimate units accepted, accepted after the iteration
ended, or not accepted.

• The dark green line represents the proposed velocity, which is the average accepted points in the last 10 iterations.
• Dark green bars show the total amount of accepted work that was delivered by the last day of the iteration. This value

is based on the data that was collected at the end of the day.
• Light green bars show the total amount of accepted work that was delivered since the last day of this iteration. This

value is based on the difference between what was accepted during the iteration (before the end of the last day) and
now.

• Red bars show the total amount of work during the iteration that was not accepted.

NOTE
If there was nothing scheduled in the iteration on the last day of the iteration, that iteration is not shown in the
chart. This prevents an empty iteration from taking up one of the last 10 iteration slots.

Defect Analysis Charts
Rally provides the following reports that are related to defect analysis.

 663



 Rally®

• Iteration Defects by Priority Chart
• Iteration Defects by State Chart
• Defects by Priority Chart
• Defects by State Chart
• Defect Trend Chart
• Release Defect Trend Chart
• Top Files by Defects Chart

You can access these charts through the Reports menu or add these charts as custom pages. Not all charts are available
as apps.

Iteration Defects by Priority Chart
The Iteration Defects by Priority chart provides an at-a-glance view of all defects in the selected iteration, categorized by
priority and with any state value other than Closed.

Use this chart to help you quickly track and recognize the number of defects of greatest importance, and to ensure defect
resolution is progressing in line with the iteration time line. This chart is helpful to verify that the most important defects are
resolved first.

The Iteration Defect Priority chart displays a cumulative total of all active defects per day. Defects are arranged by priority
with the highest priority defects displayed at the top of the chart in red.

Iteration Defects by State Chart
The Iteration Defects by State chart displays all defects, regardless of state value, that are associated with the selected
iteration.

Hover over any bar section to display the exact number of defects in each state per day. Use this chart to help you monitor
the defect resolution trend and ensure that you are making progress toward zero defects for the end of the iteration.

 664



 Rally®

The Iteration Defect State chart displays a cumulative total of all defects per day and their related states. The goal is to
have all defects reported as closed on or before the last day of the iteration.

NOTE

• Closed defects are displayed on the chart.
• Updates to the State field of defects directly associated to the iteration are reflected on the chart immediately.
• Updates to the State field of defects associated to user stories or defect suites in the iteration are reflected on

the chart after data collection concludes for the day (12am workspace time).

Defects by Priority Chart
The Defects by Priority chart displays active (not closed) defects categorized by priority over time. Use this chart to
identify defect priority trends such as a spike in the number of P1 defects or a general decrease in the number of overall
defects.

The data is displayed as a stacked column where each priority value is represented by a different color.

• Data for this report is only available back to January 2010.
• The x-axis label represents the moment-in-time values for the last day of the interval. If your report is in months, then

the points above the label 6/2011 are the moment-in-time values as of midnight 6/30/2011.
• When priority or severity filters are applied on the dashboard version, the moment-in-time values (as opposed to the

current values) are used to determine what data is included. For example, if you chose to only include high priority
defects and a defect started out as a high priority but later changed to a lower priority, it would be included in the earlier
columns on the chart but excluded from the later columns.

The x-axis indicates the time period for the data above. By default, it displays all workdays contained within the past 30
days. However, you can change the date range and granularity (weeks, months, quarters) by adding the report as an app
on your dashboard.

 665



 Rally®

View the Defects Page from the Defects Summary Page

You can view the Defects page for the last 30 days from the Defects Summary page.

1. From the Defects summary page, select Actions, then View Charts from the drop-down menu.
2. In the upper-right corner of the chart, select Defects by Priority.

Defects by State Chart
The Defects by State chart displays active (not closed) defects categorized by state over time. Use this chart to identify
defect state trends such as a spike in the number of unassigned defects or a general decrease in the number of open
defects.

The data displays as a stacked column where each state value is represented by a different color. The x-axis indicates the
time period for the data above. By default, it displays all workdays contained within the past 30 days. However, you can
change the date range and granularity (weeks, months, quarters) by adding the report as an app on your dashboard.

• Data for this report is only available back to January 2010.
• The x-axis label represents the moment-in-time values for the last day of the interval. If your report is in months, then

the points above the label 6/2011 are the moment-in-time values as of midnight 6/30/2011.
• When priority or severity filters are applied on the dashboard version, the moment-in-time values (as opposed to the

current values) are used to determine what data is included. For example, if you chose to only include high priority
defects and a defect started out as a high priority but later changed to a lower priority, it would be included in the earlier
columns on the chart but excluded from the later columns.

 666



 Rally®

Defect Trend Chart
The Defect Trend chart displays the cumulative defects activated (opened) versus cumulative terminated (closed) over
time.

The chart displays the rate at which defects are being activated (red series), the rate at which defects are being
terminated (green series), and the trend for the total number of active defects (black series). The net change in total active
defects for the displayed time frame displays at the top of the default chart.

 667



 Rally®

• Data for this report is only available back to January 2010.
• The x-axis label represents the moment-in-time values for the last day of the interval. If your report is in months, then

the points above the label 6/2011 are the moment-in-time values as of midnight 6/30/2011.
• When calculating the current set of defects, any defects that have been deleted are completely ignored. This is true

even if the the defect was active for a period of time during the report timeframe. If a defect is deleted while in an
Open status, that defect would remain Open in the calculation forever, because it would never reach a Closed status.
Ignoring deleted defects provides a more accurate count of activated defects.

• The cumulative terminated and total active series are calculated directly from the data. However, the cumulative
activated series is calculated by subtracting the total active from the cumulative terminated. This is done to ensure that
the information is consistent across the series. If it were calculated directly and a severity or priority filter were applied,
then any changes to the severity or priority that occurred between the activation and termination events would result
in an inconsistency. It might be counted in the activated series but not in the terminated series. For example, you only
want the report to run for High Priority defects. This approach assures that it is removed from the cumulative activated
series the moment that the Priority field is changed from high to low.

Release Defect Trend Chart
The Release Defect Trend chart displays the cumulative defects opened versus cumulative defects closed in a release.

This chart shows the accumulation of open defects over a release, the accumulation of closed defects during the release,
and an indication of active defects (not cumulative) for each day in the release. The chart displays the rate at which
defects are being opened, the rate at which defects are being closed, and the total number of new defects accumulated
over the release. The total number of new defects introduced during the release is at the top of the chart.

The red and green lines show the cumulative count of opened and closed defects, while the black line shows per day the
number of current defects that are not closed.

 668



 Rally®

Hover over any section of either line to display the exact number of units accepted and those planned for the release per
day.

You must leave at least one state unchecked.

Top Files by Defects Chart
The Top Files by Defects chart helps you determine which files in your repository have the most associated defects.

The chart helps you consider questions like:

• Which files are the most problematic?
• Are any files candidates for refactoring?
• Should there be automated tests around specific files?

The chart shows the top ten files with defects that have a commit (change set) in the last 30 days (from the highest to
lowest number of defects). It also shows a cumulative percentage line.

This chart shows only files associated with defects within your project scope.

NOTE
The second-to-last point on right side of the cumulative percentage line is often the most interesting. If it is a
high percentage of defects, it could be valuable to refactor or decompose those files. If it is a low percentage,
improving those files may not be the most effective way to impact overall quality.

Build Health Charts
Rally provides the following reports that are related to build health.

• Build Health Chart
• Build Health by Iteration Chart
• Top Files by Changes Chart

You can access these charts through the Reports menu or add these charts as custom pages. Not all charts are available
as apps.

 669



 Rally®

Build Health Chart
The Build Health chart characterizes your software builds over the last 30 days.

The chart helps you detect trends and consider questions like:

• How often does the build fail?
• When does build quality decline? Is it at end of a release cycle?
• Is the length of the build getting too long?
• Should we move some tests to run each night?

For each day, you can see the number of builds with a successful, failed, incomplete, or unknown status, and the average
build duration in seconds. Hover over any colored portion of the iteration bar to see the total number of builds for the
corresponding status.

Builds are identified by looking both up and down your project hierarchy, regardless of your project scope setting.
This supports the organization of a project or product line with teams that share the same build definitions and SCM
repositories. See Understanding the Rally Project Hierarchy to learn how to organize projects and teams in Rally.

NOTE
A status of Unknown may indicate a problem with an external program called during the build process. Check
to see if the program hangs (reporting back nothing), or if it reports back something that your build script is not
designed to handle.

Build Health by Iteration Chart
The Build Health by Iteration chart helps you analyze your build information using time boxes (such as iterations) that are
significant to your project.

The chart helps you detect trends and consider questions like:

• Does the build data reflect your opinions about which iterations were troublesome?
• Can you use build health as an indicator for process changes?
• Is there evidence of learning from iteration to iteration?
• Is there any correlation between build health and number of builds in an iteration?

 670



 Rally®

For each iteration, you can see the number of builds with a successful, failed, incomplete, or unknown status, and the
average build duration in seconds. Hover over any colored portion of the iteration bar to see the total number of builds for
the corresponding status. The chart reports builds for the last 10 iterations.

The chart uses your project scope setting to identify iterations.

Although it is not recommended, Rally allows you to specify overlapping iterations or gaps between iterations. If an
overlap is greater than a day, the chart will display a message rather than return ambiguous data. In this case, adjust your
project scope to a level where iterations do not overlap, or adjust the date boundaries of your iterations so they do not
overlap.

When builds exist in a gap between iterations, they will be grouped with the previous iteration.

Builds are identified by looking both up and down your project hierarchy, regardless of your project scope setting. This
supports the organization of a project or product line with subteams that share the same build definitions and SCM
repositories. See Project Hierarchy Overview and Understanding the Rally Project Hierarchy to learn how to organize
projects and teams in Rally.

NOTE
A status of Unknown may indicate a problem with an external program called during the build process. Check
to see if the program hangs (reporting back nothing), or if it reports back something that our build script is not
designed to handle.

Top Files by Changes Chart
The Top Files by Changes chart helps you identify the files in your repository that experience the most revisions over the
last 30 days.

The chart helps you consider questions like:

• Which files are candidates for decomposition?
• Should there be additional testing around specific files?
• Where should we start when making changes in our code base?

 671



 Rally®

The chart shows the top ten files with changes (from highest to lowest number of changes) in the last 30 days.The line
shows the average changes for all files.

Files in the entire SCM repository are included for your workspace, regardless of your project scope setting. This supports
the organization of a project or product line with sub-teams that share the same build definitions and SCM repositories.
Learn more about how to organize projects and teams in Rally.

NOTE
The second-to-last point on the right side of the average line is often the most interesting. If it is a high average,
it could be valuable to refactor or decompose those files. If it is a low average, improving those files may not be
the most effective way to impact maintainability.

Custom Reports
Rally provides powerful reporting capabilities to track your team's progress with standard reports. You can also create
custom reports based on your development data to make fact-based, informed decisions. There is no limit to the number
of custom reports you can create.

Two custom report types are available:

• Work items
• Timesheets

Custom reports are based on the current project and any additional filters you define in the custom report definition. If you
choose filters with values partially or wholly outside the scoped project, you may generate incomplete or blank reports.
The list of data to report and the list of available filters are limited to information common to defects, stories, and test
cases.

You can save custom reports on the Reports page, save as PDF, JPG, or CSV formats, or print them with annotations.
You can also edit or delete custom reports from the Reports page. You can share custom reports with other users for
viewing or editing, or they can be kept private.

Create a New Custom Report

You can create a custom report.

1. Select Reports, Custom Reports.
2. Select +Add New in the upper-right corner.

 672



 Rally®

3. From the Type drop-down list, select the type of report.
4. From the I want to see drop-down list, select a value. Add more values as needed.
5. From the Broken down by drop-down list, specify how the data should be grouped in the report.

Add more values as needed. Test case fields, defect fields, and all custom fields (except text-type) are allowed.
6. Optionally, select filter criteria to narrow the report results.

You can select one value for each field to filter, setting different value criteria for each or select the filter value
dynamically for iteration, release, or tag filters. Test case fields, defect fields, and all custom fields (except text-type)
are allowed.

7. Select Run.
From the report preview, you can save the report or save it as PDF, JPG, or CSV formats.

Save a Custom Report

You can save a custom report and share it with others.

NOTE
You must be a subscription or workspace administrator to save and share custom reports. Users who are not
subscription or workspace administrators are limited to the Just me option when saving a custom report.

1. Select Reports, Custom Reports.
2. Run the report and select Save in the upper-right corner.

 673



 Rally®

3. Name the report and add a brief description.
4. Select one of the following options for the report visibility:

– Just me: The report will only be visible to you.
– Anyone can view: The report will be visible (read-only) to everyone.
– Anyone can view, edit, or delete: The report will be visible to everyone and anyone can edit or delete the report.
The custom report is added to your list of custom reports on the Custom Reports page.

Example Custom Reports

For the number of stories versus the number of defects (and associated points) scheduled in a release across multiple
teams, select:

• I want to see: Count of Work Items
• Broken down by: Project and then by Type
• Filters: Release = <Release Name> or [Choose Dynamically]

For the work remaining to deliver a release feature (when feature is identified by tag), select:

• I want to see: Sum of Task Estimate, Sum of Task To Do
• Broken down by: Tags and then by Project
• Filter: Tags = <Feature Tag> AND Release = <Release Name>

For blocked work (stories, defects, test cases) for a specific iteration, select:

• I want to see: Sum of Plan Estimate
• Broken down by: Schedule State and by Type
• Filter: Schedule State = In-Progress AND Blocked = Yes AND Iteration = <Iteration Name>

For time spent working on a feature during a release, select:

• I want to see: Sum of Time Spent
• Broken down by: Work Item
• Filter: Release = <Release Name> AND Package = <Package value> AND Work Item Type = Story

How to Troubleshoot Chart-Related Issues
The suggestions in this section may help identify issues you are seeing in your Rally charts.

Seeing some odd behaviors or data visualized in your charts? The following questions will help us collaborate and
uncover the chart's behavior:

• Which chart is displaying odd behavior?
• Is the odd behavior on only one chart or are others displaying similar behavior as well?
• Is the chart behaving oddly for a single project or is the behavior affecting other charts across your project in your

subscription?
• What timezone setting is your user profile set to? What timezone is your workspace set to? Has either changed

recently? Does changing your user profile to "Use Default" make a difference?
• What days are checked as your workdays in the subscription settings?

Contact Support when you encounter chart-related issues. To help support in troubleshooting issues, consider taking
screenshots of the following elements:

• Any chart that does not appear to be presenting as expected.
• Project picker (especially helpful for rollup charting).
• Chart item revision history. For example, the iteration revision history is helpful for the iteration burndown chart, the

user story revision history is helpful for a story burnup issue.

 674

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Known Issues when Using Charts

Here are some issues that you may encounter when using various charts.

• There is a known limitation with the milestone burnup and release tracking charts with large amounts of
data. Burnup charts display "An error occurred while fetching snapshots for specified portfolio items." This is specific to
Release Tracking, Milestone Burnup, and the PI Burnup app. Try a hard browser refresh or loading less data.

• There is a known limitation with the release tracking chart which involves where the data is being pulled from. The
Release Tracking burnup chart displays different counts than expected. We recommend using this chart for trend
analysis rather than a way of counting story points. There are a few burnup apps in the App Catalog which might be
helpful, or a custom chart could be a good solution.

• Data Appears In Iteration Cumulative Flow But Not Release Cumulative Flow Diagrams
Symptom: Data is missing for one day on the Release Cumulative Flow chart and report. The error is only seen for

a particular set of teams (all under same parent project). The data appears as expected on the Iteration
Cumulative Flow for the same team, which covers the date in question.

Solution: Look at the release revision history. Was the release end date after the date had ended?

Track and Report Billable Time
Rally Time Tracker extends Rally with timesheets and timesheet reports for the purpose of reporting on development cost
—either for billing, charge backs, or software capitalization purposes.

By capturing timesheet entries in Rally, Rally Time Tracker saves developers' time and collects more accurate project cost
estimates by recording daily hours spent on development work. Rally Time Tracker also features a Sum of Time Spent
option. This allows the tracking of total hours spent on stories or defects, including time on tasks associated with stories
and defects.

Rally Time Tracker provides Web Services API access ( TimeEntry and TimeEntryValue objects) to integrate time
data tracked in Rally with other time and attendance systems.

Some of the benefits of Time Tracking allow you to:

• Enter hours retroactively
• Multiple users can enter time against the same task, defect, or story
• Navigate to previous/next week in timesheet view
• Add or remove existing Rally task, defect, story, project as a timesheet entry
• View daily and weekly totals
• View and update tasks to dos from timesheet
• Personal timesheet report (PDF) for current or past week
• Automatically populate timesheet with tasks owned by current user
• Scope timesheet content to the current workspace

NOTE
Existing customers currently using the task Actuals field to track development time and cost will find Rally Time
Tracker a better solution for reporting time spent on calendar boundaries (days, weeks, months). To avoid
developer confusion, hide the task Actuals field from view when you adopt Rally Time Tracker.

You enable the Rally Time Tracker at the workspace level. Learn more.

Enter Your Time
You can enter your time using a timesheet in Rally

Be aware of the following items before you perform these tasks:

 675

https://community.broadcom.com/browse/blogs/blogviewer?BlogKey=6fc827ca-f2b0-4567-a6a0-24310fe24e85&CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e


 Rally®

• User stories, tasks, and defects are listed in ID order.
• Hours can be entered retroactively.
• Work days and non-work days are based on workspace settings.
• When user stories, tasks, and defects are deleted in Rally, any referencing timesheet entries display gray as a

visual indication the item was deleted. Existing hours can be edited by the user who entered those hours but editing
timesheet days that showed no hours at the time the item was deleted is prohibited.

• You can access a user story, task, or defect detail page by selecting the link from the timesheet.
• Easily tab from one day to another.

This section includes the following topics:

• Add Timesheet Entries
• Enter Hours
• Remove Timesheet Entries

Add Timesheet Entries
Individual timesheets capture the time you spend on projects, user stories, defects, or tasks. They provide a convenient
place for you to specify time spent on all the tasks you own that are scheduled for the week.

Because the data you enter on your timesheets may affect reports created for accounting purposes, you should fill out
your timesheet according to the guidelines provided by your company. If you are unsure about the guidelines to follow,
contact your Rally administrator before entering hours in your timesheet.

Rally supports these types of timesheet entries: user stories, tasks, defects and projects. This allows for adding existing
items to your timesheet, as well as tracking project time, such as meetings. Your Rally administrator may also set up Rally
to track non-project time, such as vacation and sick days.

Add Your Existing Tasks to a Timesheet

You can add in-progress tasks that you own to the timesheet. In-progress tasks are defined as tasks that are not complete
or still have remaining hours in the todo field. You can only add tasks that are scheduled for the week you viewing.

If you need to add a task that you have already completed, you need to use

1. Select Home, Timesheet.
2. Select Add My Tasks to add a task where you are the owner.
3. Select the fields to update the Task State and Task To Do values.

 676



 Rally®

Add Tasks You Do Not Own to a Timesheet

You can add tasks do not own to your timesheet. This option is useful during paired programming.

1. Select Home, Timesheet.
2. Select Add.
3. Select a project from the drop-down list.
4. Optionally, select the work item and task from the fields.
5. Select +Add to add the task to the page.
6. Select the fields to update the Task State and Task To Do values.

Add User Stories, Tasks, or Defects to a Timesheet

The search field in the Work Item drop-down menu allows you to search for a defect or a story (by ID or keyword) not
scheduled in the selected project for the displayed week and add those work items to your timesheet.

 677



 Rally®

1. Select Home, Timesheet.
2. Select Add New.
3. Select a project from the drop-down list.
4. Select a user story or defect from the work item field.

The project's user stories, tasks, and defects that are currently scheduled in the displayed week are available for
selection. You can also search for work items.

5. Select Done.
6. Select +Add.

Add Projects to a Timesheet

This method allows for entering hours against existing non-work time in a project such as meetings, design work, and
collaboration.

NOTE
If you want to track vacation time and other non-project time, create a paid time off (PTO) project, create stories
for vacation, sick leave, jury duty, and so on. Then schedule these stories in a year-long iteration so they
automatically display in the item chooser when users select the PTO project on their timesheet.

1. Select Home, Timesheet.
2. Select Add New.
3. Select a project from the drop-down list.
4. Select +Add.

 678



 Rally®

Enter Hours on a Timesheet
Once you add your timesheet entries to a timesheet, you can enter hours.

Your daily and weekly totals will immediately reflect any new hours entered.

1. Select Home, Timesheet.

2. If necessary, navigate to the correct week.

3. Select the cell below the day you want to enter your hours.

4. Enter the number of hours and press Enter.

Remove Timesheet Entries
You can remove a timesheet entry from a week.

1. Select Home, Timesheet.

2. If necessary, navigate to the correct week.

3. Select Remove

next to the entry you want to delete.

Generate Timesheet Reports
Every organization has different timesheet reporting needs, so you can generate timesheets reports from the custom
report designer to leverage the power and flexibility in filtering and grouping on custom fields.

By using user story and defect custom fields to track the accounting codes provided by your finance department,
timesheet reports can display information about development time spent by accounting code.

Software companies Use story and defect custom fields to track accounting categories (using drop-down custom fields) or to
track which stories are capitalizable (using a Boolean custom field). Development managers and scrum
masters may then generate capitalization reports for the accounting department by filtering on these
custom fields.

IT groups Use story and defect custom fields to assign charge-back codes to development work and report
development time to respective cost centers.

Services organizations Use story and defect custom fields to track clients and billing codes.

This section includes the following topics:

• Generate a Timesheet Report
• Save a Timesheet Report
• Generate a Capitalization Report
• Generate a Billing Report
• Report Time Spent on Top-Level Stories
• Generate Weekly Time Cards
• Export Timesheet Reports

 679



 Rally®

Generate a Timesheet Report

NOTE
If you include any task custom fields in your custom report, then only time entries that are associated with a task
will be included in the report. In other words, time entries against a project only or a project with a story only will
not be included.

1. Select Reports, Custom Reports.

2. From the Custom Reports page, select +Add New.

3. From the Edit Draft Report dialog box, select Timesheet from the Type list.

4. In the Data, Broken down by section, select values for Date, User, Project, Work Item, Package, or any (story or task)
custom field you use to organize your Rally work by accounting, cost center, or client codes.

Use the Add+ button to add any necessary fields.

5. In the Filters section, select Add+ twice and then select Date from the drop-drop menus to insert two date filters to
define the timesheet period to report on, and optionally the Package, Tags, or the custom fields you use to organize
your Rally work by accounting, cost center, or client codes.

6. Select Run.

If the Timesheet report completes, the preview displays with the result for your criteria. From the preview,
you can save the report in the Reports tab, or save it in CSV format. To see these options, select the gear

.

 680



 Rally®

Save a Timesheet Report
You can save a timesheet report as well as share it with others.

1. Select Reports, Custom Reports.

2. Run the report and select Page Tools, Save from report window.

3. Name the report and add a brief description.

4. Select one of the following options for the report visibility:

• Just me: The report will only be visible to you.
• Anyone can view: The report will be visible (read-only) to everyone.
• Anyone can view, edit, or delete: The report will be visible to everyone and anyone can edit or delete the report.

The Timesheet report is added to your list of custom reports on the Reports page.

Generate a Capitalization Report
Use Rally custom fields to document your organization's accounting rules (typically drop-down options or a Boolean type).
Set the custom field value for each Rally artifact either at the work item level or at the task level, but not both.

Once custom field values have been set, the report designer can generate capitalization reports by filtering and grouping
on the specific custom fields you set.

Capitalization Report Examples

A capitalization report when using a task-level custom field named Accounting Code:

• Report type = Timesheet
• Broken by Task Accounting Code (custom) then by Project
• Filtered by Date >= Oct 1 and Date <= Oct 31

This report displays Time Spent (hours) by Accounting Code and by Project for the month of October.A capitalization
report when using story-level Accounting Project and Accounting Task custom fields:

• Report type = Timesheet
• Broken by Story Accounting Project (custom) then Story Accounting Task (custom)
• Filtered by Date >= Oct 1 and Date <= Oct 31

This report displays Time Spent (hours) by Accounting Project and Accounting Task for the month of October.A
capitalization report when using a story-level capitalizable Boolean custom field:

• Report type = Timesheet
• Broken by Project then by User
• Filtered by Date >= Oct 1 and Date <= Oct 31 and "Story Capitalizable (custom) = Yes

This report displays Time Spent (hours) only for capitalizable work for the month of October.

Generate a Billing Report
For professional services groups or organizations using consultants, timesheet reports can be as detailed as billing and
invoice statements need to be.

 681



 Rally®

Billing Report Example

• Report type = Timesheet
• Broken by Date then by User then by Work Item then by Task Name
• Filtered by Date >= Oct 1 and Date <= Oct 31

This report displays Time Spent (hours) by Date by User including the work description for the month of October.

Report Time Spent on Top-Level Stories
Features or initiatives are often broken down into a hierarchy of user stories. Each user story in the hierarchy represents a
portion of work that is needed for the feature.

Timesheet reports give you the ability to aggregate the time spent for the entire feature by focusing on its top-level parent
story (top-level work item).

NOTE
Use a naming convention to focus your report on feature-level stories, removing all others. For instance, use a
label such as FEATURE in the name of your top-level parent story, then create a filter on that label to report list
of features or initiatives and their costs.

When reporting time on top-level stories, consider the following:

• Hours for work items outside of the current project scoping are not included in the cost aggregation.
• The Top-level Work Item filter is case-sensitive.
• Timesheet hours logged for defects or defect tasks associated with stories are not included in this report.
• The report displays only the top level and lowest level of stories in the hierarchy.
• Broken down by options are only applied to the lowest level of stories in the hierarchy.
• -- No Entry -- values in the Top-level Work Item column indicate hours entered at the project level on a timesheet.

1. Select Reports, Custom Reports.

2. Select +Add New.

3. From the Edit Draft Report dialog box, select Timesheet from the Type list.

4. Select Top-level Work Item in the Broken down by section.

5. To filter out standalone defects and stories, add a filter where the top-level work item contains the story name or a
special label.

6. Select Run.

 682



 Rally®

Generate Weekly Time Cards
At the end of each week, team members can generate a weekly time card to report on time they spent that week on
development work.

This report includes everything in the current timesheet sorted by day. The report also includes a Project Summary table
at the bottom of the page.

1. Select Home, Timesheet.

2. If necessary, navigate to the correct week.

3. Select Export

.

4. Select Export as PDF to download the file.

Export Timesheet Reports
Team members can export their weekly time cards and managers can export aggregate timesheet reports to CSV.

1. Select Home, Timesheet.

2. If necessary, navigate to the correct week.

3. Select Export

.

4. Select Export as CSV to download the file.

Rally Insights
Use the Rally Insights Solution to benchmark data and get detailed, diagnostic analytics to help understand and improve
software development performance.

Rally Insights uses a Software Development Performance Index (SDPI) framework. The Agile methodology is powerful for
obtaining a high-quality product and a faster time-to-market, but what if your teams could improve even more?

With Rally Insights, you can:

 683



 Rally®

• Track your teams’ productivity and predictability
• Track the quality of your programs
• Compare your company’s metrics with other companies that use Rally

Use Rally Insights to benchmark your team’s performance against data from 13,000 active teams and 160,000 projects.
Program managers, product managers, product owners, and executives benefit greatly from the metrics provided by Rally
Insights.

Rally Insights is only available with Unlimited Edition in United States stacks.

Workspaces and Projects

Just as with Rally, a workspace is a top-level container for your project hierarchy. Projects can represent teams, groups,
divisions, departments, and so on.

Workspaces serve as a benchmark and only real teams (teams with actual people) are rolled up, whereas projects can
rollup all child projects (including real teams and non-real teams).

Real Teams versus Non-Real Team

A real team in a project consists of actual people, such as an implementation team. Rally Insights uses a Bayesian
classifier that factors in the following:

• The number of work items in progress in the project.
• The number of levels (distance) from the leaf nodes of the current branch of the project tree. Real teams tend to be at

the leaf nodes, which is 0, or one level up (1).
• The full-time equivalent value for the node. Real teams tend to have 5 – 8 members.

A non-real team is typically a project without people, such as a department or an actual project.

 684



 Rally®

Full-Time Equivalent

Full-time equivalent (FTE) is a measurement of team size that considers contributions from all contributors to the team.
For example, three full-time team members are working on a project with two part-time members (who devote 50% of their
time to the project), then the full-time equivalent is four team members.

Virtual Workspaces

In order to see the most accurate and useful metrics from Rally Insights, you can set up virtual workspaces. Virtual
workspaces include specific, real teams of your choosing to accurately reflect your workload. Teams and projects in a
virtual workspace must belong to the same workspace in Rally.

Tour of Rally Insights

The overall page, or dashboard, or Rally Insights offers a high-level view of the dimensions (productivity, predictability,
responsiveness, and quality) in a polar chart that are measured for your team and workspace. The polar chart only
displays metrics for the last available quarter.

The sidebar on the left of the dashboard has links to your team's overall performance and each of the dimensions. Be
sure to scope to the correct applied scorecard at the top of the sidebar. Select whether to view data by quarter or month.

On any page in Insights, you can select the arrow

( )
at the bottom of the sidebar to maximize your page’s view by collapsing the sidebar. Select the expand arrow

( )
at the top of the sidebar to view the full sidebar.

On the Dimension pages, select the slide-out drawer on the right to see workspace comparisons and quarterly trends.
Select the “i” tab to view helpful hints and brief videos.

 685



 Rally®

Dimension Page

Use this page to view your team’s overall balance between the dimensions of predictability, productivity, responsiveness,
and quality. By default, the data is evenly weighted between the dimensions, but you can change this in your scorecards.

You can view the color-coded graph in a bar format or stacked view.

 686



 Rally®

Individual Dimension Pages

You can use the pages of each of the dimensions for a more detailed view of your team’s progress. Each page has
several types of charts—the top chart is dependent on your scorecard and compares the percentile within all companies.
All the charts below these display the raw values of the metrics. Hover over any data point on the charts for point-in-time
details.

Select the arrow on the slide-out drawer for either chart to see comparisons, trends, and information.

Setup Page for Rally Insights

Select Setup

to create and manage scorecards and virtual workspaces. Built-in scorecards cannot be edited or deleted. Instead, create
custom scorecards to suit your specific needs.

Rally Insights Metrics
Each dimension is scored using percentiles. The metrics that contribute to a dimension’s score are configured in the
applied scorecard. Scorecards allow teams to base a dimension's score on the metrics that are relevant for them. To
calculate the overall SDPI, we take the average of the contributing dimensions' scores. The units for each raw metric vary.

 687



 Rally®

For some teams, the raw metrics will be the most valuable data. The percentile score is useful for comparing the project to
the entire industry. For example, a team may not care how their throughput compares to anyone, they may just want it to
always be between 40 and 50.

Each metric is calculated for a particular timeframe, or bucket. Typically, summary charts display quarters. The more
detailed drill-down charts display months. The drill-down charts are disabled if you select to view by quarters.

Calculations are updated monthly on the first day of the month. Virtual workspace calculations are updated as needed and
can take up to an hour to complete.

Metrics Rollups from Rally Insights

Metrics rollup at the team level. Workspace-level metrics are an average of the real teams’ metrics within the workspace.

Calculations for Team Size

Rally Insights uses a heuristic that uses the owner on the work items, the user that is editing these work items, and
the fraction of time each individual is working on a team. If each real team member uses Rally and the Owner field is
complete, the team size calculated will be largely accurate.

Calculations for Industry Average

The percentiles virtual benchmark is calculated from all 13,000 teams using Rally. Distributions are recalculated every
month and for every quarter.

Make Data Work for You
Work items with more complete fields generate more useful data.

An X indicates a required value for the most accurate charts.

Requirement
or Metric Schedule State Story Points Work Item

Editor in Rally Defect State Defect Environment

Throughput
Normalized (Stories)

X - X - -

Throughput
Normalized (Defects)

X - X - -

Throughput
Normalized (Stories
and Defects)

X - X - -

Throughput Absolute
(Stories)

X - - - -

Throughput Absolute
(Defects)

X - - - -

Throughput Absolute
(Stories and Defects)

X - - - -

Velocity Normalized
(Stories)

X X X - -

Velocity Normalized
(Defects)

X X X - -

Velocity Normalized
(Stories and Defects)

X X X - -

 688



 Rally®

Requirement
or Metric Schedule State Story Points Work Item

Editor in Rally Defect State Defect Environment

Velocity Absolute
(Stories)

X X - - -

Velocity Absolute
(Defects)

X X - - -

Velocity Absolute
(Stories and Defects)

X X - - -

Variability of
Throughput (Stories)

X - - - -

Variability of
Throughput (Defects)

X - - - -

Variability of
Throughput (Stories
and Defects)

X - - - -

Variability of Velocity
(Stories)

X X - - -

Variability of Velocity
(Defects)

X X - - -

Variability of Velocity
(Stories and Defects)

X X - - -

Time in Process
Standard Deviation
(Stories)

X - - - -

Time in Process
Standard Deviation
(Defects)

X - - - -

Time in Process
Standard Deviation
(Stories and Defects)

X - - - -

Time in Process
(Stories)

X - - - -

Time in Process
(Defects)

X - - - -

Time in Process
(Stories and Defects)

X - - - -

Defect Density - - X - -
Released Defect
Density

- - X - X

Cumulative Defect
Age Normalized

- - X X -

Cumulative Defect
Age Absolute

- - - X -

Set Up Rally Insights
Configure and manage scorecards and virtual workspaces on the Rally Insights Configuration page.

You can use built-in or create custom scorecards.

 689



 Rally®

Access the Rally Insights Configuration Page

Access the Insights configuration page.

1. Select Reports, Insights.
2. Select Setup

.

Built-in Scorecards

Rally Insights comes with several standard, built-in scorecards, such as balanced or quality focused. The dimension-
focused scorecards are useful if your team wants to track its performance based on its responsiveness metrics.

Built-in scorecards may be copied and viewed, but not deleted or edited.

Custom Scorecards

You can create your own scorecards, either based on the built-in scorecards or your team’s individual needs. You can
perform the following functions on custom scorecards:

Add a new virtual workspace

View & Edit

Copy

 690



 Rally®

Delete

Viewing Metrics
You can view specific metrics for a dimension without including those metrics in your individual or overall scores.

For example, your team would like to view a chart of its variability of velocity for stories and defects, but does not want
those metrics to be part of the their predictability score. Select the Show check box next to the metrics you want to view.

 691



 Rally®

Overall Performance Dimension

Configure how you want the Dimensions chart to display for a scorecard. You can select an even split between the four
dimensions (default), or customize to emphasize some dimensions more than others. The percentage must total 100%.

 692



 Rally®

Productivity Dimension

Configure the percentage weighting of each metric to match how important it should be to your productivity score. Select
from the following metrics:

Metric Definition

Throughput normalized The throughput absolute value divided by FTE.

Throughput absolute The number of work items moved in to Accepted minus the
number of stories moved out of Accepted in the timebox.

Velocity normalized The velocity absolute value divided by FTE.

Velocity absolute The number of points moving in to Accepted minus the number of
story points moving out of Accepted in the timebox. This raw value
is typically larger on larger-sized teams.

 693



 Rally®

Predictability Score Dimension

Configure the percentage weighting of each metric to match how important it should be to your predictability score. Select
from the following metrics:

Metric Definition

Variability of throughput Throughput is derived from the average and standard deviation
of throughput for three-month time periods. Throughput indicates
how consistently your team delivers the same amount of work
over a period of time.

Variability of velocity The average and standard deviation of velocity over three months.
Velocity is helpful to teams for planning how much work they can
do in future timeboxes.

Time in process standard deviation A measure of how much variation exists from the mean Time in
Process. Accurate planning and budgeting requires accurate work
estimates, accounting for variation.

Responsiveness Dimension

Configure the percentage weighting of each metric to match how important it should be to your responsiveness score.
Time in Process is the number of business days a typical work item is in the In Progress state. Select which Time in
Process metrics work best for your team:

• P50: How long the average number of work items are in progress
• P75: How long 75% of work items are in progress
• P85: How long 85% of work items are in progress
• P95: How long 95% of work items are in progress
• P99: How long all work items are in progress

 694



 Rally®

Quality Score Dimension

Configure the percentage weighting of each metric to match how important it should be to your quality score. Select from
the following metrics:

Metric Definition

Defect density The number of defects found in production or test, per team
member, per workday. This includes defects of all priorities. The
lower the density, the better.

Released defect density The number of defects found in production, per team member,
per workday. This includes defects of all priorities. Use the
Environment field to get the most accurate data for this metric.

Cumulative defect age normalized A measurement of how much technical debt exists in your code
base. Normalizing by the number of full-time equivalents allows
you to compare teams of different sizes. Defects with a state of
Fixed or Closed are not included in this metric. The lower the
number of this metric, the better. You can track defect age by
priority (P1, P2, P3, and so on).

Cumulative defect age absolute The number of defects moved in to Closed or Fixed minus the
number of defects moved out of Closed or Fixed in the timebox.
You can track defect age by priority (P1, P2, P3, and so on).

 695



 Rally®

Virtual Workspaces within the Rally Insights Page
Create virtual workspaces to organize your projects into meaningful hierarchies that generate accurate and useful data.

Virtual workspaces allow you to only include projects that hold significance. This allows the exclusion of projects that may
not be significant to the needed metrics. By creating virtual workspaces, you can select specific projects that will yield the
most accurate data.

• Projects must be in the same workspace.
• You can perform the following functions for virtual workspaces:

Add a new virtual workspace

View or edit
Copy

Delete

Add a Project to a Virtual Workspace

1. Select the project in the Projects window.

 696



 Rally®

2. Select Save to keep your changes.

View Your Overall Performance
The Overall tab is the default page for Rally Insights and gives you a high-level view of how the different dimensions
compare within your workspace.

The metrics displayed on the polar chart are based on the applied scorecard.

The polar chart displays data from the last available quarter. Use the polar chart to see where your team (project),
workspace, and the industry in general are at a given moment in time.

Hover near any of the dimensions on the polar chart to view the actual project and workspace scores. These scores are
also listed at the bottom of the chart for all dimensions.

Some teams and workspaces may have different ideal polar charts than others. For example, a company that produces
holiday cookies may be more concerned with the productivity score, while a financial planning company may be more
concerned with the responsiveness and predictability scores.

View the Different Dimensions
The Overall Performance score is the Software Development Performance Index (SDPI) based on a percentile scale from
0 to 99.999 that combines the four dimensions as weighted in your scorecard to match your economic model.

The overall performance displayed is based on the applied scorecard. The scorecard determines the metrics calculated in
each dimension.

The stacked view below demonstrates how each of the four dimensions contribute to the overall score by quarter. The last
four available quarters display.

 697



 Rally®

1. Hover over any quarter for detailed metrics per dimension.

2. Select the view toggle

to use the side-by-side view.
This view summarizes individual scores for each dimension but does not provide an overall SDPI score. This allows
you to compare dimension scores on a quarterly basis without any weighting applied.

3. Select the slide-out drawer on the right to view comparison and trend information.

View Full Time Equivalent (FTE) Values on the Insights Page
View the FTE values for your team.

1. Hover over any individual bar for details.

 698



 Rally®

2. On the drill down, slide the blue box to view metrics for a different month.

Use the Individual Dimensions
Use the dimension pages—Productivity, Predictability, Responsiveness, and Quality—to get a more detailed view of your
team’s progress.

The first chart is a percentile comparison with your workspace and all other companies that use Rally Insights. To see all
the individual metrics for a dimension, select the Balance – Show All Metrics scorecard or configure your scorecard to
display the desired metrics. Hover over any data point on the charts for point-in-time details.

 699



 Rally®

The charts of the individual metrics compare your team’s (project) metrics against your workspace average. Hover over
the

to see how much a particular metric contributes to the overall score for that dimension. If there is no pie chart icon, that
metric does not contribute to your overall score and is there for viewing purposes only.

 700



 Rally®

Select the Drill Down arrow at the bottom of a metric chart to view details such as the individual work items (and their
statuses) that contributed to the metric’s score and the equation used to derive data. This is only available when viewing
by month.

On metrics dependent on team size, you can select

to view all the full time equivalent team members. You can optionally export this list of FTEs to a CSV spreadsheet.

Additionally, you can select

to export the drill down’s data to a CSV spreadsheet.

Productivity Dimension

Measure the amount of work your team completes in a given time period (throughput), based on either the number of
items or points accepted. You can also include velocity in this percentile score. The higher your productivity score, the
better it is. Understanding what drives your team’s productivity score helps with capacity planning.

Throughput is normalized for team size so you may accurately compare teams of different sizes.

Currently, only user stories contribute to your team’s productivity score for built-in scorecards. However, you can still view
defects and features in the drill down charts.

 701



 Rally®

Predictability Dimension

Measure how consistently your team finishes work over time, based on the mean and standard deviation of throughput
during a three-month timeframe (variability of throughput). You can also include variability of velocity or time in process in
this percentile score. The more consistent your team performs, the more predictable they are.

A high predictability score indicates your team consistently delivers the same throughput or velocity. A low Coefficient of
Variation (CoV) means a high rate of predictability.

Since the metrics are based on a three-month timeframe, the chart typically has a curve to it. Only user stories are used to
derive the predictability score.

 702



 Rally®

Responsiveness Dimension

Measure how quickly your team can deliver functionality after it is requested, based on time-in-process of user stories.
Responsiveness is central to Agile: a high responsiveness score indicates a faster time-to-market and a communicative
relationship with customers.

Time in Process (TiP) is the time it takes a user story to go from In Progress to Accepted. The  median TiP (P50) of all the
work items that completed in a given timeframe is the default value used for TiP in the Balanced scorecard.

Weekends, holidays, and non-work hours are not included in the TiP calculation.

 703



 Rally®

Quality Dimension

Measure your team’s ability in preventing defects from occurring and how quickly they resolve any that do occur, based
on defect density. You can also include cumulative defect aging in this percentile score. A high Quality score can indicate
quick defect resolution and less time and resources spent on rework, few defects are introduced in the project, or quick
defect resolution.

Defect density (normalized) is the number of defects per team member, both released and unreleased, including
all priorities and environments (test, production, and so on). Released defect density only represents defects in the
production environment. If you use the Environment field in your defects consistently, the released defect density metric
will be more accurate.

NOTE
Use Rally’s default defect states to increase consistency in your metrics. A customized defect state may not be
tracked by Insights.

 704



 Rally®

Performance Index Calculation
The Software Development Performance Index (SDPI) framework codifies a balanced set of outcome measures that,
when used within Rally, can give you feedback on your own teams and organization.

This section explains the SDPI and how these metrics are calculated.

Definitions for Metrics Calculations

These definitions describe how metrics are calculated.
Time Buckets Each metric is calculated for a particular time bucket. The summary SDPI charts are most commonly shown

in quarters. The drill-down charts are most commonly shown in months.
Difference Between

Real Teams
and Projects

The project entity in Rally is the team container but its hierarchical nature means that some projects
represent other organizational entities (meta-teams, divisions, departments, and so on). Some may even
represent projects. To determine which project entities are actually teams, we use a Bayesian classifier
that looks at how much work is contained in the project, how close to the leaf of the hierarchy it sits, and a
number of other characteristics.

Team Size We heuristically extract team membership by looking at who is working on what items and who is the owner
of those work items. We then determine what fraction of the time each person is working on each team.
The team size is the sum of these fractions.

Percentile Scoring The units for each raw metric are different. For some metrics higher is better whereas lower is better for
others. To make it easier to interpret the metric and enable the aggregation of dissimilar units into a single
index, raw metrics are converted into a percentile score across the entire distribution of all similar metrics.
Higher is always better for percentiles.

Calculating the Index The SDPI is made up of several dimensions. Each raw metric is percentile scored and one or more of
those are averaged to make up a particular dimension (for example, the quality dimension is the percentile

 705



 Rally®

score of defect density for defects found in production averaged with the percentile score of defect
density for defects found in test). To calculate the overall SDPI, we take the average of the contributing
dimensions' scores. If there are four dimensions, then the maximum contribution of any one will be 25 to
this final SDPI score.

Responsiveness
Score From Time
in Process (TiP)

Time in Process (TiP) is the amount of time (in fractional days) that a work item spends in a particular state.
Weekends, holidays, non-work hours are not counted. We take the median TiP of all the work items that
completed in a particular time bucket (say January, 2013) and record that as the TiP for that time bucket.
While other parameters are possible, we primarily look at the TiP of User Stories and we define In Process
as ScheduleState equals In Progress or Completed.

Quality Score From
Defect Density

Defect density is the count of defects divided by man days, where man days is team size times the number
of workdays in that time bucket. This results in a metric that represents the number of defects per team
member per workday.

Rally looks at both the defects found in production as well as those found in test and other areas as
indicated by the Environment field in Rally. We sense whether defects are typically being recorded in Rally
for each of these types for each team over a time period and only use it if it passes this test. We will take
either as the quality score or the average of the two if both are reliably recorded.

Productivity Score
From Throughput

and Team Size

Throughput is the count of user stories, defects, and features completed in a given time period. The
productivity score is the percentile scoring of this throughput normalized by the team size. While defects
and features are shown in the drill-down charts, currently only user stories contribute to the productivity
score of built-in scorecards.

Predictability
Score From

Throughput Variability

Throughput variability is the standard deviation of throughput for a given team over three monthly periods
divided by the average of the throughput for those same three months. This is referred to as the Coefficient
of Variation (CoV) of throughput. Only user stories are considered for this predictability score.

Decision Versus Outcome Measurements

The measurements below are generally targeted at characterizing a decision or an outcome. An organization either
decides to split people across many projects or they dedicate them to one. The Percent Dedicated Work measurement
extracts this decision. Defect density is an example of an outcome measurement.

Although not strictly accurate, they can be thought of as input and output variables in a correlation analysis.

Scores

Raw outcome measures are translated into a score so they can be easily interpreted as indicators of performance.
Measures closer to 100 are good, measures closer to 0 are bad. The raw measure and the score are both available for
analysis.

Timebox Granularity

Unless otherwise specified, each metric specified below is calculated for each of the following timeboxes:

• Month
• Quarter (Calendar)
• 3-month (sliding)
• 6-month (sliding)
• 12-month (sliding)

The sliding window measurements are useful when trying to identify a correlation where the impact of a decision
measurement for a given month might correlate with the outcome measurement over the course of several following
months. For instance, field-reported defects will come in over time. So, logically, we would expect a change in this
measurement to be evident for several months after the impacting decision. The empirical evidence supports this trailing
effect because bad-decision metrics (non-dedicatedness) correlate best with the six-month, trailing-defect density metric.

 706



 Rally®

Snapshots and the Temporal Data Model

We do not directly measure things like Percent Dedicated Work. It and the other measurements specified in this document
are built from snapshots of changes representing transactions of users working with artifacts in their project management,
source code management, build, or bug tracking systems. A detailed discussion of this data model including its data
structures, constraints, and operations can be found here. Many of the details of calculating these metrics cannot be
understood without at least a basic understanding of this underlying snapshot data structure and temporal data model.

Real Teams

In addition to being associated with a timebox, every measurement in the data set is also associated with a team. Our
data set does not have a strict definition of a team. Rather, it includes the concept of a team or project hierarchy, where
higher-level entries might represent divisions or teams of teams and lower-level entries represent the team itself. It is also
common for a team to break their work down into project streams. This is a typical team or project tree:

• Division ABC
– Meta-team I

• Team A
• Team A – project 1
• Team A – project 2
• Team B

– Meta-team II
• Team C
• Team D
• Division XYZ

– ...

Since the data is non-attributable and large (25,000 projects), we have no way of determining which entries in this tree
represents a real team. Instead, we heuristically extract this using a Bayesian classifier. The features that the classifier
keys off of include:

• The number of levels from the leaf nodes of the current branch of the project tree. Real teams tend to be at the leaf
nodes, which is 0, or one level up, which is 1.

• The number of work items in progress in the node.
• The full-time equivalent value for the node. Real teams tend to have between 5 – 8 members, and outside of this

range, the probability of being a real team decreases.

SDPI Measurements

Percent Dedicated Work

This measurement indicates how much of the work for a given team is done by people dedicated to that team.

Type: Decision

Formula

1. Find all transactions (snapshots) for stories, defects, and tasks that are in progress, have no children, have an owner
(user), and are not blocked.

2. Sum all transactions by user Utotal, project Ptotal, and user contribution to a project Uproject where Utotal > 5 (for
example, users with a total transaction count less than or equal to 5 are not counted towards Uproject or Ptotal).

 707

https://rally1.rallydev.com/analytics/doc/


 Rally®

3.

Find the percent of a user’s total work each project represents: 
4. Count as dedicated for a given project the users whose Upercent is greater than 70% for that project. This threshold was

determined by experimentation with a training set of data from teams with known, dedicated members.
5. For each project sum the dedicated user transactions: Pdedicated = Σ Uproject for all dedicated members.
6. Find the percent of dedicated work for each project:

Data Cleaning The transactions of any user with five or less transactions in a given timebox or project pair are ignored
when calculating Uproject or Ptotal. This omits data from people that are not true team members (managers, administrators,
and so on).

Full-Time Equivalent

This measurement is an indicator of team size including contributions from part-time contributors to the team.

Type: Decision

Formula

1. Find all transactions (snapshots) for stories, defects, and tasks that are in progress, have no children, have an owner
(user), and are not blocked.

2. Sum all transactions by user Utotal, project Ptotal, and user contribution to a project Uproject where Utotal > 5 (for
example, users with a total transaction count less than or equal to five are not counted towards Uproject or Ptotal). If the
revision editor and owner are different people, the edit is associated to both people.

3. Find the fraction of a user’s total work each project

represents:
4. Sum the full-time equivalent for each project: Pfte = Σ Ufte

Team Stability

This is an indication of the team's stability. For example, given:

Month n:

• George: 90% dedicated
• Joe: 50%
• Jen: 80%

Month n + 1:

• George: 75% (-15% delta)
• Jen: 100% (+20%)
• Jeff: 25% (new) (+25%)
• Joe: missing (-50%)

The TeamGrowth metric for the team would be .2 + .25 = .45 divided by the current team size (2) or 22.5%.

 708



 Rally®

The TeamShrinkage metric for the team would be |-.15| + |-.5| = .65 divided by the old team size (2.2) or 29.54%.

The total volatility would be the sum of the two prior metrics or roughly 52% and Team Stability would be 100 - 52/2 = 74.

Type: Decision

Formula

1. Find all transactions (snapshots) for stories, defects, and tasks that are in progress, have no children, have an owner
(user), and are not blocked.

2. Sum all transactions by user Utotal , project Ptotal , and user contribution to a project Uproject where Utotal > 5 (for
example, users with a total transaction count less than or equal to 5 are not counted towards Uproject or Ptotal).

3. Find the fraction of a user’s total work each project represents for all time periods:

4. Sum the full-time equivalent for each project for all time periods: Pfte = Σ Ufte.
5. For each project and each pair of adjacent time periods (t and t − 1 ) compute:

– Team growth by

– Team shrinkage by

– Team stability by

Process Type

This measurement is an indicator of what type of agile process a team is using.

Type: Decision

Formula

1. Find all snapshots for stories whose ScheduleState >= In-Progress and have no children.
2. Sum the total number of unique stories Stotal for each project in each time period.
3. Sum the total number of unique stories that have a non-null field Sfield for each project in each time period where field

is each of c_KanbanState , Iteration , TaskActualTotal , TaskRemainingTotal , TaskEstimateTotal ,
and PlanEstimate .

 709



 Rally®

4. For each project in each time period, divide the sum for each field by the total number
of unique stories and multiply by 100 to get the percent of stories with the field:

5. After calculating the percent of stories with each field, the project is assigned a value for process type Tprocess as
specified in the following table:

Tprocess if...

Kanban, ScrumBan PkanbanState ≥ 90 ⋀ Piterations ≥ 90

Kanban, No Iterations PkanbanState ≥ 90 ⋀ Piterations < 90

Iterative, Scrum, Full PkanbanState < 90 ⋀ Piterations ≥ 90 ⋀
PplanEstimate ≥ 50 ⋀ PtaskEstimateTotal ≥ 50

Iterative, Scrum, Story points only PkanbanState < 90 ⋀ Piterations ≥ 90 ⋀
PplanEstimate ≥ 50 ⋀ PtaskEstimateTotal < 50

Iterative, Scrum, Tasks only PkanbanState < 90 ⋀ Piterations ≥ 90 ⋀
PplanEstimate < 50 ⋀ PtaskEstimateTotal ≥ 50

Iterative, Other PkanbanState < 90 ⋀ Piterations ≥ 90 ⋀
PplanEstimate < 50 ⋀ PtaskEstimateTotal < 50

Other, Estimates PkanbanState < 90 ⋀ Piterations < 90 ⋀
(PplanEstimate ≥ 50 ⋁ PtaskEstimateTotal ≥ 50)

Other, No estimates PkanbanState < 90 ⋀ Piterations < 90 ⋀
PplanEstimate < 50 ⋀ PtaskEstimateTotal < 50

Time in Process (TiP) and Responsiveness Score

Time in process (TiP) is a measure for an individual work item (story, defect, feature) indicating how much work-day time
(excluding non-work hours, weekends, and holidays) it spent in process. For stories and defects, in process is defined by
the ScheduleState field being either In-Progress or Completed (often means In-Test). For features, in process is when
ActualStartDate is set and PercentDoneByStoryCount is less than 100%.

Although not calculated exactly the same, it is analogous to the common definition of cycle-time or lead-time. For
a given project or timebox pair, an aggregation (median, or p50) of the TiP of the work items that completed during
that timebox for that project is computed. The responsiveness score is based on the percentile of the median. Higher
values will result in lower scores, and vice versa.

The median (p50) is used rather than the arithmetic mean as the aggregation because the distribution
of TiP measurements for individual work items is far from normal and frequently includes outliers. Median deals well with
the non-normal distribution and does not allow a single outlier to greatly impact the measurement like an arithmetic mean
would. The data set also includes p75, p85, p95, p99 representing the 75th, 85th, 95th, and 99th percentile coverage
levels for the set of completed work items but we currently only use the p50 (median) to calculate the score.

Type: Outcome

Variations:

Stories, defects, and features

Formula

1. Find all stories, defects, and features that were In-Progress, then moved to Completed within the time frame under
consideration.

 710



 Rally®

– Stories and defects are considered completed when ScheduleState ≥ Accepted.
– Features are considered completed when PercentDoneByStoryCount → 100%.

2. Calculate a TiP value for each of those stories, defects, and features.
– Story and defect TiP is the duration where In Progress ≤ ScheduleState < Accepted.
– Feature TiP is the duration between ActualStartDate and when PercentDoneByStoryCount → 100%.

3. The responsiveness score is the percentile rank of the p50 TiP value for stories.

Defect Density and Quality Score

Defect density is the count of defects over some normalizing size measurement. In our case we use the team's effort-days
(FTE * the number of working days in the period) as a proxy for size.

Type: Outcome

Variations:

All defects (Defect) or just defects found in production (ReleasedDefect)

Formula

1. Count all defects Dall and defects released to production Dreleased for each project.
2. Calculate defect density E for each project by:

where Pfte is the project’s full-time equivalent and W is the number of effort days in the time period under
consideration.

3. For each project, determine if either defects or released defects are being tracked by checking if the defect count
is greater than zero for the year granularity that ends at the same time as the granularity under consideration. For
example, if the granularity is a quarter ending on 2013-01-01, we check the full year ending on 2013-01-01 to see if the
defect count for the year is non-zero.

4. Compute defects per 1000 days of effort by:
– Sall = 1000 ∙ Eall
– Sreleased = 1000 ∙ Ereleased

5. For each project where defect data is tracked, compute the quality score. Defect density is scored based on
percentiles. If a project has the highest-measured value for defect density, it is in the 99th percentile, therefore its
score is 99 − 99 = 0. If a project has the lowest measured value for defect density, it is in the 0th percentile, therefore
its score is 99 − 0 = 99 .
– Qall = percentile(Sall)
– Qall = percentile(Sall)
– Qreleased = percentile(Sreleased)

6. The total quality score is the quality score for all defects: Qtotal = Qall. Projects not tracking defects will have no quality
score.

 711



 Rally®

Throughput and Productivity Score

Throughput is a measure of how much work is completed in a given time period. Within a single team, throughput can be
compared over time. However, the size of a work item can vary greatly by context so it is difficult to compare this across
teams. It can also be compared across teams when the size of a work item is controlled. For instance, some organizations
will require that each story should be between 0.5 and 3 man days of work. We do not know this information, so when
calculating the score we look at number of completed stories normalized by the team size (FTE). Throughput per team
member is scored based on percentiles. Higher values result in higher scores, and vice versa.

Type: Outcome

Variations:

• Defects, stories, or features
• Counts or story points: The formula below describes the computation by counts of these items. However, we also

compute throughput (or velocity) for stories and defects using the sum of the story points of all work items that make
the appropriate transition. We do not yet have a good mechanism to identify which teams consistently use story points
so the counts are the preferred variation at this time.

Formula

• For each project, compute throughput T as the sum of:
– The count of all stories and defects that transitioned forward into the accepted state minus the count of all stories

that transitioned backwards out of the accepted state.
– The count of all features that transitioned forward to 100% complete by story count minus the count of all features

that were 100% complete by story count but transitioned backward into < 100% complete by story count.
– Compute the throughput per team member by dividing throughput by full-time equivalent:

– Score Tfte based on its percentile. If a project has the highest measured value for Tfte, it is in the 99th percentile, and
99 is its score. If a project has the lowest measured value for Tfte, it is in the 0th percentile, and 0 is its score.

Throughput Variation and Predictability Score

Having a stable throughput can be as important as having a high throughput. The coefficient of variation of throughput
across several time periods is calculated and translated into a score.

Formula

1. For each project, compute throughput for each month Ti as the count of all stories that transitioned forward into the
accepted state minus the count of all stories that transitioned backwards out of the accepted state.

2. For each group of three and six adjacent months T, compute the:
– average avg(T)
– standard deviation std(T)
– coefficient of variation

3. Score CoV based on its percentile. If a project has the highest-measured value for CoV, it is in the 99th percentile,
therefore its score is 99 − 99 = 0. If a project has the lowest measured value for CoV, it is in the 0th percentile,
therefore its score is 99 − 0 = 99.

 712



 Rally®

Insights Frequently Asked Questions
The following are frequently asked questions about Rally Insights.

How Often are
Metrics Updated?

Calculations are updated every month at the beginning of the month. Virtual workspace calculations are
done on demand and typically take between 30 and 60 minutes to complete.

How is Team
Size Calculated?

We use a heuristic that looks at the owner on the stories, tasks, and defects, as well as the user that is
creating, editing, and moving. If each team member actually uses Rally and the owner field is current, this
should be fairly representative of the true size, regardless of the ALM team members.

How is the Industry
Average Calculated?

• The percentiles virtual benchmark is calculated from all 13,000 teams using Rally.
• We use a Bayesian classifier to identify real teams.
• We recalculate the distributions every month and for every quarter. This means that they will drift

over time. However, this drift is so slow that any change in them is minimal compared to changes in a
particular team's performance.

How is the Workspace
Average Calculated?

• Similar to the Industry average calculation, we use a Bayesian classifier to identify real teams in the
workspace which are used to drive the Workspace Average.

• In the future, we hope to provide more granularity on what teams constitute the Workspace Average.
• We recalculate the distributions every month and for every quarter.

Do the Metrics Rollup
or are They Just at

the Team Level?

They all rollup. However, the comparison to industry distribution is tuned to the team level. It does not
matter much when using throughput normalized by team size and defect aging normalized by team size
and TiP (normalized or not), but it does matter when looking at variability of throughput, velocity, and non-
normalized versions of throughput and defect aging. Those metrics are fine for tracking over time but the
percentile score is not useful.

Why do the Metrics not
Rollup how I Expect?

When you look at the scores at the project level, those are most likely real teams.

However, as you move up the project hierarchy, more data is included. A non-normalized metric value or
percentile score for a high-level project will aggregate all data for a metric into sums that may make the
values look unusually high or the scores unusually low. For this reason, you should look at scores for real
teams.

What is the Difference
Between Projects
and Workspaces?

The workspace is a top-level container that contains a project hierarchy  (this is not limited to one project,
as workspaces can contain multiple project hierarchies). The project entity in Rally is the team container,
but its hierarchical nature means that some projects represent other organizational entities (meta-teams,
divisions, departments, and so on). Some may even represent projects. While workspaces can contain
many projects, there is a fundamental difference between the two entities: workspaces represent a
benchmark, and as such, only aggregate information related to real teams, whereas projects rollup all
information of sub-projects (of both real and non-real teams).

To determine which project entities are actually teams, we use a Bayesian classifier that looks at how
much work is contained in the project, how close to the leaf of the hierarchy it is, and a number of other
characteristics.

What is the Difference
Between Real Teams
and Non-Real Teams?

Real teams are project entities whose characteristics match with our heuristics for what constitutes an
implementation team. This is determined by a Bayesian classifier composed of several indicators, such as:

• The number of levels (distance) from the leaf nodes of the current branch of the project tree. Real
teams tend to be at the leaf nodes, which is 0, or one level up, which is 1.

• The number of work items in-progress in the project.
• The full-time equivalent value for the node. Real teams tend to have between 5 and 8 members, and

outside of this range, the probability of being a real team decreases.

A non-real team is a project with one or more dimensions whose value falls outside of our heuristic for
reality.

Can we Drill Down to
the Data that Makes
up a Metric or Score

We have added that functionality for the quality and productivity metrics and plan to add it for the other
metrics.

 713



 Rally®

to Better Understand
the Root Issue?

What Does Full-Time
Equivalent Mean?

Full-time equivalent (FTE) is a measurement of team size by considering contributions from part-time
contributors to the team. Consider the case where three full-time team members are working on a project
with two part-time members (who devote 50% of their time to the project), then the full-time equivalent will
be four team members.

Do the Names and
Order of States
in Rally Matter?

Schedule state and defect state values have an implied order based on their respective drop-down list
orders. The order of the schedule states in Rally is unchangeable; the only variables are the use of optional
initial and final states and their names. If the optional final state (Released, for example) is used, Insights
treats it the same as the standard final state (Accepted), regardless of the name of the optional final state.

However, the order of defect states is changeable and all names (except Open and Closed) are also
changeable. In order for defect metrics to be collected correctly, please ensure that Closed is the last
(by implied order) and final (by workflow) defect state. An exception to this rule is that if there is a defect
found with defect state named Fixed, Insights will treat the defect as if it were Closed. So, if your workflow
distinguishes between fixing and closing defects such that the final (workflow) state for some defects is
something other than Closed, ensure that Fixed is the name of that state.

Which Defects are
Included in the

Cumulative Defect
Age Calculations?

Defects are included if their state is less than Closed and not equal to Fixed at the end of the timeframe
selected. This may include defects with Defect State = Unable to Reproduce.

Which Defects are
Included in the

Released Defect
Density Calculation?

Defects are included if the Environment value is production and they were created in the timeframe
selected.

How Does Time
In Process (TiP)

Differ from ALM's
Cycle Time Reports?

ALM's cycle time reports calculate story TiP as the difference between that last time the story went In
Progress and when it was Accepted. Transitions back to In Progress, such as In Progress to Defined to In
Progress, will reset the calculation.

Insights' story and defect TiP uses a more sophisticated TiP calculation that includes all the time the story
or defect spends In Progress, and takes into consideration workdays and holidays. Insights' TiP charts do
not include stories and defects that spend no time in process, such as stories or defects that move directly
from Defined to Accepted or Released.

Feature TiP is calculated slightly different from story and defect TiP. Feature TiP is the the time between
when the first story parented to the feature moves to In Progress and when the feature reaches 100%
complete by story count. If an In Progress story is reparented to a feature, the timing begins at the time of
the reparenting. Feature TiP also takes into account work days and holidays.

What is the Quarterly
Timing of the Insights
Reports Data Update?

Data is typically updated at the beginning of each calendar quarter (January, April, July, and October). It
takes a few days for the data update to process completely.

Capturing Data Correctly for Insights
It is important that you are using the expected fields, or if importing from elsewhere, that you have connected the fields
correctly.

If indicated with an X, the requirement must be met in order for the charts to be accurate.

Requirement/Metric Schedule State
(In-Progress,
Completed, split
stories not left open)

Story Points Unique User in Rally
(the person who
performs the action
has a user in Rally)

Defect State (Open,
Fixed, Closed)

Defect Environment
(Test, Production)

Throughput (Stories)
Normalized

X - X - -

 714



 Rally®

Throughput (Defects)
Normalized

X - X - -

Throughput (Stories
and Defects)
Normalized

X - X - -

Throughput (Stories)
Absolute

X - - - -

Throughput (Defects)
Absolute

X - - - -

Throughput (Stories
and Defects)
Absolute

X - - - -

Velocity (Stories)
Normalized

X X X - -

Velocity (Defects)
Normalized

X X X - -

Velocity (Stories and
Defects) Normalized

X X X - -

Velocity (Stories)
Absolute

X X - - -

Velocity (Defects)
Absolute

X X - - -

Velocity (Stories and
Defects) Absolute

X X - - -

Variability of
Throughput (Stories)

X - - - -

Variability of
Throughput (Defects)

X - - - -

Variability of
Throughput (Stories
and Defects)

X - - - -

Variability of Velocity
(Stories)

X X - - -

Variability of Velocity
(Defects)

X X - - -

Variability of Velocity
(Stories and Defects)

X X - - -

Time in Process
Standard Deviation
(Stories)

X - - - -

Time in Process
Standard Deviation
(Defects)

X - - - -

Time in Process
Standard Deviation
(Stories and Defects)

X - - - -

Time in Process
(Stories)

X - - - -

Time in Process
(Defects)

X - - - -

 715



 Rally®

Time in Process
(Stories and Defects)

X - - - -

Defect Density< - - X - -
Released Defect
Density

- - X - X

Cumulative Defect
Age Normalized

- - X X -

Cumulative Defect
Age Absolute

- - - X -

How to View Rally Insights
Your company might have IP restrictions. Check with your subscription administrator to verify that Insights has been
enabled and works within your network configuration.

Your subscription administrator must enable Rally Insights prior to use.

1. Select Setup

.

2. Select Subscription.

3. Select Actions, Edit Subscription.

4. Select the Enable additional Rally services integrations field, which is required for Rally Insights to work with
subscriptions with IP restrictions turned on.

Differences in Quarterly Percentile Scores and Monthly Scores
The percentile score for that quarter as a whole can be higher compared to other teams if a team is more consistent, even
if they were lower on a month-to-month basis.

See the table below for an example where Team A's quarterly score is 90% even when it is less than that each month:

Team Month 1 Score Month 2 Score Month 3 Score Quarter Score (sum)

A 7 8 6 21.0
B 8 1 1 10.0
C 10 9 9 28.0
D 2 1 10 13.0
E 2 10 8 20.0
F 2 1 5 8.0
G 2 1 7 10.0
H 9 1 1 11.0
I 1 1 2 4.0
J 1 1 1 3.0
Team A
Percentile

66.7% 77.8% 55.6% 88.9%

 716



 Rally®

Closed or Reparented Projects and Historical Data
Metrics are always calculated using the project hierarchy that existed at the time period under consideration. This
includes rollups into higher level projects. Closing or reparenting projects will only affect data for future time periods.

For example, Project A has two child projects, Team 1 and Team 2. In December, Team 1 is reparented to Project B, so:

• Team 1's history will not change. Team 1's full history should continue to be available.
• Project A will contain Team 1's contributions for months prior to December.
• Project B will start including Team 1's contributions for December and afterwards.

To view past contributions from moved or closed child projects to their former parent project, the drill-down for each metric
shows the work items that contributed to the metric and the projects the work items belonged to.

Expected Differences in the Number of Items in Throughput and Time In Process Drill Downs
Time In Process only includes stories that were Accepted during the time period.

The throughput drill down includes all positive, negative, and neutral contributions to the throughput value. All positive
contributions display in the TIP chart, as well as some of the neutral contributions. Any story that went from Accepted to
In Progress to Accepted during the time period are included but not stories that went from In Progress to Accepted to In
Progress during the time period.

 717



 Rally®

Integrating with Rally
Learn how to integrate Rally with other products you use such as defect trackers, IDEs, testing tools, and more.

You can integrate your third-party tools with Rally by using an existing connector that was developed by Rally or use a
third-party integration. You can also build your own integration with our Web Services API and language-specific toolkits.

• Rally Integrations Best Practices
• Supported Versions for Rally Connectors
• Download Rally Connectors
• Deprecated Connectors
• Rally Integrations
• Building Rally Integrations
• Rally Add-in for Excel 2016 and Excel for Microsoft 365
• Idea Manager

Rally Integrations Best Practices
This topic is designed as a supplement to our connector-specific guides. Let us know if you have an additional topic we
should cover here.

• Getting Started With Enterprise Integration Framework
• Using Create and Update Services
• Managing the Logger and Log Files
• Multiple Configuration Files
• Using Field Handlers
• Upgrading Rally Connector on a Windows Machine
• Upgrading Rally Connector on a Non-Windows Machine
• How to Map Fields
• Connector Lockfile
• Running as a Scheduled Task on Windows
• Email Notification of Errors and Warnings
• Finding XML Syntax Errors
• Known Limitations of the EIF Connectors
• Generic Errors Generated by the EIF Connectors

Getting Started with Enterprise Integration Framework
Welcome to working with the Rally Enterprise Integration Framework (EIF). When integrating two systems, we have found
one recommendation that holds true for all connectors: Start simple.

If you are looking at a connector, the first thing we advise is to define the problem you are trying to solve.

Once you know what team and subset of work items you want to move, you can start to look at what the minimum set
of information is that you would want to map. We recommend starting with something as simple as Name, Description,
Owner and then figure out what Rally projects those work items would go to.

Using Create and Update Services
Review Field-level updates from Rally for additional information regarding services.

 718



 Rally®

UPDATE_RALLYFI
ELDS_AND_OTHER

This replaces the UPDATE_RALLY_TO_OTHER and UPDATE_OTHER_TO_RALLY services. It searches
Rally first for updates and pushes only the recently changed fields to the other system. It then searches the
other system for updates and pushes all mapped fields into Rally.

In your config.xml , locate the <ConnectorRunner> tag (usually at the bottom of your config
file). Inside of the <Services> tag, list UPDATE_RALLYFIELDS_AND_OTHER and remove the
UPDATE_RALLY_TO_OTHER and UPDATE_OTHER_TO_RALLY service(s).

<Config>

        ....

        <ConnectorRunner>

                <Preview>False</Preview>

                <LogLevel>Debug</LogLevel>

                <Services>UPDATE_RALLYFIELDS_AND_OTHER,

                                COPY_RALLY_TO_OTHER,

                                COPY_OTHER_TO_RALLY</Services>

        </ConnectorRunner>

</Config>

NOTE
The connector will run the services in the order listed in the configuration file.

COPY_RALL
Y_TO_OTHER

Find new work items in Rally and copy them to the other system.

Query Rally where (ExternalID = null) AND (work item project is in projects listed in RallyConnection) AND
(all RallyConnection CopySelectors conditions are satisfied)

COPY_OTHE
R_TO_RALLY

Find new work items in the Other system and copy them to Rally.

Query Other system where (RallyID is null) AND (all OtherConnection CopySelectors conditions are
satisfied, like MoveToRally = Yes).

NOTE
The Jira connector queries for "-1" (minus one) instead of null.

UPDATE_RAL
LY_TO_OTHER

TIP
Use UPDATE_RALLYFIELDS_AND_OTHER.

Find work items in Rally that are connected to the Other system and move updates.

Query Rally where (ExternalID != null) AND (LastUpdateDate is updated since last connector run time)
AND (all RallyConnection CopySelectors conditions are satisfied).

UPDATE_OTH
ER_TO_RALLY

TIP
Use UPDATE_RALLYFIELDS_AND_OTHER.

Find work items in the Other system connected to Rally work items and move updates.

Query Other system where (RallyID is not null) AND (Other system's work item updated timestamp is since
last connector run time) AND (all OtherConnection CopySelectors conditions are satisfied).

Recommendations When Using Create and Update Services

When listing multiple services:

• When you are setting up the connector, start with just the creation services to get connections working, then add the
update services.

• List the update services first, then the creation services.

Debugging Create and Update Services

• The connector is not finding all of my work items:

 719



 Rally®

All three systems (the Rally server, the Other server and the connector server), should have times synchronized fairly
closely (within a couple minutes). This can be accomplished through NTP (Network Time Protocol).

• The connector is not finding any work items with the Copy service:
a. ExternalID custom field issues:

• Check the Type on the ExternalID custom field in Rally. It must be of type String. (NOTE: If it is of type Text, no
work items will be found on a query.)

• Check the spelling of the ExternalID names in the configuration file and ensure they match what you have setup
in the Rally system or the Other system.

• Rally accesses a custom field through its "Display Name" (not its "Name"). Also, spaces and underscores are
stripped, so something like "External ID" becomes "ExternalID".

• Check the custom field in the other system that is to hold the RallyID Be sure it is really "empty". For some of the
Other systems, empty is "null", for Jira empty is a minus one (-1). Run a test query in other system, assuming it
has a query feature.

b. Check the <CopySelectors> (assuming you are using them) to be sure they do not cause your work items to get
excluded (from the compound AND criteria).

c. When running the Copy service, the query is Project scoped. Therefore only the projects declared in the
<Projects> element of the configuration file will be searched.

d. When running the Update service, the query is Workspace scoped. Therefore all projects in the workspace will be
searched

• The connector is not finding any work items with the Update service:
a. Be sure you have done an update since the connector was last run. For each configuration file, the connector

stores a time file, and it contains the time of the last successful run of the Update services. If you made an update
10 minutes ago and the connector ran in the last 5 minutes, that update may not show up – this sometimes
happens when you are debugging. The time file is named "<Config-File-Name>time.file", and it contains one line as
follows:
2012-05-24 17:18:58 UTC

b. Check the timezone that your Other system stores the last updated date and time. Is it in the same timezone as the
connector or offset?

c. Check that the ExternalID or RallyID was really stored between the two systems.
d. Check the <UpdateSelectors> (assuming you are using them) to be sure they do not cause your work items to

get excluded (from the compound AND criteria).
e. Check for errors or warnings in the log file – you may need to turn up the level of logging. One of the two systems

may have failed on a POST in trying to update.

Managing the Logger and Log Files
As the connectors are running, they will log messages into a file named rallylog.log in the current working directory.
By default, the maximum size of a log file is 5 MB and the log rotation is limited to 10 files. You can adjust the maximum
size of the log file and adjust the maximum count of log files in the log rotation by specifying command line arguments as
follows:

The -s <integer> option pair can be used to specify the maximum size of the log file in MB increments (up to 100 MB).
This can also be expressed as --log-file-size <integer>.

The -m <integer> option pair can be used to specify the maximum number of files in the log file rotation scheme. This
can also be expressed as --max-log-files <integer>.

Example: To set the log file max size to 50 MB and the maximum log file rotation count to 20 files for a single invocation
of the connector:

rally2_xxx_connector -s 50 -m 20 xxx_config.xml -1

 720

https://en.wikipedia.org/wiki/Network_Time_Protocol


 Rally®

OR

rally2_xxx_connector --log-file-size 50 --max-log-files 20 xxx_config.xml -1

The connector uses multiple logging levels, each increasing in the level of detail. Note in the table below that each level
includes all higher level information (for example, WARNING includes all warnings, errors and fatals).

Logger Level Level of Detail Example of Detail

0: Debug Most Detailed Display Field mapping values
1: Info ... Connection / Disconnection Info
2: Warning ... Failed to Map field
3: Error ... Failed Create work item Messages
4: Fatal ... ...
5: Unknown Least Detailed ...(shows as ANY in the log file)

These levels are documented at Ruby Logger utility.

In your configuration file, the <ConnectorRunner> tag is where the <LogLevel> setting is declared, as follows:

<Config>

        ....

        <ConnectorRunner>

                <Preview>False</Preview>

                <LogLevel>Debug</LogLevel>

                <Services>UPDATE_OTHER_TO_RALLY,  COPY_OTHER_TO_RALLY</Services>

        </ConnectorRunner>

</Config>

General recommendations:

• When you are setting up the connector, leave the <LogLevel> at Debug. If you use Debug, you will get the values the
connector tries to map for fields along with other debug information.

• When you are up and running with the connector, set the <LogLevel> to Warning.
• If you leave the connector at Info, you will also see information for when the connector is connected to each system on

wake and sleep.

We recommend checking the log on a daily or weekly basis to look for exceptions or errors to resolve.

Multiple Configuration Files
Multiple configuration files may be needed if your setup requires:

• Mapping to more than one workspace in Rally
• Mapping multiple work item types
• Mapping to multiple containers in the other system, such as:

– domain/projects in Quality Center
– team projects in TFS

NOTE
Naming the configuration files using descriptive names will make troubleshooting easier.

To run the connector with multiple configuration files, invoke it once per configuration file. For example:

For Windows:

 721

http://www.ruby-doc.org/stdlib-1.8.7/libdoc/logger/rdoc/Logger.html


 Rally®

rally2_xxx_connector.exe  config_workspaceA.xml  -1

rally2_xxx_connector.exe  config_workspaceB.xml  -1

For Linux:

rally2_xxx_connector.rb  config_workspaceA.xml  -1

rally2_xxx_connector.rb  config_workspaceB.xml  -1

To have these repeated at regular intervals, define a Windows Scheduled Task (or a cron job in Linux) which will be
invoked at regular intervals. Such a task should be repeated every 10 minutes or more and advise against anything less.

When to Use Multiple Configuration Files
One Directory, Multiple

Configuration Files
For running in one process with multiple configuration files, use this setup if any of the following are true:

• If you are connecting multiple Quality Center Projects, you will need one config.xml file for each
QC Project.

• If you are connecting multiple Jira Projects, you will need one config.xml file for each Jira Project.
• If you are connecting multiple Rally workspaces, you will need one config.xml file for each Rally

workspace.
• If you are connecting multiple work item types, one config.xml file will be needed for each work

item type (Defect, User Story, Test Case).

Multiple Directories You can also install and setup the connector in multiple parallel directories, for example:

Defects in C:\Program Files\RallyConnectorFor<othersystem>\Defects\all EIF
files

Stories in C:\Program Files\RallyConnectorFor<othersystem>\Stories\second
copy of all EIF files

In this case, you can call rally2_*connector.exe config.xml in two different processes. Each
process can then have its own timer interval.

You could, for example, run every 10 minutes for defects and every 30 minutes for stories.

This setup will also allow you to have two different rallylog.log files for the two work items which may
help with monitoring of the log files.

Including Other XML Files

Within a configuration file, it is possible to have other files of XML text included, resulting in all the files being treated
as one XML file. This is accomplished by making use of the XML External Entities feature. For example, the normal
user mapping in the <OtherEnumFieldHandler> section of a configuration file could be removed from the main XML
configuration file and pasted into a new XML file named users.xml . It might look something like this:

File name: users.xml

<OtherEnumFieldHandler>

        <FieldName>BG_RESPONSIBLE</FieldName>

        <Mappings>

                <Field><Rally>rallyuser1@company.com</Rally><Other>qcuser1</Other></Field>

                <Field><Rally>rallyuser2@company.com</Rally><Other>qcuser2</Other></Field>

                <Field><Rally>rallyuser3@company.com</Rally><Other>qcuser3</Other></Field>

                ....

        </Mappings>

</OtherEnumFieldHandler>

In the main configuration file, include the following as the first 4 lines:

<?xml version="1.0"?>

 722

http://www.xml.com/pub/a/98/08/xmlqna1.html#EXTENT


 Rally®

<!DOCTYPE config SYSTEM "config.dtd" [

<!ENTITY usersFile SYSTEM "users.xml">

]>

Then, in your main configuration file, wherever the text should occur, enter the string &usersFile; . For example:

<Config>

        ....

        <Connector>

                ....

                <OtherFieldHandlers>

                        &usersFile;

                        ....

Known limitations with XML include:

• When this feature is used to include a file that contains the user's clear-text password, the connector rewrites the
password as an encoded (not encrypted) string. However, the connector will write the encoded string into the main
XML file instead of the included password file (and thus overwriting the "include" line). Workaround: If the included file
contains the encoded password, the connector will not attempt to rewrite the string.

• When specifying the full path to the include file, use slashes (/) instead of backslashes (\). For example, this would be a
valid path designation: C:/Users/hoodat/RallyQC/x073-Entity-Test-RALLYstory.xml

Using Field Handlers
A field that has been mapped in the <FieldMapping> section can have a "field handler" registered against either field (the
Rally field or the "Other" field).

Once done, the field handler is invoked each time that mapping occurs.

NOTE
It is not supported to register two different field handlers on the same field name. While the connector will silently
ignore such a situation and the connector will normally remember only the last one registered, the results are
unpredictable (and this is not a supported configuration).

Selecting a Subset of Work Items Through <CopySelectors> and <UpdateSelectors>

The connector can be instructed to select a subset of work items from either Rally or the other system when performing
the Copy or Update service. Selecting only a few of your work items is helpful when setting up the connector for the first
time.

NOTE
When using <CopySelectors> , the query is Project scoped. Only the projects declared in the <Projects>
element of the configuration file will be searched.

Copy and Update selection criteria are configured in the <RallyConnection> and <OtherConnection> elements of
your configuration file.

Note that the QC connector has both some limitations and extensions to the selector syntax where other connectors do
not. The details can be found in the FAQ here.

An example of the selector syntax:

<Config>

        ....

        <RallyConnection>

                ....

                <CopySelectors>

 723



 Rally®

                        <CopySelector>FormattedID  = DE351</CopySelector>

                        <CopySelector>SyncToJIRA   = "True"</CopySelector>

                        <CopySelector>State        = "Open"</CopySelector>

                        <CopySelector>Priority    != "Normal"</CopySelector>

                        <CopySelector>Priority    != Low</CopySelector>

                </CopySelectors>

                ....

You can have multiple <CopySelector> elements and <UpdateSelector> elements contained within the
<CopySelectors> container and <UpdateSelectors> container, respectively. Multiple selector elements are ANDed
together. If you need an OR capability, we suggest using multiple configuration files to effect that result, or possibly using
the not-equal on all the values you do not want selected.

A selector element must have a field name, a space, a relation operator, a space and then your target value. If your target
value contains spaces, you do not need to quote the value. For example:

<UpdateSelectors>

        <UpdateSelector>AssignedTo = John Q. Public</UpdateSelector>

        ....

The selector syntax supports evaluating a field against a value with a relational operator. The value must be non-null and
non-blank. The following is an example of syntax that is NOT supported:

<!-- Invalid syntax: -->

<CopySelectors>

        <CopySelector>X_FIELD = </CopySelector>

        ....

As a general rule, a selector element supports the =, !=, <, >, <= and >= relational operators. However, because the
configuration file is in XML, the '<' and '>' characters are problematic and confuse the XML parser. Therefore, use the
alphabetic abbreviation equivalents shown in the following table:

<CopySelectors>

        <CopySelector>LastModified gte 2011-04-05</CopySelector>

        ....

Relation Abbreviation

< lt

<= lte

> gt

>= gte

TIP
Another way to move a smaller set of work items from the other system to Rally is to create a custom field
named "Move to Rally?" that is a Yes/No drop-down list or check box. The connector can then select and move
only those work items where the custom field is "Yes".

Using Selectors on Reference Fields

Reference fields, which are any field in a work item that actually points to another object (as opposed to containing a
simple value) in the OTHER system are not supported.

Fields in a Rally referenced object can be used in the selector elements. For example:

<CopySelectors>

 724



 Rally®

        <CopySelector>Project.Name = MyNewProj1</CopySelector>

        <CopySelector>Iteration.Name = Iter2</CopySelector>

        ....

Upgrading a Rally Connector on a Windows Machine
NOTE
Upgrading instructions are unique to your system environment.

1. Back-up your configuration file(s) and any custom field handlers. The best practice is to ALWAYS rename your
configuration files and never use the default <connector_name>_config.xml files as the uninstall (step 2) will
delete those files permanently.

2. Go to the directory where you installed the Rally Connector (by default C:/Program Files/
RallyConnectorfor<connector_name> ) and double-click unins000.exe .

3. Run the installer, RallyConnectorfor<connector_name>Install-<version>.exe , for the latest Rally
Connector version.

Upgrading a Rally Connector on a Non-Windows Machine
NOTE
Upgrading instructions are unique to your system environment.

Upgrading on non-Windows systems uses the rally2*.rb script.

1. Back-up your configuration XML file(s) and any custom field handlers. Best practice is to ALWAYS rename your
configuration files and never use the default <connector_name>_config.xml files.

2. Uninstall the current gem. Open a console shell and type: gem uninstall yeti

3. Once you have saved the gem locally, CD to the directory where the gem resides.

4. Install the latest gem. Open a console shell and type: gem install yeti*.gem

How to Map Fields
When transferring work items from Rally, to another system (or vice versa), the configuration file must specify which fields
of the work items in Rally are to be mapped to which fields in the other system. This is done within the <FieldMapping>
XML element in the configuration file. When the connector performs a create or update, only the fields specified in this
section will be modified.

When you set up your mapping, ensure the fields are compatible between the two systems (for multiexample, an integer
field should map to an integer field, or a rich text should map to a rich text in the other system. Otherwise, you might
experience situations where information is not created/updated between the two systems and you will see an error in the
log file. For example, the connector will post an error for a particular work item if you try to map a string field to a custom
field of type integer in Rally.

When specifying Rally field names, the "Display Name" must be used (as opposed to the "Name"). Also, when specifying
the Display Name in the <FieldMapping> section, if there are spaces in the Display Name, they should be removed
(that is, a Display Name of "Foo Bar" would be declared as <Rally>FooBar</Rally> ).

If you are mapping a drop-down value in Rally to the other system, the connector can accommodate scenarios where
the fields have the same exact values OR the fields do not have the same values. For the most part, if the values for the
fields are the identical, no other configuration element must be specified for the correct execution of the field mapping.
The exception is for Rally custom fields that are multi-select fields. These fields are described in more detail in Mapping
Rally Multiple Value Fields.

 725



 Rally®

If the connector encounters a situation where the mapped field in the target (destination) system is NOT identical, the
connector generates an error to let you know the value was not found in the list of defined values. However, if the values
for the Rally field and the field in the other system are NOT identical, then additional configuration syntax (in the form
of a FieldHandler specification) is REQUIRED for the correct execution of the field mapping. For more information, see
Mapping Drop-Down Values.

For example:

<Config>

   ....

   <Connector>

      <FieldMapping>

         <Field><Rally>State</Rally>    <Other>Status</Other></Field>

         <Field><Rally>Severity</Rally> <Other>Importance</Other></Field>

         <Field><Rally>Priority</Rally> <Other>Urgency</Other></Field>

      </FieldMapping>

   ....

In the example, the Rally "State" field will be mapped to the other system's "Status" field, "Severity" to "Importance", and
"Priority" to "Urgency".

Mapping Rally ID Fields

Rally Objects have two identifiers, one which is unique across all Rally Entities (the ObjectID) and the other which is only
unique inside a workspace (the FormattedID). These can be viewed by going to a Rally defect's detail page (using the
Rally GUI) and near the top left corner, you should see the FormattedID listed as something like DE42. If you select the
chain link icon to the left of the bold name and ID, you will go to a specific URL for that defect, which is something like:
https://rally1.rallydev.com/#/3026904716ud/detail/defect/3026966119. The number at the end of the URL (3026966119
in this example) is the ObjectID for the Defect.

The mappings for both of these ID fields can be set up in the <RallyConnection> and the <OtherConnection>
elements of your configuration file.

The following example XML shows a QC Connection where both the Rally ObjectID and Rally FormattedID are being
mapped to the QC custom fields named in the <ExternalIDField> and <ExternalEndUserIDField> tags,
respectively. The connectors for Jira and TFS can also recognize these tags.

<!-- This first line is an XML comment -->

<Config>

   ....

   <QCConnection>

      <Url>server:port</Url>

      <Domain>Domain Name</Domain>

      <Project>Project Name</Project>

      <User>qcusername</User>

      <Password>password</Password>

      <ArtifactType>BUG</ArtifactType>

      <!-- The following custom field will contain the Rally ObjectID -->

      <ExternalIDField>BG_USER_XX</ExternalIDField>

      <!-- The following custom field will contain the Rally FormattedID -->

      <ExternalEndUserIDField>BG_USER_YY</ExternalEndUserIDField>

   </QCConnection>

   ....

 726



 Rally®

Rally Rich Text Field 32 KB Character Limit

Rally has a 32 KB character limit for rich text fields, such as the Description and Notes fields. Other systems such as
Micro Focus ALM/Quality Center support a limit beyond 32 KB for text fields which causes data constraint inconsistencies.

If you copy/update a work item from the target system to Rally, the connector will warn you that the text is beyond the 32
KB limit and not copy/update the particular work item. The warnings will not prevent the connector from running as it will
continue to copy/update the next work item that needs processing.

If you want to avoid warnings for the 32 KB limit, Rally advises that you enforce this limit on the connection target system.
For example, if you are using Quality Center, you can write a custom script that is executed when the user saves the bug
or requirement that automatically restricts any text field to the 32 KB limit. Talk to your system administrator to explore
solutions that ensure consistency between text fields in each system when different character limits exist.

Another alternative is to only map the field in one direction. For example, if Rally restricts the field to 32 KB, then only
allow the copy/update from Rally to the other system. This ensures that the text for that field is never too big.

<Config>

   ....

   <Connector>

      <FieldMapping>

         <Field> <Rally>Description</Rally>

                 <Other>BG_DESCRIPTION</Other>

                 <Direction>TO_OTHER</Direction>

         </Field>

         ....

Field Directionality

To restrict when a particular field is copied or updated, add a <Direction> tag to the <FieldMapping> section for that
field.

Specify TO_OTHER (upper or lower case) if you want Rally to be the source of record, meaning changes from the other
system are never pushed to Rally. Specify TO_RALLY (upper or lower case) if you want the other system to be the source
of record, meaning changes from Rally are never pushed to the other system.

<Config>

   ....

   <Connector>

      <FieldMapping>

         <Field> <Rally>Description</Rally>

                 <Other>BG_DESCRIPTION</Other>

                 <Direction>TO_OTHER</Direction>

         </Field>

         <Field> <Rally>Notes</Rally>

                 <Other>BG_NOTES</Other>

                 <Direction>to_rally</Direction>

         </Field>

         ....

Mapping Required Fields and Field Defaults

When you want to copy work items (such as user stories, defects, test cases) from one system to another (Rally, QC, Jira)
and the destination system has required fields defined on the work item, you can use one (not both) of the following two
methods:

1. Use the <FieldMapping> element described in How to map fields.

 727



 Rally®

2. If you do not use field mappings, and you want a required field in the destination system to always have the same
default value, use the <FieldDefaults> XML element. For example:
<Config>

   ....

   <QCConnection>

       ....

       <FieldDefaults>

           <Field><Name>Severity</Name><Default>Rally-Severity</Default></Field>

           <Field><Name>Status</Name>  <Default>Rally-Status</Default></Field

       </FieldDefaults>

       ....

In the example, the XML element <QCConnection> could be something like <RallyConnection> or
<OtherConnection> , depending on which connector you are using. The QC field "Severity" is automatically
assigned the default string value of "Rally-Severity" for any work item created in the QC system. The QC field "Status"
automatically gets a string value of "Rally-Status".

Mapping Fields With Null Values

When the connector updates field values, if one side of the connections is a null value, the connector skips the update.
If it is the only update to the underlying artifact, the rallylog.log will say Skipped update for <id> since no fields
changed.

Different systems treat null or empty values for given field types inconsistently, so we chose not to nullify values during
updates due to this disparity. Reflection of null values is further complicated by the fact that users are able to map a field
of one type in one system to a field of another type in the other system.

Field-Level Updates From Rally

A service is available for updates with the work item EIF connectors. UPDATE_RALLYFIELDS_AND_OTHER
has been introduced to help the connector deal with updates in both systems. The service will override the
UPDATE_RALLY_TO_OTHER and UPDATE_OTHER_TO_RALLY services.

<Config>

    ....

    <ConnectorRunner>

        ....

        <Services>UPDATE_RALLYFIELDS_AND_OTHER</Services>

    </ConnectorRunner>

</Config>

This service first searches Rally for updates and pushes only the recently-changed fields (that were mapped) to the other
system. It then searches the other system for updates and pushes all mapped fields into Rally. This reduces the chance of
overwriting data when work items are modified in both systems.

Example:

The connector runs and a work item is copied and up to date in both systems.

• In Rally, a user changes Severity to Low
• In QC, a user updates the Description

With the older services, the first update service listed would take precedence. For example, if
UPDATE_RALLY_TO_OTHER were listed first, the connector would copy all the Rally data to the other system and the
Description change would not be processed.

Now, however, the connector will search Rally for updates and check what mapped Rally fields have changed. In this
example, only Severity changed and the connector will send only the Severity change over to the other system instead of

 728



 Rally®

all of the mapped fields. Then the connector will search the other system for updates and the Description change will be
pushed to Rally, along with all other mapped fields.

To configure the new service:

NOTE

• A warning is logged if the old update services are listed with the new one, noting that the old update services
will be skipped.

• Field Level <Direction> tag mappings are still respected.
• If you wish to configure a one-way feed of data and updates from another system to Rally, we recommend

still using COPY_OTHER_TO_RALLY and UPDATE_OTHER_TO_RALLY.

1. In your config.xml file, locate the <ConnectorRunner> tag (usually at the bottom of your config file).
2. Inside the <Services> tag, add UPDATE_RALLYFIELDS_AND_OTHER and remove the

UPDATE_RALLY_TO_OTHER and UPDATE_OTHER_TO_RALLY service(s).

Mapping Drop-Down Values

If you have different drop-down values between the two systems, you can setup up another type of field handler in your
configuration file which defines the mapping. For example:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>Priority</Rally> <Other>BG_PRIORITY</Other></Field>

            <Field><Rally>Severity</Rally> <Other>BG_SEVERITY</Other></Field>

            ....

        </FieldMapping>

        <OtherFieldHandlers>

            <OtherEnumFieldHandler>

                <FieldName>BG_PRIORITY</FieldName>

                <Mappings>

                    <Field><Rally>Resolve Now</Rally><Other>1</Other></Field>

                    <Field><Rally>High</Rally>       <Other>2</Other></Field>

                    <Field><Rally>Normal</Rally>     <Other>3</Other></Field>

                    <Field><Rally>Low</Rally>        <Other>4</Other></Field>

                    <Field><Rally>Trivial</Rally>    <Other>5</Other></Field>

                    <Field><Rally>None</Rally>       <Other>6</Other></Field>

                </Mappings>

            </OtherEnumFieldHandler>

            ....

        </OtherFieldHandlers>

        <RallyFieldHandlers>

            <RallyEnumFieldHandler>

                <FieldName>Severity</FieldName>

                <Mappings>

                    <Field><Rally>Crash Data/Loss</Rally> <Other>S1</Other></Field>

                    <Field><Rally>Major Problem</Rally>   <Other>S2</Other></Field>

                    <Field><Rally>Minor Problem</Rally>   <Other>S3</Other></Field>

                    <Field><Rally>Cosmetic</Rally>        <Other>S4</Other></Field>

                </Mappings>

 729



 Rally®

            </RallyEnumFieldHandler>

            ....

        </RallyFieldHandlers>

        ....

This sets up a mapping of the values from the Rally field Priority to the other systems field of BG_PRIORITY. The value in
the <FieldName> element should be the name of the field being mapped.

The <Mappings> element defines the Rally value within the <Rally> tags and the corresponding other system's value
within the <Other> tags. In the example, in the <OtherEnumFieldHandler> for BG_PRIORITY, the value Resolve
Now in Rally maps to a value of 1 in the other system and High in Rally maps to a value of 2 in the other system.

IMPORTANT

• The connectors are not able to handle drop-down fields in Rally which have a <<No Entry>> value in the UI
(for example, the field is empty).

• Multi-value drop-down fields are not supported.

NOTE
You could add additional mappings for other fields to the configuration file by following this same format and
adding another <OtherEnumFieldHandler> element with the corresponding values.

This field handler allows for both many-to-one (or many-to-fewer) value mappings. However, for any field which has many-
to-one mapping defined, the inverse operation, one-to-many (or fewer-to-many) is undefined. For instance, given this
configuration file syntax:

        ....

        <OtherEnumFieldHandler> 

                <FieldName>MyFieldName</FieldName> 

                <Mappings> 

                        <Field><Rally>Submitted</Rally>    <Other>NEW</Other></Field> 

                        <Field><Rally>Submitted</Rally>    <Other>STUDY</Other></Field> 

                        <Field><Rally>Closed</Rally>       <Other>FIXED</Other></Field> 

                        <Field><Rally>Fixed</Rally>        <Other>FIXED</Other></Field> 

                </Mappings> 

        </OtherEnumFieldHandler>

        ....

When mapping from Rally to Other, a Rally value of "Submitted" will produce unpredictable results. Also, when mapping
from Other to Rally, a Other value of "FIXED" will produce unpredictable results.

There is also a <OtherConditionalEnumFieldHandler> , which is very similar to the <OtherEnumFieldHandler>
except only the exceptions need to be declared, such as corresponding entries in the pull-down lists of both systems
which are identical, need not be declared.

Mapping Rally Multiple Value Fields

Rally includes some standard fields that are able to contain multiple values. Tags and Milestones are two examples. There
are FieldHandlers available in Rally-Jira WIC that are specifically used for these fields:

• RallyKeyword2TagFieldHandler
• RallyMilestonesFieldHandler.

Rally also lets you create custom fields with an attribute type of Drop Down List (Multi Value). A custom field of this type
can contain either a single value (example: apple) or multiple values (example: crow, eagle, wren). The underlying Rally
WSAPI has specialized machinery for this field type (collection). To include fields of this type in your WIC configuration,
you must use a Rally-oriented FieldHandler that is capable of processing the "collection" properly in your context.

 730



 Rally®

When all of the values for the custom field in Rally of type Drop Down List (Multi Value) are exactly matched by the
values for the corresponding mapped field in Jira, you can use a RallyMultiSelectFieldHandler.

When the values for the custom field in Rally of type Drop Down List (Multi Value) are not exactly matched by the
counterpart field in Jira, you must use a RallyEnumMultiSelectFieldHandler. The one-to-one value mappings must be
listed in the configuration for this field handler.

For details on the syntax for these FieldHandlers, see the RallyFieldHandlers section of Field Handlers for the Rally-Jira
WIC.

Mapping User Names

To map Rally fields which reference a user name, add a field mapping to the <FieldMapping> section (within the
<Connector> section) as in one or both of the following examples:

        <Field><Rally>Owner</Rally>      <Other>Bug_Owner</Other></Field>

        <Field><Rally>SubmittedBy</Rally><Other>Bug_Finder</Other></Field>

We recommend that all users which are expected to be mapped between the two systems be created in Rally before you
start using the connector. Even for those users of the Other system which do not intend to use Rally, there should be an
account created for them in Rally so that the system can have a valid user reference in the copied work items. You may,
however, mark those users as inactive in Rally if you do not wish them to ever be active users. In this case, the connector
will still be able to set the fields to point to these inactive users.

In Rally, the Owner and SubmittedBy fields on a work item (HierarchicalRequirement, Defect, Test Case, and so on) are
"reference" fields. This means they do not contain a simple string value, but rather they are pointers to yet another object
(the User object in these examples). When the connector is updating or copying a work item from the Other system to
Rally, it must translate the Other system's user name into a valid Rally user name. To accomplish this task, the connector
can use one of the four methods for mapping user names between Rally and the Other system.

Using the
<Domain> XML tag

If you want to map users between Rally and the Other system, you can specify a <Domain> XML tag in
the <Connector> section as follows:
<Config>

   ....

   <Connector>

      <OtherFieldHandlers>

         <OtherUserFieldHandler>

            <FieldName>Bug_Owner</FieldName>

            <Domain>YourCompanyName.com</Domain>

         </OtherUserFieldHandler>

      </OtherFieldHandlers>

   </Connector>

   ....

The <FieldName> XML tag contains the name of the field in the Other system and the <Domain> XML
tag specifies the expected domain for user names in Rally. In the example, peter in the Other system
would be mapped to peter@YourCompanyName.com in Rally.

Using the MiddleName
(or other) field on
the User object.

On each User profile in Rally, you could assign the MiddleName (or other unused field on the User
object) field to be the exact ID of the user in the Other system. When the connector is copying a work
item, it will search Rally for a User object whose MiddleName (or whichever field is specified in the
<ReferenceFieldLookupID> tag) matches the Other system's user name string. When a match is
found, this Rally user will be used in the field mapping for this new Rally work item. Valid fields are User,
Owner, SubmittedBy and Tester. Example configuration file syntax:
<Config>

    ....

    <Connector>

 731



 Rally®

        <RallyFieldHandlers>

            <RallyUserFieldHandler>

                <FieldName>Owner</FieldName>

                <ReferencedFieldLookupID>MiddleName</ReferencedFieldLookupID>

            </RallyUserFieldHandler>

            ....

        </RallyFieldHandlers>

    </Connector>

        ....

Using an
<OtherEnumFieldHandler>

XML tag

User name mapping may be done the way it is described in "Mapping drop-down values" section of
our help. This is basically a method where every user is explicitly mapped between systems. Example
configuration file syntax:
<Config>

    ....

    <Connector>

        <OtherFieldHandlers>

            <OtherEnumFieldHandler>

                <FieldName>RQ_REQ_AUTHOR</FieldName>

                <Mappings>

                    <Field><Rally>John.Doe@MyCompany.com</Rally>

                           <Other>JDoe</Other></Field>

                    <Field><Rally>John.Smith@MyCompany.com</Rally>

                           <Other>JSmith</Other></Field>

                    <Field><Rally>Dee.Thomp@MyCompany.com</Rally>

                           <Other>DThomp</Other></Field>

                    ....

                </Mappings>

            </OtherEnumFieldHandler>

        </OtherFieldHandlers>

    </Connector>

    ....

The drawback to this approach is that it may require a very long list of users. If two different "username"
fields need to be mapped, rather than repeating the <OtherEnumFieldHandler> mapping, you could
also use the XML entity feature described in How to include other XML files.

NOTE
When using the Micro Focus ALM/Quality Center connector with this method of user name
mapping, the "User Name" field from both Rally and Quality Center are to be used in the
example (as opposed to the "Email Address" fields).

Using a
<RallyCSVUserMappingFieldHandler>

XML tag

User name mapping can be done using a CSV file. See example configuration file here.

Mapping Reference Fields from Rally

In Rally, some fields in a work item are string or number values while other fields are actually pointers (called a
"reference") to other objects. For the most commonly used reference fields, no additional syntax is required to properly
map these fields. For some of the more infrequently used Rally reference fields, the connector has special syntax when
they are listed as fields to be mapped. More advanced and simple reference field handling was introduced with the 4.4.12
release.

• No FieldHandler is necessary if the intended attribute value desired for the mapping is the Name field.
RallyReferenceFieldHandler for the Project, Release, and Iteration fields has been deprecated (since 4.4.2).

 732

https://knowledge.broadcom.com/external/article?articleId=125058


 Rally®

When you need to map an attribute other than Name for (Project, Release or Iteration), you'll need to use a
<RallyReferenceAttributeLookupFieldHandler> (see below).

• Advanced field handling for other Reference fields. Applicable fields:
– Parent
– Requirement
– TestCase
– TestCaseResult
– TestFolder
– WorkProduct
These fields are found in Rally work items, including HierarchicalRequirement, Defect, and TestCase.
Use a RallyReferenceFieldHandler with a <ReferencedFieldLookupID> tag for the intended lookup attribute. The
lookup attribute should be a non-reference field. Examples of such attributes are "Name" and "ObjectID".

• Project, Release or Iteration with an intended lookup attribute other than the "Name" field:
use <RallyReferenceAttributeLookupFieldHandler> for this with a corresponding
<ReferencedAttributeLookupID> tag for the specific attribute to be used as the map value.

• In the <Connector> section of the configuration file, specify the field to be mapped in the <FieldMapping> section.
• Also in the <Connector> section of the configuration file, create a <RallyFieldHandlers> section.
• In this section, specify the field in a <RallyReferenceFieldHandler> element as

<FieldName>the_name_of_the_field</FieldName> .
• If no <ReferencedFieldLookupID> tag and value is specified, the "Name" attribute is used by default.
• If the default value is not suitable for your purposes, explicitly provide a <ReferencedFieldLookupID> tag and

value, where the value is a Rally work item attribute such as "DisplayName", "FormattedID", "ObjectID".

Example syntax:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>Requirement</Rally><Other>BG_USER_07</Other></Field>

        </FieldMapping>

            ....

            <RallyFieldHandlers>

                <RallyReferenceFieldHandler>

                    <FieldName>Requirement</FieldName>

                        <ReferencedFieldLookupID>FormattedID</ReferencedFieldLookupID>

                </RallyReferenceFieldHandler>

            </RallyFieldHandlers>

    </Connector>

        ....

When running any WorkItem Connector 4.4.0 or beyond (4.4.x, 4.5.x, ...), if the connector detects the use of a
<RallyReferenceFieldHandler> for one of the Project, Release or Iteration fields, a deprecation notice (warning) will
be written to the log file and the field handler for that particular field will not be registered. The field will be mapped using
the referenced item's Name field.

NOTE
If there are multiple Rally projects listed in the <Projects> element under <RallyConnection> , then the
work items from the other system will be copied to Rally and placed in the first Rally project listed.

 733



 Rally®

Mapping Boolean Fields To and From Rally

In Rally, some fields in a work item have boolean values. These fields can be mapped to Jira Radio Buttons or Micro
Focus ALM/Quality Center Boolean fields. They can also be mapped to Jira Check Box fields, however, we do not
recommend this as the Jira Check Box fields are multi-value fields. This field handler will map the fields in both directions.

• In the <Connector> section of the configuration file, specify the field to be mapped in the <Fieldmapping> section.
• Also in the <Connector> section of the configuration file, create a <RallyFieldHandlers> section.
• Within this section, specify the field in a <RallyBooleanFieldHandler> element as

<FieldName>the_name_of_the_Rally_field</FieldName>
• Specify the values to map in the <Mappings> section.

Example syntax:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>TestBoolean</Rally><Other>JiraRadioButton</Other></Field>

        </FieldMapping>

            ....

            <RallyFieldHandlers>

                <RallyBooleanFieldHandler>

                    <FieldName>TestBoolean</FieldName>

                        <Mappings>

                        <Field><Rally>true</Rally><Other>yes</Other></Field>

                        <Field><Rally>false</Rally><Other>no</Other></Field>

                        </Mappings>

                </RallyBooleanFieldHandler>

            </RallyFieldHandlers>

    </Connector>

        ....

Connector Lockfile
Whenever the connector runs, it will create a lockfile (in the working folder) named LOCK.tmp.

This file will exist until the connector terminates, at which time the lockfile is deleted. The contents of the lockfile is one line
of the form:

<PID> <DATE> <TIME> <TIMEZONE> <CONFIG-FILE-NAME> <DELAY-ARGUMENT>

For example:

1684 2012-06-20 16:24:00 Z MyConfig.xml -1

Each time the connector is invoked, it will check for the existence of a lock file in the working folder, and:

• If found, the connector will issue this warning:
WARN : ConnectorRunner.acquire_lock - A LOCK.tmp file exists

The connector will then attempt to determine if the PID (process ID) which created the lockfile still exists, and:
– if the PID is still running, the connector will exit after printing this error:

ERROR : ConnectorRunner.acquire_lock - Another connector process (1234) is still running, unable to

 proceed

ERROR : ConnectorRunner.acquire_lock - Simultaneous processes for this connector are incompatible,

 exiting now

 734



 Rally®

ERROR : ConnectorRunner.acquire_lock - Unable to proceed with this invocation of the connector

– if the PID is gone, the connector will proceed normally after printing this warning:
WARN : ConnectorRunner.acquire_lock - A prior connector process (1234) did not clean up

the lock file on termination, proceeding with this run

• If not found, the connector creates a lock file, and when done, the connector deletes the lock file.

This prevents more than one instance of the connector being invoked from the same working folder.

Running as a Scheduled Task on Windows
When you are ready to deploy to production, you may want to consider running the connector as a scheduled task.

You can set up a scheduled task on Windows (this example assumes Quality Center).

1. Create a batch file (such as the following example rallyWin-qc.bat ). Note in the following script
there are two variables defined: :: :: rallyWin-qc.bat :: :: Set the "Connector
folder" (where the connector has been installed). set cfolder="C:\Program Files
(x86)\RallyConnectorforQualityCenter" :: Set the "Working folder" (where the
configuration files are kept and :: modified; this is typically somewhere in the user's
home folder). set wfolder="C:\Users\johndoe\QCconfigFiles" :: Invoke the connector.
%cfolder%\rally2_qc_connector.exe %wfolder%\qc-config.xml -1 >> %wfolder%\Connector.log
2>&1 ::the end::

In this example:

• The -1 as the second argument tells the connector to run only once, then exit.
• When the connector runs, it will append its status messages into a file named rallylog.log in your working

folder (the wfolder variable).
• Any catastrophic error messages (like permission denied, and so on) would be found in the file Connector.log in

your working folder (the wfolder variable).

• cfolder - the folder where the connector is installed (typically something like C:\Program Files
(x86)\RallyConnectorforQualityCenter )

• wfolder - the folder where the user works (the working directory). This is typically your home directory, which is
something like C:\Users\johndoe\QCconfigFiles .

2. Set up a scheduled task in Windows to run your script, specifying your batch script as the task action.

Email Notification of Errors and Warnings
The connectors can send email when errors or warnings occur in the logfile. With this feature enabled, the connectors
can send a summary email for each configuration file used, and the subject line of the email will contain the name of the
configuration file.

To send email to multiple emails use a semi-colon to delimit each email address. All errors and warnings encountered
during the connector run for that configuration file will be collected and reported in an email as follows:

• If the level is set to Error, then a summary email containing all the errors is sent.
• If the level is set to Warning, then a summary email containing all the errors and warnings is sent.

NOTE
Only these two values for the <Level> tag are supported:

• <Level>Error</Level>
• <Level>Warning</Level>

Here are two examples of the configuration file syntax required to enable this feature:

Standard SMTP server - No Authentication:

 735



 Rally®

<Config>

    ....

    <ConnectorRunner>

        <Preview>False</Preview>

        <LogLevel>Debug</LogLevel>

        <Services>COPY_RALLY_TO_OTHER</Services>

        <Emailer>

            <Level>Warning</Level>

            <SendEmailFrom>monitor@acme.com</SendEmailFrom>

            <SendEmailTo>monitor@acme.com</SendEmailTo>

            <SMTPServer>smtp.acme.com</SMTPServer>

            <SMTPPort>25</SMTPPort>

        </Emailer>

    </ConnectorRunner>

</Config>

SMTP server - with TLS and Authentication:

<Config>

    ....

    <ConnectorRunner>

        <Preview>False</Preview>

        <LogLevel>Debug</LogLevel>

        <Services>COPY_RALLY_TO_OTHER</Services>

        <Emailer>

            <Level>Warning</Level>

            <SendEmailFrom>monitor@acme.com</SendEmailFrom>

            <SendEmailTo>monitor@acme.com</SendEmailTo>

            <SMTPServer>smtp.acme.com</SMTPServer>

            <SMTPPort>587</SMTPPort>

            <SMTPDomain>Your-Domain.com</SMTPDomain>

            <SMTPUser>Your-Username@Your-Domain.com</SMTPUser>

            <SMTPPassword>Your-Password</SMTPPassword>

            <SMTPSec>TLS</SMTPSec>

        </Emailer>

    </ConnectorRunner>

</Config>

Finding XML Syntax Errors
The XML configuration files can get rather lengthy and cumbersome, hindering the hunt for syntax errors.

For such issues, this web page can be used for XML validation: https://www.w3schools.com/xml/xml_validator.asp.

Copy your XML text and paste it into the window and select Validate.

Also note that syntax errors in the configuration file are typically logged in the rallylog.log file. For example:

• Special characters in the <WorkspaceName> or <Project> tags:
If these fields contain special characters, the characters must be escaped as in:
– "&" (ampersand) must be entered as "&amp;"
– ">" (greater than) must be entered as "&gt;"
– "<" (less than) must be entered as "&lt;"
Example 1: Note the following (invalid) configuration file snippet, and the log file output:
<Config>

 736

https://www.w3schools.com/xml/xml_validator.asp


 Rally®

        <RallyConnection>

                <Projects>

                        <Project>JP & Nick Project</Project>

                ....

ERROR : Class.initialize - xmlParseEntityRef: no name

ERROR : ConnectorRunner.initialize - xmlParseEntityRef: no name

ERROR : Object.exception - Message xmlParseEntityRef: no name

ERROR : Object.exception - Stack Trace

....

Example 2: Note that with a small change, the error report is different:
<Config>

        <RallyConnection>

                <Projects>

                        <Project>JP&Nick Project</Project>

                ....

ERROR : Class.initialize - EntityRef: expecting ';'

ERROR : ConnectorRunner.initialize - EntityRef: expecting ';'

ERROR : Object.exception - Message EntityRef: expecting ';'

ERROR : Object.exception - Stack Trace

....

Known Limitations of the EIF Connectors
Several connectors are built upon a common library called EIF (Extensible Interface Framework): Atlassian Jira, Micro
Focus ALM/Quality Center (formerly HP ALM/Quality Center), and TFS.

Below is a list of known limitations in these connectors.

Using the Tag
object in Rally

Only the following connector supports Rally Tags:

• Jira (see example here)

SSO not supported The Rally WorkItem Connectors (and the Rally SCM connectors) are not compatible with the SSO feature;
however, these connectors can be used in SSO Exception Mode.

Some new fields on
Rally work items
are not available.

In previous versions of the EIF connectors, the framework upon which the connectors were built was
tied to the Rally WSAPI version 1.42. Because of this, new fields in the most current version of the Rally
WSAPI (v2.0 at the time of this writing) were not available in those older versions of the connectors. Some
commonly desired "new" fields that are not available in the older versions of the connectors are:

• Ready (on Artifact objects).
• BlockedReason (on Defect objects).
• DragAndDropRank (a read-only field on Defects used for ranking items).

Connectors will not
copy mapped fields

which are empty.

When a mapped field is manually cleared by a user, this "clearing" will not be copied to the Other system by
the connectors (for example, the field in the Other system will not be cleared). This was a design feature in
the connectors and the reasons for it are varied. A possible work-around is to define a string value in each
system which essentially represents "unset", and map those values together.

Generic Errors Generated by the EIF Connectors
If you press Control + C while the connector is running, it is likely to generate the following error in the logfile:

ERROR : ConnectorRunner.initialize - 

ERROR : Object.exception - Message 

ERROR : Object.exception - Stack Trace

ERROR : Object.block in exception - /Users/..../yeti-2.8.8/lib/yeti/connector_runner.rb:170:in `sleep'

 737

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Tag
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Tag
https://knowledge.broadcom.com/external/article?articleId=125050
https://rally1.rallydev.com/slm/doc/webservice/?version=1.42
https://rally1.rallydev.com/slm/doc/webservice/?version=v2.0
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Artifact
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Defect


 Rally®

ERROR : Object.block in exception - /Users/..../yeti-2.8.8/lib/yeti/connector_runner.rb:170:in `run'

ERROR : Object.block in exception - ./rally2_<connector>_connector.rb:30:in `<main>'

Supported Versions for Rally Connectors
Rally supports only the last two revisions of the connectors and only specific versions of the products we connect to
(depending on which versions we are certified on).

To see which versions are supported, refer to the individual connector’s help page.

We strongly recommend that you check for and update to newer versions of the connector on a regular basis to ensure
you have the latest functionality and defect fixes. We do not recommend using unsupported versions of connectors and
products. If you use them, we cannot support, assist, or investigate issues related to using an unsupported version.

If you run connectors (supported and unsupported) with Rally, you are responsible for:

• Maintaining a reasonable number of API requests made to Rally
• Monitoring the logs for any problems or errors
• Resolving any issues that happen involving running the connector

Rally reserves the right to disable accounts at any time with or without notice that are causing issues that impact users
of any subscription. For example, if you are running a work item connector where you are copying Rally work items to an
external system. If there are required fields that are not accounted for in the connector configuration, you may encounter a
situation where copy attempts fail and get retried every run of the connector. In environments where many work items are
present this may lead to a very large amount of failed requests. Rally may disable these account due to the large number
of unresolved failures.

Download Rally Connectors
Connector downloads are easily accessible from support. Find the connector and release you are looking for in the list
and select the link to download the connector.

The download list includes all of the available connectors. Note that some connectors may have more than one release
available.

Questions or problems? Contact Rally Technical Support.

1. Go to the connector download site here.

2. Select the Download link of the desired connector.

3. Continue with the installation instructions for the connector.

Deprecated Connectors
Connectors that have been deprecated are no longer supported by Rally.

Deprecated connectors will no longer appear in the connector downloads page. The help descriptions will also be
removed.

GitHub Services Integration

The GitHub Services Integration for Rally is no longer available in any supported GitHub or GitHub Enterprise version
(since 2020).

If you want to integrate GitHub repository pull request information into Rally but do not want to install the policy-based
Rally VCS Connector for GitHub and GitHub Enterprise (PBVCS) which covers changeset and pull request information
integrated to Rally, you should consider the Rally Bot GitHub App Integration. The distinction between these connectors

 738

https://support.broadcom.com
https://support.broadcom.com/web/ecx/support-content-notification/-/external/content/release-announcements/CA-Agile-Central-Connectors/2910


 Rally®

is that PBVCS is installed and run on your server as opposed to the Rally Bot GitHub App Integration, which is an app in
GitHub that provides the "feed" part of the app on GitHub servers.

The Rally Bot GitHub App Integration only works with GitHub, not with GitHub Enterprise. If you are using Github
Enterprise and want something that can get your pull request information to Rally, contact GitHub about their app that
works in the GitHub Enterprise environment.

Rally Integrations
The Rally platform reduces the pain of connecting enterprise tools to create a single source of record for decision-making
across the business.

Both our SaaS and On-Premises products seamlessly integrate and synchronize with best-of-breed development tools -
whether they are behind your corporate firewalls or hosted in the cloud. Extend Rally functionality with free Apps from the
Rally App Catalog or create new displays, reports, and integrations using our App SDK toolkit and Enterprise Integrations
Framework.

In the help, the supplier is indicated on the integration topic:

• Integrations created and supported by Rally. Contact Support for these connectors.
• Integrations provided and supported by a vendor. The help topic title includes the vendor’s name, such as Kovair

Omnibus or OpsHub. Contact the vendor for these connectors.
• Integrations provided by third-party vendors. The help topic includes “Third-Party” in the title. Rally does not provide

information or support for these connectors.

See the following sections for general information:

• Supported Versions for Rally Connectors
• Rally Integrations Best Practices
• Download Rally Connectors
• Work Item Connector API Key Support

Rally includes the following integrations.

NOTE
Each integration/connector is listed alphabetically in the table of contents.

Application Security

• SD Elements (Third-Party Integration)

Build/Release Management

Connectors with continuous build systems let you publish build results to Rally.

• BMC Release Process Management (Third-Party Integration)
• CloudBees (Third-Party Integration)
• Jenkins
• Jenkins Integration with Rally Software and GitHub (OpsHub)
• Rally Build Connector for Bamboo

CRM and Help Desk Integrations

Integrations with Customer Relationship Management (CRM) systems let you publish customer-related data into Rally.

 739

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

• BMC Remedy (Kovair Omnibus)
• BMC Remedy (OpsHub)
• Rally Integration with ServiceNow DevOps (Third-Party Integration)
• Salesforce (OpsHub)
• ServiceNow (OpsHub)
• Zendesk (OpsHub)

Defect Management

Integrations with defect tracking applications allow team members to synchronize their QA progress made during
iterations with details managed by QA departments using specialized defect tracking tools.

• Applitools Eyes (Third-Party Integration)
• Atlassian Jira (OpsHub)
• Fog Creek FogBugz (OpsHub)
• IBM ClearQuest (OpsHub)
• Micro Focus ALM/Quality Center
• Microsoft TFS/VSTS for Work Items
• Rally-Jira Work Item Connector (WIC)

Enterprise Integration Framework (EIF) Connectors

The Rally Enterprise Integration Framework (EIF) connectors provide a way to integrate your system with Rally.

• Enterprise Integration Framework (EIF) Connectors

External Access

External access to Rally data allows executives and managers to view project status and monitor the progress of key
development initiatives from existing corporate dashboards, wikis, enterprise collaboration tools, or directly from a web
browser.

• Rally Add-in for Excel 2016 and Excel for Microsoft 365
• Rally Add-in for Microsoft Excel 2010 and 2013
• UX360 (Third-Party Integration)

IDE Connectors

Rally provides a set of productivity tools for developers and testers that are easy to install and use.

• Vim (Third-Party Integration)

Micro Focus ALM/QC Integration with Rally Software (OpsHub)

OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Micro Focus ALM/QC and
Rally in application development organizations to effectively communicate and collaborate with each other.

• Vim (Third-Party Integration)

Project and Portfolio Management

Integrating Rally with PPM (Project and Portfolio Management) tools provides project and portfolio managers with more
accurate time and attendance reports in the PPM tools, and brings visibility into the status of agile projects into the PPM
tools.

 740



 Rally®

• Clarity
• Digite SwiftKanban (OpsHub)
• IBM Rational Team Concert (OpsHub)
• piplanning App (Third-Party Integration)
• Planisware (Third-Party Integration)
• Rally Adapter for Jira
• Rally-Jira Work Item Connector (WIC)

Database Connector

The Rally Database Connector retrieves Rally entity item information and writes to a CSV file or database table for each
entity listed in a configuration file. The connector consists of software that you run on your platform according to your
desired schedule. The connector is classified as a one-way and one-time mechanism. Information is never altered.
Information is only written to CSV files which are used to populate tables in your target database.

• Rally Database Connector (Microsoft SQL Server)
• Rally Database Connector (Postgres)

Requirements Management

Integrations with requirements management tools allow Agile teams to synchronize requirements tracked in specialized
requirement management tools with Rally user stories.

• Agile Requirements Designer
• Blueprint (OpsHub)
• Caliber (OpsHub)
• IBM DOORS (OpsHub)
• IBM RequisitePro (OpsHub)
• Jama Connect (Jama Connect Integrations)
• ProdPad (Third-Party Integration)
• Serena Business Manager (OpsHub)

SSO/IAM

• Centrify
• Okta
• Ping Identity

Source Code Management

Integrations with source code management applications allow team members to relate source code check-ins to Rally
artifacts as well as efficiently update the state of Rally artifacts. Many integrations are available, or you could write your
own using the extensible Web Services API in your favorite development language.

• Git
• IBM Rational ClearCase (OpsHub)
• Mercurial
• Micro Focus
• Microsoft Team Foundation Server (Team Foundation Version Control)
• Rally Bot GitHub App Integration
• Subversion to Rally

Test Management

Integrations with test management applications allow team members to synchronize the testing and QA progress made
during iterations with details managed by departments using specialized test tracking tools.

 741



 Rally®

• Enterprise Tester (Third-Party Integration)
• PractiTest (Third-Party Integration)
• QMetry (Third-Party Integration)
• qTest (Third-Party Integration)
• Silk Central Test Manager (Third-Party Integration)
• TestRail (Third-Party Integration)
• Testuff (Third-Party Integration)
• ZAPTEST (Third-Party Integration)

Third-Party Context

As a Rally user, you want to be able to see and navigate to all of the context related to a work item, even if that context is
outside of Rally.

• Third-Party Context

ValueOps Connectors Powered by Tasktop

Easily extend the power of your value streams with the ValueOps Connectors and gain greater efficiency.

• ValueOps Connectors Powered by Tasktop

Version Control System Connectors

Version Control System connectors allows users to associate code commits with Rally defects, user stories, or tasks.

• Policy-Based VCS Connectors
– Azure DevOps Server (OpsHub)
– Rally VCS Connector for Bitbucket
– Rally VCS Connector for GitHub and GitHub Enterprise
– Rally VCS Connector for TFS/VSTS (Git)

Work Item Connector API Key Support

Single Sign-On Work Item connector users can authenticate using API keys rather than basic authentication.

• Work Item Connector API Key Support

Agile Requirements Designer
The Agile Requirements Designer integration introduces all the benefits of accurate user story definition, automated test
case design, and reactive test automation to the Rally development platform.

User stories can be imported from Rally and modeled as unambiguous flowcharts before converting them into the smallest
set of test cases needed to fully test the system design. The optimized tests can then be exported out to Rally, including
the test scripts, data, and virtual end-points needed to execute them. The flowchart provides developers with a clear
specification from which to work, while testers have everything they need to deliver rigorously tested software within a
sprint.

Agile Requirements Designer helps to eliminate the bottlenecks created by test maintenance, offering impact analysis
to update tests, data, and virtual end-points automatically when a change is made to the model. The up-to-date assets
can then be allocated through auto-updating sprint-boards, enabling test and development teams to stay current with
constantly changing user needs.

Agile Requirements Designer supports project and portfolio management in Rally, providing accurate cost and complexity
metrics for tests, user stories, and change requests. These enable teams to assign accurate story points, while
dependency mapping supports informed trade-offs between features and functionality. Critical tests can also be prioritized
based on the probability that they will be exercised by users for accurate, risk-based testing.

Features include:

 742

https://techdocs.broadcom.com/us/en/ca-enterprise-software/devops/agile-requirements-designer/3-1/integrations/integration-with-lifecycle-tools/integrate-with-rally.html


 Rally®

• Flowchart modeling of user stories, providing testers and developers with an unambiguous specification from which to
work

• Verification of user stories with end-users to detect defects in the design phase and avoid time-consuming, late rework
• Automated test case design, eliminating the delays created by slow, manual test creation
• Test case optimization to shorten testing cycles and detect more defects earlier, where they require less time and

resources to fix
• Risk-based testing, using live systems data to empirically define the probability that certain functionality will be

exercised by the user
• Automated test maintenance to update tests, data, expected results, and virtual end-points needed to execute them
• Auto-updating sprint boards to allocate tests and stories to available teams in Rally
• Cost and complexity analysis to assess the relative size of stories and assign accurate story points
• Virtual end-point definition, allowing testers and developers to specify exactly what in a system needs to be virtualized

Applitools Eyes (Third-Party Integration)
This integration allows users to log a bug in Rally without ever leaving the Applitools Eyes user interface and workflow.

This means no context shifting, no copy / paste, no additional logins or lost browser tabs. It’s designed for both workflow
efficiency and to ensure that every detail gets logged so developers can have everything they need to triage the bug and
move on. It’s not only developers and testers who benefit from this integration, now any stakeholder in the entire appdev
process from product managers to UX designers can automatically pinpoint the exact cause of issues using the Applitools
Root Cause Analysis capabilities, send the results instantly to Rally and have everything needed to reproduce and fix
defects on the spot.

Read a blog post.

Setting up the Rally/Eyes Integration

Atlassian Jira (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Atlassian Jira and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

NOTE

Be sure to review the capabilities of each of these options to ensure the proper use case for your needs.

• The  Rally-Jira Work Item Connector (WIC) is better suited for defect management-specific use cases. Learn
more.

• The  Rally Adapter for Jira supports more advanced features and use cases for teams practicing agile at
scale. It is primarily for bi-directional syncing between stories and epics/portfolio items. Learn more.

• The OpsHub or Tasktop solution is recommended for bi-directional syncing of data between 
Rallyand Jira systems.

OpsHub Integration Manager supports the synchronization of issue, bug, requirement, improvement, sub task, and all
other issue types available in Jira to all the possible entities existing in Rally such as defect, user story, test case, test set,
test case result (only write support), and task.

 743

https://applitools.com/blog/rally-automated-bug-tracking-integration/
https://applitools.com/docs/topics/integrations/rally-integration.html
https://www.opshub.com/rally-software-integration/rally-software-integration-jira-integration


 Rally®

• Supports unidirectional and bidirectional synchronization between Jira and Rally for all supported entities.
• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit business needs, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between Jira and Rally.
• Maintains history of both systems. If Jira or Rally becomes unavailable, it will reflect all transactions that occurred

during that time once the system is operational again.
• Supports the application of changes to target system in transactions blocks from the source system.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports the number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and Jira Demo video.

Blueprint (OpsHub)
The integration provided by OpsHub between Rally and Blueprint supports unidirectional and bidirectional synchronization
between Blueprint and Rally for all supported entities.

OpsHub Integration Manager provides deployment options to fit the needs of business whether on-premises or on
customer cloud. Other key details include:

• Fully manageable and functional from the web-based administration tool including defining entity to synchronize
between Blueprint and Rally to workflow management and so on

• Ensures history maintenance of both systems
• Supports the application of changes to target system in transactions blocks from the source system

BMC Release Process Management (Third-Party Integration)
The BMC Release Process Management (BRPM) tool can dynamically query across a number of projects for the set of
stories, defects, and so on that would go into a release. In addition, it will pull the builds that were created and put them
into the build record of Rally so others can see the original build data.

Most companies which are doing large releases maintain massive spreadsheets of checklist steps to do the deployment.
BRPM provides the tooling to provide a single window across the release event process and manage the automation
framework to support the deployment itself, eliminating dependency on manual steps, increasing release velocity, and
removing error-prone steps.

BMC Remedy (Kovair Omnibus)
By integrating Rally with other ITSM and ALM tools, organizations can synchronize data across the connected tools. The
integration between Rally and BMC, through Kovair Omnibus, removes functional silos, reduces manual handoff and
functional dependencies, and in the process enhances teams’ productivity.

Key benefits of the Remedy-Kovair-Rally integration include:

• ALM-ITSM convergence: Development teams can have better visibility of requirements and support teams can have
better visibility of development, leading to an easier adoption of Dev-Ops.

• Integrated service desk: The synchronization between Rally and Remedy improves collaboration between
development teams and technical support teams to accelerate the correction of customer-reported issues. It keeps

 744

https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_Jira.mp4
https://www.opshub.com/blueprint-integration/blueprint-ca-service-desk-manager-rally-software-integration/
https://community.bmc.com/s/news/aA33n000000CiPMCA0/brpm-resource-automation-rally-integration
https://www.kovair.com/omnibus-integration/


 Rally®

multiple service desks and departments across the organization that may be working on the same customer issue in
sync.

• Increased visibility: Help desk and development teams get real-time visibility of each others' artifacts without leaving
the environment of their respective tools. Avoids delays and errors in customer communication.

• Traceability and cross-tool reporting: Provides insight across tool artifacts in both Rally and Remedy allowing
to trace issues being worked by development and customer tickets. Trace an incident from a Rally user story to a
Remedy incident with bi-directional updates. A single report allows management clear visibility about the volume of
effort invested in resolving a ticket and enables it to take necessary corrective actions.

BMC Remedy (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Remedy and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of process templates and all custom entities in Remedy to all
the possible entities existing in Rally such as defect, user story, test case, test set, test case result (only write support),
and task.

• Supports unidirectional and bidirectional synchronization between Remedy and Rally for all supported entities.
• The synchronization includes the field data, attachments, comments, and issue-relationship traceability for Rally. For

Remedy, attachments synchronization is supported, as there is no concept of comments and traceability in Remedy.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between Remedy and Rally.
• Maintains history of both systems. If Remedy or Rally becomes unavailable, it will reflect all transactions that occurred

during that time once the system is operational again.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and Remedy Demo video.

Caliber (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Caliber RM and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of requirements available in Caliber RM to all the possible
entities existing in Rally such as defects, user stories, test cases, test sets, test case result (only write support), and task.

 745

https://www.opshub.com/integrations/rally-software-integration
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_Remedy_Version_21_7_2015.mp4
https://www.opshub.com/integrations/#


 Rally®

• Supports uni-directional and bi-directional synchronization between Caliber RM and Rally for all supported entities,
which includes the field data, attachments, comments, and issue-relationship traceability.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between Caliber RM and Rally.
• Maintains history of both systems. If any of Caliber RM or Rally becomes unavailable, it will reflect all transactions that

occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.
• Supports a number of replication models to support development organization such as master-slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and Caliber RM Demo video.

Centrify
Centrify provides Unified Identity Services across data center, cloud, and mobile — resulting in one single login for
users and one unified identity infrastructure for IT. Centrify's software and cloud services let organizations manage
authentication, access control, privilege management, policy enforcement, and compliance across on-premises and cloud
resources. More than 5000 customers have deployed Centrify across millions of servers, workstations, and applications.

Centrify gives users one-click access to SaaS applications from the self-service MyCentrify User Portal. Plus, Centrify's
Active Directory integration means IT does not need to sacrifice control over corporate identities and can leverage existing
technology, skill sets, and processes already in place for Active Directory. The result is one single login for users, and one
unified identity infrastructure for IT.

Clarity™

The Clarity (formerly CA PPM) integration built and supported by Broadcom bridges portfolio governance and agile
delivery to provide a faster feedback loop between investment planning and business deliverables. The integration
connects portfolio budgeting and funding with enterprise-scale agile delivery and brings feature progress visibility in Clarity
dashboards, bringing the right level of business information to Clarity for management visibility.

Features include:

• Create a Rally initiative from a Clarity project, linking funding with work.
• Create a Clarity task from a Rally feature, exposing incremental business value to PPM.
• Display Rally feature status on a Clarity task in real-time.
• 100% API-enabled to simplify customer upgrades and eliminate hard coding.
• View resource allocations from agile teams

This integration is available to Rally SaaS and On-Premises customers. Learn more.

A Rally app also enables users to complete Clarity timesheets from within Rally. Learn more.

CloudBees (Third-Party Integration)
The CloudBees (formerly Electric Cloud) EC-Rally plugin enables you to create, read, update, delete, and query Rally
objects.

This plugin also links to reports that contain information from the Rally server about what was linked, updated, or created.

The plugin interacts with the Rally API using PERL and JSON to perform the following tasks:

 746

https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_Caliber_v1.mp4
https://techdocs.broadcom.com/us/en/ca-enterprise-software/business-management/clarity-project-and-portfolio-management-ppm-on-premise/15-8-1/add-ins-and-integrations/integrate-clarity-ppm-with-rally.html


 Rally®

• Create configuration to hold connection information
• Query for objects information
• Create, read, delete, and update objects

Learn more.

Watch the Rally Integration with Electric Cloud YouTube video.

Digite SwiftKanban (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like SwiftKanban and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of all card types available in SwiftKanban to all the possible
entities existing in Rally such as defects, user stories, test cases, test sets, test case result (only write support), and task.

• Supports uni-directional and bi-directional synchronization from SwiftKanban to Rally for all supported entities,
including field data, attachments, issue-relationship traceability, and comments.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between SwiftKanban and Rally.
• Maintains history of both systems. If any of SwiftKanban or Rally becomes unavailable, it will reflect all transactions

that occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.
• Supports a number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and SwiftKanban Demo video.

Enterprise Integration Framework (EIF) Connectors
The Rally Enterprise Integration Framework (EIF) connectors provide a way to integrate your system with Rally.

EIF connectors are configurable and extensible and have the following functionality:

• Custom mapping of work items
– Supports most work item types
– Work item filtering

• Field mapping
– Map any field to any field
– Choose field transfer direction
– Choose which services to run
– Default field values
– User mapping
– Dropdown field mapping

• Choose which services to run
• Choose the schedule to run
• Rally project handling

 747

https://docs.cloudbees.com/docs/cloudbees-cd-plugin-docs/latest/ec-rally
https://youtu.be/FPaHz0iKpBc
https://www.opshub.com/integrations/#
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_SwiftKanban_Demo_Video.mp4


 Rally®

– Choose which Rally project to copy work items to
– Map multiple Rally projects

• Extensibility
– Field mapping
– Pre and post processing
– Ability to create your own connector

Rally’s Extensible Integrations Framework (EIF) connectors include:

• Atlassian JIRA
• Micro Focus ALM/Quality Center
• Microsoft TFS

EIF Connector Feature Comparison

The table below details the similarities and differences between EIF connectors.

Feature Micro Focus ALM/
Quality Center Microsoft TFS Atlassian Jira

Sync user stories X X X

Sync defects X X X

Sync test cases X X

Sync tasks X

Copy story hierarchy X X X

Copy test runs/results to Rally
test results object

X

Link work items X X X

Getting Started with EIF Connectors

When integrating two systems, start simple. Here are some questions to ask yourself before mapping out an integration:

• What problem am I trying to solve?
– For example: "we currently have all of our bugs in system X. We now have a team working and defining stories in

Rally. It would be nice to have defects from system X in Rally so that the team can prioritize and schedule those
defects."

– If your current option is to have a person export and import defects, then the EIF connectors can definitely help your
team solve this problem.

• What is a small subset of artifacts that I can try moving to the other system?
– Select a small team and subset of defects from the other system to start with the connector.
– Once you know what team and subset of artifacts you want to move, you can start to look at what the minimum set

of information you would want to map would be.
– You could start with something as simple as Name, Description, Owner and then figure out what Rally projects

those artifacts would go to.

For more help, the Rally Integrations Best Practices page contains details on how to manage and troubleshoot connector
integrations.

EIF Connector Setup

You can synchronize Rally data with your Enterprise Integration Framework connector.

 748



 Rally®

EIF connectors use a polling mechanism to determine the changes that need to be synchronized. The connector does
not have real-time synchronization. The administrator can set the interval between connector runs, with a recommended
minimum time limit of 10 minutes between syncs. A separate XML configuration file is typically needed for each project in
the third-party tool that you are integrating with.

NOTE
We recommend careful consideration regarding workflows between Rally and third party tool with which you are
integrating. Other workflows can be supported within the constraints of the connector design:

• The connectors have limited built-in support for user story hierarchies and linking between objects, such as
defects to story.

• The level of built-in support varies by the third-party tool.
• The Rally object model is different from other tools so careful consideration is needed when replicating

linking and hierarchies.
• Implementation of test cases and results varies by third-party tool.

The UPDATE_RALLYFIELDS_AND_OTHER service has the following benefits:

• Reduces overwrites caused by conflicts.
• Pushes only recent field changes in Rally to Micro Focus ALM/Quality Center.
• Looks for changes in ALM and writes update back to Rally.

Service Name in Config UPDATE_RALLYFIELDS_AND_OTHER
Service Detail Searches Rally first for updates and pushes only the recently changed fields to the other system. It then

searches the other system for updates and pushes all mapped fields into Rally.
Service Configuration In your config.xml , locate the <ConnectorRunner> tag (usually at the bottom of your config

file). Inside of the <Services> tag, list UPDATE_RALLYFIELDS_AND_OTHER and remove the
UPDATE_RALLY_TO_OTHER and UPDATE_OTHER_TO_RALLY service(s).

Steps For Success

Checklist for a successful configuration.

1. Identify the person on your staff with the requisite background to perform or assist in the installation and configuration
who:
– has experience as an administrator/user with the system being integrated with Rally (eg., has set up and used Git,

has set up and used Jira, etc.).
– has knowledge of your organization's network setup (whether proxies are used, other organization or site-specific

network idiosyncracies).
– has recent user level experience on the installation platform (Windows: can use Internet Explorer, command shell;

Linux: bash/zsh).
– is familiar with navigating your platform's filesystem.
– has seen/used XML files and is comfortable editing XML files.

2. Find and scan the major sections of the installation and user guide for the connector.
– Confirm that the connector is supported for your environment.
– Know where to find example configuration files.

3. After installation, perform the basic configuration:
– Define the system (data) source of record.
– Define the work items to exchange and project mapping.
– Define the direction of data flow for create and update.
– Define the data set to exchange as well as the business rules.
– Define the configuration file.
– Use test or sandbox workspaces and projects to verify the configuration.

 749



 Rally®

4. Configuration tips:
– Use the Preview mode as part of establishing that connectivity with Rally and the target system is successful.
– Limit the mapped fields to the most basic set (eg., Name, Description) that don't require the use of a

FieldHandler .
– Defer on specifying FieldDefault values.
– Defer on using Copy or Update Selectors.
– Defer on using FieldHandler s.
– Defer on operations involving Attachments.
– Specify only one service (eg COPY_OTHER_TO_RALLY ).

5. Once connectivity with Rally and the other system have been established, use a "sandbox" Rally Workspace and
similar for the other system.
– Create a single artifact in the target system (Jira, QC, TFS, etc.).
– Turn off Preview mode.
– Add a CopySelector so that only the single artifact you created will be considered.
– Add any FieldDefault specifiers that will be needed.

6. If you will be copying attachments, add a RelatedObjectLinker for this purpose.
7. If you will be mapping fields that require a FieldHandler , add a field that uses a FieldHandler that isn't an

*EnumFieldHandler .
8. Introduce on a field by field basis any fields that will require an *EnumFieldHandler .
9. Introduce additional services on a step-wise basis.

WorkItem Mode

It is helpful to start with modifying a configuration file in WorkItem mode. A configuration file instructs the connector on
what actions to perform. A sample configuration file was part of the delivered ZIP file and should be in the same directory
where you extracted the Ruby gem. For Quality Center, the default configuration file has a name of qc_config.xml
. We recommend making a backup copy of the qc_config.xml (and naming it something like qc_config.xml-
orig or qc_config-pristine.xml ) in case you need to reference a valid configuration file later. You can give your
configuration file any name of your choosing. For the purposes of this document, we retain the name of qc_config.xml
.

Edit your configuration file (or the default qc_config.xml ) and enter the appropriate values between each XML begin
and end tag. Then, run WorkItem mode and verify that it works before you add more fields or additional configuration.

The major section tags are:

RallyConnection Defines the connection information for Rally, including Rally URL, username and password or API Key.
QCConnection Defines the connection information to Quality Center including domain name, project name, artifact type,

user, and so on.
Connector Defines the field mapping between the two systems. Generally, strings should be mapped to strings,

integers to integers, and so on.
ConnectorRunner Specifies parameters related to the services the connector is to run.

Edit your configuration file (or the default qc_config.xml ) and enter the appropriate values between each XML begin
and end tag.

<Config>

        <RallyConnection>

                <Url>rally1.rallydev.com</Url>

                <WorkspaceName>Workspace Name</WorkspaceName>

                <Projects>

                        <Project>Project Name 1</Project>

                </Projects>

 750



 Rally®

                <User>user@company.com</User>

                <Password>password</Password>

<!-- You can use an APIKey in place of User and Password tags -->

        <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> -->

                <ArtifactType>Defect</ArtifactType>

                <ExternalIDField>ExternalID</ExternalIDField>

        <!--    <UpdateSelectors>

                        <UpdateSelector>State = Open</UpdateSelector>

                        <UpdateSelector>Priority = High</UpdateSelector>

                </UpdateSelectors>

                <FieldDefaults>

                        <Field><Name>RootCause</Name><Default>Undefined</Default></Field>

                </FieldDefaults>

        -->

        </RallyConnection>

        <QCConnection>

                <Url>server:port</Url>

                <Domain>Domain Name</Domain>

                <Project>Project Name</Project>

                <User>qcusername</User>

                <Password>password</Password>

                <ArtifactType>BUG</ArtifactType>

        <!--    <CopySelectors>

                        <CopySelector>BG_STATUS   = Open</CopySelector>

                        <CopySelector>BG_PRIORITY = High Attention</CopySelector>

                        <CopySelector>RQ_REQ_NAME = (WebExample1 Or WebExample2) </CopySelector>

                </CopySelectors>

        -->

                <IDField>BG_BUG_ID</IDField>

                <ExternalIDField>BG_USER_XX</ExternalIDField>

                <ExternalEndUserIDField>BG_USER_YY</ExternalEndUserIDField>

        </QCConnection>

        <Connector>

                <FieldMapping>

                        <Field><Rally>Name</Rally><Other>BG_SUMMARY</Other></Field>

                </FieldMapping>

        </Connector>

        <ConnectorRunner>

                <Preview>False</Preview>

                <LogLevel>Debug</LogLevel>

                <Services>UPDATE_RALLY_TO_QC,  COPY_QC_TO_RALLY</Services>

        </ConnectorRunner>

</Config>

Example Test Cases Configuration File

The qc_config_testcases.xml file example below shows the following:

 751



 Rally®

• How to create a test case in Micro Focus ALM/Quality Center.
• How to set a custom field value in Micro Focus ALM/Quality Center to “Y” to indicate that the test case should be

copied to Rally .
– The Micro Focus ALM/Quality Center custom field is TS_User_04 in the example file.

• Link the test case to the Rally user story, whose formatted ID is entered into a different Micro Focus ALM/Quality
Center custom field.
– TS_USER_03 in the example file.

• The <RallyReferenceFieldHandler> is used to process the formatted id of the story.

<?xml version="1.0"?>

<config>

  <RallyConnection>

    <Url>demo-east.rallydev.com</Url>

    <WorkspaceName>Integrations</WorkspaceName>

    <Projects>

      <Project>Shopping Team</Project>

    </Projects>

    <User>sara@acme.com</User>

    <Password>encoded-U-m-F-s-b-H-l-P-T-i-E-=-</Password>

    <ArtifactType>TestCase</ArtifactType>

    <ExternalIDField>QCTestID</ExternalIDField>

  </RallyConnection>

  <QCConnection>

    <Url>vmwin2008qc11:8080</Url>

    <Domain>DEMO</Domain>

    <Project>DEMO1</Project>

    <User>sara</User>

    <Password>encoded-c-m-F-s-b-H-l-k-Z-X-Y-=-</Password>

    <ArtifactType>TEST</ArtifactType>

    <IDField>TS_TEST_ID</IDField>

    <ExternalIDField>TS_USER_01</ExternalIDField>

        <ExternalEndUserIDField>TS_USER_02</ExternalEndUserIDField>

    <CopySelectors>

        <CopySelector>TS_USER_04 = Y</CopySelector>

    </CopySelectors>

  </QCConnection>

  <Connector>

    <FieldMapping>

          <Field><Rally>Name</Rally><Other>TS_NAME</Other></Field>

          <Field><Rally>Description</Rally><Other>TS_DESCRIPTION</Other></Field>

          <Field><Rally>WorkProduct</Rally><Other>TS_USER_03</Other></Field>

    </FieldMapping>

        <RallyFieldHandlers>

                <RallyReferenceFieldHandler>

                        <FieldName>WorkProduct</FieldName>

                        <ReferencedFieldLookupID>FormattedID</ReferencedFieldLookupID>

                </RallyReferenceFieldHandler>

        </RallyFieldHandlers>

    <OtherFieldHandlers>

        <QCRtfFieldHandler>

 752



 Rally®

           <FieldName>TS_DESCRIPTION</FieldName>

        </QCRtfFieldHandler>

    </OtherFieldHandlers>

  </Connector>

  <ConnectorRunner>

    <Preview>false</Preview>

    <LogLevel>Debug</LogLevel>

    <Services>UPDATE_RALLYFIELDS_AND_OTHER , COPY_OTHER_TO_RALLY, COPY_RALLY_TO_OTHER</Services>

  </ConnectorRunner>

</config>

Example Test Runs Configuration File

The example configuration file below is used in conjunction with the test cases config file to copy test results from Micro
Focus ALM/Quality Center to Rally.

<?xml version="1.0"?>

<config>

  <RallyTestResultConnection>

    <Url>demo-west.rallydev.com</Url>

    <WorkspaceName>Integrations</WorkspaceName>

    <Projects>

      <Project>Shopping Team</Project>

    </Projects>

    <User>sara@acme.com</User>

    <Password>encoded-U-m-F-s-b-H-l-P-T-i-E-=-</Password>

    <ArtifactType>TestCaseResult</ArtifactType>

  </RallyTestResultConnection>

  <QCRunConnection>

    <Url>vmwin2008qc11:8080</Url>

    <Domain>DEMO</Domain>

    <Project>DEMO1</Project>

    <User>sara</User>

    <Password>encoded-c-m-F-s-b-H-l-k-Z-X-Y-=-</Password>

    <ArtifactType>RUN</ArtifactType>

    <IDField>RN_RUN_ID</IDField>

    <ExternalIDField>RN_USER_01</ExternalIDField>

    <ExternalEndUserIDField>RN_USER_02</ExternalEndUserIDField>

    <!-- QC user field on TEST table that stores the unique id for the Rally work item -->

    <TestExternalIDField>TS_USER_01</TestExternalIDField>

    <TestExternalEndUserIDField>TS_USER_02</TestExternalEndUserIDField>

  </QCRunConnection>

  <Connector>

    <FieldMapping>

      <!-- Required fields in Rally: TestCase, Verdict, Date and Build -->

      <!-- Do not remove the following 4 field mappings -->

      <Field><Rally>TestCase</Rally><Other>RN_TEST_ID</Other></Field>

      <Field><Rally>Verdict</Rally><Other>RN_STATUS</Other></Field>

      <Field><Rally>Date</Rally><Other>RN_EXECUTION_DATE</Other></Field>

      <Field><Rally>Build</Rally><Other>RN_RUN_NAME</Other></Field>

 753



 Rally®

    </FieldMapping>

    <RallyFieldHandlers>

      <!-- Required field handler: Determines how to lookup the associated test in Rally -->

      <RallyReferenceFieldHandler>

        <FieldName>TestCase</FieldName>

        <!-- Custom field on Rally test case that stores the unique id for the linked QC test -->

        <ReferencedFieldLookupID>QCTestID</ReferencedFieldLookupID>

      </RallyReferenceFieldHandler>

    </RallyFieldHandlers>

    <OtherFieldHandlers>

      <!-- Required field handler: Determines how to convert QC run date to Rally date -->

      <QCRunDateFieldHandler>

        <FieldName>RN_EXECUTION_DATE</FieldName>

      </QCRunDateFieldHandler>

      <OtherEnumFieldHandler>

        <FieldName>RN_STATUS</FieldName>

        <Mappings>

          <!-- Add additional mappings between Rally verdict and RN_STATUS -->

          <Field><Rally>Fail</Rally><Other>Failed</Other></Field>

          <Field><Rally>Pass</Rally><Other>Passed</Other></Field>

        </Mappings>

      </OtherEnumFieldHandler>

    </OtherFieldHandlers>

  </Connector>

  <ConnectorRunner>

    <Preview>false</Preview>

    <LogLevel>Debug</LogLevel>

    <!--- COPY_OTHER_TO_RALLY is only service supported for runs -->

    <Services>COPY_OTHER_TO_RALLY</Services>

  </ConnectorRunner>

</config>

Example Defects Configuration File

The example configuration file below shows how to log defects in Micro Focus ALM/Quality Center and transfer the
defects that the team needs to fix to Rally.

• This file shows the most common fields that many users want to copy from Micro Focus ALM/Quality Center to Rally.
You can use the field handler to map values of the priority field in Micro Focus ALM/Quality Center to a set of priority
fields in Rally.

• Tip for setting up: create a custom field in Micro Focus ALM/Quality Center with values Y,N (BG_USER_02) and set
the value to “y” if that bug should be copied from Micro Focus ALM/Quality Center to Rally.

<?xml version="1.0"?>

<config>

   <RallyConnection>

      <Url>demo-west.rallydev.com</Url>

      <WorkspaceName>Integrations</WorkspaceName>

      <Projects>

        <Project>Shopping Team</Project>

      </Projects>

      <User>sara@acme.com</User>

      <Password>encoded-U-m-F-s-b-H-l-P-T-i-E-=-</Password>

 754



 Rally®

      <ArtifactType>Defect</ArtifactType>

      <ExternalIDField>QCDefectID</ExternalIDField>

   </RallyConnection>

   <QCConnection>

      <Url>vmwin2008qc11:8080</Url>

      <Domain>DEMO</Domain>

      <Project>DEMO1</Project>

      <User>sara</User>

      <Password>encoded-c-m-F-s-b-H-l-k-Z-X-Y-=-</Password>

      <ArtifactType>BUG</ArtifactType>

      <IDField>BG_BUG_ID</IDField>

      <ExternalIDField>BG_USER_01</ExternalIDField>

      <ExternalEndUserIDField>BG_USER_03</ExternalEndUserIDField> <!-- Rally Formatted ID -->

      <CopySelectors>

        <CopySelector>BG_USER_02 = Y</CopySelector>

      </CopySelectors>

   </QCConnection>

   <Connector>

    <FieldMapping>

        <Field><Rally>Name</Rally>          <Other>BG_SUMMARY</Other></Field>

        <Field><Rally>Description</Rally>   <Other>BG_DESCRIPTION</Other></Field>

    <Field><Rally>Notes</Rally>         <Other>BG_DEV_COMMENTS</Other><Direction>TO_OTHER</Direction></Field>

        <Field><Rally>Severity</Rally>      <Other>BG_SEVERITY</Other></Field>

        <Field><Rally>Priority</Rally>      <Other>BG_PRIORITY</Other></Field>

        <Field><Rally>SubmittedBy</Rally>   <Other>BG_DETECTED_BY</Other></Field>

        <Field><Rally>Owner</Rally>         <Other>BG_RESPONSIBLE</Other></Field>

        <Field><Rally>State</Rally>         <Other>BG_STATUS</Other></Field>

        <Field><Rally>FoundInBuild</Rally>  <Other>BG_DETECTION_VERSION</Other></Field>

        <Field><Rally>TargetBuild</Rally>   <Other>BG_PLANNED_CLOSING_VER</Other></Field>

    <!--<Field><Rally>QCAttachments</Rally> <Other>BG_ATTACHMENT</Other><Direction>TO_RALLY</Direction></

Field>-->``

    </FieldMapping>

                <OtherFieldHandlers>

          <QCRtfFieldHandler>

            <FieldName>BG_DESCRIPTION</FieldName>

          </QCRtfFieldHandler>

          <OtherUserFieldHandler>

            <FieldName>BG_DETECTED_BY</FieldName>

            <Domain>acme.com</Domain>

          </OtherUserFieldHandler>

          <OtherUserFieldHandler>

            <FieldName>BG_RESPONSIBLE</FieldName>

            <Domain>acme.com</Domain>

          </OtherUserFieldHandler>

         <!-- <QCUrlAttachmentFieldHandler>

           <FieldName>BG_ATTACHMENT</FieldName>

         </QCUrlAttachmentFieldHandler> -->

          <OtherEnumFieldHandler>

            <FieldName>BG_SEVERITY</FieldName>

            <Mappings>

 755



 Rally®

                    <Field><Rally>Cosmetic</Rally>        <Other>Cosmetic</Other></Field>

                    <Field><Rally>Minor Problem</Rally>   <Other>Minor Problem</Other></Field>

                    <Field><Rally>Major Problem</Rally>   <Other>Major Problem</Other></Field>

                    <Field><Rally>Crash/Data Loss</Rally> <Other>Crash/Data Loss</Other></Field>

                    <Field><Rally>None</Rally>            <Other>None</Other></Field>

            </Mappings>

          </OtherEnumFieldHandler>

          <OtherEnumFieldHandler>

            <FieldName>BG_STATUS</FieldName>

            <Mappings>

                    <Field><Rally>Submitted</Rally> <Other>New</Other></Field>

                    <Field><Rally>Open</Rally>      <Other>Open</Other></Field>

                    <Field><Rally>Reopened</Rally>  <Other>Reopen</Other></Field>

                    <Field><Rally>Fixed</Rally>     <Other>Fixed</Other></Field>

                    <Field><Rally>Closed</Rally>    <Other>Closed</Other></Field>

            <Field><Rally>Closed</Rally>    <Other>Rejected</Other></Field>

        </Mappings>

          </OtherEnumFieldHandler>

          <OtherEnumFieldHandler>

            <FieldName>BG_PRIORITY</FieldName>

            <Mappings>

                    <Field><Rally>Resolve Immediately</Rally>  <Other>Resolve Immediately</Other></Field>

                    <Field><Rally>High Attention</Rally>       <Other>High Attention</Other></Field>

                    <Field><Rally>Normal</Rally>               <Other>Normal</Other></Field>

                    <Field><Rally>Low</Rally>                  <Other>Low</Other></Field>

            </Mappings>

          </OtherEnumFieldHandler>

    </OtherFieldHandlers>

  </Connector>

  <ConnectorRunner>

        <Preview>false</Preview>

        <LogLevel>Debug</LogLevel>

<!--         <Services>UPDATE_RALLY_TO_OTHER, UPDATE_OTHER_TO_RALLY, COPY_OTHER_TO_RALLY</Services>  -->

        <Services>UPDATE_OTHER_TO_RALLY, COPY_OTHER_TO_RALLY</Services>

    </ConnectorRunner>

</config>

Enterprise Tester (Third-Party Integration)
Enterprise Tester from Catch Software fully supports synchronizing requirements (user stories) and nested requirements
(child stories) to and from Rally.

Specify which requirements to synchronize by filtering one or more of these parameters:

• Iterations
• Owners
• Releases
• Scheduled states
• Tags

Rally users will also benefit from the same features that are supported for all of our supported external systems including:

 756



 Rally®

• Automated synchronization schedules
• Synchronization history
• Quick links to the Rally user story and child story
• External systems links
• Synchronization of in-built and custom fields

It is envisaged that a future release of Enterprise Tester will also integrate with Rally for defect management.

Benefits:

• Enterprise Tester provides Rally customers with another option for working with an enterprise test management tool
that integrates tightly with their current way of working in Rally.

• Rally customers currently using other, more expensive and less-featured tools allow the total cost of ownership for life
cycle tools (Rally + Enterprise Tester) to be significantly reduced.

• Enterprise Tester integrates with a number of automated testing tools like QTP, Rational Functional Tester, Selenium,
Cucumber, automated build servers, and numerous other automated testing tools.

Learn more about Enterprise Tester from Catch Software.

Fog Creek FogBugz (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like FogBugz and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of cases available in FogBugz to all the possible entities
existing in Rally such as defects, user stories, test cases, test sets, test case result (only write support), and task.

• Supports uni-directional and bi-directional synchronization from FogBugz to Rally for all supported entities, including
field data and comments.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between FogBugz and Rally.
• Maintains history of both systems. If any of FogBugz or Rally becomes unavailable, it will reflect all transactions that

occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.
• Supports a number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and FogBugz Demo video.

Git
The RallyVCS Connector for Git searches the Git system for recent commits (put there by a git push command). It
extracts information from the commit messages, and posts changeset and change information to a Rally SCMRepository
according to specifications in a configuration file. The connector must be installed on only one computer for your company.

You can include Formatted IDs (example: US42) in commit messages. The connector processes all commits for
configured repositories and pushes information about those commits into changeset and change objects in Rally. If a valid
Formatted ID is found in a commit message, the changeset created by the connector is associated with that defect, story,
or task in Rally.

 757

https://catchsoftware.com/Enterprise-Tester/
https://catchsoftware.com/
https://www.opshub.com/integrations/product-portfolio-management
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_FogBugz_Demo_Video.mp4


 Rally®

Example workflow: You are assigned DE42 in Rally. When you make a code change and commit, include a message in
the commit like Found an issue with line breaks—fixed DE42. The connector finds that commit message and links the
information about the commit to the defect in Rally.

See the Git to Rally Connector Installation and User Guide for information on installing, configuring, and using the
connector

Rally VCS Connector for Git Installation and User Guide
The Rally to Git connector helps you show traceability of code changes to artifacts in Rally.

This section includes the following topics:

• Software and Hardware Requirements for the Git to Rally Connector
• Install the Git to Rally Connector
• Set Up Git
• Set Up Rally
• Configure the Git to Rally Connector
• Run the Git to Rally Connector
• Extensions
• Troubleshooting the Git to Rally Connector
• Git to Rally Connector Revision History

Software and Hardware Requirements for the Git to Connector

The connector supports running in a variety of platforms. This software is written in Ruby and has been tested and
certified using Ruby 2.2.6. Subsequent to June 27, 2018, it will not work with any earlier version of Ruby. If this software is
for use on a Linux/Unix/macOS system, then it must be installed after you install the httpclient and rally_api gems
.

• Ruby 2.2.6 - This is the supported version.
The connector may not be compatible with Ruby 2.3.x and 2.4.x, we have not certified this connector with those
versions, only 2.2.6 is certified. You may want to investigate how to use the Ruby version manager software (rvm) that
makes installation and use of specific versions of Ruby simpler.

• Ruby Development Kit for Ruby 2.0 to 2.3 (** Windows only **)
– Download the Ruby DevKit: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
– Add path to the devkit’s bin directory to environment Path variable
– cd to the Ruby DevKit root directory

• Run command: ruby dk.rb init
• Run command: ruby dk.rb install

• Select a machine which will run the connector
• Git must be installed on this machine
• If the connector is on a different machine than the location of the Git server, note the server address and name
• Know the paths to the repositories you will gather information from
• Select the Rally workspace in which the information will be going

Install the Git to Rally Connector

As this connector is intended to run on an ongoing basis initiated by either cron or Windows Task Scheduler (WTS), it
is important to consider the identity of the user who installs the connector versus the identity of the user when running
through cron /WTS with regard to the permissioning and ACL of the directories and files in the connector installation.

 758

https://github.com/oneclick/rubyinstaller/releases/download/devkit-4.7.2/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

The user running the connector must be able to read all files and must be able to write in the configs and logs
subdirectories.

1. Download the connector by following the steps here.
2. Unzip the git2ca_agile_central-(version) ZIP file into a suitable directory where you want the software

installed.
The distribution contents are:
LICENSE

README

User-Mapping-Strategies

configs

extension

gems

git2ca_agile_central.rb

install_gems.rb

lib

logs

plugin

vcseif-1.6.0.gem

3. Set the environment variable GEM_COMMAND to the gem executable located in the Ruby installation directory. The
location examples on Linux and Windows respectively are:
– /myhome/.rvm/rubies/ruby-2.2.6/bin/gem
– C:\Ruby226\bin\gem

4. Run the install_gems.rb Ruby script to get all associated gems installed. If you see output similar to You don't
have write permissions ... then you will need to either consult with your system administrator to obtain the necessary
permissions (typically done by using sudo or other similar software) or have the system administrator run the
install_gems.rb command. To run the command, in a console/terminal window at the prompt, type the following:
ruby install_gems.rb

Git Server Compared to ssh

The primary use case is for this connector to be run on the same platform that the Git software and repository reside
on. While it is possible to run this connector on a platform that is not the Git platform, that use case assumes the use
of ssh and the proper setup of public and private key information. Setting up ssh and key files is beyond the scope of
this document; consult the internet for documents regarding ssh and PKI. If you are running the connector on Windows,
you will need to have an executable for ssh if you plan to connect to a remote box. Packages such as Cygwin and the
Git installer for Windows include an ssh.exe . You will then need to add the location of that ssh.exe to your PATH
environment variable to be able successfully connect to a remote repository or server.

Set Up Git

Consider how much Git history you want to have reflected in Rally.

It is possible to operate the connector to catch-up with the complete history of commits in Git. You should assemble a pro
and con list of considerations, reasons, and benefits to help you arrive at a strategy that works for your organization with
respect to whether you need a complete commit history reflected in Rally or just reflected from some particular point in
time.

NOTE
The Git connector will search the Git repository for commits. However, these commits get into the repository
from the git push command. The git commit command is merely a local 'save' of your current work.

 759



 Rally®

Lookback Setting

The connector stores a timefile with the commit time of the last commit it successfully processed. Since Git is a distributed
version control system, a certain number of days to lookback should be configured for the connector. This should be the
best guess and comfort level for the way your team uses git. For example: Two team members are working on code in
Git. One team member may push their commits up to the server every day. The second team member may only push their
commits up at the end of the week. The connector will need to lookback to successfully find your second team member's
commits. The Lookback setting in the configuration will lookback that number of days since the last successful commit to
find commits to reflect in Rally. The default units are minutes, but you can use 5d, 5 Days, 24 hours, 24h as other values.
As a best practice, we recommend a regular push strategy in your use of git to get those commits on the git server. The
connector will check all refs in git for commit messages, so commits on a topic branch other than master will be found and
reflected in Rally.

Set Up Rally for the Git Connector

NOTE
We strongly recommend creating the connector user with workspace administrator permissions. This will allow
the connector user access to any new projects that may be added to the Workspace in the future (a user with
Editor permissions only will not automatically be added to new projects). If the Connector User does not have
access to projects, changesets will be created in the SCM Repository only and will be orphaned (not attached to
any artifacts).

Verify that your target WorkspaceConfiguration has BuildandChangesetEnabled set. Your Rally workspace administrator
needs to enable this for your target workspace. If it is not enabled, the connector will work, but you won't be able to see
any of the changeset or change information that is associated with your Rally work items (story, defect, task).

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select your target workspace.

4. Select Actions, Edit.

5. Select the Enable Build and Changeset check box.

6. Select Save & Close.

Configure the Git to Rally Connector

Copy the sample.yml file in configs to a new name, for example, repo_one.yaml . Edit the copied file and adjust some
of the sample values for servers, credentials workspaces, repository names, and paths to values appropriate for your
environment.

The file is in YAML format. The YAML format uses indentation to represent structure and colon character (:) and dash
character (-) to denote name and value separation and list elements. So, you'll need to be aware of preserving those
syntactical elements in your edited file.

Within the Rally section of your YAML configuration file, there is an entry where you can name the SCMRepository in the
Rally system to which changeset and change items will be associated. This SCMRepository is a named container which
need not exist before running the connector; if it does not exist, the connector creates the SCMRepository in the Rally
user's target workspace.

 760



 Rally®

There is an optional lookback configuration item that can appear on either or both of the Rally and Git sections of the
configuration file. The value for this parameter is expressed in terms of minutes (default or with the use of the m character)
or hours using an h character or days by using a d character. For example:

Lookback: 90

Lookback: 120 m

Lookback: 8 h

Lookback: 10 d

If you do not explicitly provide a lookback value, the connector uses a default value of 1 hour. Rally recommends that if
you specify a value for lookback in either section that you also specify a lookback in the counterpart section with the same
value. If the lookback values are not identical, there is the possibility under some circumstances that a changeset from Git
would not be reflected in Rally due to the nature of distributed version control systems recording the original commit time
and not the time the commits are pushed to a master repository; the window of time consideration being too short for the
connector to pick up such commits.

Assess how user names are alike or differ in your Git system and in your Rally subscription. If the user names are
universally identical in both systems, then you can either comment out all author sub-items underneath the Transforms
section or you can set the value for the Author field in the Transforms section to Passthru. If there is a deterministic
mapping that can transform a Git user value to the corresponding correct Rally user name value, you will need to adjust
the transformation value for Author to the appropriate classname. Consult the User-Mapping-Strategies text document to
determine which technique fits your particular situation.

Once you have identified a suitable Author transformation technique, you will need to edit the configuration to identify the
Ruby class name that will implement that transformation. The Ruby class name must exist in a file of Ruby source code
that is in a file in the plugin subdirectory.

Mapping SCMRepositories to VCS Repositories

The VCS Connector was designed to operate where there is a one-to-one relationship between a Rally SCMRepository
and a VCS repository (Git, GitHub, Subversion, Mercurial, and so on). A one-to-many mapping can create performance
issues. When run, the VCS Connector creates a Rally SCMRepository item for the value specific in the connector config
file if it does not already exist. This removes a small amount of administrative burden in that you do not have to create the
Rally SCMRepository item before you run a configuration mentioning a new repository.

For each repository, there is a config file and a timefile. The timefile records the timestamp of the second-to-last commit
for the repository. For example, you have an Apricot repository that had some flurry of commits last fall but nothing since
and you also have a Banana repository that has had activity with the last couple of months. When commits for these two
repositories get poured into a single Rally SCMRepository, it has the following effect. When processing the config for the
Apricot repository, it is searching for recent Changeset records in Rally where recent is defined as the value in the timefile
for Apricot. Since the last commit to that repository was last fall, there is going to be an excessive amount of information
read-out of the single SCMRepository (because it is looking at all Changesets since last fall, not just the ones for Apricot).

Example Configuration for the Git to Rally Connector
VCSConnector:

Rally:

    Server              : us1.rallydev.com

    Protocol            : https

    Username            : jojo@muchly.com

    Password            : 22333four

#   APIKey              : _hgiotewhgeiwhgh325930503453490 # Used in place of Username/Password

    Workspace           : VanillaBean

    RepositoryName      : Balloon

#   Proxy               : some_proxy.yoursite.com:9876  # or an IP address:port

 761



 Rally®

#   ProxyUser           : outbound

#   ProxyPassword       : bvc-357%GNQ

    Lookback            : 5 days  # in minutes by default, use m/h/d suffix for minutes/hours/days

    UpdateArtifactState : False

    StateExtractorClass : BasicActionsAndArtifactsExtractor(message)

    Debug               : False

Git:

#   Server         : your_vcs_server.company.com # optional, but if set connector runner user must

 authenticate using PKI

    RepositoryBase : /var/git/repo.git        #make sure the .git is specified for remote servers

#   RepositoryBase : C:\Users\Support\Git\GitRepo1        #Example of a Windows directory

    RevURI         : http://git.company.org/cgit/repo.git/commit/?id={revnumber}   # optional, if running web

 access to repo

    FileURI        : http://git.company.org/cgit/repo.git/tree/{filepath}/?id={revnumber}  # optional, if

 running web access

    Lookback       : 5 days

    Debug          : False

Services:

    Preview        : False

    LogLevel       : Debug

Transform:

    Author         : Passthru

...

RevURI and
FileURI (under Git)

This is meant to be the root URI if you are using a web front-end for your system. The URI will be used as
a base for the link to the changesets and files. For example, if you have http://server:port/Git/
rev/ as your root, a link will be made in Rally for the changeset to http://server:port/Git/
rev/12345 for changeset 12345. The strings {revnumber} and {filepath} are substituted in
when the connector builds the link stored in Rally.

Proxy, ProxyUser,
ProxyPassword

Note that the Proxy* items are commented out by using a # in front of the item. Within a YAML file, any
line beginning with a # character is ignored and any content following a # character sequence is ignored
(including the # sequence).

Create an API Key

A Rally API Key can be created to use to access your subscription data without using your username and password.

To use the API Key in a connector, edit the Rally section in the config.yml file and add an APIKey line. When the
APIKey configuration is specified, omit the Username and Password from the Rally config section. If an APIKey entry
is provided, the Username and Password are not used and a warning will appear in the log file if they are included in
the config file. This is true even if the APIKey entry value is invalid, blank, or nil. If your subscription administrator has
configured your subscription to be SSO only, you no longer need to add the user associated with the given APIKey value
to the list of allowed users.

The connector now uses rally_api version 1.2.1. Note that the API Key must have full access, a read-only api key will not
allow the connector to write to Rally.

For help creating a full-access API Key, see Using Rally Application Manager.

 762



 Rally®

Run the Git to Rally Connector

When developers put FormattedIDs, for example US42, in their commit messages, the connector processes all commits
for configured repositories and pushes information about those commits into changeset objects and change objects in
Rally.

If a valid FormattedID is found in a commit message, the changeset created by the connector is associated with that
defect, story, or task in Rally.

Example:

"Fixed DE1987 by changing preamble paragraph 3"

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally defect DE1987 would display as Fixed. Note that
this message is case-sensitive, fixed is not the same as Fixed. The yml file will need UpdateArtifactState value set to True
to process a state change.

The commit message may contain references to more than one artifact. For example, this is known to work:

"Test commit msg with multiple artifacts Fixed DE9 Closed DE8"

Within the Services section of your config file ( repo_one.yaml for example), is an entry for Preview that is set to False.
You may want to set this value to True in the initial setup phase to see that the connector can successfully connect to
Rally with the credentials and information you provided, as well as proving out the use of the git command. Your PATH
environment variable must contain a filesystem path where the git command can be found. See Linux / Unix / macOS /
Windows documentation on how to set environment variables for use within a *nix cron job (or Windows Task Scheduler
entry). Once you have determined that a connector run in Preview mode operates as expected, you can set the Preview
value in your config to a False value.

On an ongoing basis, you can use cron or Windows Task Scheduler (or any other job or task scheduling software) to run
the connector periodically. Initially, Rally recommends the connector to be run every 15 minutes during normal business
hours and less frequently during non-business hours.

You can have numerous configuration files in the configs subdirectory and specify them all for invocation either by name
or by globbing (wild-card syntax). For example:

ruby git2_agile_central.rb apricot banana cherry dogwood

The files apricot.yml , banana.yml , cherry.yml , and dogwood.yml must exist in the configs subdirectory. The
connector only looks for config files in the configs subdirectory under the installation base directory.

Whenever the connector is run, an entry is made in the logs/git2rally.log file to note the invocation. For each
config named at invocation, there is an entry in that file noting the return code from running that config. When the
connector run has finished with all configs, an entry is written to note the completion of the connector run.

Additionally, there will be a file written in the logs subdirectory for each config named that will have much more detail
about the activity that occurs during the run. You can adjust the verbosity written to these log files by modifying the
LogLevel value in the config file. Normally, the LogLevel would be set to Info. Should you encounter situations where
the connector does not complete normally, you can adjust the LogLevel to Debug and run the connector to begin the
troubleshooting process. These log files can be sent to Rally Support to expedite the investigation of a case.

The connector will write a file in the base installation directory corresponding to the config name with the date of the last
commit processed. The file is named  config_time.file and has a time entry in the form YYYY-mm-dd HH:MM:SS
Z (for Zulu time). When first run, there won't be a time file for the config and the connector defaults to looking for commits
that occurred after 2010-01-01 00:00:00 Z. You can override that behavior by creating and editing a time file for the config
you are about to process. By providing an entry in the format mentioned above, you can control that point from which
commits are processed.

 763

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change


 Rally®

NOTE
The connector will skip processing commits for a repository until there are three or more commits to process.
Once there are three or more commits, the "skipped" commits will be processed. This is a design decision due
to performance issues in Rally when processing the commits.

Extensions

Within the extension sub-folder of the installation, there is an exemplar Ruby class in the file named statex.rb .

The class definition contained in that file is BasicActionsAndArtifactsExtractor. This example class demonstrates the
basic technique of examining a commit message and extracting Rally artifact identifiers and state transition target values.
Using this class when the config file item UpdateArtifactState value is set to True results in the transition of the State (or
ScheduleState in the case of UserStory) of the identified artifact to the state value mentioned in the commit message.

For example, if there is a Rally defect (identified as DE1987) mentioned in the commit message with a new valid state
value either immediately preceding or following the artifact identifier, then the connector changes the state of the identified
artifact in Rally to that state.

Example:

git  commit  my_file.java  -m  "Fixed DE1987 by changing preamble paragraph 3"

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally defect DE1987 would display as Fixed. Note that
this message is case-sensitive, fixed is not the same as Fixed.

The commit message may contain references to more than one artifact. For example, this is known to work:

git  commit  my_file.java  -m  "Test commit msg with multiple artifacts Fixed DE9 Closed DE8"

The extension folder allows you to provide your own message processing to extract Rally artifact identifiers and state
changes if the example provided does not fit your conventions. Your extension must be a class written in Ruby and must
provide an instance method called service which takes the commit message as an argument and must return a Ruby
Hash instance with entries keyed by a state name (Fixed, Completed, ...) or nil with a Ruby Array as the associated value
populated by Rally artifact identifiers (FormattedID).

Troubleshooting the Git to Rally Connector

Use the following information when troubleshooting the connector.

If you have any questions, issues, or suggestions, visit Support.

See Log Files
for Messages

When the connector runs, it generates two log files:

• log/git2ca_agile_central.log : A global log file indicating the status of the connector.
• logs/<config-file-name>.log : For each configuration file given on the command line, this

will be the log file containing information about any issues with that configuration file.

The RepositoryName
is Case Sensitive

The configuration file contains a line like RepositoryName: Chien1, which is the name of the
SCMRepository object in Rally. This name is case-sensitive. Assuming the name was mistakenly specified
as chien1, you may see a log file error like:
 INFO : RallyVCSConnection.validate - SCMRepository: chien1

DEBUG : RallyVCSConnection.getSCMRepository - No SCMRepository named |chien1| in

 Workspace: |WS1|

 INFO : RallyVCSConnection.createSCMRepository -

        Creating SCMRepository 'chien1' (Subversion) in the 'WS1' workspace...

ERROR : UnrecoverableException (/Users/...../exceptions.rb:42 line in `initialize') -

        Unable to create SCMRepository: 

 764

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

        Error on request - https://rally1.rallydev.com/slm/webservice/1.40/

scmrepository/create.js -

                {:errors=> ["Validation error: SCMRepository.Name:

                There is already a SCMRepository with the name 'chien1' in this

 Workspace"], ... ]}

Ruby Considerations This software is written in Ruby and must be executed with a supported version of the Ruby interpreter.
As of version 1.6.0 the supported Ruby version is 2.2.6. If you are running the connector on a Windows
platform, you must have installed the appropriate Ruby DevKit. See Software and Hardware Requirements
for more information.

No Valid Artifacts
Mentioned

Seen when connector tries to add a changeset to a Project where the Connector User does not have
permissions.
DEBUG : RallyVCSConnection.extract_artifact_references - No valid artifacts were

 mentioned in message

        DEBUG : RallyVCSConnection._createInternal - Created Changeset: OID:

 4935999999  Revision: 14d0f533084c700f Timestamp:|2016-01-06T14:58:01.000Z| (not

 associated with any Artifacts)

Connector Cannot
Connect When

User ID for Proxy
Server has @ Sign

Fixed by adding the addressable ruby gem.
[2018-01-30 06:58:39 Z]  INFO : RallyVCSConnection.connect - Proxy for connection

 to Rally: http://user@xx.company.com:01555567@rep.proxy.nic.company.com:8080/

[2018-01-30 06:58:39 Z] DEBUG : RallyVCSConnection.rescue in connect - bad URI(is not

 URI?): http://user@xx.fujitsu.com:01255557@rep.proxy.nic.company.com:8080/

        [2018-01-30 06:58:39 Z] ERROR : OperationalError (/var/lib/gems/2.3.0/gems/

vcseif-1.5.3/lib/vcseif/rally_vcs_connection.rb:334 line in `new') - Unable to connect

 to Rally at rally1.rallydev.com as user user@xx.company.com

Issue: Error When Ruby
Gems are Not Installed.

Solution: Install ruby gems using install_gems.rb . Learn more.
/Users/test/.rvm/rubies/ruby-2.2.6/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/

kernel_require.rb:55:in `require': cannot load such file -- vcseif (LoadError)

    from /Users/test/.rvm/rubies/ruby-2.2.6/lib/ruby/site_ruby/2.2.0/rubygems/

core_ext/kernel_require.rb:55:in `require'

        from git2ca_agile_central.rb:35:in `<main>'

Git to Rally Connector Revision History

• 1.6.0-master --- 25-May-2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support.
• 1.5.3-master --- 12-Dec-2017

– Enhancements:
• Sync all vcs-eif connectors.

• 1.5.1-master --- 12-Sept-2017
– Enhancements:

• Added Message to fields eligible for Transform.
• Certified for use with Ruby 2.2.6.

• 1.4.3-master --- 24-Oct-2016
– Enhancements:

• Updated the logic to allow for processing after 1 commit.
• 1.4.1-master --- 17-Oct-2016

– Fixes:
• Addressed uncaught exception when processing an empty repository.

• 1.4.0 - master-1046 (Nov-2015)

 765



 Rally®

– Enhancements:
• Brand redesign.

• 1.3.2 - master-1043 (Aug-2015)
– Enhancements:

• Added support for use of APIKey entry and revised documentation to encourage the use of this instead of the still
supported ApiKey.

• 1.3.1 - master-1040 (Jul-2015)
– Enhancements:

• Added support for downcasing any Rally username value, inverted sequence of retrieval from Rally and target
VCS system, and upped dependency on rally_api to 1.2.1.

• 1.3.0 - master-1040 (April-2015)
– Fixes:

• Handle commit messages with multi-byte characters whose length exceeds the Rally Changeset Message field
length limit of 4000 bytes.

– Enhancements:
• Updated dependency on rally_api to 1.2.0

• 1.2.9 - master-1039 (March-2015)
– Fixes:

• Refined handling of commit messages in excess of 4000 characters to account for JSON encoding expansion.
• 1.2.8 - master-1038 (March-2015)

– Enhancements:
• Improved the ability to identify artifact identifiers in commit messages surrounded by bracketing characters.

• 1.2.6 - master-1036 (Jan-2015)
– Enhancements:

• Updated rally_vcs_connection.rb configureExtensionEnvironment and statex.rb to accommodate custom artifact
prefixes (such as 'BUG' for Defect, and so on).

• Updated dependency for rally_api to version 1.1.2.
• 1.2.5 - master-1034 (October-2014)

– Enhancements:
• Updated to use Rally Web Services API v2.0 and the updated rally_api gem.

• 1.2.4 - master-1032 (16-Sep-2014)
– Enhancements/Fixes:

• Added support for using API Key in lieu of username and password in the Rally portion of the configuration file.
• Updated to rally_api toolkit version 1.0.1.

• 1.2.3 - master-1030 (19-Aug-2014)
– Enhancements/Fixes:

• Fixed DE21993 - to meet Rally's commit message field limitation of 4000 characters, if a commit message
exceeds the character limit, characters over the limit are truncated. Upon truncation, the commit message is
appended with an annotation of the truncation and a warning message displays in the log file.

Git (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Git and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency

OpsHub Integration Manager supports the synchronization of defects, requirements, and test cases available in Git to
all the possible entities existing in Rally such as defects, user stories, test cases, test sets, test case result (only write
support), and task.

 766

https://www.opshub.com/integrations/rally-software-integration


 Rally®

• Supports uni-directional synchronization from Git to Rally for all supported entities, including adding a change set
linked to Rally artifact against which commit made is in Git.

• User can provide commit message in form of simple text without any fixed format with Rally formatted Id specified
somewhere in the commit message.

• Integration can be enabled to do other tasks like change status, add comments etc. in Rally for a given commit in Git.
• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between Git and Rally.
• Maintains history of both systems. If any of Git or Rally becomes unavailable, it will reflect all transactions that occurred

during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.

Watch the OpsHub Integration Manager Rally and Git Demo video.

IBM ClearQuest (OpsHub)
OpsHub Integration Manager allows the cross-functional teams using disparate tools like IBM Rational ClearQuest and
Rally in application development organizations to effectively communicate and collaborate with each other, thus increasing
overall team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of defect and any stateful record type available in IBM Rational
ClearQuest to all the possible entities existing in Rally such as defects, user stories, test cases, test sets, test case result
(only write support), and task.

• Supports uni-directional and bi-directional synchronization between IBM Rational ClearQuest and Rally for all
supported entities, which includes the field data, attachments, and comments.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between IBM Rational ClearQuest and Rally.
• Maintains history of both systems. If any of IBM Rational ClearQuest or Rally becomes unavailable, it will reflect all

transactions that occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.
• Supports a number of replication models to support development organization such as master-slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and IBM Rational ClearQuest Demo video.

IBM DOORS (OpsHub)
OpsHub Integration Manager, an enterprise-class ALM integration platform, is an ALM integration and migration solution
that unifies ALM systems seamlessly, creating a global ALM system, achieving agility at scale. It fully enables your
ALM processes and supports them with mission-critical reliability to help achieve global ALM excellence across your
application-development organization.

OpsHub Integration Manager allows cross-functional teams using disparate tools like Rally and IBM Rational DOORS in
application-development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

The IBM DOORS connector is provided by the OpsHub Integration Manager (OIM). OIM is an ALM integration and
migration solution that unifies ALM systems seamlessly.

 767

https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_Git_Demo_Video.mp4
https://www.opshub.com/integrations/ibm-rational-clearquest-integration
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_ClearQuest_v1.mp4
https://www.opshub.com/integrations/#


 Rally®

 768



 Rally®

IBM Rational ClearCase (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like IBM Rational ClearCase
and Rally in application development organizations to effectively communicate and collaborate with each other, thus
increasing overall team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of IBM Rational ClearCase commit information to all the
possible entities existing in Rally such as defects, user stories, test cases, test sets, test case result (only write support),
and task.

• Supports uni-directional synchronization of IBM Rational ClearCase to Rally for all supported entities, which includes
adding a change set linked to a Rally artifact against which commit made is in IBM Rational ClearCase.

• User can provide a commit message in form of simple text without any fixed format with Rally-formatted ID specified
somewhere in the commit message.

• Integration can be enabled to do other tasks like change status and add comments in Rally for a given commit in IBM
Rational ClearCase.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between IBM Rational ClearCase and Rally.
• Maintains history of both systems. If any of IBM Rational ClearCase or Rally becomes unavailable, it will reflect all

transactions that occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.

Watch the OpsHub Integration Manager Rally and IBM Rational ClearCase Demo video.

IBM Rational Team Concert (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like IBM RTC andRally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of process templates and all custom entities in IBM RTC to all
the possible entities existing in Rally such as defect, user story, test case, test set, test case result (only write support),
and task.

• Supports unidirectional and bidirectional synchronization between IBM RTC and Rally for all supported entities.
• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between IBM RTC and Rally.
• Maintains history of both systems. If IBM RTC or Rally becomes unavailable, it will reflect all transactions that occurred

during that time once the system is operational again.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and IBM Rational Team Concert Demo video.

 769

https://www.opshub.com/integrations
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_ClearCase_v1.mp4
https://www.opshub.com/integrations
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_RTC_Version_21_7_15.mp4


 Rally®

IBM RequisitePro (OpsHub)
OpsHub Integration Manager allows the cross-functional teams using disparate tools like Rally and IBM Rational
RequisitePro in application development organizations to effectively communicate and collaborate with each other, thus
increasing overall team agility, productivity, and efficiency.

OpsHub Integration Manager (OIM) brings agility at scale to large application development organizations that need real-
time collaboration between software developers, testers, business analysts, and project managers. Integrating your ALM
environment with OIM will help deliver the potential of Agile development through real-time collaboration driving accuracy,
efficiency, and speed.

It provides all stakeholders involved with consistent, timely, and reliable visibility to make better decisions faster. There are
fewer miscommunications, which result in on-time delivery of the required solution. With OIM, you can realize full potential
agile development, faster time-to-market, regulatory compliance, and greater organizational visibility.

The IBM RequisitePro Connector is provided by the OpsHub Integration Manager (OIM). OIM is an ALM integration and
migration solution that unifies ALM systems seamlessly.

Jama Connect (Jama Connect Integrations)
This integration is an ideal solution for WaterScrumFall organizations practicing a hybrid approach to Agile, where Agile
development teams are working in real-time with remote stakeholders, and must formally document requirements to meet
regulatory compliance and contractual commitments.

 770

https://www.opshub.com/integrations/ibm-rational-requisitepro-integration
https://www.jamasoftware.com/platform/jama-connect/integrations


 Rally®

 771



 Rally®

Jenkins
Jenkins monitors executions of repeated jobs, such as continuous deployment and continuous deployment pipelines for
software projects.

The Rally integration for Jenkins uploads build information to Rally. Each Jenkins job corresponds to a BuildDefinition
object in Rally, which is given the name of the Jenkins job. When a Jenkins job completes, it is represented by a Build
object in Rally. Builds are automatically linked to their BuildDefinition in Rally as well. A workspace and project in Rally
can have one or more associated BuildDefinitions.

This enables traceability of a build to a story, defect, build status information, cross-team, and historical build trending
within Rally.

 772



 Rally®

Major Features

• Jenkins Freestyle jobs and Jenkins Pipeline jobs are supported
• View Jenkins job status by project
• Easily link to Jenkins build page
• Rollup build statuses using project hierarchy
• Build dashboards to view build health and traceability
• Track build history by project and over time
• Identify which builds are associated with stories or defects
• Store build history for analytics purposes
• Build custom apps or dashboards to understand:

– The percentage of builds are currently broken
– The duration of broken builds
– Which teams are best at keeping builds green

See the Build Connector for Jenkins Installation and User Guide for information on downloading, installing, configuring,
and using the connector.

Supported Versions

Version End of Support

Jenkins 2.2 or higher N/A

Jenkins Subsystem Interaction

Several subsystems need to interact in order for the build connector for Jenkins to perform properly. The diagram below
describes how the systems interact.

 773



 Rally®

1. Check in code and provide an Artifact ID (for example, DE27).
2. Rally connector detects the change.
3. Rally VCS Connector updates Rally with change information and does the following:

– Creates a new SCMRepository in Rally (if needed)
– Creates a changeset object, with child Change objects in Rally
– Links the changeset object to the artifact named in the check-in (DE27)

4. A Jenkins build is triggered either automatically or manually.
5. The build is performed in Jenkins and completes.
6. The build connector for Jenkins detects a new build has completed.
7. The build connector for Jenkins updates Rally and does the following:

– Creates a new BuildDefinition (if needed)
– Creates a new build and links to BuildDefinition
– Checks if the changeset associated with the build is in Rally and, if so, links the build to it

Rally Build Connector for Jenkins Installation and User Guide
The Rally build connector for Jenkins posts information about Jenkins job builds to Rally, and relates those build items to
Rally changesets and artifacts if sufficient information is contained in the VCS commit messages to identify the relevant
artifacts. This connector supports artifact types of Defect, User Story, and Tasks.

The Rally Build Connector for Jenkins is classified as a one-way and one-time mechanism. Information in Jenkins is
never altered. The Rally Build Connector consists of software that you run on your platform according to your desired
schedule. The configuration of the connector is policy-based, meaning that you do not need to provide configuration
information in Jenkins for each job for which you want the connector to operate. While you can configure specific jobs with

 774



 Rally®

this connector, you can also configure by views and folders with the option to use shell regex syntax to include jobs
or exclude jobs. The policy-based nature allows you to add Jenkins jobs and not have to alter the configuration in order to
get the builds for those jobs to be posted to Rally.

Jenkins Freestyle jobs and Jenkins Pipeline jobs are supported.

This section includes the following topics:

• Software Requirements for the Rally Build Connector for Jenkins
• Install the Rally Build Connector for Jenkins
• Setup Rally
• Run the Rally Build Connector for Jenkins
• Troubleshooting the Rally Build Connector for Jenkins
• Appendix A - Configuration File of the Rally Build Connector for Jenkins
• Appendix B - Handling Duplicate Names in Jenkins
• Appendix C - Rally Project Specification
• Rally Build Connector for Jenkins Revision History

Software Requirements for the Build Connector for Jenkins

• Linux, Windows and Mac Platforms are supported.
• Linux and Mac Platforms:

– Jenkins 2.2 or higher (while we do not certify support for Cloudbees, customers have reported success using the
build connector with Cloudbees)

– Python 3.6 or newer. You can retrieve the installer package from www.python.org.
• Windows Platform:

– Jenkins 2.2 or higher (while we do not certify support for Cloudbees, customers have reported success using the
build connector with Cloudbees)

– Python 3.6 or newer - we recommend using the 64-bit version. You can retrieve the installer package from
www.python.org

– win32com module - available from SourceForge here. If you are using the 64-bit version Python3.6 or newer, pick
the appropriate file from the SourceForge list of Python for Windows Extensions.

Install the Build Connector for Jenkins

See the Software Requirements for the software that must be installed before proceeding with the connector installation.
Once you have Jenkins and Python installed (and win32com for Windows users), you are ready to continue.

1. Download the connector by following the steps here.
2. Install the following Python packages:

– pip3.6 install requests==2.23.0
– pip3.6 install pyral==1.42.0
– pip3.6 install pyyaml==5.3.1
– pip3.6 install cryptography==2.9.2

3. Change your working directory ( cd ) to the directory where you want to install the connector.
4. Unzip the connector download file (using a suitable program that can unzip a ZIP file).
5. Change your working directory ( cd ) to bldeif-1.1.3 .
6. Check the contents of the directory using ls -laR (or dir on Windows).

Sample contents:
bldeif             # bldeif module root directory

ac_build_connector # connector initiation script, this is what you will run

config             # holds any config files used with this connector

 775

https://www.python.org/downloads/
https://www.python.org/downloads/
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/pywin32-220.win-amd64-py3.5.exe/download
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/


 Rally®

   sample_jenkins.yml # a sample config to use as a base reference

README_JENKINS.txt # this file

Setup Rally

To setup Rally, first verify that your target WorkspaceConfiguration object has BuildandChangesetEnabled set to true.
Your Rally workspace administrator needs to enable this for your target workspace. If it is not enabled, the connector will
work, but you will not be able to see any of the changeset or change information that is associated with your Rally work
items (story, defect, task).

NOTE
The Jenkins user ID you add in your product_x.yml file needs administrator access to the Manage Jenkins
page in Jenkins.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.
2. Select Workspaces & Projects.
3. Select your target workspace.
4. Select Actions, Edit.
5. Select the Enable Build and Changeset check box.
6. Select Save & Close.
7. Locate the config subdirectory.
8. Copy the sample.yml file to a file named suitably for your environment eg, cp sample.yml to product_x.yml (or

some other suitably named file that has a .yml suffix).
9. Edit your product_x.yml file.
10. Change the sample values for credentials, Workspace, Project, Job, View, Folder to values that are relevant and valid

for your environment. Learn more.

Run the Rally Build Connector for Jenkins

You can run this connector manually or scheduled.

Manual Operation

This software requires that the configuration file reside in the config subdirectory. You specify the name of the file on the
command line (do not specify the subdirectory in the command line argument).

1. Using a terminal window or console, navigate to the installation root directory.
For example:
cd /opt/local/sw/bldeif-1.1.3

2. Run the following command, replacing product_x.yml with the name of your .yml file.
python3.6 ac_build_connector product_x.yml

On Windows, this command may be:
python3.6 ac_build_connector your_configfile.yml

Scheduled Operation

Use either cron , launchctl , or Windows Task Scheduler.

Make sure the environment in effect when running this software has an appropriate environment set so that you can run:
python3.6 $BLDEIF/ac_build_connector your_config_file_name.yml

 776

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#WorkspaceConfiguration


 Rally®

$BLDEIF is the reference to an environment variable containing the fully qualified path to the directory where the software
is installed. For example, if you unzipped the package in /opt/local/sw , then your BLDEIF would be set like this:
export BLDEIF=/opt/local/sw/bldeif-1.1.3

Time File

In normal operation, the connector writes a time file in the log directory whose name is based on the configuration file
name.

For example: If the configuration file name is product_x.yml then the associated time file name would be
product_x_time.file. The content of the time file is a single line containing a human readable date and time stamp value
in the format YYYY-MM-DD hh:mm:ss Z. The value represents the timestamp of the last Jenkins jobs considered (after
some negative value adjustment to ensure no Jenkins jobs are ever overlooked). When the connector is run a subsequent
time, it consults the time file to determine which jobs need to be considered for the current run by only processing the
builds whose start time is greater than or equal than the time file value. It is possible to set the time file value artificially
(but in the correct format) so that you can process builds from some arbitrary point in the past. The connector does not
duplicate build records so you do not have to worry about duplicated information getting posted to Rally.

Sample Scenario Involving the Build Connector for Jenkins

1. Make a commit to your repository (the same one that has been configured in a Jenkins Job). This has also worked
when using GitHub with the Rally service to push changesets to Rally. (Note: In this scenario, GitHub will need to
push information to Jenkins as well). To use with a Bitbucket repository, the repository will need to be cloned as a Git
repository (currently, the connector is not able read data from Bitbucket).
The commit should reference a Rally artifact in its message, for example:
git commit -m "test for DE82 fixes"

2. Run your VCS connector (that is, Git or SVN) against the Git repository in Step 1 (not needed if using GitHub).
3. In Rally, verify the changeset was added to the artifact mentioned in the commit message in step 1 (DE82 in the

example).
4. Run the Jenkins Job connected to the Git (or GitHub) repository in Step 1.
5. Run the Build Connector for Jenkins with the following command from the installation root directory:

python3.6 ac_build_connector your_configfile.yml

On Windows, this command may be:
python3.6 ac_build_connector your_configfile.yml

6. In Rally, verify the build information was added to the changeset in Step 3. Build information can also be viewed using
the Build Health app.

Troubleshooting the Rally Build Connector for Jenkins

The connector always writes a log file name based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory.

In the configuration file, you can set the LogLevel which determines the amount of logging information written to the log
file. When you set the LogLevel to DEBUG, you will get the full range of logging messages that can be very helpful in
pinpointing where a problem occurred and what information was being processed at the time of the anomaly.

It can be very helpful to run the connector in Preview mode when setting things up for the first time. This allows you to get
the connections to  Rallyand Jenkins to initialized and validate correctly without posting any build information. This mode
also can show you what Jenkins jobs would actually be considered without actually posting any build information to Rally.

Issue: The following
error is seen when

C:\Connectors\bldeif-1.1.3>python ac_build_connector sample_jenkins.yml

ERROR: ac_build_connector encountered an ERROR condition.

  File "ac_build_connector", line 31, in main

 777



 Rally®

the win32com module
is not installed

    connector_runner.run()

  File "C:\Connectors\bldeif-1.1.3\bldeif\bld_connector_runner.py", line 137, in run

    self.proclaim_existence(build_system_name)

  File "C:\Connectors\bldeif-1.1.3\bldeif\bld_connector_runner.py", line 103, in

 proclaim_existence

    proc = ProcTable.targetProcess(os.getpid())

  File "C:\Connectors\bldeif-1.1.3\bldeif\utils\proctbl.py", line 96, in targetProcess

    aps = ProcTable.allProcesses()

  File "C:\Connectors\bldeif-1.1.3\bldeif\utils\proctbl.py", line 29, in allProcesses

    all_procs = ProcTable.posixProcesses()

  File "C:\Connectors\bldeif-1.1.3\bldeif\utils\proctbl.py", line 44, in

 posixProcesses

    ps_output = subprocess.Popen(command_vector, stdout=subprocess.PIPE).communicate()

[0]

  File "C:\Users\user01\AppData\Local\Programs\Python\Python36\lib\subprocess.py",

 line 709, in __init__

    restore_signals, start_new_session)

  File "C:\Users\user01\AppData\Local\Programs\Python\Python36\lib\subprocess.py",

 line 997, in _execute_child

    startupinfo)

FileNotFoundError: [WinError 2] The system cannot find the file specified

Answer: Install the win32com module. See Software Requirements section in this document for
installation instructions.

Issue: The following
error is seen on screen

when running the
connector before the
logfile is generated

C:\Users\tester\bldeif-1.1.3>python ac_build_connector test1.yml 

ERROR: ac_build_connector encountered an ERROR condition. 

File "ac_build_connector", line 31, in main connector_runner.run() 

File "C:\Users\tester\bldeif-1.1.3\bldeif\bld_connector_runner.py", line 137, in run 

self.proclaim_existence(build_system_name) 

File "C:\Users\tester\bldeif-1.1.3\bldeif\bld_connector_runner.py", line 103, in

 proclaim_existence 

proc = ProcTable.targetProcess(os.getpid()) 

File "C:\Users\tester\bldeif-1.1.3\bldeif\utils\proctbl.py", line 96, in

 targetProcess 

aps = ProcTable.allProcesses() 

File "C:\Users\tester\bldeif-1.1.3\bldeif\utils\proctbl.py", line 29, in allProcesses 

all_procs = ProcTable.posixProcesses() 

File "C:\Users\tester\bldeif-1.1.3\bldeif\utils\proctbl.py", line 47, in

 posixProcesses 

cmd_column_ix = hdr_line.index('CMD') 

ValueError: substring not found

Answer: The win32com module version did not match the python version (for example, the win32com
module for python 3.5 was installed on a system running python 3.6). See Software Requirements for
installation instructions.

Issue: 403 error
in the logfile

INFO: JenkinsConnection.connect - Connecting to Jenkins

FATAL: JenkinsConnection._getJenkinsVersion(148) - <ConfigurationError>

 <title>Jenkins</title> status_code: 403

ERROR: BuildConnectorRunner.run - <title>Jenkins</title> status_code: 403

Answer: This can be caused when using matrix-based security in Jenkins and the account the connector is
using does not have access to the /manage page. We recommend that the user account have full access
to the Jenkins instance. However to resolve this particular error, grant the user account Overall, Administer
access.

 778



 Rally®

Known Limitations
BuildDefinition

Names and URLs
Within Rally there is an entity called a BuildDefinition which for the purposes of the Build Connector
for Jenkins contains the name of the Jenkins job. The Jenkins job as recorded in a BuildDefinition item is
the full URL of the Jenkins job, including any folder and view elements. A BuildDefinition Name is limited
to 256 characters. In the event that a Jenkins job has a URL whose length exceeds 256 characters, the
behavior of the connector is to delete off-leading characters on the the job URL such that the result is no
longer than 256 characters and this resulting string value is used as the BuildDefinition name. Be
aware that in some edge cases you might have a Jenkins installation in which this type of modification of
the full Job URL for various Jenkins Job URLs could result with the same abbreviated value. We do not
anticipate that this will be a common occurrence. If you are in the situation where your Jenkins installation
contains folder and view names that are fairly long (greater than 40 characters per folder or view name)
with a high degree of nesting (greater than 6 levels) then you may need to alter your connector config files
such that jobs whose URL results in a string of greater than 256 characters are not specified in your config
file.

Example Jenkins Job URL:

http://bigjenkins.stegasaurus.ancient:8080/job/ReallyLongScientificFolderName/.../job/

FernCoveredLowlands/job/MickyDinosaur

Result

 .../job/FernCoveredLowlands/job/MickyDinosaur

How the Connector
Handles Duplicately

Named Jobs or
Folders or Views

See Appendix B.

VCS Support • Currently the connector will process changesets related to builds as long as the related job is using a
Git repository.

• Some configurations with Subversion have been successful, but there are combinations of Jenkins
version, Subversion version, and Jenkins Subversion plugin version that do not work with our connector
due to variances in the json data returned for the build information.

• We recommend using a designated VCS connector for Subversion along with Jenkins connector to
capture commit/changeSet and build information. In those cases set the ShowVCSData property in
the Jenkins configuration file to False.

Appendix A - Configuration File for the Rally Build Connector for Jenkins

The Rally bldeif connector for Jenkins uses a text file in the YAML format. For complete information, consult the web page
at Get Started or any of the many websites on the subject of YAML.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

 779

https://yaml.org


 Rally®

• Use a text editor (not Microsoft Word or Google Doc) to edit the file.
• Never use a tab character in the file. YAML does not allow or recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent.
• On a line, the first occurrence of a non-quoted # character indicates a comment. The # character and all characters to

the right are ignored in processing.
• Keep the sections in the same order as is present in the sample.yml file.
• Be aware that the colon char : is significant, it separates a key from the value.
• Be aware that the dash char - is significant, it denotes the start of a list which may have 1 or more key value pairs that

constitute the list item.
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character.

Skeleton of the sample_config.yml

JenkinsBuildConnector:

        AgileCentral:

                ...  # several key value pairs are relevant for this section

        Jenkins:

                ...  # several key value pairs are relevant for this section

        Service:

                ...  # a few key value pairs relevant for the overall operation of the connector appear in

 this section

The AgileCentral section specifies values to use to obtain a connection with Rally. The Jenkins section specifies values to
use to obtain a connection with Jenkins and specify the policies governing what jobs in Jenkins get processed to result in
posting of build information to Rally. The Service section controls some aspects of the connector behavior on an overall
basis.

NOTE
In order to run this connector, you must use a Jenkins administrator username and password in the configuration
field of the Jenkins section.

A sample file with some explanatory notations:

---------------------------------------------

JenkinsBuildConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com      # R

         Username      : henry5@hauslancaster.uk  # R   if an APIKey entry is used, then this isn't needed

         Password      : 2MuchAngst1415           # R   if an APIKey entry is used, then this isn't needed

         APIKey       : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org       # O

         ProxyUser     : jessonbrone              # O

         ProxyPassword : S-e-c*r*ET321!789       # 0

         Workspace     : My Onliest Workspace     # R  name of the Agile Central Workspace where

                                                  # SCMRepository, Changeset and Build records are written

     Jenkins:        # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Protocol    : http                       # R

         Server      : jenkado.mydomain.com       # R

 780



 Rally®

         Port        : 8080                       # R

         Prefix      :                            # O  for custom Jenkins installation in a non-standard

 directory

         Username    : validuser                  # R  provide a value when Jenkins requires credentials for

 access

         Password    : somepasswd                 # R  provide a value when Jenkins requires credentials for

 access

         API_Token   : 320ca9ae9408d099183aa052ff3199c2  # O can use in place of Password when credentials

 required

         MaxDepth    : 3                          # O  how many folder levels will be considered, default is

 three

                                                  #    this will accommodate a scenario like AlphaFolder //

 BetaFolder // CherryFolder and the jobs in that folder

         AgileCentral_DefaultProject : an Agile Central Project name  # R

         Folders:

             - Folder: a folder name

               include: toaster,microwave,stove  # O use adequate non-ambiguous patterns of job names to

 include 

                                                 #   only those specified. this example would include the jobs

                                                 #   stove-hot, stove-warm, stove-burning

             - Folder: another folder name

               exclude: beta-,post-prod      # O use adequate non-ambiguous patterns of job names to exclude, 

                                             # you do not have to specify the full job name

               AgileCentral_Project: Divison X // National // Engineering

         Views:

             - View  : view name

               AgileCentral_Project: Divison Y // Provincial // Engineering

             - View  : another name

               include: prod-

               exclude: pre-prod

         Jobs:

             - Job   : job name

               AgileCentral_Project: Beta Test for Northeast

             - Job   : another job name     # this job with a unique name could live in some view or folder

 not at the top level

     Service:

         Preview      : True   # When set to True, the connector shows the items that would be processed

                               #  but doesn't actually post any build information to Agile Central

                               # When you have completed the setup and the connections with AgileCentral and

 Jenkins

                               # are made successfully, you can change this value to True

         LogLevel     : INFO   # This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is very

 verbose

         MaxBuilds    : 100    # Use a non-negative integer value. This "limit" pertains to builds for a

 particular job.

 ------  end of the file ---------------------------------------

 781



 Rally®

Appendix B - Handling Duplicate Names in Jenkins

The connector processes jobs under named folders. There is not currently the facility to specify an upper-level folder and
process all jobs directly in that folder and in any contained folders in any level of nesting.

To get jobs in folders to be processed you must specify the folder name in the configuration file.

You may have a nested folder structure as illustrated below:

      - upper folder

        -- job 1

        -- lower folder

           -- job 2

To insure that both job 1 and job 2 are picked up by the connector the Folders section of the configuration file must look as
follows:

          Folders:

           - Folder : upper folder

           - Folder : lower folder

If you have multiple folders in various locations in your Jenkins Job organization that have the same name, you must
specify each folder using a fully qualified path with // as a separator between each folder/view level. For example:

          Jenkins:

                ...

                MaxDepth : 5

                FullFolderPath : True

                ...

                Folders:

                    - Folder: Area 51 // Intermediate Stuff // Good Stuff

                    - Folder: Level1 // Level 2 // Level 3 // Good Stuff

Appendix C - Rally Project Specification

In Rally, project names do not have to be unique. The connector provides a mechanism of distinguishing projects with the
same name.

For example, if a fragment of a project tree looks like this:

     |__ Jenkins

        |__ Salamandra

        |__ Corral

            |__ Salamandra

We recommend that, in order for the build definitions to be assigned to the intended projects in Rally, the following syntax
should be used (example configuration file snippet):

       Jenkins:

           ...

           AgileCentral_DefaultBuildProject : Jenkins

           Jobs:

               - Job: monitor sub-tropical habitat

                 AgileCentral_Project: Jenkins // Salamandra

               - Job: fill the water bottles

                 AgileCentral_Project: Jenkins // Corral // Salamandra

 782



 Rally®

Rally Build Connector for Jenkins Revision History

• 1.1.3-Master --- 20-Oct-2017
– Fixes

• Updated timestamp function issue
• 1.1.2-Master --- Mar-2017

– Initial release

Jenkins Integration with Rally Software and GitHub (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Jenkins and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity, and efficiency.

OpsHub Integration Manager supports the synchronization of defects, requirements, and test cases available in Jenkins
to all the possible entities existing in Rally such as defects, user stories, test cases, test sets, test case result (only write
support), and task.

• Supports bi-directional synchronization between Jenkins and Rally for all supported entities.
• User can get the Build results with Build URL or trigger a build from OIM.
• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between Jenkins and Rally.
• Maintains history of both systems. If any of Jenkins or Rally becomes unavailable, it will reflect all transactions that

occurred during that time once the system is operational again.
• Provides templates and the ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports a number of replication models to support development organization such as master-slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Mercurial
The Mercurial to Rally connector comprises code that skims the Mercurial system for recent commits. It extracts
information from the commit messages, and posts changeset and change information to a Rally SCMRepository
according to specifications in a configuration file. The connector must be installed on only one computer for your company.

You can include Formatted IDs (example: US42) in commit messages. The connector processes all commits for
configured repositories and pushes information about those commits into changeset and change objects in Rally. If a valid
Formatted ID is found in a commit message, the changeset created by the connector is associated with that defect, story,
or task in Rally.

Example workflow: You are assigned DE42 in Rally. When you make a code change and commit, include a message in
the commit like Found an issue with line breaks—fixed DE42. The connector finds that commit message and links the
information about the commit to the defect in Rally.

See the Rally VCS Connector for Mercurial Installation and User Guide for information on installing, configuring, and using
the connector.

Cost: Free

 783

https://www.opshub.com/jenkins-integration/jenkins-integration-rally-software-github


 Rally®

Rally VCS Connector for Mercurial Installation and User Guide
The Mercurial to Rally connector comprises code that skims the Mercurial system for recent commits. It extracts
information from the commit messages, and posts changeset/change information to a Rally SCMRepository, according to
specifications in a configuration file.

While it is possible to have the connector installed on only one computer for your company, you can also choose to install
the connector on multiple computers depending on how your organization is structured and the number of repositories that
need to be reflected in Rally.

You can put formatted IDs (such as US42) in commit messages. The connector processes all commits for configured
repositories and will push information about those commits into changeset objects and change objects in Rally. If a valid
Formatted ID is found in a commit message, the changeset created by the connector will be associated with that defect,
story, or task in Rally.

A typical workflow is for one of your team members to be assigned DE42 in Rally. When they make a code change and
commit, they should put a message in the commit like "Found an issue with line breaks - fixed DE42". The connector will
then find that commit message and link the information about the commit to the defect in Rally. Note that this message is
case-sensitive, "fixed" is not the same as "Fixed".

This user guide includes the following:

• Supported Platforms for the Mercurial to Rally Connector
• Prerequisites for the Mercurial to Rally Connector
• Install the Mercurial to Rally Connector
• Configure Mercurial
• Configure Rally
• Configure the Mercurial to Rally Connector
• Run the Mercurial to Rally Connector
• Extend the Mercurial to Rally Connector
• Troubleshoot the Mercurial to Rally Connector
• Mercurial to Rally Connector Revision History

Supported Platforms for the Mercurial to Connector

The connector supports running on a variety of platforms. This software is written in Ruby and has been tested and
certified using Ruby 2.2.6. Subsequent to June 27, 2018, it will not work with any earlier version of Ruby. If this software is
for use on a Linux, Unix, or macOS system, it must be installed after installing the http client and rally_api gems.

Prerequisites for the Mercurial to Connector

• Ruby 2.2.6 - This is the supported version.
The connector may not be compatible with Ruby 2.3.x and 2.4.x, we have not certified this connector with those
versions, only 2.2.6 is certified. You may want to investigate how to use the Ruby version manager software ( rvm )
that makes installation and use of specific versions of Ruby simpler.

• Ruby Development Kit for Ruby 2.0 to 2.3 (** Windows only **)
a. Download the Ruby DevKit: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
b. Add path to the devkit’s bin directory to environment Path variable
c. cd to the Ruby DevKit root directory
d. Run command: ruby dk.rb init

 784

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change
https://github.com/oneclick/rubyinstaller/releases/download/devkit-4.7.2/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

e. Run command: ruby dk.rb install
• Choose a machine that will run the connector
• If the connector machine is a different machine than the Mercurial server, note the server address/name
• Gather the paths to the repositories from which you will gather information
• Choose the Rally workspace in which the information will be going

Mercurial Server versus ssh

The primary use case is for this connector to be run on the platform that the Mercurial software and repository reside on.
While it is possible to run this connector on a platform that is not the Mercurial platform, that use case assumes the use
of ssh and the proper setup of public and private key information. Setting up ssh and key files is beyond the scope of this
document; consult the internet for documents regarding ssh and PKI.

If you are running the connector on Windows, you will need to have an executable for ssh if you plan to connect to a
remote box. Packages such as Cygwin and the Git installer for Windows include an ssh.exe . You will then need to add
the location of that ssh.exe to your PATH environment variable to be able successfully connect to a remote repository or
server.

If you are using the executable for Windows, there are no further prerequisites. If you intend to run the Ruby source, you
will need to install Ruby version 2.0.0 or greater on the machine that will run the connector. We recommend getting the
Ruby installer for Windows from rubyinstaller.org or using rvm from rvm.io for Linux and Unix users.

Install the Mercurial to Rally Connector

As this connector is intended to run on an ongoing basis initiated by either cron or Windows Task Scheduler (WTS),
it is important to consider the identity of the user who installs the connector versus the identity of the user when run
through cron or WTS with regard to the permissioning and ACL of the directories and files in the connector installation.

The user running the connector must be able to read all files and must be able to write in the configs and logs
subdirectories.

1. Download the connector by following the steps here.

2. Unzip the hg2ca_agile_central ZIP file into a suitable directory where you want the software installed.

The distribution contents are:

LICENSE

README

User-Mapping-Strategies

configs

extension

gems

hg2ca_agile_central.rb

install_gems.rb

lib

logs

plugin

vcseif-1.6.0.gem

3. Set environment variable GEM_COMMAND to gem executable located in Ruby installation directory. The location
examples on Linux and Windows respectively are:

• /myhome/.rvm/rubies/ruby-2.2.6/bin/gem
• C:\Ruby226\bin\gem

 785



 Rally®

4. Run the install_gems.rb Ruby script to get all associated gems installed. If you see output similar to You don't
have write permissions ... then you will need to either consult with your system administrator to obtain the necessary
permissions (typically done by using sudo or other similar software) or have the system administrator run the
install_gems.rb command.

To run the command, in a console/terminal window at the prompt, type the following:
ruby install_gems.rb

Configure Mercurial

Consider how much Mercurial history you want to have reflected in Rally.

It is possible to operate the connector to catch up with the complete history of commits in Mercurial. You should assemble
a pro/con list of considerations, reasons, and benefits to help you arrive at a strategy that works for your organization with
respect to whether you need a complete commit history reflected in Rally or just reflected from some particular point in
time.

Configure Rally for the Mercurial Connector

Verify that your target WorkspaceConfiguration has BuildandChangesetEnabled set. Your Rally workspace administrator
needs to enable this for your target workspace.

If it is not enabled, the connector will work, but you will not be able to see any of the changeset/change information that is
associated with your Rally work items (story, defect, task).

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select your target workspace.

4. Select Actions, Edit.

5. Select the Enable Build and Changeset check box.

6. Select Save & Close.

Configure the Mercurial to Rally Connector

Copy the sample.yml file in configs to a new name, for example, repo_one.yaml . Edit the copied file and adjust
some of the sample values for servers, credentials workspaces, repository names, and paths to values appropriate for
your environment.

The file is in YAML format. The YAML format uses indentation to represent structure and colon character (:) and dash
character (-) to denote name-value separation and list elements. Be aware of preserving those syntactical elements in
your edited file.

Within the Rally section of your YAML configuration file, there is an entry where you can name the SCMRepository in the
Rally system to which changeset/change items will be associated. This SCMRepository is a named container which need
not exist before running the connector; if it does not exist, the connector will create the SCMRepository in the Rally user's
target workspace.

There is an optional Lookback configuration item that can appear on either or both of the Rally and Mercurial sections
of the configuration file. The value for this parameter is expressed in terms of minutes (default or with the use of the 'm'
character) or hours using a 'h' character or days by using a 'd' character. Examples:

 Lookback: 90

 786



 Rally®

 Lookback: 120 m

 Lookback: 8 h

 Lookback: 10 d 

If you do not explicitly provide a Lookback value, the connector uses a default value of one hour. Rally recommends that
if you specify a value for Lookback in either section that you also specify a Lookback in the counterpart section with the
same value. If the Lookback values are not identical, there is the possibility under some circumstances that a changeset
from Mercurial would not be reflected in Rally due to the nature of distributed version control systems recording the
original commit time and not the time the commits are pushed to a master repository and the window of time consideration
being too short for the connector to pick up such commits.

Assess how user names are alike or differ in your Mercurial system and in your Rally subscription. If the user names are
universally identical in both systems, then you can either comment out all Author sub-items underneath the Transforms
section or you can set the value for the Author field in the Transforms section to 'Passthru'. If on the other hand there is a
deterministic mapping that can transform a Mercurial user value to the corresponding correct Rally username value, you'll
need to adjust the transformation value for Author to the appropriate classname. Consult the User-Mapping-Strategies text
document to determine which technique fits your particular situation.

Once you have identified a suitable Author transformation technique, you will need to edit the configuration to identify the
Ruby class name that will implement that transformation. The Ruby class name must exist in a file of Ruby source code
that is in a file in the plugin subdirectory.

Mapping SCMRepositories to VCS Repositories

The VCS Connector was designed to operate where this is a one-to-one relationship between a Rally SCMRepository
and a VCS repository (Git, GitHub, Subversion, Mercurial, and so on). When run, the VCS Connector creates a Rally
SCMRepository item for the value specific in the connector config file if it does not already exist. This removes a small
amount of administrative burden in that you do not have to create the Rally SCMRepository item before you run a
configuration mentioning a new repository. A one-to-many mapping can create performance issues.

For each repository, there is a config file and a timefile. The timefile records the timestamp of the second-to-last commit
for the repository. For example, you have an Apricot repository that had some flurry of commits last fall but nothing since
and you also have a Banana repository that has had activity with the last couple of months. When commits for these two
repositories get poured into a single Rally SCMRepository, it has the following effect. When processing the config for the
Apricot repository, it is searching for recent Changeset records in Rally where recent is defined as the value in the timefile
for Apricot. Since the last commit to that repository was last fall, there is going to be an excessive amount of information
read-out of the single SCMRepository (because it is looking at all Changesets since last fall, not just the ones for Apricot).

Example Repository Configuration File
---

VCSConnector:

Rally:

    Server              : us1.rallydev.com

    Protocol            : https

    Username            : jojo@muchly.com

    Password            : 22333four

#   APIKey              : _hgiotewhgeiwhgh325930503453490    # can be used in place of Username / Password

 entries

    Workspace           : VanillaBean

    RepositoryName      : Balloon

#   Proxy               : some_proxy.yoursite.com:9876  # or an IP address:port

#   ProxyUser           : outbound

#   ProxyPassword       : bvc-357%GNQ

 787



 Rally®

    Lookback            : 90  # in minutes by default, use m/h/d suffix for minutes/hours/days

    UpdateArtifactState : False

    StateExtractorClass : BasicActionsAndArtifactsExtractor(message)

    Debug               : False

Mercurial:

#   Server              : HGsvr.company.com            # specified if repo is not local

    RepositoryBase      : /var/www/foo/bar

    Lookback            : 90

    MaxItems            : 100

#   RevURI              : http://yourserver.com:8008/hgifc/bigproject/rev/{revnumber}   # if running web

 access to Hg repo

#   FileURI             : http://yourserver.com:8008/hgifc/bigproject/file/{revnumber}/{filepath}  # if

 running web access

    Debug               : False

Services:

    Preview             : False

    LogLevel            : Debug

Transform:

    Author              : Passthru

...

Under the Mercurial section, the RevURI and FileURI are meant to be the root URI if you are using a web front end
for your system. The URI will be used as a base for the link to the changesets and files. For example, if you have
http://server:port/Mercurial/rev/ as your root, a link will be made in Rally for the changeset to http://
server:port/Mercurial/rev/12345 for changeset 12345. The strings {revnumber} and {filepath} will be
substituted in when the connector builds the link stored in Rally.

Note that the Proxy* items are commented out by using a # in front of the item. Within a YAML file, any line beginning with
a # character is ignore and any content following a # character sequence is ignored (including the # sequence).

Create an API Key

A Rally API Key can be created to use to access your subscription data without using your username and password.

To use the API Key in a connector, edit the Rally section in the config.yml file and add an APIKey line. When the
APIKey configuration entry is specified, omit the Username and Password from the Rally config section. If an APIKey
entry is present, the username and password are not used and a warning will appear in the log file if they are included
in the config file. This is true even if the APIKey entry value is invalid, blank, or nil. If your subscription administrator has
configured your subscription to be SSO only, you no longer need to add the user associated with the given APIKey value
to the list of allowed users.

The connector now uses rally_api version 1.2.1. Note that the APIKey specified must have full access, a read-only api key
will not allow the connector to write to Rally.

For help creating a full-access API Key, see Rally Application Manager.

Run the Mercurial to Rally Connector

NOTE
You should defer running the connector until you have at least one commit in your repository.

 788



 Rally®

In the Services section of your config file ( repo_one.yaml for example), is an entry for Preview that is set to False. You
may want to set this value to True in the initial setup phase to verify that the connector can successfully connect to Rally
with the credentials and information you have provided, as well as proving out the use of the hg command. Your PATH
environment variable must contain a filesystem path where the hg command can be found. See Linux / Unix / macOS /
Windows documentation on how to set environment variables for use within a Linix or Unix cron job (or Windows Task
Scheduler entry). Once you've determined that a connector run in Preview mode operates as expected, you can set the
Preview value in your config to False.

On an ongoing basis, you can use cron / Windows Task Scheduler (or any other job-task scheduling software) to run the
connector periodically. Initially, Rally recommends the connector to be run every 15 minutes during normal business hours
and less frequently during non-business hours.

You can have numerous configuration files in the configs subdirectory and specify them all for invocation either by name
or by globbing (wild-card syntax). For example:

ruby hg2ca_agile_central.rb apricot banana cherry dogwood 

The files apricot.yml , banana.yml , cherry.yml , and dogwood.yml must exist in the configs subdirectory. The
connector only looks for config files in the configs subdirectory under the installation base directory.

Whenever the connector is run, an entry is made in the logs/hg2rally.log file to note the invocation. For each config
named at invocation, there will be an entry in that file noting the return code from running that config. When the connector
run has finished with all configs, an entry is written to note the completion of the connector run.

Additionally, there is a file written in the logs subdirectory for each config named that will have more detail about the
activity that occurs during the run. You can adjust the verbosity written to these log files by modifying the LogLevel value
in the config file. Normally, the LogLevel would be set to Info. Should you encounter situations where the connector does
not complete normally, you can adjust the LogLevel to Debug and run the connector to begin the troubleshooting process.
These log files can be sent to Rally Support to expedite the investigation of a case.

The connector writes a file in the base installation directory corresponding to the config name with the date of the last
commit processed. The file is named  config_time.file and has a time entry in the form YYYY-mm-dd HH:MM:SS
Z (for Zulu time). When first run, there won't be a time file for the config and the connector defaults to looking for commits
that occurred after 2010-01-01 00:00:00 Z. You can override that behavior by creating and editing a time file for the config
you are about to process. By providing an entry in the format mentioned above, you can control that point from which
commits are processed.

Extend the Connector

In the extension sub-directory of the installation, there is an exemplar Ruby class in the file named statex.rb . The
class definition contained in that file is named BasicActionsAndArtifactsExtractor. This example class demonstrates the
basic technique of examining a commit message and extracting Rally artifact identifiers and state transition target values.

Using this class when the config file item UpdateArtifactState value is set to True results in the transition of the State (or
ScheduleState in the case of UserStory) of the identified artifact to the state value mentioned in the commit message.

For example, if there is a Rally Defect (identified as DE1987) mentioned in the commit message with a new valid state
value either immediately preceding or following, then the connector will change the State of the identified artifact in Rally
to that state.

Example:

hg commit my_file.java -m "Fixed DE1987 by changing preamble paragraph 3" 

If Rally Defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally Defect DE1987 would display as Fixed. Note this
message is case-sensitive, "fixed" is not the same as "Fixed".

 789



 Rally®

The extension subdirectory allows you to provide your own message processing to extract Rally artifact identifiers and
state changes if the example provided does not fit your conventions. Your extension must be a class written in Ruby and
must provide an instance method called service which takes the commit message as an argument and must return a
Ruby Hash instance with entries keyed by a State name (Fixed, Completed, and so on) or nil with a Ruby Array as the
associated value populated by Rally artifact identifiers (FormattedID).

Troubleshoot the Mercurial to Rally Connector

Support and Feedback If you have any questions, issues, or suggestions, contact Support.

Log in to the Rally Software Community for support of this and all our connectors. This community is your
portal for self-service and support.

Connector does not
complete normally

You can adjust the LogLevel to Debug and run the connector to begin the troubleshooting process. The log
files can be sent to Rally Support to expedite the investigation of a case.

Rally VCS Connector for Mercurial Revision History

• 1.6.0-master --- 25-May-2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support.
• 1.5.3-master --- 12-Dec-2017

– Enhancements:
• Sync all vcs-eif connectors.

• 1.5.1-master --- 12-Sept-2017
– Enhancements:

• Added Message to fields eligible for Transform.
• Certified for use with Ruby 2.2.6.

• 1.4.3-master --- 24-Oct-2016
– Enhancements:

• Updated the logic to allow for processing after 1 commit.
• 1.4.1-master --- 17-Oct-2016

– Fixes:
• Addressed uncaught exception when processing an empty repository.

• 1.4.0 - master-1046 (Nov-2015)
– Enhancements:

• Brand redesign.
• 1.3.2 - master-1043 (Aug-2015)

– Enhancements:
• Added support for use of APIKey entry and revised documentation to encourage use of this in preference to use

of still supported ApiKey.
• 1.3.1 - master-1040 (Jul-2015)

– Enhancements:
• Added support for downcasing any Rally username value, inverted sequence of retrieval from Rally and target

VCS system, and upped dependency on rally_api to 1.2.1.
• 1.3.0 - master-1040 (April-2015)

– Fixes:

 790

https://support.broadcom.com/group/ecx/my-dashboard?
https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e


 Rally®

• Handle commit messages with multi-byte characters whose length exceeds the Rally Changeset Message field
length limit of 4000 bytes.

– Enhancements:
• Updated dependency on rally_api to 1.2.0

• 1.2.9 - master-1039 (March-2015)
– Fixes:

• Refined handling of commit messages in excess of 4000 characters to account for JSON encoding expansion.
• 1.2.8 - master-1038 (March-2015)

– Enhancements:
• Improved the ability to identify artifact identifiers in commit messages surrounded by bracketing characters.

• 1.2.6 - master-1037 (January-2015)
– Enhancements:

• Updated rally_vcs_connection.rb configureExtensionEnvironment and statex.rb to accommodate custom artifact
prefixes (such as 'BUG' for Defect).

• Updated dependency for rally_api to version 1.1.2.
• 1.2.5 - master-1035 (October-2014)

– Enhancements:
• Updated to use Rally Web Services API v2.0 and the updated rally_api gem.

• 1.2.4 - master-1033 (16-Sep-2014)
– Enhancements/Fixes:

• Added support for using API Key in lieu of username and password in the Rally portion of the configuration file.
• Updated to rally_api toolkit version 1.0.1.

• 1.2.3 - master-1030 (19-Aug-2014)
– Enhancements/Fixes:

• Fixed DE21993 - to meet Rally's commit message field limitation of 4000 characters, if a commit message
exceeds the character limit, characters over the limit are truncated. Upon truncation, the commit message is
appended with an annotation of the truncation and a warning message displays in the log file.

Micro Focus
The Micro Focus connector can be used with Borland Connect to synchronize sprints, stories, tasks, and defects from
Rally with the Borland CM Hub.

Micro Focus ALM/QC Integration with Rally Software (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Micro Focus ALM/QC and
Rally in application development organizations to effectively communicate and collaborate with each other, thus increasing
overall team agility, productivity and efficiency.

Micro Focus ALM/QC is a software product targeted at accelerating the delivery of secure, reliable modern applications.
It is a combination of a common platform, several key applications, and a dashboard targeted at managing the core
lifecycle of applications. ALM focuses on the core lifecycle from design through readiness for delivery to operations. With
its powerful test management tool, Micro Focus ALM/QC provides wide variety of flexibility and features to effectively write
test cases, execute them in different environments, and see run reports.

OpsHub Integration Manager supports the synchronization of requirement, defect, test suite, test case, test run, design
step, run step, cycle, and release in Micro Focus ALM/QC to all the possible entities existing in Rally such as defect, user
story, test case, test set, test case result (only write support), and task.

 791

https://www.opshub.com/micro-focus-alm-qc-integration/micro-focus-alm-qc-rally-software-integration/


 Rally®

• Supports unidirectional and bidirectional synchronization between Micro Focus ALM/QC and Rally for all supported
entities.

• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between Micro Focus ALM/QC and Rally.
• Maintains history of both systems. If any of Micro Focus ALM/QC or Rally becomes unavailable, it will reflect all

transactions that occurred during that time once the system is operational again.
• Supports the application of changes to target system in transactions blocks from the source system.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports the number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Micro Focus ALM/Quality Center
The Rally Connector for Micro Focus ALM/Quality Center (formerly HP ALM/Quality Center) connector is flexible and
customizable. The connector offers the ability to map just about any field in either system with a few limitations.

Use the Rally Connector for Micro Focus ALM/Quality Center to reflect defects to Rally defects, requirements to Rally
stories, and test plans to Rally test cases. This connector also supports a one-way copy of Micro Focus ALM/Quality
Center test runs to Rally test case results.

Features:

• Choose any work item (defect, user story, test case, or test case result)
• Filter on certain work items to reflect
• Map most fields
• Choose field transfer direction
• Default field values for required fields
• Easily map disparate user names
• Easily map different drop-down fields between systems
• Choose which services to run: copy to Rally, copy to Micro Focus ALM/Quality Center, update to Rally, update to Micro

Focus ALM/Quality Center, update Rally fields and Micro Focus ALM/Quality Center fields
• Easily map to Rally's project structure
• Multiple extension points for customization

NOTE
See Supported Versions for Rally Connectors and the Installation and User Guide for the Rally Connector for
Micro Focus ALM/Quality Center for more information.

Supported Versions for the Connector for Micro Focus ALM/Quality Center

Version End of Support

Micro Focus ALM/Quality Center 12.53, 12.55, 12.56, 12.6 Not Supported (Although these versions are not supported, some
customers report that the connector works with these versions.)

Micro Focus ALM/Quality Center 12.50 and 12.21 N/A

The connector is compatible with Micro Focus ALM/Quality Center version 12.50 and uses Micro Focus ALM/Quality
Center REST API. While we do not formally support the use of this connector with prior versions of Micro Focus ALM/

 792



 Rally®

Quality Center (using their REST API), it might work in your environment. It does not support legacy OTA.dll technology.
It runs on any platform with the supported version of Ruby (currently 2.2.6). It uses the Micro Focus ALM/Quality Center
REST API. The Micro Focus ALM/Quality Center connector versions 4.8.x use the Micro Focus ALM/Quality Center REST
API.

Please review the Rally Integrations Best Practices before proceeding with any connector integration.

White Papers and Video

Rally connector for Micro Focus ALM/Quality Center walkthrough for test cases and test runs basic functionality:

• PDF
• ZIP (contains DOC, DOCX and PDF versions)

Watch the Rally Integration with Micro Focus ALM/Quality Center (formerly HP ALM) YouTube video.

Cost: Additional per-seat cost for Enterprise Subscriptions, included with Unlimited Subscriptions.

Installation and User Guide for the Rally Connector for Micro Focus ALM/Quality Center
The Rally connector for Micro Focus ALM/Quality Center (formerly HP ALM) allows customers to use Rally for agile
lifecycle management while still using Micro Focus ALM/Quality Center for management of defects, requirements, tests,
and test runs.

NOTE
The HP ALM product has been rebranded as Micro Focus ALM/Quality Center. Throughout this document any
reference to QC, Quality Center, or just ALM all refer to the same product.

The connector runs as a Ruby script on a computer behind your firewall that accesses Rally through the Rally Web
Services API. The connector provides the ability to reflect work items between Micro Focus ALM/Quality Center and Rally
and most fields between the two systems can be reflected. The connector does not support reflecting portfolio items.
Reflection of work items generally involves matching the values of a small number of key fields between the two systems.

It does this by allowing you to:

• Copy Micro Focus ALM/Quality Center defects in Rally as defects
• Copy Micro Focus ALM/Quality Center requirements in Rally as user stories
• Copy Micro Focus ALM/Quality Center tests in Rally as test cases
• Update test runs from Micro Focus ALM/Quality Center to Rally test case result

The connector is configured through an XML file and a log file is created to track changes made in Rally and Micro Focus
ALM/Quality Center by the connector. The connector requires a custom field in each system to store the unique ID of
the linked objects in the other system. The connector copies fields to and from Rally or Micro Focus ALM/Quality Center
based on the field mapping specified in the configuration file. You can map both standard and custom fields between the
two systems.

The connector provides five services which affect the items being reflected between Rally and Micro Focus ALM/Quality
Center:

• Copy entities created in Micro Focus ALM/Quality Center to Rally work items
• Copy work items created in Rally to Micro Focus ALM/Quality Center entities
• Update Rally work items based on changes made to Micro Focus ALM/Quality Center entities
• Update Micro Focus ALM/Quality Center entities based on changes made to Rally work items
• Update Rally fields and Micro Focus ALM/Quality Center fields

The configuration file specifies which of the above services to run, and in which order.

An alternative update service, UPDATE_RALLYFIELDS_AND_OTHER, searches Rally first for updates and pushes only
the recently changed, mapped fields to the Micro Focus ALM/Quality Center system. It then searches the Micro Focus

 793

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/QC-wp-TestCaseResult-to-Run-walkthrough.pdf
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/QC-wp-TestCaseResult-to-Run-walkthrough.zip
https://youtu.be/lXxx0V0GQCk


 Rally®

ALM/Quality Center system for updates and when found, pushes all mapped fields into Rally. This reduces the chances
of overwrites of data. The only scenario where an overwrite might occur is if User A made changes in Rally and User B
made changes in the Micro Focus ALM/Quality Center system for the same fields. In this case, the Rally information is
copied over to the Micro Focus ALM/Quality Center system (possibly overwriting the data in the Micro Focus ALM/Quality
Center system), then all data is copied over to the Rally system.

It is important to recognize that the data models of Rally and Micro Focus ALM/Quality Center are not identical and as
such, they are only partially compatible. We recommend that you take some time to identify the key data items you want
to track in both systems and what you want the policy to be as far as having a primary system of record. There is specific
information later in this document discussing some of the trade-offs to be considered and some potential approaches.

This installation and user guide includes:

• Software Requirements
• Hardware Requirements
• Pre-Installation Checklist for the Rally Connector for Micro Focus ALM/Quality Center
• Install the Rally Connector for Micro Focus ALM/Quality Center
• Micro Focus ALM/Quality Center Connector Setup
• Rally Setup for the Micro Focus ALM/Quality Center Connector
• Rally Connector for Micro Focus ALM/Quality Center Configuration
• XML Tags
• Run the Rally Connector for Micro Focus ALM/Quality Center
• Manage Tests and Test Cases
• Troubleshoot the Rally Connector for Micro Focus ALM/Quality Center
• Best Practices
• Rally Connector for Micro Focus ALM/Quality Center Revision History

Software Requirements

The following are the software requirements to install and run the Rally connector based on REST API for Micro Focus
ALM/Quality Center 12.50:

• Rally subscription
• Windows, Linux, or Mac operating system
• Micro Focus ALM/Quality Center 12.50
• Ruby 2.2.6 installed

– For Linux/Mac operating systemsdownload .gz for ruby 2.2.6 (we recommend installing using rvm or rbenv ).
Select the "Install Td/Tk support", "Add Ruby executables to your Path", and "Associate .rb and .rbw files with this
Ruby installation" options when prompted.

– For Windows operating systemdownload .exe for ruby 2.2.6 (x64) Select the "Install Td/Tk support", "Add Ruby
executables to your Path", and "Associate .rb and .rbw files with this Ruby installation" options when prompted.

– Add path to the ruby bin directory to environment path variable
• Ruby Development Kit for Ruby 2.0 to 2.3 – Only necessary for Windows

– Download the Ruby DevKit: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
– Add path to the devkit’s bin directory to environment path variable
– cd to the Ruby DevKit root directory:

• run command: ruby dk.rb init
• run command: ruby dk.rb install

 794

https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.6.tar.gz
https://github.com/oneclick/rubyinstaller/releases/download/ruby-2.2.6/rubyinstaller-2.2.6-x64.exe
https://github.com/oneclick/rubyinstaller/releases/download/devkit-4.7.2/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

Hardware Requirements

You can install the connector several ways. There can be multiple install locations on the same machine that can run in
parallel which determine the hardware required. We recommend the following guidelines:

• Base hardware with a quad-core processor set and at least 8 GB RAM
• No more than 20–25 configuration files per install location
• Adequate disk storage capacity to store log files generated by the execution of the connector; 1 GB of free disk space

is likely enough
• If you add more install locations running in parallel, each installed location consumes up to 200 MB of RAM when

running and less than 50 MB when idle
• 200–250 MB of space per install location is recommended since the required hard drive space is minimal and needs to

scale only with log files

Pre-Installation Checklist

• Project and site administration access to a test environment of Micro Focus ALM/Quality Center.
• Rally administrator privileges (subscription or workspace) are needed for setup, but only user access is needed to run

the connector.
• Proxy server details if the machine used to run the connector uses a proxy server.
• Consider the following:

– The following people are involved in getting fields set up in both Rally and Micro Focus ALM/Quality Center:
• A Micro Focus ALM/Quality Center administrator user who can create the Micro Focus ALM/Quality Center

custom fields you want to reflect in Rally.
• A Rally administrator user (subscription or workspace) who can create the custom fields on the Rally artifact you

want to reflect in Micro Focus ALM/Quality Center.
– Consider the process you want to set up between Rally and Micro Focus ALM/Quality Center and add any of the

custom fields you may need.
• Where do objects start and end their lifecycle?
• Which fields need updating?

– Identify a test domain or project in Micro Focus ALM/Quality Center to use for testing the connector.
– Identify a test Rally workspace or project to use for testing the connector.

(Optional) If your site uses a proxy server to access Rally, you will need to set the HTTP_PROXY environment variable to
a value that follows this format: http://username:password@yourproxy.company.com:port

set HTTP_PROXY=http://username:password@myproxy.company.com:8000

Install the Rally Connector for Micro Focus ALM/Quality Center

1. Download the connector by following the steps here.

2. Extract the contents of the zip file RallyConnectorforHPALM-x.y.z-master-bbb.zip locally on your machine
(such as C:\rally for Windows or /Users/username/Downloads/ on a MAC).

3. Change the directory to the root of the connector installation: cd RallyConnectorforHPALM-4.x.Y-master-z

4. Set environment variable GEM_COMMAND to gem executable located in Ruby installation directory. Here are location
examples on Linux and Windows, respectively:

• /myhome/.rvm/rubies/ruby-2.2.6/bin/gem

• C:\Ruby226\bin\gem

 795



 Rally®

5. Unpack the distribution archive to create the following files and folders:

• field_handlers — A folder for custom field handers
• qc_config.xml — Sample configuration file for user stores and defects
• qc_config_test.xml — Sample configuration file for test cases
• qc_config_run.xml — Sample configuration file for test runs
• install_gems.rb — Ruby script to install the necessary gems for this connector
• rally2_hpalm_connector.rb — Executable to run the connector (located with the rallyeif-qc gem)

6. Run the install_gems.rb Ruby script to get all associated gems installed. In a console or terminal window at the
prompt, type the following: ruby install_gems.rb

Sample output of ruby install_gems.rb command:

ruby install_gems.rb 

rubygems-update installed

xml-simple installed

httpclient installed

multipart-post installed

faraday installed

mime-types installed

rally_api installed

rallyeif-wrk installed

rally_hp_alm_api installed

rallyeif-qc installed

Connector Setup

In Micro Focus ALM/Quality Center you must create an externalID field and a crosslink field.

Create an ExternalID User Field in Micro Focus ALM/Quality Center

NOTE
In the Micro Focus ALM/Quality Center Requirement Types Admin menu, enable this new field for all
requirement types. Select the User Defined Fields tab to add the new field to each requirement type. Learn
more.

1. Using the Micro Focus ALM/Quality Center Desktop Client, navigate to the appropriate domain and project.
2. Near the upper-right of the page, select the Gear

and select the Customize menu item.
3. On the left side of the page, select the Project Entities item.
4. Expand Defect or Requirement in the list of project entities.
5. Select the User Fields folder.
6. Select New Field (with the green plus symbol above the list of project entities).
7. Provide a Field Label for the field, select Field Type as String with a 40-character limit and leave the default check

boxes for all other options.
8. Select Save. A dialog should display that states The changes were saved successfully.

 796

https://admhelp.microfocus.com/alm/en/12.60/online_help/Content/Admin/cust_proj_req_types.htm
https://admhelp.microfocus.com/alm/en/12.60/online_help/Content/Admin/cust_proj_req_types.htm


 Rally®

Create a Crosslink Field

It can be useful to have reference information in the Micro Focus ALM/Quality Center work item that will relate to the
corresponding Rally artifact. The <CrosslinkUrlField> element in the <QCConnection> section of the configuration
file allows you to specify the name of the custom field that will contain this reference (string).

• We suggest a field name of RallyLink or RallyURL
• Must be a string field
• This field name is used in the <CrosslinkUrlField> element within the <QCConnection> section of the

configuration file
• This field only populates during a copy
• This URL field is only supported on the Micro Focus ALM/Quality Center side

1. On the Application Lifecycle Management – Project Customization page, select the Requirement Types on the left
side.

2. In the column where the the Requirement Types are listed, for each entry select the type name and then mark the
check box under the In Type column for the field you added to the Requirement table.

3. Select Save. A dialog should display that states The changes were saved successfully.

Rally Setup for the Micro Focus ALM/Quality Center Connector

You need to create an externalID field in Rally. The update service is workspace scoped, meaning the connector searches
for any artifact in Rally where the externalID field is not null.

If you are mapping the same workspace to multiple Micro Focus ALM/Quality Center projects, having unique externalID
fields is critical so that the connector updates the correct work item in Micro Focus ALM/Quality Center. Work item IDs
are not unique across Micro Focus ALM/Quality Center projects. Rally accesses fields from their Display Name, not their
Name. Spaces and underscores are removed, for example, Example Field becomes ExampleField.

Rally does not support custom fields on test case results, so only complete this step for the hierarchical requirement,
defect, and test case work item types.

You can choose a different name (such as QualityCenterID) for the custom field in Rally, but the name you choose must
conform to these rules:

• Begin with an uppercase letter
• Less than 41 characters (40 is the maximum for display name)
• No underscores, dashes, or spaces

WARNING
If you will be using the Rally / Micro Focus ALM/Quality Center Work Item connector with multiple Rally
projects and multiple Micro Focus ALM/Quality Center projects in the same domain, we recommend that
you use <UpdateSelector>Project.Name = "Example Project"</UpdateSelector> in the
<RallyConnection> section of the configuration to avoid excessive warning messages where multiple Micro

 797



 Rally®

Focus ALM/Quality Center items may have the same ID across multiple Micro Focus ALM/Quality Center
projects.

1. Select Actions, New Field.

2. Enter a Name of ExternalID, Display Name of ExternalID (name and display name must match), and type of String
(Note: This field cannot be of type Text). Make note of the name of this field. Once you start using the connector, this
will contain the externalID of the Micro Focus ALM/Quality Center entity you are mapping between the two systems.

3. Log into Rally as a workspace or subscription administrator.

4. Select Setup

from the Rally menu bar in the upper-right corner of the display.

5. Select Workspaces & Projects.

6. Select the workspace that you wish to map to Micro Focus ALM/Quality Center.

7. On the workspace's detail page, select the Fields link in the sidebar and ensure the Work Item Type selected is Defect
(or whatever work item you are mapping).

Rally Connector for Micro Focus ALM/Quality Center Configuration

You can use the Rally connector for Micro Focus ALM/Quality Center in one of two ways:

• Work Item mode – Copy and update user stories and defects between Rally and Micro Focus ALM/Quality Center.
• Test mode – Copy and update Micro Focus ALM/Quality Center test and run artifacts to Rally test case and test case

result artifacts.

NOTE
Incrementally set up the connector! Start with a basic configuration file, test that you can connect to Micro
Focus ALM/Quality Center and Rally in a test environment. Once you validate this is set up correctly, then start
customizing the field mapping and field handler sections.

Work Item Mode
A configuration file is used to instruct the connector on which actions to perform. A sample configuration file was part of
the delivered zip file and should be in the same directory where you extracted the Ruby gem.

For Micro Focus ALM/Quality Center, the default configuration file has a name of qc_config.xml . We recommend
making a backup copy of qc_config.xml and naming it something like qc_config.xml-orig or qc_config-
pristine.xml in case you need to reference a valid configuration file later. You can give your configuration file any
name of your choosing. For the purposes of this document, we retain the name of qc_config.xml .

Edit your configuration file (or the default qc_config.xml ) and enter the appropriate values between each XML begin
and end tag.

<Config>

        <RallyConnection>

                <Url>rally1.rallydev.com</Url>

                <WorkspaceName>Workspace Name</WorkspaceName>

                <Projects>

                        <Project>Project Name 1</Project>

                </Projects>

                <User>user@company.com</User>

                <Password>password</Password>

<!-- You can use an APIKey in place of User and Password tags -->

        <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> -->

 798



 Rally®

                <ArtifactType>Defect</ArtifactType>

                <ExternalIDField>ExternalID</ExternalIDField>

        <!--    <UpdateSelectors>

                        <UpdateSelector>State = Open</UpdateSelector>

                        <UpdateSelector>Priority = High</UpdateSelector>

                </UpdateSelectors>

                <FieldDefaults>

                        <Field><Name>RootCause</Name><Default>Undefined</Default></Field>

                </FieldDefaults>

        -->

        </RallyConnection>

        <QCConnection>

                <Url>server:port</Url>

                <Domain>Domain Name</Domain>

                <Project>Project Name</Project>

                <User>qcusername</User>

                <Password>password</Password>

                <ArtifactType>BUG</ArtifactType>

        <!--    <CopySelectors>

                        <CopySelector>BG_STATUS   = Open</CopySelector>

                        <CopySelector>BG_PRIORITY = High Attention</CopySelector>

                        <CopySelector>RQ_REQ_NAME = (WebExample1 Or WebExample2) </CopySelector>

                </CopySelectors>

        -->

                <IDField>BG_BUG_ID</IDField>

                <ExternalIDField>BG_USER_XX</ExternalIDField>

                <ExternalEndUserIDField>BG_USER_YY</ExternalEndUserIDField>

        </QCConnection>

        <Connector>

                <FieldMapping>

                        <Field><Rally>Name</Rally><Other>BG_SUMMARY</Other></Field>

                </FieldMapping>

        </Connector>

        <ConnectorRunner>

                <Preview>False</Preview>

                <LogLevel>Debug</LogLevel>

                <Services>UPDATE_RALLY_TO_QC,  COPY_QC_TO_RALLY</Services>

        </ConnectorRunner>

</Config>

Each major section is surrounded by a tag (called an XML element) to delineate that section. In the example above, here
is a description of each section:

• RallyConnection
Defines the connection information for Rally, including Rally URL, username, and password or APIKey.

• QCConnection
Defines the connection information to Micro Focus ALM/Quality Center including domain name, project name, artifact
type, user, and so on.

• Connector

 799



 Rally®

Defines the field mapping between the two systems. Generally, strings should be mapped to strings, integers to
integers, and so on.

• ConnectorRunner
Specifies parameters related to the services the connector is to run.

Test Mode
Integrations with test tracking applications allow team members to leverage their current test and defect infrastructure
while using Rally for agile project management. You can integrate with Micro Focus ALM/Quality Center or you can write
your own integration using the extensible Web Services API in your preferred development language.Integrations with test
tracking applications allow team members to leverage their current test and defect infrastructure while using Rally for agile
project management. You can integrate with Micro Focus ALM/Quality Center or you can write your own integration using
the extensible Web Services API in your preferred development language.

The Rally Connector for Micro Focus ALM/Quality Center allows you to use Rally for Agile lifecycle management while still
using Micro Focus ALM/Quality Center for management of tests and runs. The connector enables you to map:

• Tests from Micro Focus ALM/Quality Center to the test cases in Rally (or from test cases in Rally to Micro Focus ALM/
Quality Center tests)

• Runs from Micro Focus ALM/Quality Center to the test case results in Rally

The following graphic depicts the recommended workflow when using Micro Focus ALM/Quality Center for test
management:

The configuration file is part of the delivered zip file and should be in the same directory where you extracted
the Ruby gem. For Micro Focus ALM/Quality Center tests and runs, the default configuration file has a name of
qc_config_test.xml and qc_config_run.xml . Uninstalling the connector will permanently delete the default files
shipped with the connector, so renaming or backing up these files is extremely important.

1. Edit the test configuration file (such as the qc_config_test.xml ) by entering the appropriate values between each
begin and end tag.
<Config>

    <RallyConnection>

          <Url>rally1.rallydev.com</Url>

          <WorkspaceName>Workspace Name</WorkspaceName>

          <Projects>

            <Project>Project Name 1</Project>

          </Projects>

          <User>user@company.com</User>

          <Password>password</Password>

 800



 Rally®

<!-- You can use an APIKey in place of User and Password tags --> 

          <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> -->

          <ArtifactType>testcase</ArtifactType>

          <ExternalIDField>ExternalID</ExternalIDField>

          <!-- <CopySelectors> 

            <CopySelector>State = Open</CopySelector> 

            <CopySelector>Priority = High</CopySelector> 

          </CopySelectors> -->

    </RallyConnection>

    <QCConnection>

          <Url>server:port</Url>

          <Domain>Domain Name</Domain>

          <Project>Project Name</Project>

          <User>qcusername</User>

          <Password>password</Password>

          <ArtifactType>TEST</ArtifactType>

          <TestFolder>MyTestFolder</TestFolder> 

          <!-- <TestFolderID>MyTestFolderID</TestFolderID> Can be used in place of <TestFolder> -->

          <IDField>TS_TEST_ID</IDField>

          <ExternalIDField>TS_USER_xx</ExternalIDField>

    </QCConnection>

    <Connector>

          <FieldMapping>

            <Field>

              <Rally>Name</Rally>

              <Other>TS_NAME</Other>

            </Field>

          </FieldMapping>

    </Connector>

    <ConnectorRunner>

          <Preview>False</Preview>

          <LogLevel>Debug</LogLevel>

          <Services>UPDATE_QC_TO_RALLY, COPY_QC_TO_RALLY</Services>

    </ConnectorRunner>

</Config>

2. Edit the run configuration file (such as the qc_config_run.xml ) by entering the appropriate values between each
begin and end tag.
<Config> 

    <RallyTestResultConnection> 

          <Url>rally1.rallydev.com</Url> 

          <WorkspaceName>Workspace Name</WorkspaceName> 

          <Projects> 

            <Project>Project Name 1</Project> 

          </Projects> 

          <User>user@company.com</User> 

          <Password>password</Password> 

          <!-- You can use an APIKey in place of User and Password tags --> 

          <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> --> 

          <ArtifactType>TestCaseResult</ArtifactType> 

    </RallyTestResultConnection> 

    <QCRunConnection> 

          <Url>server:port</Url> 

 801



 Rally®

          <Domain>Domain Name</Domain> 

          <Project>Project Name</Project> 

          <User>qcusername</User> 

          <Password>password</Password> 

          <ArtifactType>RUN</ArtifactType> 

          <TestFolder>MyTestRunFolder</TestFolder> 

          <!-- <TestFolderID>MyTestFolderID</TestFolderID> Can be used in place of <TestFolder> --> 

          <IDField>RN_RUN_ID</IDField> 

          <ExternalIDField>RN_USER_xx</ExternalIDField> 

          <!-- QC user field on TEST table that stores the unique id for the Rally work item --> 

          <TestExternalIDField>TS_USER_xx</TestExternalIDField> 

          <!-- By default, the connector will only "look back" 1 day for new QC Runs to be copied to Rally

 TestCaseResults (and associated with a Rally TestCase). Use the following XML tag to change the number of

 days to search. --> 

          <RunDaysToSearch>2</RunDaysToSearch> 

    </QCRunConnection> 

    <Connector> 

          <FieldMapping> 

            <!-- The required 4 fields on a Rally TestCaseResult object: --> 

            <Field>

              <Rally>Date</Rally> 

              <Other>RN_EXECUTION_DATE</Other> 

            </Field> 

            <Field>

              <Rally>Build</Rally> 

              <Other>RN_RUN_NAME</Other> 

            </Field> 

            <Field>

              <Rally>TestCase</Rally> 

              <Other>RN_TEST_ID</Other> 

            </Field> 

            <Field>

              <Rally>Verdict</Rally> 

              <Other>RN_STATUS</Other> 

            </Field> 

          </FieldMapping> 

          <RallyFieldHandlers> 

            <!-- Required field handler: Determines how to lookup the associated test in Rally --> 

            <RallyReferenceFieldHandler> 

              <FieldName>TestCase</FieldName> 

              <!-- Custom field on Rally TestCase to store the unique id for linked QC test --> 

              <ReferencedFieldLookupID>ExternalID</ReferencedFieldLookupID> 

            </RallyReferenceFieldHandler> 

          </RallyFieldHandlers> 

          <OtherFieldHandlers> 

            <!-- Required field handler which will convert a QC run date into a Rally date: --> 

            <QCRunDateFieldHandler> 

              <FieldName>RN_EXECUTION_DATE</FieldName> 

            </QCRunDateFieldHandler> 

            <OtherEnumFieldHandler> 

              <FieldName>RN_STATUS</FieldName> 

              <Mappings> 

                <!-- Add additional mappings between Rally verdict and RN_STATUS --> 

 802



 Rally®

                <Field>

                   <Rally>Fail</Rally>

                   <Other>Failed</Other>

                </Field> 

                <Field>

                   <Rally>Pass</Rally> 

                   <Other>Passed</Other>

                </Field> 

              </Mappings> 

            </OtherEnumFieldHandler> 

          </OtherFieldHandlers> 

    </Connector> 

    <ConnectorRunner> 

          <Preview>False</Preview> 

          <LogLevel>Debug</LogLevel> 

          <!--- Only the COPY_QC_TO_RALLY service is supported for RUNs --> 

          <Services>COPY_QC_TO_RALLY</Services> 

    </ConnectorRunner> 

</Config>

Each major section is surrounded by a tag (called an XML element) to delineate that section. For the
examples above, here is a description of each section:
<RallyConnection>Defines the connection information for Rally, including Rally URL, username, and password or

APIKey.
<RallyTestResultConnection>Defines the connection information to Rally, including Rally URL, username, and password or

APIKey. Supports Rally test results only.
<QCConnection> Defines the connection information to Micro Focus ALM/Quality Center including domain name,

project name, artifact type, user, and so on. Used when mapping bugs and requirements.
<QCRunConnection>Defines the connection information to Micro Focus ALM/Quality Center. Used when mapping

tests and more.
<Connector> Defines the field mapping between the two systems. Generally, strings should be mapped to

strings, integers to integers, and so on.
<ConnectorRunner>Specifies parameters related to the services the connector is to run.

Field Mapping
The field mapping section is located within the <Connector> element in the configuration file. It defines which fields are
to be mapped between the two systems.

For example, the following definition sets up a mapping between the Rally field Name with the field Headline in the other
system. On a create or update, the connector will only update the Name field in Rally and the Headline field in the other
system.

<Config>

  ....

  <Connector>

    <FieldMapping>

      <Field>

        <Rally>Name</Rally>  <Other>Headline</Other>

     </Field>

    </FieldMapping>

    ....

When you set up your mapping between the two systems, ensure the fields are compatible between the two systems (an
integer field should map to an integer field in the other system, a rich text should map to a rich text in the other system).

 803



 Rally®

Otherwise, you might experience situations where information is not created or updated between the two systems and you
will see an error in the log file. For example, the connector will post an error for a particular work item if you try to post a
string to a custom field of type integer in Rally.

You can add subsequent mappings by appending to this list. For example, this sets up a mapping of Rally Name to Micro
Focus ALM/Quality Center Headline, and Rally Description to Micro Focus ALM/Quality Center Description, and Rally
Priority to Micro Focus ALM/Quality Center Priority:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>Name</Rally>         <Other>Headline</Other></Field>

            <Field><Rally>Description</Rally> <Other>Description</Other></Field>

            <Field><Rally>Priority</Rally>       <Other>Priority</Other></Field>

        </FieldMapping>

        ....

If you are mapping a drop-down value in Rally to the other system, this assumes the drop-down values match. Otherwise,
the connector generates an error that the value was not found in the list. If your drop-down values are different between
the two systems, see Map Drop-Down Values.

NOTE
Multi-select drop-down lists are not supported.

Individual fields may also have a directionality specified, whereby that specific field will be mapped in one direction only.
For more information on this feature, see Field Directionality.

CopySelector and UpdateSelector

The FAQ has a section of general information about using <CopySelector> and <UpdateSelector> .

The Micro Focus ALM/Quality Center connector does not allow for multiple tests on the same field. It does support the
same syntax which can be used within the Micro Focus ALM/Quality Center GUI, which allows for more complex testing.
Here are a few examples of <CopySelector> in the <QCConnection> section of the configuration file:

<CopySelectors>

    <CopySelector>BG_USER_02 = Y</CopySelector>

    <CopySelector>BG_STATUS = (Not Closed And Not Fixed)</CopySelector>

</CopySelectors>

<CopySelectors>

    <CopySelector>BG_USER_02 = Y</CopySelector>

    <CopySelector>BG_PROJECT = (Not "")</CopySelector>

</CopySelectors>

<CopySelectors>

    <CopySelector>BG_USER_02 = Y</CopySelector>

    <CopySelector>BG_STATUS = (Open Or Reopen)</CopySelector>

</CopySelectors>

<!-- To select QC Requirements 4 and 5 only: -->

<CopySelectors>

    <CopySelector>RQ_REQ_ID = (>3 And <6)</CopySelector>

</CopySelectors>

<CopySelectors>

    <CopySelector>BG_USER_03 = (Not (ABC or DDM))</CopySelector>

</CopySelectors>

 804



 Rally®

<CopySelectors>

    <CopySelector>BG_USER_03 = (Not ("ABC DEF" or "GHI JKL"))</CopySelector>

</CopySelectors>

In addition to the existing Copy and Update Selectors, Micro Focus ALM/Quality Center REST connector supports
selectors that allow subset and range operators using in, !in and between, and !between operators, respectively.

In and !in operators are intended to select a subset of allowed values of drop-down fields, (for example, BG_STATUS in
HPALM or State in Rally) or integer values (for example, BG_ESTIMATED_TIME in HPALM)

Here is an example of Copy and Update Selectors in the <QCConnection> section of a configuration file that limit a copy
and update service from Micro Focus ALM/Quality Center to Rally to defects with BG_STATUS within a certain subset of
allowed values:

<CopySelectors>

    <CopySelector>BG_STATUS in New,Open,Reopen</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>BG_STATUS in New,Open,Reopen</UpdateSelector>

</UpdateSelectors>

In the following example, the defects are selected using !in operator. The returned subset is effectively the same as the
subset of defects limited by in operator in the example above. Note that when using negation with drop-down fields that
allow empty values, for example, BG_PRIORITY the subset of included work items will contain work items where this
field is empty. If inclusion of those items is undesirable, the in operator should be preferred. Empty field values are not
supported by subset selectors.

<CopySelectors>

    <CopySelector>BG_STATUS !in Fixed,Closed,Rejected</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>BG_STATUS !in Fixed,Closed,Rejected</UpdateSelector>

</UpdateSelectors>

Multi-word values with spaces are allowed, as well as trailing spaces after a comma as in this example:

<CopySelectors>

    <CopySelector>RQ_REQ_PRIORITY in 3-High, 4-Very High, 5-Urgent</CopySelector>

</CopySelectors>

Between and !between operators select work items where a specific field falls within a certain range, where both ends of
the range are included. The range selectors are intended to work with Date fields (for example, BG_DETECTION_DATE
in Micro Focus ALM/Quality Center, CreationDate in Rally) or integer values (for example, BG_ESTIMATED_TIME in
Micro Focus ALM/Quality Center)

Here is an example of Copy and Update Selectors in <RallyConnection> section of a configuration file that limit a copy
and update service from Rally to Micro Focus ALM/Quality Center to stories created within a certain date range:

<CopySelectors>

    <CopySelector>CreationDate between 2016-07-05 and  2016-07-06</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>CreationDate between 2016-07-05 and  2016-07-06</UpdateSelector>

</UpdateSelectors>

A variation of the range selector that uses !between operator will select only stories that were created on either side of the
date range:

 805



 Rally®

<CopySelectors>

    <CopySelector>CreationDate !between 2016-07-05 and  2016-07-06</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>CreationDate !between 2016-07-05 AND 2016-07-06</UpdateSelector>

</UpdateSelectors>

Here is a CopySelector example for pulling artifacts with a specific Rally tag:

<CopySelectors>

    <CopySelector>Tags.Name = "Loritag1"</CopySelector>

</CopySelectors>

Selectors and Requirements
If you want to use a requirements folder in the CopySelectors, you must surround your condition with ^ characters and you
must enclose the whole expression in parentheses. You must also fully qualify the path to your requirements folder. See
the example below.

If you are unfamiliar with how filters are defined and expressed in Micro Focus ALM/Quality Center, consider the following.
In Micro Focus ALM/Quality Center, open the filter. Once you have expressed your conditions and the results are as you
desired, then select Copy Filter (the second from the left on the top of the Filter Requirements dialog). Paste this into a
text buffer in your preferred editor. It should look similar to the text below.

[Filter][Keep_Hierarchical]{

TableName:REQ,

ColumnName:RQ_FATHER_NAME,

LogicalFilter:\0000001e\^Requirements\SubChannel\Basement^,

VisualFilter:\0000001e\^Requirements\SubChannel\Basement^,

NO_CASE:

}

The parts that you need to be concerned with are the ColumnName, which in the example is RQ_FATHER_NAME and
the LogicalFilter value. For the LogicalFilter you should copy the portion bounded by the up-caret symbols (^). Be sure to
include the caret characters when you copy that portion.

In the <CopySelector> , use the RQ_FATHER_NAME as the field name and the portion of the LogicialFilter you copied
as the value. Once you have that in the <CopySelector> , enclose the caret-delimited logical value in parenthesis. An
example below illustrates the end product.

<Config>

    ....

    <QCConnection>

        ....

        <CopySelectors>

            <CopySelector>RQ_FATHER_NAME = (^Requirements\SubChannel\Basement^)</CopySelector>

        </CopySelectors>

        ....

Map Micro Focus ALM/Quality Center Markup Fields
Some fields in Micro Focus ALM/Quality Center contain rich text (basically html markup metadata) to achieve bolding,
underlining, bulleting, and so on. This rich text is usually different between Micro Focus ALM/Quality Center and Rally.

When copying these type of fields from Rally to Micro Focus ALM/Quality Center, the <QCRtfFieldHandler> can be
used to instruct the connector to translate most of this metadata. This <QCRtfFieldHandler> can be used on mapping
fields such as:

 806



 Rally®

• BG_DESCRIPTION
• BG_DEV_COMMENTS
• RQ_REQ_COMMENT
• TS_DESCRIPTION

An example of mapping BG_DESCRIPTION:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>Description</Rally><Other>BG_DESCRIPTION</Other></Field>

            ....

        </FieldMapping>

        <OtherFieldHandlers>

            <QCRtfFieldHandler>

                <FieldName>BG_DESCRIPTION</FieldName>

            </QCRtfFieldHandler>

            ....

        </OtherFieldHandlers>

If mapping more than one field for the <QCRtfFieldHandler> split out the fields as follows:

<Config>

    ....

    <Connector>

        <FieldMapping>

            <Field><Rally>Description</Rally><Other>BG_DESCRIPTION</Other></Field>

            <Field><Rally>Notes</Rally><Other>BG_DEV_COMMENTS</Other></Field>

            ....

        </FieldMapping>

        <OtherFieldHandlers>

            <QCRtfFieldHandler>

                 <FieldName>BG_DEV_COMMENTS</FieldName>

            </QCRtfFieldHandler>

            <QCRtfFieldHandler>

                 <FieldName>BG_DESCRIPTION</FieldName>

           </QCRtfFieldHandler>

            ....

        </OtherFieldHandlers>

Map Micro Focus ALM/Quality Center Attachments
The Micro Focus ALM/Quality Center connector has two different methods for mapping attachments:

Method 1: Copy the
Actual Micro Focus
ALM/Quality Center

Attachments to Rally
as an Attachment

Copy actual attachments between Rally and Micro Focus ALM/Quality Center with the
<RallyAttachmentLinker/> option in the configuration file as follows:

<Config>

    ....

    <Connector>

        ....

        <RelatedObjectLinkers>

            <RallyAttachmentLinker />

        </RelatedObjectLinkers>

 807



 Rally®

        ....

Rally attachments are limited to 50 MB. If a Micro Focus ALM/Quality Center attachment is larger than
50 MB, it will not be copied from Micro Focus ALM/Quality Center to Rally. In such cases, you may use
one of the methods below for mapping attachments, which creates a link (URL) in Rally that points to the
attachment location in the Micro Focus ALM/Quality Center system (no attachment is created in the Rally
system, just a URL). The <RallyAttachmentLinker/> supports bi-directional mapping between
Micro Focus ALM/Quality Center and Rally. The URL mapping is supported in the Micro Focus ALM/Quality
Center to Rally direction only.

NOTE
If adding attachments, the user running the connector must have write access to all projects
in the project hierarchy specified in the configuration file's <Project> tag under the
<RallyConnection> section, all the way to the root project in Rally.

Method 2: Micro Focus
ALM/Quality Center

12 - Create a URL Link

For Micro Focus ALM/Quality Center attachments to be accessible when viewing the corresponding artifact
(story, defect, test) in Rally, you can create a URL in Rally which points back to the original attachment in
the Micro Focus ALM/Quality Center system.

Micro Focus ALM/Quality Center 12 stores attachments in a collection of folders on the Micro Focus ALM/
Quality Center server. It also offers a REST API which permits a straightforward and deterministic way of
referencing those attachments as URL links.

NOTE

• The Micro Focus ALM/Quality Center connector supports this capability for the bug,
requirement, and test items only.

• Micro Focus ALM/Quality Center 12 users will need to enable Web Client for the User
Groups to access the Attachments. To do this: Navigate to Tools, Customize, Groups and
Permissions, and select Web client access option for the user group.

• This mapping is only supported in the Micro Focus ALM/Quality Center 12 to Rally direction.

WARNING
Micro Focus ALM/Quality Center supports client access from Microsoft Edge. The link to view
attachments only works when using Microsoft Edge to access Rally.

To use this feature, create a custom field in Rally of type Text, which will be used to store the references
(URL links) to the attachments (the custom field name in the example below is Micro Focus ALM/Quality
Center 12 attachments). Then use the <QCUrlAttachmentFieldHandler> to handle mapping
between Micro Focus ALM/Quality Center 12 and Rally as follows:

      <Config>

      ....

      <Connector>

      <FieldMapping>

      <Field>

        <Rally>QCAttachmentsTextField</Rally>

        <Other>BG_ATTACHMENT</Other>

        <Direction>TO_RALLY</Direction>

      </Field>

      ....

      <OtherFieldHandlers>

      <QCUrlAttachmentFieldHandler>

        <FieldName>BG_ATTACHMENT</FieldName>

      </QCUrlAttachmentFieldHandler>

      ....

The QCUrlAttachmentFieldHandler stores links in the following format:

<a href='http://qcserver/qcbin/rest/domains/yourdomain/projects/

 808



 Rally®

                /yourproject/defects/44/attachments/

YourAttachedFile.docx'>YourAttachedFile.docx</a>

Map Dates
Micro Focus ALM/Quality Center has a set of date fields for artifacts where the format is a string composed of a date, but
equivalent fields in Rally may be in a string composed of date and time. There are two field handlers which facilitate this
movement of date fields: <QCDatetimeToDateFieldHandler> and <RallyDateTimeFieldHandler> .

We recommend using this field handler for the following standard Micro Focus ALM/Quality Center mapping fields:

• BG_CLOSING_DATE
• BG_DETECTION_DATE
• RQ_REQ_DATE
• TS_CREATION_DATE

An example configuration file snippet for date mapping:

<Config>

....

<Connector>

<FieldMapping>

<Field>

  <Rally>CreationDate</Rally>

  <Other>BG_DETECTION_DATE</Other>

  <Direction>TO_OTHER</Direction>

</Field>

....

<OtherFieldHandlers>

<QCDatetimeToDateFieldHandler>

  <FieldName>BG_DETECTION_DATE</FieldName>

</QCDatetimeToDateFieldHandler>

....

In Rally, the CreationDate is a read-only field. It is on an artifact, put there by the underlying database and therefore the
user can not modify this field. In the example above, we have placed a <Direction> tag. While the tag is not actually
required in this instance, we use it to reinforce the fact that this field can never be modified by the user in Rally. If a
configuration file maps into this Rally field, it will be ignored (no data is copied or updated in this Rally field).

When doing bi-directional movements of date fields, use both field handlers as in the following example:

<Config>

....

<Connector>

  <FieldMapping>

    <Field>

      <Rally>Name</Rally>

      <Other>BG_SUMMARY</Other>

    </Field>

    <Field>

      <Rally>TargetDate</Rally>

      <Other>BG_CLOSING_DATE</Other>

    </Field>

  </FieldMapping>

  <OtherFieldHandlers>

    <QCDatetimeToDateFieldHandler>

 809



 Rally®

      <FieldName>BG_CLOSING_DATE</FieldName>

    </QCDatetimeToDateFieldHandler>

  </OtherFieldHandlers>

  <RallyFieldHandlers>

    <RallyDateTimeFieldHandler>

      <FieldName>TargetDate</FieldName>

      <!-- TargetDate(2012-08-25T06:00:00.000Z) -->

      <DateTimeFormat>%Y-%m-%dT%H:%M:%S.%LZ</DateTimeFormat>

    </RallyDateTimeFieldHandler>

  </RallyFieldHandlers>

</Connector>

....

Map TS_NAME
Micro Focus ALM/Quality Center has a set of forbidden characters when creating a name for a test. Use a field handler for
TS_NAME which will remove the forbidden characters when pushing updates or creates from Rally to Micro Focus ALM/
Quality Center.

If the UPDATE_OTHER_TO_RALLY service is also specified, the new updated name from Micro Focus ALM/Quality
Center will change the Rally name to the Micro Focus ALM/Quality Center name which contains none of the forbidden
characters.

<Config>

    ....

    <Connector>

    ....

        <OtherFieldHandlers>

            <QCNameFieldHandler>

                <FieldName>TS_NAME</FieldName>

            </QCNameFieldHandler>

            ....

For TS_NAME, the following characters are removed:

Character Symbol

Backslash \
Slash /
Colon :
Quote "
Question mark ?
Single quote '
Less than sign <
Greater than sign >
Vertical bar |
Asterisk *
Percent %

 810



 Rally®

Map RQ_REQ_NAME
Micro Focus ALM/Quality Center has a set of forbidden characters when creating a name for a requirement. Use a field
handler for RQ_REQ_NAME which will remove the forbidden characters when pushing updates or creates from Rally to
QC.

If the UPDATE_OTHER_TO_RALLY service is also specified, the new updated name from QC will change the Rally name
to the QC name which contains none of the forbidden characters.

<Config>

  ....

    <Connector>

      ....

      <OtherFieldHandlers>

        <QCNameFieldHandler>

        <FieldName>RQ_REQ_NAME</FieldName>

      </QCNameFieldHandler>

      ....

For RQ_REQ_NAME, the following characters are removed:

Character Symbol

Backslash \
Caret or Circumflex ^
Asterisk *

Map TS_LINKED_REQ and BG_LINKED_REQ
In Micro Focus ALM/Quality Center, requirements can be linked to bugs and test cases. In Rally, a similar relationship is
possible, but these relationships are not preserved by default.

Micro Focus ALM/Quality Center tracks linkages in a separate table between requirements and defects. Rally tracks the
relationship using the Requirement field on defects and the WorkProduct field on test cases. Therefore, Micro Focus ALM/
Quality Center can link a test or defect to more than one requirement, while Rally only links either a test case or a defect
to one user story.

You can set up a mapping which will preserve the relationship of a test or defect when moving data from Micro Focus
ALM/Quality Center to Rally only. Relationships from Rally to Micro Focus ALM/Quality Center are not supported.

The <QCReqLinkFieldHandler> is available to help preserve the linkage of a bug or test to a requirement when that
requirement has also been reflected by the connector. This field handler searches the link table for a bug or test for linked
requirements. The first requirement that has a Rally ID will be used to link a defect or test case in Rally.

Current functionality does not support linking a test case to a defect.

To configure the field handler, your field mappings section must have either TS_LINKED_REQ or BG_LINKED_REQ
mapped.

For test to story:

<Config>

  ....

  <Connector>

  <FieldMapping>

  <Field>

    <Rally>WorkProduct</Rally>

    <Other>TS_LINKED_REQ</Other>

    <Direction>TO_RALLY</Direction>

 811



 Rally®

  </Field>

  ....

  <OtherFieldHandlers>

  <QCReqLinkFieldHandler>

    <FieldName>TS_LINKED_REQ</FieldName>

    <ReqRallyIDField>RQ_USER_NN</ReqRallyIDField>

  </QCReqLinkFieldHandler>

  ....

  <RallyFieldHandlers>

  <RallyReferenceFieldHandler>

    <FieldName>WorkProduct</FieldName>

    <ReferencedFieldLookupID>ObjectID</ReferencedFieldLookupID>

  </RallyReferenceFieldHandler>

  ....

For the <ReqRallyIDField> above, specify the custom field you created in Micro Focus ALM/Quality Center
to contain the ID of the Rally user story (RQ_USER_nn in the above example). This should be the same as the
<ExternalIDField> field in the configuration file which was previously used to copy the requirements to user stories.

For defect to story:

<Config>

  ....

  <Connector>

  <FieldMapping>

  <Field>

    <Rally>Requirement</Rally>

    <Other>BG_LINKED_REQ</Other>

    <Direction>TO_RALLY</Direction>

  </Field>

  ....

  <OtherFieldHandlers>

  <QCReqLinkFieldHandler>

    <FieldName>BG_LINKED_REQ</FieldName>

    <ReqRallyIDField>RQ_USER_NN</ReqRallyIDField>

  </QCReqLinkFieldHandler>

  ....

  <RallyFieldHandlers>

  <RallyReferenceFieldHandler>

    <FieldName>Requirement</FieldName>

    <ReferencedFieldLookupID>ObjectID</ReferencedFieldLookupID>

  </RallyReferenceFieldHandler>

  ....

For the <ReqRallyIDField> above, specify the custom field you created in Micro Focus ALM/Quality Center
to contain the ID of the Rally user story (RQ_USER_nn in the above example). This should be the same as the
<ExternalIDField> field in the configuration file which was previously used to copy the requirements to user stories.

NOTE
The connector will log a warning if multiple requirements are linked to a test or defect when this field handler
runs.

Map Reference Fields from Micro Focus ALM/Quality Center
The field handler <QCReferenceFieldHandler> enables the mapping from Micro Focus ALM/Quality Center to Rally
only. Rally to Micro Focus ALM/Quality Center is not supported by this field handler.

 812



 Rally®

This field handler supports the following Micro Focus ALM/Quality Center fields being mapped to Rally:

• BG_DETECTED_IN_RCYC
• BG_DETECTED_IN_REL
• BG_TARGET_RCYC
• BG_TARGET_REL
• RQ_TARGET_RCYC
• RQ_TARGET_REL
• RN_ASSIGN_RCYC
• TC_ASSIGN_RCYC

In the following example, the <QCReferenceFieldHandler> field handler is used to extract the Name from a Micro
Focus ALM/Quality Center object.

<Config>

  ....

  <Connector>

    <FieldMapping>

      <Field>

        <Rally>Release</Rally>

        <Other>BG_DETECTED_IN_REL</Other>

        <Direction>TO_RALLY</Direction>

      </Field>

      ....

    <OtherFieldHandlers>

        <QCReferenceFieldHandler>

          <FieldName>BG_DETECTED_IN_REL</FieldName>

        </QCReferenceFieldHandler>

      ....

Map Rally Test Result to Test Case (Required for Runs)
When copying a Micro Focus ALM/Quality Center run to a Rally test case result, a Rally test case result must be created
with an association to a test case. When a new run is found in Micro Focus ALM/Quality Center, the connector finds the ID
for the associated test in Micro Focus ALM/Quality Center if the field mapping is set up correctly.

For example:

<Field>

  <Rally>TestCase</Rally>

  <Other>RN_TEST_ID</Other>

</Field>

The connector then uses the RN_TEST_ID value to look up the linked test case in Rally based on this ID. Consequently,
the connector needs to know which custom field on the Rally test case holds the QC Test unique ID. Once the custom
field name is known, add a RallyReferenceFieldHandler for test case. This example uses ExternalID for the Rally custom
field name.

<Config>

    ....

    <Connector>

      <RallyFieldHandlers>

          <RallyReferenceFieldHandler>

              <FieldName>TestCase</FieldName>

              <ReferencedFieldLookupID>ExternalID</ReferencedFieldLookupID>

          </RallyReferenceFieldHandler>

 813



 Rally®

          ....

      </RallyFieldHandlers>

    ....

Map Run Dates (Required for Runs)
The Date field on a Rally test case result object is a required field (and it is ISO 8601 UTC compliant). However, on
a Micro Focus ALM/Quality Center run object the date is represented in two fields: RN_EXECUTION_DATE and
RN_EXECUTION_TIME.

To support the mapping of a QC run date to a Rally test case result date, use the field handler
<QCRunDateFieldHandler> within the <OtherFieldHandlers> section. For example:

<Config>

  <RallyTestResultConnection> ....

    <ArtifactType>TestCaseResult</ArtifactType>

  </RallyTestResultConnection>

  <QCRunConnection> ....

    <ArtifactType>RUN</ArtifactType>

    <IDField>RN_RUN_ID</IDField>

    <!-- By default, the connector will only "look back" 1 day for new QC Runs to be

                     copied to Rally TestCaseResults (and associated with a Rally TestCase).

                     Use the following XML tag to change the number of days to search.

                -->

    <RunDaysToSearch>4</RunDaysToSearch>

  </QCRunConnection>

  <Connector>

    <FieldMapping>

      <Field>

        <Rally>Date</Rally>

        <Other>RN_EXECUTION_DATE</Other>

      </Field>

      <Field>

        <Rally>TestCase</Rally>

        <Other>RN_TEST_ID</Other>

      </Field>

      ....

    </FieldMapping>

    <RallyFieldHandlers>

      <RallyReferenceFieldHandler>

        <FieldName>TestCase</FieldName>

        <ReferencedFieldLookupID>TCExternalID</ReferencedFieldLookupID>

      </RallyReferenceFieldHandler>

    </RallyFieldHandlers>

    <OtherFieldHandlers>

      <QCRunDateFieldHandler>

        <FieldName>RN_EXECUTION_DATE</FieldName>

      </QCRunDateFieldHandler>

      ....

    </OtherFieldHandlers>

    ....

  </Connector>

  <ConnectorRunner>

    ....

 814

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#TestCaseResult


 Rally®

  </ConnectorRunner>

</Config>

Map Rally Test Case to Rally Story (Optional for Tests)
To track the Micro Focus ALM/Quality Center test status on stories in Rally, the Micro Focus ALM/Quality Center tester
can enter the formatted ID of the Rally story on the test in Micro Focus ALM/Quality Center. Add a field mapping and
<RallyReferenceFieldHandler> to support this feature.

First, the configuration file for tests will need to map the Rally story (WorkItem) to the Micro Focus ALM/Quality Center
user field that stores the formatted ID.

<Field>

  <Rally>WorkItem</Rally>

  <Other>TS_USER_xx</Other>

</Field>

Second, add a <RallyReferenceFieldHandler> to the <RallyFieldHandlers> section that informs the connector
to find the story by FormattedID.

<Config>

  ....

  <RallyFieldHandlers>

  <RallyReferenceFieldHandler>

    <FieldName>WorkItem</FieldName>

    <ReferencedFieldLookupID>FormattedID</ReferencedFieldLookupID>

  </RallyReferenceFieldHandler>

  ....

Multiple Configuration Files
There are times when setting up multiple configuration files is necessary.

For example:

• Map more than one workspace in Rally
• Map multiple artifact types
• Map to or from multiple containers in the other system (such as domains or projects in Micro Focus ALM/Quality

Center, which would require a unique Rally custom field for the ExternalID of each container being used)

Naming the configuration files using descriptive names makes for easier troubleshooting.

To run multiple instances of the connector for different configuration files, invoke it multiple times, using one configuration
file each time as follows:

rally2_hpalm_connector.rb  alpha_project_config.xml the_omega_stories_config.xml -1

The above commands could be placed in a BAT file for easier invocation.

XML Tags

The following sections describe the available XML tags.

TIP
Incrementally set up the connector! Start with a basic configuration file, test that you can connect to Micro
Focus ALM/Quality Center and Rally in a test environment. Once you validate this is set up correctly, then start
customizing the field mapping and field handler sections.

 815



 Rally®

NOTE
Escape special characters contained in a Rally workspace or project name that are markup sensitive. For
example:

& ampersand becomes &amp;

> greater than becomes &gt;

< less than becomes &lt;

Example: Research & Development becomes Research &amp; Development

XML Tags in the <RallyConnection> Section
<RallyConnection> Required. Opening parent tag for this section.

<Url> Required. Server used to connect to Rally (excluding any http prefix and /slm suffix, as the connector will
add these to whatever is specified).

Sample values:

• sandbox.rallydev.com
• rally1.rallydev.com
• myRally.mydomain.com
• 192.168.23.24

<WorkspaceName> Required. Workspace in Rally where you want to copy or update work items. Special characters in this field
must be escaped as in: & must be entered as &amp;, > must be entered as &gt;, < must be entered as &lt;,
and so on.

Sample values:

• My Workspace
• Dog &amp; Pony WS

<Projects> Required. Contains a list of project tags. Each tag refers to one Rally project that will be used when finding
new Rally work items to copy to the other system. For updating work items from Rally to the other system,
all projects in <WorkspaceName> are considered. At least one Rally project must be specified in this tag.
Special characters in this field must be escaped: & must be entered as &amp;, > must be entered as &gt;, <
must be entered as &lt;, and so on.

Sample values:

<Project>Rally1</Project>

<Project>Rally2</Project><

<Project>P3&amp;4</Project>

<User> Required. Login name of user to make the Web Services requests to create and update work items in Rally.

Sample value: user@company.com

<Password> Required. Password associated with the <User>

NOTE
The connector will encode this password string and update it in the configuration file to avoid
clear-text passwords being stored.

Sample value: mypassword

<APIKey> Rally APIKey (from Rally Application Manager) for the account to be used to access Rally from the
connector. If this is specified, you do not need to supply a username and password. You do not need to add
the user associated with the given APIKey value to the list of allowed users.

Sample value: ABC123plmokn43315...

<ArtifactType> Required. Type of artifact you want to create or update in Rally.

 816



 Rally®

Sample values:(Defect, defect), (story, user story, hierarchical requirement), test case, test case result

<ExternalIDField> Required. Rally custom string field (name and display name must be identical) that stores the unique ID for
the other system. See Create an ExternalID Field in Rally.

Sample value: QCID

<SuppressDeprecationWarning /
>

Changes the WARN message about Rally WSAPI version deprecation in the logfile to an INFO message.

<CopySelectors> Criteria to use when finding new Rally issues to copy to Micro Focus ALM/Quality Center. An individual
selector specification has the form:

<field><relation><value>,

where:

• <field> is the name of a Rally artifact field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>.

See FAQ section for more details.

You can have multiple CopySelector criteria within the CopySelectors. All given CopySelector conditions
are ANDed together.

<CopySelectors>

    <CopySelector>expression

    </CopySelector>

    [....]

</CopySelectors>

Sample value:
<CopySelector>

     Status = Open

</CopySelector>

<CopySelector>

     Priority = Low

</CopySelector>

<UpdateSelectors> Criteria to use when finding existing Rally issues to be updated in Micro Focus ALM/Quality Center. An
individual selector specification has the form:

<field> <relation> <value>, where:

• <field> is the name of a Rally artifact field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>.

See FAQ section for more details.

You can have multiple UpdateSelector criteria within the UpdateSelectors. All given CopySelector
conditions are ANDed together.

<UpdateSelectors>

    <UpdateSelector>expression

    </UpdateSelector>

    [....]

</UpdateSelectors>

Sample value:
<UpdateSelector>

    Release != alpha

 817



 Rally®

</UpdateSelector>

<FieldDefaults> Used when the destination system has a required field, but the field is not going to be mapped in the
configuration file. This will cause field F1 to be set to value of V1.

NOTE
Valid for COPY of artifacts only. Not valid for UPDATE service.

<FieldDefaults>

    <Field>

        <Name> F1 </Name>

        <Default> V1 </Default>

    </Field>

    [....]

</FieldDefaults>

Learn more in How to Map Fields.

</RallyConnection> Required. Closing parent tag for this section.

XML Tags in the <QCConnection> Section
<QCConnection> Required. Opening parent tag for this section.

<Url> Required. Micro Focus ALM/Quality Center server name (or IP address) and port. Syntax: Normally just the
server:port is needed. For https (such as accessing a SaaS QC server), use https://server:443/qcbin

Sample values:

• QCserverLocal:8080
• https://QCserverSaaS:443/qcbin

<User> Required. Username used make the API requests to create or update entities in Micro Focus ALM/Quality
Center.

Sample value: myuser

<Password> Required. Password of user making the API request to create or update entities in Micro Focus ALM/
Quality Center.

NOTE
The first time the connector runs, it will encode (which is not the same as encryption) this
password and re-write the configuration file to avoid plain text passwords being stored.

Sample value: mypassword

<Domain> Required. Name of domain that you want to connect to in Micro Focus ALM/Quality Center.

Sample value: My Domain

<Project> Required. Name of project to be used in Micro Focus ALM/Quality Center.

Sample value: My Project

<ArtifactType> Required. Entity name of the entities you want to create or update in Micro Focus ALM/Quality Center.

Sample values: BUG, REQ, RUN,TEST

<TestFolder> Name of the Test Plan folder under Subjects in which to place newly copied tests in Micro Focus ALM/
Quality Center. This folder must exist prior to running the connector.

Sample values: Iteration1, UI-Responsiveness

<TestFolderID> ID of the Test Plan folder under Subjects in which to place newly copied tests in Micro Focus ALM/Quality
Center. This folder must exist prior to running the connector. This can also be used to specify the folder to
be selected for a copy from Micro Focus ALM/Quality Center to Rally. This can be helpful when there are
duplicate Test Plan folder names. See here for how to find the TestFolderID value.

 818

https://community.microfocus.com/t5/Quality-Center-ALM-User/Folder-ID-in-Test-Plan/td-p/944184


 Rally®

NOTE
Used in place of <TestFolder>.

Sample value: 1004

<RequirementType> Requirement type to set for requirements created in Micro Focus ALM/Quality Center. Only applicable when
the <ArtifactType> value is REQ.

Sample values: Business, Folder, Functional, Group, Testing, Undefined or your
<custom_defined_req_type>

<RequirementFolder> Name of the folder under the Micro Focus ALM/Quality Center requirements root folder where requirements
are copied or updated to. This will have no effect on copying requirements out of QC to Rally. Only
applicable when the <ArtifactType> value is REQ. The default is to place copied requirements
directly in the requirements root folder. This folder must exist prior to running the connector (also see
RequirementFolderID).

Sample values: Release1, Southwest, Regulatory

<RequirementFolderID> The ID of the folder under the Micro Focus ALM/Quality Center requirements root folder where
requirements are copied or updated to. This will have no effect on copying requirements out of QC to
Rally. Only applicable when the <ArtifactType> value is REQ. The default is to place copied requirements
directly in the requirements root folder. This folder must exist prior to running the connector. This is
useful when there are duplicate folder names in your Micro Focus ALM/Quality Center project (also see
RequirementFolder).

Sample values: 123, 456

<IDField> Required. Micro Focus ALM/Quality Center field used to store the unique ID of a bug, usually BG_BUG_ID.

Sample value: BG_BUG_ID

<ExternalIDField> Required. A custom user field in Micro Focus ALM/Quality Center of type string used to store the unique ID
(ObjectID) for the Rally work item. See Create an ExternalID User Field in Micro Focus ALM/Quality Center.

Sample value: BG_USER_01

<ExternalEnd
UserIDField>

A custom user field in Micro Focus ALM/Quality Center of type string used to store the FormattedID of the
Rally work item (DExx). See Create an ExternalID User Field in Micro Focus ALM/Quality Center.

Sample value: BG_USER_02

<CrosslinkUrlField> Micro Focus ALM/Quality Center custom field (String field types) containing html text information to the
corresponding artifact in Rally. Only populates during copy.

Sample value: RallyURL

<CopySelectors> Criteria to use when finding new Micro Focus ALM/Quality Center issues to copy to Rally. Multiple criteria
are ANDed together. An individual selector specification has the form:
<field> <relation> <value>

where:

• <field> is the name of a Micro Focus ALM/Quality Center item field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

<CopySelectors>

    <CopySelector>expression

    </CopySelector>

    [....]

</CopySelectors>

Sample value:

 819



 Rally®

<CopySelector>

     BG_STATUS = Open

</CopySelector>

<CopySelector>

     BG_PRIORITY = High

</CopySelector>

For more information about the CopySelectors allowed in Micro Focus ALM/Quality Center, see
CopySelector and UpdateSelector.

<UpdateSelectors> Criteria to use when finding existing Micro Focus ALM/Quality Center issues to be updated in Rally. Multiple
criteria are ANDed together. An individual selector specification has the form:
<field> <relation> <value>

where:

• <field> is the name of a Micro Focus ALM/Quality Center item field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

<UpdateSelectors>

     <UpdateSelector>expression 

     </UpdateSelector>

     [....]

</UpdateSelectors>

Sample value:
<UpdateSelector>

     BG_TARGET_REL != alpha

</UpdateSelector>

For more information about the UpdateSelectors allowed in Micro Focus ALM/Quality Center, see
CopySelector and UpdateSelector.

<FieldDefaults> Used when the destination system has a required field, but the field is not going to be mapped in the
configuration file. This will cause field F1 to be set to value of V1. Valid for COPY of artifacts only. Not valid
for UPDATE service.
<FieldDefaults>

     <Field>

          <Name> F1 </Name>

          <Default> V1 </Default>

     </Field>

     [....]

</FieldDefaults>

See more information in FAQ under Map Required Fields.

</QCConnection> Required. Closing parent tag for this section.

XML Tags in the <Connector> Section
<Connector> Required. Opening parent tag for this section.

<FieldMapping> Required. Specifies which fields are to be mapped between the two systems.

See Field Mapping.

<OtherFieldHandlers> (opening tag)
<OtherUserF
ieldHandler>

For mapping usernames between systems. The <FieldName> is the name of the field in Micro Focus ALM/
Quality Center. See Map User Names section of the FAQ.

 820



 Rally®

<OtherUserFieldHandler>

    <FieldName> name-of-field </FieldName>

    <Domain> CompanyName.com </Domain>

</OtherUserFieldHandler>

Sample value: Bug_Owner

<OtherEnum
FieldHandler>

Allows for the mapping of non-alike, drop-down values between the two systems.
<OtherEnumFieldHandler>

    ....

</OtherEnumFieldHandler>

See Map Drop-Down Values.

<OtherConditionalE
numFieldHandler>

Similar to the <OtherEnumFieldHandler> except with this one only the exceptions need to be declared.
Corresponding entries in the pull-down lists of both system which are identical, need not be declared.
<OtherConditionalEnumFieldHandler>

    ....

</OtherConditionalEnumFieldHandler>

<OtherConcat
FieldHandler>

Using the contents of Dest-field as the initial string, appends each additional Src-fieldN to Dest-field, using
HTML break tags (<br />) to separate each additional field value.
<OtherConcatFieldHandler>

    <FieldName>Dest-field

    </FieldName>

    <ConcatFields>

        <Field>Src-field1</Field>

        <Field>Src-field2</Field>

        <Field>.....</Field>

    </ConcatFields>

</OtherConcatFieldHandler>

Sample value:

BG_DEV_COMMENTS

BG_DESCRIPTIONBG_USER_02

.....

<QCUrlAttachme
ntFieldHandler>

Stores a link in the Rally artifact to the Micro Focus ALM/Quality Center 12 attachment. See Map QC
Attachments.
<QCUrlAttachmentFieldHandler>

    <FieldName> name-of-field </FieldName>

</QCUrlAttachmentFieldHandler>

Sample values:

• BG_ATTACHMENT
• RQ_ATTACHMENT

<QCRtfFieldHandler> Converts some of the rich text (html) metadata in the Rally field to a more suitable QC version. See Map
QC Markup Fields.
<QCRtfFieldHandler>

    <FieldName> name-of-field </FieldName>

</QCRtfFieldHandler>

Sample values:

 821



 Rally®

• BG_DESCRIPTION
• BG_DEV_COMMENTS
• RQ_REQ_COMMENT
• TS_DESCRIPTION

<QCUserEmai
lFieldHandler>

Paired with <RallyUserEmailFieldHandler>.

Given a QC username, it returns the email address for that QC user, which is to be handed to the
<RallyUserEmailFieldHandler> (and vice versa).

<QCUserEmailFieldHandler>

    <FieldName>name-of-field 

    </FieldName>

</QCUserEmailFieldHandler>

Valid values for name-of-field: Any field of type Owner (such as BG_RESPONSIBLE, RQ_REQ_AUTHOR,
TS_RESPONSIBLE, RN_TESTER_NAME).

<QCRunDate
FieldHandler>

<QCRunDateFieldHandler>

    <FieldName> name-of-field </FieldName>

</QCRunDateFieldHandler>

Sample value: RN_EXECUTION_DATE

<QCTestplanFol
derFieldHandler>

<QCTestplanFolderFieldHandler>

    <FieldName>name-of-field 

    </FieldName>

</QCTestplanFolderFieldHandler>

Sample value: TS_SUBJECT

</OtherFieldHandlers> (closing tag)
<RallyFieldHandlers> (opening tag)

<RallyReferenceAttribu
teLookupFieldHandler>

Used to map a field from an object. See Mapping Reference Fields from Rally.
<RallyReferenceAttributeLookupFieldHandler>

    <FieldName>name-of-field

    </FieldName>

    <ReferencedFieldLookupID>name-of-object

    </ReferencedFieldLookupID>

</RallyReferenceAttributeLookupFieldHandler>

Sample values:

• name-of-field: TestSet
• name-of-object: Name

<RallyUserF
ieldHandler>

Used to map usernames. See Map User Names.
<RallyUserFieldHandler>

    <FieldName> name-of-object 

    </FieldName>

    <ReferencedFieldLookupID>name-of-field 

    </ReferencedFieldLookupID>

</RallyUserFieldHandler>

Sample values:

• name-of-object: User,Owner,Tester
• name-of-field: Name,FormattedID

<RallyUserEma
ilFieldHandler>

Paired with <QCUserEmailFieldHandler>.

Given a Rally user's email address, it returns the Rally user (and vice versa).

 822



 Rally®

<RallyUserEmailFieldHandler>

    <FieldName>name-of-field 

    </FieldName>

</RallyUserEmailFieldHandler>

Valid values for name-of-field: User, Owner, SubmittedBy, Tester

<RallyDateTim
eFieldHandler>

Bi-directional.

Rally to Other: Convert the Rally ISO date in field F1 into a date string formatted as specified by the string
S1 (as per Ruby's DateTime.strftime function) and store this new date string into the field F1 is mapped to.

Other to Rally: The date string contained in the field which F1 is mapped to, is converted into a Rally ISO
date (in accordance with Ruby's DateTime.parse) and stored in Rally's F1 field. Note that string S1 is not
used in this case.

<RallyDateTimeFieldHandler>

    <FieldName> F1 </FieldName>

    <DateTimeFormat> S1 </DateTimeFormat>

</RallyDateTimeFieldHandler>

Sample values:

• F1: TestDate
• S1: %m-%d-%Y%H:%M:%S

<RallyEnumF
ieldHandler>

Allows for the mapping of non-alike, drop-down values between the two systems.

See Map Drop-Down Values.

<RallyEnumFieldHandler>

    ....

</RallyEnumFieldHandler>

<RallyTestFold
erFieldHandler>

See example at QC-config-CopyTests2TestCases.pxml
<RallyTestFolderFieldHandler>

    <FieldName>name-of-folder 

    </FieldName>

</RallyTestFolderFieldHandler>

Sample value: TestFolder

<RallyConcat
FieldHandler>

Using the contents of Dest-field as the initial string, appends each additional Src-fieldN to Dest-field, using
HTML break tags (<br />) to separate each additional field value.
<RallyConcatFieldHandler>

    <FieldName>Dest-field 

    </FieldName>

    <ConcatFields>

        <Field>Src-field1</Field>

        <Field>Src-field2</Field>

        <Field>.....</Field>

    </ConcatFields>

</RallyConcatFieldHandler>

Sample value:

Some custom field

Descriptionsome other field

.....

 823

http://www.ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/DateTime.html#method-i-strftime
http://www.ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/DateTime.html#method-c-parse
https://knowledge.broadcom.com/external/article?articleId=125059


 Rally®

<RallyCSVUserMap
pingFieldHandler>

Specifies the name of a field being mapped (name-of-field) and a CSV file where user mappings are stored
(name-of-file). The CSV file is used to lookup and transform usernames based on the mappings specified
within. This is case sensitive. See a more detailed explanation on the FAQ page or an example XML file.
<RallyCSVUserMappingFieldHandler>

    <FieldName>name-of-field 

    </FieldName>

    <FileName>name-of-file 

    </FileName>

</RallyCSVUserMappingFieldHandler>

Sample values: SubmittedBy, MyUserMappings.csv

<RallyBoolean
FieldHandler>

Specifies the mapping of Rally Boolean fields to Micro Focus ALM/Quality Center fields. Works in both
directions. See a more detailed explanation on the FAQ page.
<RallyBooleanFieldHandler>

    <FieldName>name-of-Rally-field 

    </FieldName>

    <Mappings>

        <Field><Rally>false</Rally>

               <Other>HP-ALM-field-value</Other></Field>

        <Field><Rally>true</Rally>

               <Other>HP-ALM-field-value</Other></Field>

    </Mappings>

</RallyBooleanFieldHandler>

<RallyTruncat
eFieldHandler>

Can truncate incoming Rally data to 32000 characters. This works well with the Description field.
<RallyTruncateFieldHandler>

    <FieldName>name-of-Rally-field 

    </FieldName>

</RallyTruncateFieldHandler>

</RallyFieldHandlers> (closing tag)
<RelatedObjectLinkers> Opening tag. Used for more complex mappings of fields.

<RallyAttach
mentLinker/>

Used to copy attachments between QC and Rally (bi-directional). Can be used on any object which
supports attachments (in Rally: tasks, defects, stories, and tests; in QC: requirements, defects, and tests).
For more information, see Map QC attachments.

<QCReqtoRallyTest
WorkProductLinker>

The name-of-field is the Rally custom field in the Req/Story configuration file.
<QCReqtoRallyTestWorkProductLinker>

    <RallyStoryFieldForQCReq>name-of-field 

    </RallyStoryFieldForQCReq>

</QCReqtoRallyTestWorkProductLinker>

Sample value: QCReqID

<RallyToQCTe
stStepLinker>

Used to COPY (Note: UPDATE is not supported) Rally test cases and steps to QC tests and test steps.

<ValidationStep> Tells the connector where to place the Rally Validation Input or Validation Expected Result in the list of
Micro Focus ALM/Quality Center test steps. If you do not want an extra empty step in the list of design test
steps in Micro Focus ALM/Quality Center, then omit this tag completely.
<ValidationStep>positional-name 

</ValidationStep>

Sample values: Last, First

<StepFields> See example QC-config-test-steps-01.pxml
<StepFields>

    <Field>

 824

https://knowledge.broadcom.com/external/article?articleId=125058
https://knowledge.broadcom.com/external/article?articleId=125046


 Rally®

        <Rally>name-of-field 

        </Rally>

        <Other>name-of-field 

        </Other>

    </Field>

    ...

</StepFields>

Sample values:

• Rally name-of-field: ExpectedResult
• Other name-of-field: DS_EXPECTED

</RallyToQCTe
stStepLinker>

Closing tag.

See example configurations file QC-config-test-steps-01.pxml

<QCToRallyTe
stStepLinker/>

Used to COPY (Note: UPDATE is not supported) QC tests and test steps to Rally test cases and steps.

See example configurations file QC-config-test-steps-02.pxml

</RelatedOb
jectLinkers>

Closing tag.

</Connector> Required. Closing parent tag for this section.

XML Tags in the <ConnectorRunner> Section
<ConnectorRunner> Required. Opening parent tag for this section.

<Preview> Allows you to enable a preview mode for testing where NO objects are copied or updated in either system.

Sample values:

• False (default)
• True

<LogLevel> Specifies the type of messages to be written to the log file. The highest level is Debug where all messages
are displayed.

Sample values:

• Fatal
• Error
• Warn
• Info (default)
• Debug

<Services> Required. Use the copy services to initially reflect items between systems, then use the update services to
keep those reflected items up to date.

The alternative update service searches Rally first for updates and pushes only the recently changed fields
to the other system. It then searches the other system for updates and pushes all mapped fields into Rally.
This reduces the occurrences of overwrites when changes have been made in both systems.

Sample values:

• Copy services:
– COPY_QC_TO_RALLY
– COPY_RALLY_TO_QC

• Update services:
– UPDATE_QC_TO_RALLY
– UPDATE_RALLY_TO_QC

• Alternative update service:

 825

https://knowledge.broadcom.com/external/article?articleId=125046
https://knowledge.broadcom.com/external/article?articleId=125047


 Rally®

– UPDATE_RALLYFIELDS_AND_OTHER (may not be used in conjunction with the other update
services)

<PostServiceActions> Instructs the connector to move the Rally user story hierarchy to a QC requirements hierarchy (one
direction only). Should not be used in the same configuration file as <MirrorQCStoryHierarchyInRally>.

Sample value:

<PostServiceActions>

    <MirrorStoryHierarchyInQC />

</PostServiceActions>

<PostServiceActions> Instructs the connector to move the QC requirement hierarchy to a Rally user story hierarchy (one direction
only). Should not be used in the same configuration file as <MirrorStoryHierarchyInQC>. This feature will
only work with: 1) the requirement artifact in QC, 2) the user story artifact in Rally, 3) a parent which has no
tasks.

By default, the QC requirements copied to Rally have the full QC folder pathname (starting at requirement).
To have the Rally folder named with a subset of the full pathname, you may give the starting point (folder
name) by specifying the top level folder ID within the <RootFolderID> element.

<PostServiceActions>

    <MirrorQCStoryHierarchyInRally>

        <RootFolderID>number</RootFolderID>

    </MirrorQCStoryHierarchyInRally>   

</PostServiceActions>

<Emailer> Opening tag for this feature which logfile messages to email.
<Emailer>

    <Level>value</Level>

    <SendEmailFrom>value</SendEmailFrom>

    <SendEmailTo>value</SendEmailTo>

    <SMTPServer>value</SMTPServer>

    <SMTPPort>value</SMTPPort>

    <SMTPUser>value</SMTPUser>

    <SMTPPassword>value</SMTPPassword>

    <SMTPSec>value</SMTPSec>

 </Emailer>

Sample values:
<Emailer>

    <Level>Error or Warning</Level>

    <SendEmailFrom>monitor@acme.com</SendEmailFrom>

    <SendEmailTo>monitor@acme.com</SendEmailTo>

    <SMTPServer>smtp.acme.com</SMTPServer>

    <SMTPPort>587</SMTPPort>

    <SMTPUser>Username@Domain.com</SMTPUser>

    <SMTPPassword>Password</SMTPPassword>

    <SMTPSec>TLS</SMTPSec>

</Emailer>

See example.

</ConnectorRunner> Required. Closing parent tag for this section.

XML Tags in the <RallyTestResultConnection> Section

These are the same as the <RallyConnection> section except the parent tag is <RallyTestResultConnection> .

 826



 Rally®

XML Tags in the <QCRunConnection> Section

This tag is used when dealing with tests in Micro Focus ALM/Quality Center. It supports all of the tags in the
<QCConnection> section, as well as the following tags:

<QCRunConnection> Required. Opening parent tag for this section.
<Url> Required. Micro Focus ALM/Quality Center server name (or IP address) and port.

Sample value: server.port

<Domain> Required. Name of the domain you want to connect to in Micro Focus ALM/Quality Center.

Sample value: My Domain

<Project> Required. Name of project to be used in Micro Focus ALM/Quality Center.

Sample value: My Project

<qcusername> Required. Micro Focus ALM/Quality Center username.

Sample value: username@qc.com

<password> Required. Password associated with the username above.

Sample value: mypassword

<ArtifactType> Required. Type of artifact you want to create or update in QC.

Sample values: BUG, REQ, TEST

<TestFolder> Name of the Test Plan folder under Subjects in which to place newly copied tests in Micro Focus ALM/
Quality Center. This folder must exist prior to running the connector.

Sample values: Iteration1, UI-Responsiveness

<TestFolderID> ID of the Test Plan folder under Subjects in which to place newly copied tests in Micro Focus ALM/Quality
Center. This folder must exist prior to running the connector. This can also be used to specify the folder
to be selected for a copy from Micro Focus ALM/Quality Center to Rally. This can be helpful when there
are duplicate Test Plan folder names. See here for how to find the TestFolderID value. Used in place of
<TestFolder>.

Sample value: 1004

<IDField> Required. Micro Focus ALM/Quality Center field used to store the unique ID of a test run.

Sample value: RN_RUN_ID

<ExternalIDField> Required. Micro Focus ALM/Quality Center user field of type String that stores the unique ID of a test or
other entity.

Sample value: TS_User_01

<RunDaysToSearch> Specified in days, the time period in which the connector searches into the past for new QC runs to be
copied to Rally test case results (and associated with a Rally test case). The default is one day.

Sample values:

• 1 (default)
• 2

</QCRunConnection> Required. Closing parent tag for this section.

Run the Connector

You can run the connector in work item mode or test mode.

 827

https://community.microfocus.com/t5/Quality-Center-ALM-User/Folder-ID-in-Test-Plan/td-p/944184


 Rally®

Work Item Mode

The connector accepts these command-line flags:

rally2_hpalm_connector.rb -h

Usage: C:/Users/hflygare/Ruby22-x64/bin/rally2_hpalm_connector.rb 

<options> <config_filename> <interval_in_minutes>

where <options> are:

    --version, -v:   Prints the revision number of the connector.

    --preview, -p:   Run the connector in preview mode, do not actually copy or update any items.

    --log-file-size, -s <n>:   Set the size limit for a log file to <n> megabytes.

    --max-log-files, -m <n>:   Set the maximum number of log files in log file rotation to <n>.

    --help, -h:   Print this Usage message.

    --cleartext, -c:   Bypass encrypting the credentials if they are already in clear text.

where <config_filename>

  File system reference to an XML file specifying the connector configuration.

  Usual extension is .xml.

where <interval_in_minutes>

  The interval, in minutes, for which the connector will run after executing command the first time.

  -1 will only run the connector once and will exit afterwards.

Once the qc_config.xml file has been edited to reflect your environment, you can start running the connector. Open a
command prompt or terminal and type:

rally2_hpalm_connector.rb  alpha_project_config.xml -1

or if the above does not run the connector or if you see the following error: ruby: No such file or directory --
rally2__connector.rb (LoadError) , please try adding ruby to the beginning of the command:

ruby rally2_hpalm_connector.rb  alpha_project_config.xml -1

to start the service. If you named your configuration file something other than qc_config.xml, substitute that name on the
command line. The last argument, -1, tells the connector to run once and then exit.

NOTE
In the past we have sometimes suggested using a positive integer value as the last argument, such as 10, which
would instruct the connector to run; sleep 10 minutes; then repeat this process. We now advise against such
use as it appears to generate issues in some environments (and they are difficult to triage). We strongly suggest
using -1 as the last argument, and then set up a cron if you want the connector to run at regular intervals.

The rallylog.log file is generated by the connector and contains login information. View the log file for evidence that
the connector is working properly.

TIP
Rally ships a startqc.bat file to make it easier to test. If the configuration file you intend to use is not named
qc_config.xml you must edit the startqc.bat file to reference your configuration file name.

To stop the service, use Control-C in the command shell.

Test Mode

Once the qc_config*.xml files are set up, you can start running the connector.

To start the connector, open the command prompt or terminal and enter:

 rally2_hpalm_connector.rb  alpha_project_config.xml -1

 828



 Rally®

Credential Encryption (Added May 2015)

As of version 4.6.0 of the connector, credentials occurring in the *Connection sections of the configuration file that are in
clear text are encrypted after the initial run using that configuration file. Credentials are identified as any configuration item
tag appearing in a *Connection section whose name is *User, or any *Password or APIKey.

Credentials in the Emailer section (SMTPUser and SMTPPassword) will still be encoded. The credential encryption is
localized for the installation of the connector and various aspects of the configuration file.

In practice, as long as the installation and execution folders are constant and the key Rally parameters in the configuration
do not change, you can modify most of the contents of the configuration file without having to reset the credentials to their
clear-text values. However, be cautious in environments that do not have such stable characteristics. Frequently check the
log files for any entries that indicate environmental changes have taken place that prevent the connector from decrypting
the encrypted values for use in the connector execution.

NOTE
You can use the -c option to specify leaving the password in clear case instead of encrypting. The command line
for running the connector will be:
rally2_hpalm_connector.rb -c configfile.xml

The -1 option may still be used at the end of the command if needed.

Modify the Logging Parameters

The connector logs messages as it is processing into a rallylog.log file in the current working directory. By default,
the maximum size of a log file is 5 MB and the log rotation is limited to 10 files. You can adjust the maximum size of the
log file and adjust the maximum count of log files in the log rotation by specifying command line arguments for this.

The -s <integer> option pair can be used to specify the maximum size of the log file in MB increments (up to 100 MB).
This can also be expressed as --max-log-file-size <integer>.

The -m <integer> option pair can be used to specify the maximum count of files in the log file rotation scheme. This
can also be expressed as --max-log-files-count <integer>.

Example: To set the log file max size to 50 MB and the maximum log file rotation count to 20 files for a single invocation
of the connector:

rally2_hpalm_connector.rb -s 50 -m 20 xxx_config.xml -1 

OR

rally2_hpalm_connector.rb --max-log-file-size 50 --max-log-files-count 20 xxx_config.xml -1

Manage Tests and Test Cases Using the Rally Connector for Micro Focus ALM/Quality Center

When you use the Rally–Micro Focus ALM/Quality Center connector, you can do the following:

• Copy Tests and Runs from Micro Focus ALM/Quality Center to Rally
• Copy Test Cases from Rally to Micro Focus ALM/Quality Center
• Update Test Cases from Rally to Micro Focus ALM/Quality Center
• Update Test Cases from Micro Focus ALM/Quality Center to Rally
• Link Rally Stories to Rally Test Cases

 829



 Rally®

Copy Tests and Runs from Micro Focus ALM/Quality Center to Rally
You can copy tests and test runs that you created in Micro Focus ALM/Quality Center to Rally.

1. Configure the connector following the steps outlined in the installation guide.

The screenshots below illustrate custom fields created in Micro Focus ALM/Quality Center for test and run artifact
types, and custom fields created in Rally for test case work item type. Those fields are intended to store the ID of the
corresponding artifact from the other system.

Below is the custom field created for Micro Focus ALM/Quality Center’s Test to hold Object ID of the corresponding
Rally test case:

Below is the custom field created for Micro Focus ALM/Quality Center’s Run to hold Object ID of the corresponding
Rally test case result:

 830



 Rally®

Below is the custom field created for Rally’s test case to hold ID of the corresponding Micro Focus ALM/Quality
Center test:

Note that this is not symmetrical. The Rally TestCaseResult work item type does not allow creation of custom fields,
and support for mapping runs from Micro Focus ALM/Quality Center to test case results from Rally only support Copy
service in one direction (from Micro Focus ALM/Quality Center to Rally).

Following are the relevant extracts from the files:

In the configuration file for tests and test cases, in <RallyConnection> , there is:

<ArtifactType>TestCase</ArtifactType>

   <ExternalIDField>TCExternalID</ExternalIDField>

In the same configuration file for test cases, in <QCConnection> , there is:

<TestFolder>MyTestFolder</TestFolder>

   <IDField>TS_TEST_ID</IDField>

   <ExternalIDField>TS_USER_01</ExternalIDField>

 831



 Rally®

In the configuration file for runs and test case results, in <RallyTestResultConnection> the artifact type is
specified by <ArtifactType>TestCaseResult</ArtifactType> but there is no ExternalIDField on the Rally
side.

In the same configuration file for runs and test case results, in <QCRunConnection> there is:

<IDField>RN_RUN_ID</IDField>

   <ExternalIDField>RN_USER_01</ExternalIDField>

   <TestExternalIDField>TS_USER_01</TestExternalIDField>

Notice that <TestExternalIDField> has the same value here as <ExternalIDField> in the tests and test
cases configuration file. That is how the link between a run and test (test case result and test case) is maintained.

2. After you have created test runs, run the connector with both configuration files.

Below is a screenshot of the rallylog entry related to the copy of Micro Focus ALM/Quality Center test to Rally test
case:

Below is a screenshot of the rallylog entry related to the copy of Micro Focus ALM/Quality Center run to Rally test case
result:

Below is the screenshot of the details page of the newly created Rally test case. Notice that the Results link on the left
shows that there is also a test case result associated with this test case:

 832



 Rally®

Copy Test Cases from Rally to Micro Focus ALM/Quality Center
You can copy test cases from Rally to Micro Focus ALM/Quality Center.

1. Create a test case in Rally.

2. In the xml configuration file of tests and test cases in the <QCConnection> section there must be a pre-existing Micro
Focus ALM/Quality Center Test Folder (from Test Plan) specifying: <TestFolder>MyTestFolder</TestFolder>

When the test case from Rally is copied to Micro Focus ALM/Quality Center it should go to this folder.

3. Run the connector.

The test is created in Micro Focus ALM/Quality Center. Notice the TS_USER_01 labeled RallyID field populated with
Object ID of the corresponding Rally test case:

 833



 Rally®

On the Rally side, the original test case now has its custom field TCExternalID populated with the ID of the
corresponding Micro Focus ALM/Quality Center test.

If a test instance of this test needs to be created in Test Lab and a run needs to be copied from Micro Focus ALM/
Quality Center to Rally, follow the steps described earlier in this document. Note that runs can only be copied
from Micro Focus ALM/Quality Center to Rally. The connector does not support copy service from Rally to Micro Focus
ALM/Quality Center for test case results.

Update Test Cases from Rally to Micro Focus ALM/Quality Center
You can run the connector after you update a test case in Rally to ensure that it is also updated in Micro Focus ALM/
Quality Center.

1. Update the test case in Rally.

2. Run the connector.

Update Test Cases from Micro Focus ALM/Quality Center to Rally
You can run the connector after updating a test case in Micro Focus ALM/Quality Center so that it is also updated in Rally.

1. Update the test case in Micro Focus ALM/Quality Center.

 834



 Rally®

2. Run the connector. The corresponding test case in Rally is updated.

Link Rally Stories to Micro Focus ALM/Quality Center Test Cases
You can link Rally user stories to Micro Focus ALM/Quality Center test cases.

The goal of this setup is to make sure that when a test is copied from Micro Focus ALM/Quality Center to Rally, it is linked
to a pre-existing user story in Rally by following the steps below.

1. Create a test in Micro Focus ALM/Quality Center.

 835



 Rally®

A Formatted ID of Rally user story US93 in the Rally WorkProduct field that references a real story in Rally in the same
Rally workspace and project indicated in the configuration file.

The goal of this setup is to make sure that when a test is copied from Micro Focus ALM/Quality Center to Rally, it is
linked to a pre-existing user story in Rally by following the steps below. On the Rally side, the linking happens through
a WorkProduct field of TestCase object.

a) Create a user field in Micro Focus ALM/Quality Center for Test artifact to hold the Rally FormattedID. The field must
be a string type.

b) Add this mapping to the FieldMapping section of the configuration file for tests and test cases:
<Field><Rally>WorkProduct</Rally><Other>TS_USER_02</Other></Field>

c) Add RallyReferenceFieldHandler to the RallyFieldHandlers section of the same configuration file.
<RallyReferenceFieldHandler> <FieldName>WorkProduct</FieldName>
<ReferencedFieldLookupID>FormattedID</ReferencedFieldLookupID> </
RallyReferenceFieldHandler> </RallyFieldHandlers>

An example of the syntax in the context of the Connector section of the xml configuration file:

<Connector> <FieldMapping> <Field><Rally>Name</Rally><Other>TS_NAME</
Other></Field> <Field><Rally>WorkProduct</Rally><Other>TS_USER_02</Other></
Field> <Field><Rally>Description</Rally><Other>TS_DESCRIPTION</Other></
Field> </FieldMapping> <RallyFieldHandlers> <RallyReferenceFieldHandler>
<FieldName>WorkProduct</FieldName> <ReferencedFieldLookupID>FormattedID</

 836



 Rally®

ReferencedFieldLookupID> </RallyReferenceFieldHandler> </RallyFieldHandlers>
<Connector>

2. Run the connector.

The test case is created in Rally, linked to a Rally story.

Troubleshoot the Rally Connector for Micro Focus ALM/Quality Center

The topics in this section describe how to resolve some problems you might have related to the connector.

Cannot Convert "null" Into a Date

If you see an error similar to this:

DEBUG : Connector.block in map_fields_to_rally - Mapping

                BG_CLOSING_DATE(2013-03-05 00:00:00 +0000)

                        - to -

                TargetDate(2013-03-05 00:00:00 +0000)

  WARN : RallyConnection.initialize - <Errors><OperationResultError>

                        Could not parse: Cannot convert "null" into a date. 

                        You must use the ISO8601 date+time format.

You must add the following field handler:

.....

          <Field><Rally>TargetDate</Rally>   <Other>BG_CLOSING_DATE</Other></Field>

        .....

 837



 Rally®

        <QCDatetimeToDateFieldHandler>

                <FieldName>BG_CLOSING_DATE</FieldName>

        </QCDatetimeToDateFieldHandler>

See Log File for Messages

• Once the connector is running, all errors are written to the rallylog.log in the working directory where
rally2_hpalm_connector was invoked. Informational messages, warnings, and errors are written to the log file
depending on the value of the <LogLevel> tag in the <ConnectorRunner> section of the configuration file.

• The logfile is not written to when running the connector as a .bat (batch) job. If the connector is being run as a batch
job, verify that the user that owns and runs the batch job has access to the logfile directory.

Connector Validation

Before the connector starts reflecting objects between the two systems, it performs these validations:

• Connecting to Rally is successful
• Connecting to the QC system is successful
• The Rally fields in the field mapping section exist in Rally
• The QC fields in the field mapping section exist in the other system
• Each specified field handler has a corresponding field mapping section in the configuration file

To confirm the validation is successful without moving objects between the two systems, set the <Preview> tag in the
configuration file to true. This is useful if you wish to experiment with some different configuration options to debug an
issue.

Datetime Field Handlers

When mapping date fields, a field handler is required to instruct the connector how the field is to be transformed. See Map
Dates.

EnvironmentalKey ident_vector Not Valid Error

The following error may be seen in QC connector version 4.6.0 and higher. If this error is seen, re-enter the userID and
password for both QC and Rally.

.....

          ERROR : Class.initialize - EnvironmentalKey ident_vector not valid for decryption target value

Adjust any Custom Field Handlers

If you use any custom field handlers you must edit the read_config method so that the primary argument is fh_info
(a Ruby Hash instance) and the code that examines that and assigns the @field_name is similar to the following:

fh_info.each do |name, value|

          if name == 'FieldName'

             @field_name = value

          end

       end

Known Issues

The following known issues exist.

Could not create
requirement warning

Solution: This error occurs when you have not enabled the ExternalID field for all requirement types. Here
is a link to Micro Focus ALM/Quality Center explaining this in detail.

 838

https://admhelp.microfocus.com/alm/en/12.60/online_help/Content/Admin/cust_proj_req_types.htm


 Rally®

...

WARN : RallyEIF::WRK::QCConnection.initialize - Could not create requirement - QCAPI -

 HTTP-400 on request - 

Response was: {"Id":"qccore.unknown-field-name","Title":"Entity:

 requirement doesn't have a field named: 'user-01'","ExceptionProperties":

[{"Name":"field-name","StringValue":"user-01"},{"Name":"entity-

name","StringValue":"requirement"}],"StackTrace":null} - 

Error when field
length for ExternalID

is not correct

Solution: Change the field length for the ExternalID to 40
....

ERROR : RallyEIF::WRK::QCConnection.rescue in update_external_id_fields - Could not

 update external id (or external end user id) field 

ERROR : RallyEIF::WRK::QCConnection.initialize - Error updating defect-7787. QCAPI

 - HTTP-400 on request - http://qcserver:8080/qcbin/rest/domains/CRM/projects/

MAINTENANCE/defects/7787. 

Response was: {"Id":"qccore.invalid-value-type-for-field","Title":"Failed to convert

 the 'user-23' field of a 'defect'. The object 555555895972 cannot be converted to

 type Integer","ExceptionProperties":[{"Name":"entity-name","StringValue":"defect"},

{"Name":"field-name","StringValue":"user-23"}],"StackTrace":null}. 

WARN : RallyEIF::WRK::Connector.initialize - Copy of ALM defect 7787 to Rally skipped

 due to inability to update the ALM external_id field (BG_USER_23) 

We have reports of
issues when using the
connector with Micro
Focus ALM/Quality

Center version 12.53

No known resolution.

We have reports of
the following error

when using the
connector with Micro
Focus ALM/Quality

Center version 12.20

No known resolution. This version of Micro Focus ALM/Quality Center is not supported. The logfile displays:
....

WARN -- : RallyEIF::WRK::QCConnection.initialize - QCAPI - HTTP-500 on request -

 http://hpqc.perceptive.com/qcbin/rest/domains/test/projects/test/defects?query=

%7Buser-01[(%20%22%22%20or%20NULL)];id[=%22784%22]%7D&page-size=500&limit=99999. 

Response was: {"Id":"qccore.general-error","Title":"Ambiguous pagination settings.

 Please dont use page-size and start-index parameters together with limit and offset

 parameters.","ExceptionProperties":null,"StackTrace":null} 

ERROR -- : RallyEIF::WRK::ConnectorRunner.rescue in run_services - Unexpected

 exception occurred 

WARN -- : RallyEIF::WRK::ConnectorRunner.exception - Message QCAPI - HTTP-500 on

 request - http://hpqc.test.com/qcbin/rest/domains/test/projects/test/defects?query=

%7Buser-01[(%20%22%22%20or%20NULL)];id[=%22784%22]%7D&page-size=500&limit=99999. 

Response was: {"Id":"qccore.general-error","Title":"Ambiguous pagination settings.

 Please dont use page-size and start-index parameters together with limit and offset

 parameters.","ExceptionProperties":null,"StackTrace":null}

Test Cases reflected
from Micro Focus ALM/
Quality Center to Rally
are constantly being

added/removed in Rally

This occurred when the Folders containing the tests in Micro Focus ALM/Quality Center were removed but
the tests were not removed. This resulted in the tests being moved to the unattached area in Micro Focus
ALM/Quality Center.

Solution: Move the tests in Micro Focus ALM/Quality Center to a test folder.

Map Releases or
Iterations with

Multiple Projects

When mapping release or iteration values and there are multiple Rally projects where the release and
iteration names are identical across Rally projects, you may receive an error if the release or iteration you
are updating on the defect references a different project than the given defect is assigned. The connector
only returns the first release or iteration with the matching name in Rally so it could have a reference to a
release or iteration in a different project.

 839



 Rally®

Map a Null Release
or Iteration

When using a <OtherEnumFieldHandler> to map a release or iteration, it is not possible to set it
to null or unscheduled. Different systems treat null or empty values for given field types inconsistently,
so we chose not to nullify values during updates due to this disparity. Reflection of null values is further
complicated by the fact that users are able to map a field of one type in one system to a field of another
type in the other system.

Email Feature for Error Prior to revision 2.8.8, the <Emailer> feature would not send email if the <Level> was set to Error
(DE15642).

Duplicate Requirement
Names in QC

In Rally, two requirements can have the same value in the name field. This is not allowed in the QC system.
If a requirement with a duplicate RQ_REQ_NAME is copied to QC, an error will occur. If the configuration
file is using the <RequirementFolder> or <RequirementFolderID> tag, the following error
occurs (otherwise the error will be an OLE 80040556):
INFO : Connector.copy_to_other - Copy US447 to Quality Center

 DEBUG : Connector.block in map_fields_to_other -   Mapping Name(test dup req name) -

 to - RQ_REQ_NAME(test dup req name)

 DEBUG : Connector.block in map_fields_to_other -   Mapping Description(US447 desc) -

 to - RQ_REQ_COMMENT(US447 desc)

 DEBUG : QCConnection.create_internal - set all artifact fields

 ERROR : QCConnection.rescue in create_internal - failed on attempt to move

 Requirement item to target folder

 ERROR : QCConnection.rescue in create_internal - failed on attempt to create QC Req

 item from src item 

 ERROR : QCConnection.cleanup_shell_artifact - Attempting to delete the shell req item

 due to error.

  INFO : QCConnection.delete - Deleted QC req with id 22

 ERROR : QCConnection.cleanup_shell_artifact - The shell req was deleted successfully.

  WARN : QCConnection.initialize - Could not create req - failed on attempt to move

 Requirement item to target folder -

Connector Errors
when QC Comments
or Description Over
32768 Characters

are Copied to Rally
String Field (DE22249)

[2015-01-15 17:39:20 Z]  WARN : RallyEIF::WRK::RallyConnection.initialize -

Error on request - https://rally1.rallydev.com/slm/webservice/1.42/testcase/

create.js?/workspace=/workspace/658223893a -

{:errors=>["Validation error: TestCase.Description length is greater than the maximum

 length of 32768"]}

Solution: Add the <RallyTruncateFieldHandler> to automatically truncate the description.
Errors when Running

install_gems.rb
./install_gems.rb: line 2: BASE_GEMS: command not found

./install_gems.rb: line 3: syntax error near unexpected token `('

./install_gems.rb: line 3: `CORE_GEMS = %w(rally_api rallyeif-wrk)'

The script requires that Ruby 2.2 be installed. Additionally, the script does not contain the location to an
interpreter as the first line, therefore it needs to be called as a parameter of the ruby command.

To launch the script successfully, run the following command:

# ruby install_gems.rb

Error when running
ruby dk.rb Install

ERROR: Invalid configuration or no Rubies listed. Please fix 'config.yml' and rerun

 'ruby dk.rb install'

Solution: Change the config.yml file in the DevKit directory to include the Ruby base directory.

Add the following at the end of the config.xml but change the directory below to your Ruby directory (all
dashes are necessary):

---

-G:\Ruby22-x64

 840



 Rally®

Error when running
rally2_hpalm_connector.rb

config.xml -1

ERROR: ruby: No such file or directory -- rally2_hpalm_connector.rb (LoadError)

Solution: Add ruby to the beginning of the command and verify that Ruby is the default app for .rb files.

ruby rally2_hpalm_connector.rb config.xml -1

For additional information on how to make Ruby the default application, see the following link Instructions
for Windows 10

Error when proxy
server is used and
is not configured

DEBUG : RallyEIF::WRK::RallyConnection.rescue in connect - StandardError: RallyAPI: -

 rescued exception - A connection attempt failed because the connected party did not

 properly respond after a period of time, or established connection failed because

 connected host has failed to respond. - connect(2) for "proxy" port 80 (http://

proxy:80) on request to https://rally1.rallydev.com/slm/webservice/v2.0/user with

 params {}

ERROR : RallyEIF::WRK::RallyConnection.rescue in connect - Could not connect to Rally

 at https://rally1.rallydev.com/slm using APIKey credentials

Solution: If your site uses a proxy server to access Rally, you will need to set the
HTTP_PROXY environment variable to a value that follows this format: http://
username:password@yourproxy.company.com:port.

Best Practices

If you don't find what you are looking for in this section, please check our general Work Item Connectors Best practices
here.

Map Rally projects If you copy defects from Micro Focus ALM/Quality Center to Rally and are mapping a QC field to the Rally
Project field, you may see a message like Could not find Rally Project with name ... in the log file if the
connector user does not have editor permissions to that project in Rally.

NOTE
RallyReferenceFieldHandlers are for the most part deprecated. Prior to the 4.4.2 release,
if multiple projects were specified in the configuration file, Release or Iteration value was
sometimes mapped incorrectly. By relocating some logic, that issue has been addressed as well
as being able to handle the most common Rally Reference fields (Project, Release, Iteration)
automatically without needing explicit notation in the configuration file. If the configuration file
specifies a RallyReferenceFieldHandler for one of those aforementioned fields, the connector
will emit a deprecation warning message into the log file and will not register the field handler
as that logic is now handled automatically. The are some edge cases where the use of
RallyReferenceFieldHandler may be necessary, for fields such as Parent, Child, WorkProject,
Owner, and other similar fields.

Pessimistic locking
in Micro Focus

ALM/Quality Center

When an entity is selected in Micro Focus ALM/Quality Center using your browser, it assumes you are
editing the record and therefore locks the entity. The UPDATE_RALLY_TO_QC service will not update a
Rally artifact to an entity in Micro Focus ALM/Quality Center if you have locked the record (an error in the
log file will indicate when this happens).

Map more than
one Micro Focus

ALM/Quality Center
project to a single
Rally workspace

If you are mapping more than one Micro Focus ALM/Quality Center project to a single Rally workspace,
there are important considerations to scale this successfully:

• The IDs of Micro Focus ALM/Quality Center artifacts are not unique across multiple QC projects,
which may result in more than one Rally artifact having the same value for the ExternalID field that
corresponds to Micro Focus ALM/Quality Center IDs.

• If you are updating from Rally to Micro Focus ALM/Quality Center, note that updates are by default
Rally workspace-scoped, and not Rally project-scoped. In the scenario when more than one QC project
is mapped to the same Rally workspace, it is recommended that you have Rally projects within this

 841

https://support.microsoft.com/en-us/windows/change-default-programs-in-windows-e5d82cad-17d1-c53b-3505-f10a32e1894d
https://support.microsoft.com/en-us/windows/change-default-programs-in-windows-e5d82cad-17d1-c53b-3505-f10a32e1894d


 Rally®

workspace directly correspond to respective QC projects. Individual configuration files must be created
per each Rally project/QC project pair.

• Each configuration file has to narrow the scope of Rally to QC updates to the Rally project that is
currently referenced under the RallyConnection project tag.

Copy or split Rally
stories that are

mapped to Micro
Focus ALM/Quality

Center requirements

If you copy or split Rally stories that already have corresponding requirements in Micro Focus ALM/Quality
Center, make sure to delete the value of the ExternalID field. Otherwise, the copy of the original story will
still contain the original story's ExternalID field. This is undesirable since it creates many-to-one mapping
between Rally and Micro Focus ALM/Quality Center artifacts, which will affect the integrity of your data.

Rally Connector for Micro Focus ALM/Quality Center Revision History

• 4.9.0-master --- October 2020
– Defects fixed

• Disallow and note in the log any attempt to copy a Micro Focus ALM/Quality Center item attachment file that
is larger than the Rally limit of 50 MB, but allow other attachments under the size limit to be copied. The prior
behavior stopped processing any other attachments for the item being processed whenever an attachment that
exceeded the size limit was encountered.

• Accommodate RQ_TYPE_ID mapping in OtherEnumFieldHandler. Micro Focus ALM/Quality Center has had two
ways of identifying a Requirement type (RQ_REQ_ID - older and obsoleted, and RQ_TYPE_ID - current means).
The data type of the RQ_TYPE_ID is an integer and would generate a fault when an actual value was processed
in the OtherEnumFieldHandler code which expected a String value. The behavior with this fix enables the use of
either RQ_REQ_ID or RQ_TYPE_ID without having to care about the underlying data type of the field.

• Processing enabled by the <MirrorQCStoryHierarchyInRally /> tag can now mirror a hierarchy present in Micro
Focus ALM/Quality Center in which there is a hierarchy of Requirement Folders and leaf level Requirement items
(non-folders). Prior to this fix, only a hierarchy involving parent-child Requirements where each element was a
non-folder item were processed correctly. When used with a Micro Focus ALM/Quality Center hierarchy including
folders, Rally stories will be created at each level in the hierarchy with the Name of the associated Micro Focus
ALM/Quality Center folder item. Those Rally story items can hold one or more story items which may or may not
have their own sub-hierarchy.

• 4.8.6-master --- September 2019
– Defects fixed:

• Fixed defect regarding copying TestSteps associated with Rally TestCase to Design Steps associated with a
corresponding Micro Focus ALM/Quality Center TestPlan. Prior to this fix the behavior was that the TestSteps
were not copied.

• 4.8.5-master --- March 2019
– Defects fixed:

• Fixed one-to-many mapping for EnumFieldHandler
• Fixed XML external references

• 4.8.4-master --- September 2018
– Defects fixed:

• Eliminated Nokogiri dependency in Rally to QC test steps
• 4.8.3-master --- June 2018

– Defects fixed:
• Fixed QCUrlAttachmentFieldHandler Fieldhandler error
• Fixed QCReqLinkFieldHandler Fieldhandler error

• 4.8.2-master --- June 2018
– Defects fixed:

 842



 Rally®

• Message undefined method gsub' for nil:NilClass
• 4.8.1-master --- May 2018

– Defects Fixed:
• undefined method `[]' for nil:NilClass when connecting to HP ALM/Quality Center 12.01

• 4.8.0-master --- May 2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support.
– Changes:

• Elimination of dependency on nokogiri requires change in the read_config method for all custom field handlers.
• 4.7.4-master-14 --- 11-July-2017 (REST version)

– Fixes:
• Updated code to include the Last Modified field.
• Updated logic to account for parentheses when using <CopySelectors> in the <QCConnection> section.
• Updated logic to use Parent ID name instead of label when using <MirrorQCStoryHierarchyInRally> post

service.
• 4.7.2-master-11 --- 14-Nov-2016 (REST version)

– Fixes:
• Adjusted Time Zone conversion so Target Date field in Rally maps correctly to Date Field in HP ALM/Quality

Center.
• Fixed mapping BG_DETECTED_IN_REL to Release: the connector was producing an error indicating the

connector could not find Release.
• 4.7.1-master --- 17-Oct-2016 (REST version)

– Fixes:
• Addressed error occurring on CopySelector containing &amp;.

• 4.7.0-master-8 --- 26-Aug-2016 (REST version)
– Enhancements:

• Based on HP ALM/Quality Center REST. Certified for use with HP ALM/Quality Center 12.50
• Now supports range and subset selectors

• 4.6.7-master-96 --- 08-Nov-2016 (OTA.dll version / not compatible with HP ALM/Quality Center REST API)
– Fixes:

• Adjusted Time Zone conversion so Target Date field in Rally maps correctly to Date Field in HP ALM/Quality
Center

• Fixed mapping BG_DETECTED_IN_REL to Release: the connector was producing an error indicating the
connector could not find Release

• 4.6.6-master-103 --- 10-Jun-2016 (OTA.dll version / not compatible with HP ALM/Quality Center REST API)
– Enhancements:

• Certified for use with HP ALM/Quality Center 12.21 and 12.50.
• Now supports increased Rally attachment size limit of 50 MB (upgrade from 5 MB).

– Fixes:
• Fixed multiplying attachment issue.

• The connector will not attempt to copy an attachment from Rally to HP ALM/Quality Center if it would result in
a duplicately named file.

• Previously, if identically named attachments in Rally were written to a new unique name in HP ALM/Quality
Center and copied back to Rally, this would result in a large number of attachment files with the same content.

• 4.6.5-master-94 --- 24-Nov-2015
– Enhancements:

 843



 Rally®

• Detecting duplicate Rally project names will now create an error log and exit condition.
• Emailer functionality is now process prioritized to allow alert emails to send even if subsequent configuration

validation fails.
• Enhanced credential value encryption.

• 4.6.4-master-93 --- 16-Nov-2015
– Enhancements:

• Brand redesign.
• 4.6.3-master-92 --- 14-Aug-2015

– Fixes:
• Cleaned up log errors when the pre_copy method called on copy_to_rally cannot satisfy the necessary

conditions which typically related to missing required fields or fields with a null/blank value.
• XML includes files containing Rally URL or Workspace or Project handled properly both before and after

credential encryption.
• QCUrlAttachmentFieldHandler now correctly constructs attachment links to HP ALM/Quality Center 12

attachments.
• 4.6.1-master-86 --- 18-Jul-2015

– Fixes:
• Fixed issue where TestStep content over 2048 bytes resulted in an error where the creation of that TestStep

failed and the creation of any subsequent TestSteps for the target test case were not attempted. This issue was
addressed by truncating any TestStep content over 2048 bytes and informing by writing a WARNING message in
the log file.

• 4.6.0-master-84 --- 28-May-2015
– Enhancements:

• Credentials in the RallyConnection, QCConnection, QCRunConnection sections are now encrypted.
– Known Issues:

• (none)
• 4.5.5-master-81 --- 21-Apr-2015

– Enhancements:
• Support for using APIKey in place of Rally Username and password.
• Better handling of FieldDefaults and values.
• Better logging of failed attempt to copy/update items from another system to Rally.

• 4.5.4-master-79 --- 02-Apr-2015
– Enhancements:

• Better logging for create/update operations when error conditions encountered.
• Better handling of string fields mapped to Rally Name, Description, Notes that contain non-ASCII characters.

• 4.5.3-master-78 --- 07-Mar-2015
– Enhancements:

• Added a RallyBooleanFieldHandler.
– Fixes:

• Fixed issue in YetiEmailer where header item had leading spaces not accepted by some email servers.
• 4.5.2-master-74 --- 28-Jan-2015

– Enhancements:
• Added support for HP ALM/Quality Center 12.
• Updated to use Rally WSAPI v2.0 (instead of 1.42).

• 4.4.12-maintenance-47 --- 05-Jan-2015
– Fixes:

• Introduced a <RallyReferenceAttributeLookupFieldHandler> configuration element to allow use of a
<ReferencedFieldLookupID> other than 'Name' for the Project, Release and Iteration fields. The use of

 844



 Rally®

a <RallyReferenceFieldHandler> for the Project, Release and Iteration fields was deprecated and the
introduction of this field handler can allow similar functionality when the lookup field is intended to be an attribute
other than 'Name'.

• 4.4.11-maintenance-40 --- 19-Nov-2014
– Fixes:

• Corrects a change made to Rally ALM that prevented the connector from copying attachments.
• 4.4.10-master-72 --- 16-Oct-2014

– Enhancements:
• Modified rallyeif-wrk core dependency on rally_api to 1.1.2 (that depends on httpclient 2.4.0) to address SSLv3

security issue.
– Known Issues:

• The <ValidationStep> fieldhandler is broken - DE23409 filed
• 4.4.4-master-67 --- 18-Sep-2014

– Enhancements:
• Improved semantic comparison of Rally boolean values to strings ('true' / 'false') should result in fewer

unnecessary updates.
• Improved semantic comparison of Rally decimal values to integers/strings (1.0 should equal 1 or "1") should

result in fewer unnecessary updates.
• Added ability of OtherUserFieldHandler to accommodate HP ALM/Quality Center user names in all caps to

compare case-insensitively to Rally UserName values.
• Improved comparison of Rally User to user identifier from HP ALM/Quality Center should result in fewer

unnecessary updates.
– Known Issues:

• The <QCRtfFieldHandler> Fieldhander will only process 1 field per Fieldhandler - DE22728 filed. (see
QCRtfFieldHandler section for information on multiple field usage.)

• 4.4.3-master-66 --- 29-Aug-2014
– Enhancements:

• Modifications to make parsing RevisionHistory Revision records more robust, especially the Notes field.
• 4.4.2 --- 30-Jul-2014

– Enhancements:
• Common Rally Reference fields (Project, Release, Iteration) no longer need to have a

RallyReferenceFieldHandler configured in the Connector - RallyFieldHandlers section of the configuration file.
• Mapping of Rally Reference fields such as Release and Iteration is fully project scoped to ensure that if the

DisplayName of multiple Release items is identical, the artifact contains the link to the item associated with the
Project setting in the artifact.

• 4.3.2 --- 05-Feb-2014
– Fixes:

• Fixed a bug in QC Test Run Connector in preview mode
• 4.3.0 --- 16-Jan-2014

– Enhancements:

 845



 Rally®

• Upgrade from Ruby 1.9.2-p290 to Ruby 2.0.0-p247.
• Performance improvement gained by using rally_api rather than rally_rest_api.
• Added more build tests.
• QC Connector causes backward time drift when mapping TargetDate to BG_CLOSING_DATE (DE18750).
• Updated Rally QC Email User Field Handler (DE18583).
• The <RallyUserFieldHandler> was broken (DE18850).
• Connector would validate only the first configuration file on command line (DE17492).
• Added <SuppressDeprecationWarning> XML tag.
• Upgrade to version 1.42 of the WSAPI.
• NOTE

For the 4.3.0 version of this connector, any custom code (such as a custom field handler) will require
modifications. A working example (using the QC connector) can be found here.

Previous method for doing this requires:

require 'yeti/field_handlers/other_field_handler'

require 'rexml/document'

class MyCustomFieldHandler < ....FieldHandler

  ....

end

New way of doing this requires:

require 'rallyeif/wrk/field_handlers/field_handler'

module RallyEIF

  module WRK

    module FieldHandlers

      class MyCustomFieldHandler < ....FieldHandler

        # See example code in installation directory:

        # ./field_handlers/my_custom_field_handler.rb

      end

    end

  end

end

• 2.10.0-513 --- 14-Oct-2013
– Enhancements:

 846

https://knowledge.broadcom.com/external/article?articleId=125037


 Rally®

• Fixed incorrectly listing updated value in log file (DE18019).
• Updated QC version log message from WARNING to INFO (DE18378).
• Usability and reliability upgrades for HP ALM/Quality Center Phase 1 (F3823).
• Create a field handler to map users with a CSV (S53878).
• QC to Rally defect mapping of non-existent user is handled better (S50159).
• Logfile incorrectly displayed Release/Iteration Reference and not the actual name (S50389).
• Connector handles mapping of QC Date/Time in multiple formats to Rally Date/Time fields (S50391).
• RequirementFolder did not act like CopySelector during Copy from QC to Rally (S50265).
• Check for existence of CrosslinkUrlField in <QCConnection> section only (S51204).
• The rally_rest_api interface was replaced with the rally_api to make the code more concise and improve

performance (S38419).
• For test case and test case result: Last Verdict does not change on Iteration Status page when new test case

result is created via connector (S50262).
• Refactored core sync to field level to prevent overwriting (F4214).
• Added WSAPI 2.0 in EIF Connectors (F3097).

– Fixes:
• Management of case sensitive usernames in Rally and other (DE18025).
• Lookback Time to copy/update Artifacts is invalid (DE17865).
• EIF connectors now validate configuration files on command line (DE17492).
• The has-changed did not correctly compare date fields (DE15628).

– Known issues:
• The <RallyUserFieldHandler> does not properly return a value (DE18850).

• 2.8.8-225 --- 14-Dec-2012
– Enhancements:

• Minor logging improvements.
– Fixes:

• DE15642: Email notification of errors and warnings, in the <Emailer> feature, would not send email if the
<Level> was set to Error.

– Known issues:
• When mapping a QC Date/Time field to/from a Rally Date/Time field, in some cases the connector will fail with:

Could not parse: Cannot convert "null" into a date. You must use the ISO8601 date
+time format.
This is usually resolved by using the <RallyDateTimeFieldHandler>.

• If the SubmittedBy or Owner field is being mapped, and the artifact has a reference to a previously deleted user
in one of those two fields, the connector will abort when attempting to get the artifact, with message: "undefined
local variable or method `value' for #<RallyUserFieldHandler:0x149be48>"

• 2.8.6-222 --- 01-Nov-2012
– Enhancements:

• Added more logging for <LogLevel>Any</LogLevel>.
• Moved rally_api to revision 0.7.6.
• Added Rally URL and user name to connection message.
• Added ID in log message so user can see what artifact caused an error.
• Added check for nil return value on tags/keywords.
• Added more debugging output on connection to Rally.
• Improved performance by removing refresh on Workspace read in find-workspace loop.
• Updated to use rally_api 0.6.0 to fix "requirement is not a valid type" error.

– Fixes:

 847



 Rally®

• DE14293: Test folders with spaces in the name would fail.
• DE14312: When running in PREVIEW mode, connector would exit with error message: "unknown property or

method: `length'".
• DE14473: Duplicate attachments were created on update from QC to Rally UserStory when filename had special

characters.
• DE14528: An update from Rally to QC Runs have an extra prefix/append of the html/body tags.
• DE14592: Two configuration files on the command would sometimes hang.
• DE14655: Connector errors with "Object Type requirement is not query-able".

– Known issues:
• DE15642: The <Emailer> feature does not send email if the <Level> is set to Error.
• When the connector finishes running in PREVIEW mode, it prints the error:

INFO : ConnectorRunner.show_preview_message - ------- Preview Mode -------

ERROR : ConnectorRunner.rescue in run_services - Unexpected exception occurred

ERROR : ConnectorRunner.exception - Message unknown property or method: `length'

    HRESULT error code:0x80020006

      Unknown name.

• 2.8.1-211 --- 25-Jul-2012
– Log file now shows the name of the REF returned by the transform_in() function of a RallyReferenceFieldHandler

on the map_fields_to_rally call.
– Fixed an issue where a project named TEST would be returned erroneously on a query for project TEST+.
– Change to throw exception on find by ExternalID if results are nil.

• 2.7.9-207 --- 01-Jul-2012
– Improved testing code.
– Fixed issue where attachments were being duplicated if updates were going in both directions.
– Fixed several minors issues.
– Adding debug logging to attachment linker.

• 2.7.6-184 --- 22-May-2012
– Added <RallyToQCTestStepLinker>, <ValidationStep>Last</ValidationStep>, and <StepFields>
– Added <RelatedObjectLinkers>, <QCToRallyTestStepLinker />
– Added <RallyDateTimeFieldHandler>
– Added <Emailer> functionality to the <ConnectorRunner> section.
– Mods for migrating items from the Test Lab to Rally TestCases/TestSets/TestFolders.

• 2.7.4-170 --- 01-May-2012
– Added ability for FormattedID in QC system to have lower case prefix (us123) or upper case prefix (US123).
– Added subfield specifications on CopySelectors from Rally using the precopy feature.
– Fixed handling of "bad" characters in a Requirement 'Name' field
– Expanded CopySelector/UpdateSelector criteria expression to include: field = (Foo or Bar)
– Added facility to specify TestFolder or RequirementFolder ID instead of name (bypasses duplicate folder name

issues)
– Added capability to reflect Story relationships, test case relationships, Defect relationships
– Added XML include capability so common text can be included as a separate file.

Sample Configuration Files for Micro Focus ALM/Quality Center
The following sample configuration files may help you with your integration between Rally and Micro Focus ALM/Quality
Center.

 848



 Rally®

• QC-RallyUsernameToQcUser.pxml
• QC-config-bugReq2Rally.pxml
• QC-config-bugs2Rally.pxml
• QC-config-bugs2QC.pxml
• QC-config-RallyCSVUserMapping.pxml
• QC-config-concat.pxml
• QC-config-CopyTests2TestCases.pxml
• QC-config-Emailer-NoAuth.pxml
• QC-config-reqs2stories.pxml
• QC-config-ReqTest-2-StoryTestcase.pxml
• QC-config-run2testcaseresult.pxml
• QC-config-test-steps-01.pxml
• QC-config-test-steps-02.pxml
• QC-config-TestConnection.pxml
• QC-config-us2folder.pxml
• QC-Copy-TestCases-and-Steps.pxml
• QC-custom-fieldhandler.pxml

For other useful setup information, see the Rally Integrations Best Practices topic.

Microsoft Team Foundation Server (Team Foundation Version Control)
The Microsoft Team Foundation Server (Team Foundation Version Control) (Microsoft TFS (TFVC)) VCS to Rally
connector shows traceability of code changes to artifacts in Rally.

The connector comprises of code that skims a centralized, master TFS repository for recent commits. It extracts
information from the commit messages, and posts changeset and change information to a Rally SCMRepository,
according to specifications in a configuration file. The connector needs to be installed on only one computer for your
company.

Developers can add FormattedIDs (such as US42) in their commit messages and the connector will process all commits
for configured repositories and push information about those commits into changeset objects and change objects in Rally.
If a valid FormattedID is found in a commit message, the changeset created by the connector will be associated with that
defect, story, or task in Rally.

See the Rally VCS Connector for TFS (TFVC) Installation Guide for information on installing, configuring, and using the
connector. See Supported Versions for Rally Connectors for more information on supported versions.

Cost: Free

Supported Versions: TFS 2015, 2017

Rally VCS Connector for TFS (TFVC) Installation Guide
The VCS Microsoft Team Foundation Server (Team Foundation Version Control) (Microsoft TFS (TFVC)) to Rally
connector helps you show traceability of code changes to artifacts in Rally.

The connector comprises code that skims a centralized, master TFS repository for recent commits. It extracts information
from the commit messages, and posts changeset and change information to a Rally SCMRepository, according to
specifications in a configuration file. While it is possible to have the connector installed on only one computer for your
company, you can also choose to install the connector on multiple computers depending on how your organization is
structured and the number of repositories that need to be reflected in Rally.

 849

https://knowledge.broadcom.com/external/article?articleId=125051
https://knowledge.broadcom.com/external/article?articleId=125053
https://knowledge.broadcom.com/external/article?articleId=125055
https://knowledge.broadcom.com/external/article?articleId=125057
https://knowledge.broadcom.com/external/article?articleId=125058
https://knowledge.broadcom.com/external/article?articleId=125060
https://knowledge.broadcom.com/external/article?articleId=125059
https://knowledge.broadcom.com/external/article?articleId=125056
https://knowledge.broadcom.com/external/article?articleId=125054
https://knowledge.broadcom.com/external/article?articleId=125052
https://knowledge.broadcom.com/external/article?articleId=125049
https://knowledge.broadcom.com/external/article?articleId=125046
https://knowledge.broadcom.com/external/article?articleId=125047
https://knowledge.broadcom.com/external/article?articleId=125044
https://knowledge.broadcom.com/external/article?articleId=125043
https://knowledge.broadcom.com/external/article?articleId=125042
https://knowledge.broadcom.com/external/article?articleId=125037
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository


 Rally®

Developers can put FormattedIDs (such as US42) in their commit messages and the connector will process all commits
for configured repositories and pushes information about those commits into changeset objects and change objects in
Rally. If a valid FormattedID is found in a commit message, the changeset created by the connector will be associated
with that defect, story, or task in Rally.

Example:

"Fixed DE1987 by changing preamble paragraph 3"

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally defect DE1987 would display as Fixed. Please
note this message is case-sensitive, fixed is not the same as Fixed.

The commit message may contain references to more than one artifact. For example, this is known to work:

"Test commit msg with multiple artifacts Fixed DE9 Closed DE8" 

A typical workflow would be for one of your team members to be assigned DE42 in Rally. When they make a code change
and commit it, they would include text in the commit message like "Found an issue with line breaks—fixed DE42". When
the connector runs again, it will find that commit message and link the information about the commit to Rally defect DE42.

This install guide includes:

• Supported Platforms for the Rally VCS Connector for TFS (TFVC)
• Software Requirements for the Rally VCS Connector for TFS (TFVC)
• Install the Rally VCS Connector for TFS (TFVC)
• Configure TFS
• Configure Rally
• Rally VCS Connector for TFS (TFVC) Setup
• Run the Rally VCS Connector for TFS (TFVC)
• Extend the Connector
• Troubleshoot the Rally VCS Connector for TFS (TFVC)
• Rally VCS Connector for TFS (TFVC) Revision History

Supported Platforms for the VCS Connector for TFS

This software is written in Ruby and has been tested using Ruby 2.2.6 but should also work with any stable version of
Ruby 2.0 and beyond.

You can only run the connector in Microsoft Windows as a packaged executable. The software has been tested and works
with TFS 2015 and TFS 2017.

The primary use case is for this connector to be run on the platform that the TFS software and repository reside on. While
it is possible to run this connector on a platform that is not the TFS platform, that use case assumes the use of ssh and
the proper setup of public / private key information. Setting up ssh and key files is beyond the scope of this document;
please consult the internet for more information regarding ssh and PKI. If you intend to run the connector on a Windows
platform and the TFS repository will be located on a different platform, you will need to make sure that the ssh.exe
command is installed on your Windows platform running the connector and it's location in the filesystem is an element in
your %PATH%.

Software Requirements for the VCS (TFVC) Connector for TFS

• Ruby 2.2.6 - This is the supported version.

 850

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change


 Rally®

The connector may not be compatible with Ruby 2.3.x and 2.4.x, we have not certified this connector with those
versions, only 2.2.6 is certified. You may want to investigate how to use the Ruby version manager software (rvm) that
makes installation and use of specific versions of Ruby simpler.

• Ruby Development Kit for Ruby 2.0 to 2.3 (** Windows only **)
a. Download the Ruby DevKit: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
b. Add path to the devkit’s bin directory to environment Path variable.
c. Navigate to the Ruby DevKit root directory.
d. Run command: ruby dk.rb init
e. Run command: ruby dk.rb install

• TFS Collection Name, Team Project, Project, Version
• TFS Protocol, Server, Port, TFS Virtual Path
• The Rally workspace into which the changeset and change information will be posted
• Visual Studio Ultimate, Premium, Professional, Express or Team Explorer (the latter requires a modification to the

PATH to include the location of tf.exe )

Install the Rally VCS Connector for TFS (TFVC)

As this connector is intended to run on an ongoing basis initiated by Windows Task Scheduler (WTS), it is important to
consider the identity of the user who installs the connector versus the identity of the user when run through WTS with
regard to the permissioning and ACL of the directories and files in the connector installation.

The user running the connector must be able to read all files and must be able to write in the configs and logs
subdirectories.

1. Download the connector by following the steps here.

2. Unzip the downloaded ZIP file into a suitable directory where you want the software installed.

The distribution contents are:
LICENSE

README

User-Mapping-Strategies

configs

extension

gems

tfs2ca_agile_central.rb

install_gems.rb

lib

logs

plugin

vcseif-1.6.0.gem

3. Set environment variable GEM_COMMAND to the gem executable location in the Ruby installation directory. The
location examples on Linux and Windows respectively are:

• /myhome/.rvm/rubies/ruby-2.2.6/bin/gem
• C:\Ruby226\bin\gem

4. Run the install_gems.rb Ruby script to get all associated gems installed. In a console/terminal window at the
prompt, type the following: ruby install_gems.rb

If you see output similar to You don't have write permissions ... then you will need to either consult with your system
administrator to obtain the necessary permissions (typically done by using sudo or other similar software) or have the
system administrator run the install_gems.rb command.

 851

https://github.com/oneclick/rubyinstaller/releases/download/devkit-4.7.2/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

Configure TFS

Consider how much TFS commit history you want to have reflected in Rally.

It is possible to operate the connector to catch-up with the complete history of TFS commits. You should assemble a pro
and con list of considerations, reasons, and benefits to help you arrive at a strategy that works for your organization with
respect to whether you need a complete TFS commit history reflected in Rally or just reflected from some particular point
in time.

Each repository under VCS-TFS control must have a configuration file which resides in the configs subdirectory. This
configuration file describes the repository and all its attributes. The file must be in YAML format.

Configure Rally for the TFS (TFVC) Connector

NOTE
We strongly recommend creating the connector user with workspace administrator permissions. This will allow
the connector user access to any new projects that may be added to the workspace in the future (a user with
Editor permissions only will not automatically be added to new projects). If the Connector User does not have
access to projects, changesets will be created in the SCM Repository only and will be orphaned (not attached to
any artifacts).

Verify that your target WorkspaceConfiguration object has BuildandChangesetEnabled set to True. Your Rally workspace
administrator needs to enable this for your target workspace. If it is not enabled, the connector will work, but you will not
be able to see any of the changeset and change information that is associated with your Rally work items (story, defect,
task).

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select your target workspace.

4. Select Actions, Edit.

5. Select the Enable Build and Changeset check box.

6. Select Save & Close.

Rally VCS Connector for TFS (TFVC) Setup

There is an example configuration file shipped with the product named sample.yml . Make a copy of the sample.yml
file in the configs subdirectory and use it for your repository.

We suggest naming your YAML configuration file similar to your repository name. For instance, if your repository name
is My-Tfs-Repo, then name your YAML configuration file My-Tfs-Repo.yml . Edit your new repository configuration file
and modify the values to fit your environment.

Warnings about YAML Syntax:

• The tab character is not a valid YAML character.
• Enclose special characters in quotes, such as if the password has exclamation marks ("!") or hashes ("#").
• The comment character # must be separated from any previous element by at least one space (for example, ".../dir/

dir2#this is a comment", is invalid).

 852

https://en.wikipedia.org/wiki/Yaml
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#WorkspaceConfiguration


 Rally®

Within the Rally section of your YAML configuration file, the value for RepositoryName is the name of the Rally
SCMRepository to which changeset and change items will be associated. If this SCMRepository container does not exist,
the connector will create it in the user's target workspace.

The connector stores a timefile with the commit time of the last commit it successfully processed. As there is the
possibility that due to potential time differences between servers and the fact that the timefile only records to second
granularity, there is an optional Lookback parameter that can be set to ensure that all commits are considered. This
Lookback parameter can appear in either or both of the Rally and TFS sections. By default, the value for this parameter is
assumed to be in minutes. You may use other units of time by specifying a suffix character of m (minutes) or h (hours) or d
(days). For example:

• Lookback: 90
• Lookback: 120 m
• Lookback: 8 h
• Lookback: 10 d

If you do not explicitly provide a Lookback value, the connector uses a default value of 90 minutes. If you do specify a
Lookback value in one section, we highly recommend specifying this value in the other section. If the Lookback values do
not match in the two sections, there is the possibility that a changeset from TFS would not be reflected in Rally.

The value you use should be the best guess and comfort level for the way your team uses TFS to ensure that every
commit is processed by the connector without having to check an excessive amount of prior commits.

Mapping SCMRepositories to VCS Repositories

The VCS Connector was designed to operate where this is a one-to-one relationship between a Rally SCMRepository
and a VCS repository (Git, GitHub, Subversion, Mercurial, and so on). When run, the VCS Connector creates a Rally
SCMRepository item for the value specific in the connector configuration file if it does not already exist. This removes a
small amount of administrative burden in that you do not have to create the Rally SCMRepository item before you run a
configuration mentioning a new repository. A one-to-many mapping can create performance issues.

For each repository, there is a configuration file and a timefile. The timefile records the timestamp of the second-to-last
commit for the repository. For example, you have an Apricot repository that had some flurry of commits last fall but nothing
since and you also have a Banana repository that has had activity with the last couple of months. When commits for
these two repositories get poured into a single Rally SCMRepository, it has the following effect: when processing the
configuration for the Apricot repository, it is searching for recent Changeset records in Rally where recent is defined as
the value in the timefile for Apricot. Since the last commit to that repository was last fall, there is going to be an excessive
amount of information read-out of the single SCMRepository (because it is looking at all Changesets since last fall, not just
the ones for Apricot).

Example Repository Configuration File
VCSConnector:

#

# The content of the file below should follow YAML specifications

# Non standard characters should be enclosed with double quotations

# Legend: (R)=required, (O)=optional

# Parameters for Rally Server

Rally:

    Server              : rally1.rallydev.com   # (R)

    Protocol            : https                 # (R) https (SaaS), https/http (On-Premises)

    Username            : "user@company.com"    # (R)

    Password            : "BigS3Krates"         # (R) encoded after first use

    Workspace           : "Target Workspace"    # (R)

    RepositoryName      : "CodeTank"            # (R)

 853

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository


 Rally®

#   Proxy               : "server:port"         # (O)

#   ProxyUser           : "Proxy User"          # (O) for an authenticating proxy

#   ProxyPassword       : "Proxy Password"      # (O) for an authenticating proxy

    Lookback            : 90                    # (O) 90 minutes (default)

    UpdateArtifactState : False                 # (O) False (default)

    StateExtractorClass : BasicActionsAndArtifactsExtractor(message)  # (O) only used if above is True

    Debug               : False                 # (O) False (default)

# Parameters for Microsoft Team Foundation Server

TFS:

    Server              : localhost             # (O)

    #Port                : 8080                 # (O) 8080 is the customary value for TFS 2015

    Protocol            : http                  # (O) http (default) or https

    TfsServerVersion    : 2017                  # (O) 2015 or 2017 (2017 is the default)

    #TfsVirtualPath      : tfs                  # (O) tfs is the customary value for TFS 2015, for TFS 2017

 the value is customarily empty

    CollectionName      : "Collection Name"     # (R)

    TeamProject         : "Team Project"        # (R)

    Project             : "Project"             # (O)

    Lookback            : 90                    # (O) 90 minutes (default)

    MaxItems            : 100                   # (R) max items to process in a run, 1000 (default)

# Parameters for Microsoft Team Foundation Server

Services:

    Preview             : True                  # (O) True or False (default)

    LogLevel            : Debug                 # (O) Info (default)

#   PostBatchExtension  : MetricsPoster         # (O) future use

# Mapping TFS username to a Rally username - choose one from the 6 below

Transforms:

#   Author              : Passthru                                                    # (O) Passthru (default)

#   Author              : EmailAddressAsRallyUser                                     # (O)

#   Author              : FileBasedUserNameLookup(user_map.txt, ":")                  # (O)

#   Author              : RallyUserNameLookup(FirstName, LastName)                    # (O)

#   Author              : UserNameDomainAugmentLookup(DomainName)                     # (O)

#   Author              : UserLookupChainGang(FirstName, LastName, user_map.txt, ":") # (O)

The three Proxy items are commented out by using a # in front of the item. Within a YAML file, any line beginning with a #
character is ignored and any content following a # character sequence is ignored (including the # sequence).

TFS 2017-specific considerations:

• With TFS 2017, the default port is no longer 8080. You may have to adjust your configuration file to account for this,
potentially dropping out the Port tag in the TFS section.

• With TFS 2017, there is no longer a value of 'tfs' for the virtual directory. You may have to adjust your configuration file
to account for this, potentially dropping out the TfsVirtualPath tag in the TFS section.

Repository Time File

Each time the connector finishes running, it will update a repository time file in the base installation directory, which has a
name of the form <configuration-name>_time.file . This file contains the date of the last TFS commit processed
by the connector. Therefore, when the connector runs again, it knows where to begin processing commits made by the
user.

When first run, there will not be a time file for the configuration and the connector defaults to looking for commits that
occurred 72 hours prior to the run of the connector. You can override that behavior by creating and editing a time file for
the configuration file you are about to process. By providing an entry in the correct format, you can control that point from
which commits are processed.

 854



 Rally®

The file contains only one line and it is a time stamp (in GMT/UTC time). The general format of the file is YYYY-mm-dd
HH:MM:SS Z (UTC (or Zulu) time.). Following are the contents of a typical time file:

2020-05-17 18:49:22 Z

NOTE
The connector will skip processing commits for a repository until there are three or more commits to process.
Once there are three or more commits, the skipped commits will be processed. This is a design decision due to
performance issues in Rally when processing the commits.

User Mapping File

The file configs/user_map.txt determines how user names are translated between your TFS system and your Rally
subscription. If the user names are universally identical in both systems, then you can either comment out all Author
subitems underneath the Transforms section or you can set the value for the Author field in the Transforms section to
Passthru. If, however, there is a deterministic mapping that can transform a TFS user name to a Rally user name, you
will need to adjust the transformation value for Author to the appropriate classname. Consult the User-Mapping-
Strategies text document (part of the installation) to determine which technique fits your particular situation.

Once you have identified a suitable Author transformation technique, you will need to edit the configuration to identify the
Ruby class name that will implement that transformation. The Ruby class name must exist in a file of Ruby source code
that is in a file in the plugin subdirectory.

Example user_map.txt file:

# TFS repo username       Rally username

# --------------------  : -----------------------

jpkole                  : test@rallydev.com

user1                   : tester1@rallydev.com

user2                   : tester2@rallydev.com

Create an API Key

A Rally API Key can be created to use to access your subscription data without using your username and password.

To use the API Key in a connector, edit the Rally section in the configuration .yml file and add an APIKey line. When
the APIKey configuration entry is specified, omit the Username and Password from the Rally configuration section. If an
APIKey entry is present, the username and password are not used and a warning will appear in the log file if they are
included in the configuration file. This is true even if the APIKey entry value is invalid, blank, or nil. If your subscription
administrator has configured your subscription to be SSO only, you no longer need to add the user associated with the
given APIKey value to the list of allowed users.

The connector now uses rally_api version 1.2.1. Please note that the APIKey specified must have full access, a read-only
api key will not allow the connector to write to Rally.

For help creating a full-access API Key, see Rally Application Manager.

Run the Connector

Your PATH environment variable must contain a filesystem path where the tf.exe command can be found.

For a TFS 2015 installation, the path may be something like:

C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\

For the default Visual Studio 2017 installation on a 64-bit system it may be something like:

 855

https://en.wikipedia.org/wiki/Coordinated_Universal_Time


 Rally®

C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\Common7\IDE\CommonExtensions\Microsoft

\TeamFoundation\Team Explorer

You must locate the tf.exe and set the environment Path to include the directory in which it is located.

Preview Mode

In the Services section of your configuration file ( configs/repo_one.yml for example), is an entry for Preview that
is set to False. You may want to set this value to True in the initial setup phase to ensure the connector can successfully
connect to Rally with the credentials and information you provided, as well as proving out the use of the tf.exe command.
Once you have determined that a connector run in Preview mode operates as expected, you can set the Preview value in
your configuration to False.

Run as a Scheduled Task

You can use the Windows Task Scheduler (or any other job-task scheduling software) to run the connector periodically.
Initially, Rally recommends the connector to be run every 15 minutes during normal business hours and less frequently
during non-business hours.

Command Line Invocation

You can have numerous configuration files in the configs subdirectory and specify any number of them for invocation. For
example:

ruby tfs2ca_agile_central.rb apricot banana cherry dogwood

In the above example, the files apricot.yml , banana.yml , cherry.yml , and dogwood.yml must exist in the
configs subdirectory of your current working directory. The connector only looks for configuration files in the configs
subdirectory (which is under the installation base directory).

Log Files

Whenever the connector is run, two different log files under the current working directory are updated for each
configuration file named:

logs/
tfs2ca_agile_central.log

An entry is made in this log file to note the connector was invoked. For each configuration named at
invocation, there will be an entry in this log file noting the return code from running the configuration. When
the connector run has finished with all configurations, an entry is written to note the completion of the
connector run.

logs/
<ConfigFileName>.log

For each configuration file named on the command line, this log file will be updated with much more detail
about the activity that occurred during the run.

You can adjust the verbosity written to these log files by modifying the LogLevel value in the YAML configuration file.
Normally, the LogLevel would be set to Info. Should you encounter situations where the connector does not complete
normally, you can adjust the LogLevel to Debug and run the connector to begin the troubleshooting process. These log
files can be sent to Rally Support to expedite the investigation of a case.

Extend the Connector

In the extension subdirectory of the installation, there is an example Ruby class in the file named statex.rb .

The class definition contained in that file is named BasicActionsAndArtifactsExtractor. This example class demonstrates
the basic technique of examining a commit message and extracting Rally artifact identifiers and state transition target
values. Using this class when the configuration file item UpdateArtifactState value is set to True results in the transition of
the state (or ScheduleState in the case of UserStory) of the identified artifact to the state value mentioned in the commit
message.

 856



 Rally®

For example, if there is a Rally defect (identified as DE1987) mentioned in the commit message with a new valid state
value either immediately preceding or following the artifact identifier, then the connector will change the state of the
identified artifact in Rally to that state.

The extension subdirectory allows you to provide your own message processing to extract Rally artifact identifiers and
state changes if the example provided does not fit your conventions. Your extension must be a class written in Ruby and
must provide an instance method called service which takes the commit message as an argument and must return a
Ruby Hash instance with entries keyed by a State name (Fixed, Completed, and so on) or nil with a Ruby Array as the
associated value populated by Rally artifact identifiers (FormattedID).

Troubleshoot the Rally VCS Connector for TFS (TFVC)

Use the following information when troubleshooting the connector.

Support and Feedback If you have any questions, issues, or suggestions, contact Support.

Log in to the Rally Software Community for support of this and all our connectors. This community is your
portal for self-service and support.

See Log Files
for Messages

When the connector runs, it generates two log files:

• logs/tfs2ca_agile_central.log
A global log file indicating the status of the connector.

• logs/<config-file-name>.log
For each configuration file given on the command line, this will be the log file containing information
about any issues with that configuration file.

Environment Variable
Setup Issues/Errors

One or more of the following errors may be seen:

• Unable to interrogate TFS for version information
• No witadmin.exe command available
• tfs2ca_agile_central detected a FATAL configuration error, No tf.exe

command available.

Solution: Verify that you have added the path to your TFS Command Line Tools to your PATH environment
variable by entering in the following into your Command Prompt window (replacing the path if yours is
different):

set path=%path%;C:\Program Files\Microsoft Visual Studio 14.0\Common7\IDE

It may also be necessary to set environment variable VS100COMNTOOLS to point to the correct path for
visual studio. More information is available in this StackOverflow link. The environment variable will change
depending on the version of Visual Studio:

%VS140COMNTOOLS% - Visual Studio 2015

The RepositoryName
is Case Sensitive

The configuration file contains a line like:
RepositoryName: Chien1

which is the name of the SCMRepository object in Rally. This name is case-sensitive. Assuming the name
was mistakenly specified as chien1, you may see a log file error like:

 INFO : RallyVCSConnection.validate - SCMRepository: chien1

DEBUG : RallyVCSConnection.getSCMRepository - No SCMRepository named |chien1| in

 Workspace: |WS1|

 INFO : RallyVCSConnection.createSCMRepository -

        Creating SCMRepository 'chien1' (Subversion) in the 'WS1' workspace...

ERROR : UnrecoverableException (/Users/...../exceptions.rb:42 line in `initialize') -

        Unable to create SCMRepository: 

        Error on request - https://rally1.rallydev.com/slm/webservice/2.0/

scmrepository/create.js -

 857

https://support.broadcom.com/group/ecx/my-dashboard?
https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e
https://stackoverflow.com/questions/6979053/how-to-find-the-path-to-tf-exe-from-msbuild


 Rally®

                {:errors=> ["Validation error: SCMRepository.Name:

        There is already a SCMRepository with the name 'chien1' in this

 Workspace"], ... ]}

No Valid Artifacts
Mentioned

Seen when connector tries to add a changeset to a Project where the Connector User does not have
permissions:
DEBUG : RallyVCSConnection.extract_artifact_references - No valid artifacts were

 mentioned in message

        DEBUG : RallyVCSConnection._createInternal - Created Changeset: OID:

 4935999999  Revision: 14d0f533084c700f Timestamp:|2016-01-06T14:58:01.000Z| (not

 associated with any Artifacts)

Rally VCS Connector for TFS (TFVC) Revision History

• 1.6.0-master --- 25-May-2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support.
• 1.5.3-Master --- 12-Dec-2017

– Enhancements:
• Support for TFS 2017.
• Sync all vcs-eif connectors.

• 1.5.1-master --- 12-Sept-2017
– Enhancements:

• Added Message to fields eligible for Transform.
• Certified for use with Ruby 2.2.6.

• 1.4.3-master --- 24-Oct-2016
– Enhancements:

• Updated the logic to allow for processing after 1 commit.
• 1.4.1 - master-1044 (Mar-2016)

– Enhancements:
• Support for TFS 2015.

• 1.4.0 - master-1042 (Nov-2015)
– Enhancements:

• Brand redesign.
• 1.3.2 - master-1038 (Aug-2015)

– Enhancements:
• Added support for use of APIKey entry and revised documentation to encourage use of this in preference to use

of still supported ApiKey.
• 1.3.1 - master-1036 (Jul-2015)

– Enhancements:
• Added support for downcasing any Rally username value, inverted sequence of retrieval from Rally and target

VCS system, and upped dependency on rally_api to 1.2.1.
• 1.3.0-master-1034 (April 2015)

– Fixes:
• Handle commit messages with multi-byte characters whose length exceeds the Rally Changeset Message field

length limit of 4000 bytes.
– Enhancements:

• Updated dependency on rally_api to 1.2.0
• 1.2.9 - master-1033 (March-2015)

 858



 Rally®

– Fixes:
• Refined handling of commit messages in excess of 4000 characters to account for JSON encoding expansion.

• 1.2.8 - master-1038 (March-2015)
– Enhancements:

• Improved the ability to identify artifact identifiers in commit messages surrounded by bracketing characters.
• 1.2.7 - master- cib1031(February-2015)

– Enhancements/fixes:
• Fixed issue where empty commit message resulted in raising an exception.

• 1.2.6 - master-1030 (January-2015)
– Enhancements:

• Updated rally_vcs_connection.rb configureExtensionEnvironment and statex.rb to accommodate custom artifact
prefixes (such as 'BUG' for Defect, and so on).

• Updated dependency for rally_api to version 1.1.2.
• 1.2.5 - master-1034 (October-2014)

– Enhancements:
• Updated to use Rally Web Services API v2.0 and the updated rally_api gem.

– Known Issues:
• Exception thrown when comment for changeset is left blank. Example output for exception below:

C:\Program Files (x86)\Rally Software\TFSConnectorforRally\tfs2rally-1.2.5>tfs2r 

ally.exe prod_mae_tfs_rally.yml 

ERROR: tfs2rally detected an Exception condition 

    C:/Users/<USER_REPLACED>/AppData/Local/Temp/ocr19F.tmp/src/tfs2rally.rb:55:in `<main> 

' 

    C:/Users/<USER_REPLACED>/AppData/Local/Temp/ocr19F.tmp/src/tfs2rally.rb:51:in `main' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_driver.rb:50:in `execute' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_driver.rb:50:in `each' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_driver.rb:53:in `block in execute' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_driver.rb:179:in `delegateToConnectorRunner' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_runner.rb:111:in `run' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector_runner.rb:157:in `operateService' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector.rb:233:in `run' 

    ... gems/vcseif-1.2.5/lib/vcseif/vcs_connector.rb:289:in `reflectChangesetsInRally' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:163:in `getRecentChangesets' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:163:in `collect' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:163:in `block in getRecentChangesets' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:163:in `new' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:397:in `initialize' 

    C:/Program Files (x86)/Rally Software/TFSConnectorforRally/tfs2rally-1.2.5/lib/

tfs_connection.rb:425:in `_extractFields' 

C:\Program Files (x86)\Rally

• 1.2.4 - master-1032 (16-Sep-2014)
– Enhancements/Fixes:

• Added support for using API Key in lieu of username and password in the Rally portion of the configuration file.
• Updated to rally_api toolkit version 1.0.1.

• 1.2.3 - master-1030 (19-Aug-2014)

 859



 Rally®

– Enhancements/Fixes:
• Fixed DE21993 - to meet Rally's commit message field limitation of 4000 characters, if a commit message

exceeds the character limit, characters over the limit are truncated. Upon truncation, the commit message is
appended with an annotation of the truncation and a warning message displays in the log file.

Sample Configuration Files for VCS TFS
The following sample configuration files may help you with your integration between Rally and VCS TFS (Microsoft Team
Foundation Server):

• TFS-config-TestConnections.pxml
• TFS-config-us2task.pxml
• TFS2012-config-crosslinkurlfield.pxml
• TFS2012-config-Stories-and-linked-Tasks.pxml

For other useful setup information, see the Rally Integrations Best Practices topic.

Microsoft TFS/VSTS for Work Items
The Rally Connector to Microsoft TFS for Work Items allows you to synchronize work items in TFS with artifacts in
Rally. The connector runs on a Windows, Linux or Mac computer behind your firewall using Microsoft's TFS (Team
Foundation Server) interface and accesses Rally through our Web Service API. Most fields between the two systems can
be synchronized.

The connector provides five services to synchronize objects between Rally and TFS:

• Copy work items created in TFS to Rally (defects, user stories, or test cases only)
• Copy work items created in Rally (defects, user stories, tasks, or test cases only) to TFS work items
• Update Rally work items based on changes made in TFS
• Update TFS work items based on changes made to Rally work items
• Update Rally fields and TFS fields (may not be used in conjunction with the other update services)

See the Work Item Connector for Microsoft TFS/VSTS Installation and User Guide for information on installing,
configuring, and using the connector.

Our connector upgrade supporting TFS 2017 also includes support for Microsoft Visual Studio Team Services. This
provides users with the option to use our integration with either the hosted or cloud version of TFS.

See Supported Versions for Rally Connectors for more information on supported versions.

Work Item Connector for Microsoft TFS/VSTS Installation and User Guide
The Rally Connector to Team Foundation Server for Work Items can synchronize work items in Microsoft Team
Foundation Server (TFS) with artifacts in Rally.

The connector runs on your computing platform behind your firewall using the Microsoft's Team Foundation Server (TFS)
REST API and accesses Rally through the Rally Web Services API v2.0. Most work item artifact fields between the two
systems can be reflected.

Our connector upgrade supporting TFS 2017 also includes support for Microsoft Visual Studio Team Services 2017
(VSTS). This provides users with the option to use our integration with either the hosted or cloud version of TFS.

The connector is configured through an XML file. A log file is created to track all changes made in Rally and TFS by the
connector. The connector requires that a custom field exists in each system to store the unique ID of the linked objects in
the other system. The connector copies fields from Rally or TFS based on field mapping specified in the configuration file.
Standard and custom fields can be mapped between the two systems.

 860

https://knowledge.broadcom.com/external/article?articleId=125036
https://knowledge.broadcom.com/external/article?articleId=125034
https://knowledge.broadcom.com/external/article?articleId=125033
https://knowledge.broadcom.com/external/article?articleId=125022
https://rally1.rallydev.com/slm/doc/webservice/index.jsp?version=v2.0


 Rally®

WARNING
Only certain item hierarchies are supported. TFS allows you to create arbitrary hierarchies of work items. For
example, you could have user stories as children of bugs. Because of the domain model mismatch between
these arbitrary hierarchies and the Rally object model, the connector in general does not support reflecting
hierarchical relationships between work items. However, one exception is linking TFS tasks to their parent story.
Learn how to Copy story-task bundles from Rally to TFS. So, while you can map any TFS work item type to
a Rally story or defect, you cannot configure the connector to synchronize a work item's children or parents,
unless you are specifically using stories and tasks. Also note: Custom workflows and milestones are not
supported.

The connector provides five services to synchronize objects between Rally and TFS:

• Copy work items created in TFS to Rally (defects, user stories, or test cases only)
• Copy work items created in Rally (defects, user stories, tasks, or test cases only) to TFS work items
• Update Rally work items based on changes made in TFS
• Update TFS work items based on changes made to Rally work items
• Update Rally fields and TFS fields (may not be used in conjunction with the other update services)

The configuration file specifies which services to run, and in what order.

The alternative update service, UPDATE_RALLYFIELDS_AND_OTHER , searches Rally first for updates and pushes only
the recently changed fields to the other system. It then searches the other system for updates and pushes all mapped
fields in to Rally.

This makes the chances of overwrites of data highly unlikely. The only scenario where an overwrite might occur is if
"Peter" made changes in Rally and "Al" made changes in the other system for the same fields, the Rally information is
copied over to the other system (possibly overwriting the data of the other system), then all data is copied over to the Rally
system.

With the Rally Work Item Connector for TFS 2015 version 4.7.0, attachments are fully supported with the 4.7.x and 4.8.x
versions of this connector. You can reflect TFS work item attachments in Rally and/or reflect Rally artifact attachments in
TFS 2015. There is a tagset in the configuration that is new for TFS connectors to enable this.

It is important to recognize that the data models of Rally and TFS are not identical. The data models of the two connected
systems are only partially compatible. We recommend that you take some time to identify the key data items that you want
to track in both systems and what you want the policy to be as far as having a primary system of record. You'll see specific
information later in this document discussing things to be considered and some potential approaches.

Some known limitations of the Work Item Connector for Microsoft TFS/VSTS include:

• This connector was tested on and is supported on TFS 2015 version 14.0.24712.0, TFS 2017 and VSTS 2017.
Because of differences in header information, TFS 2015 versions newer than 14.0.24712.0 will not work with this
connector. The connector will display a status code 504 error if an unsupported TFS 2015 version is used.

• This connector does not support LDAP.
• When your target TFS system is TFS 2017 or VSTS 2017, you must obtain and use a personal access token.
• The 2015 and 2017 TFS connector supports Basic Authentication in your config file. To configure the server, you will

use Basic Authentication (which is the same as the authentication you use to log into TFS in your browser). We do not
support NTLM or any other alternative authentication techniques in the connector.

• There are no RTF (rich text field) field handlers.
• Tasks can be copied from Rally to TFS (but not in the opposite direction).
• Tasks can be updated from Rally to TFS or from TFS to Rally.

This installation and user guide includes:

 861



 Rally®

• Work Item Connector for Microsoft TFS/VSTS Prerequisites
• Software and Hardware Requirements
• Install the Work Item Connector for Microsoft TFS/VSTS
• TFS Setup
• Rally Setup
• Work Item Connector for Microsoft TFS/VSTS Configuration
• XML Setup
• Run the Work Item Connector for Microsoft TFS/VSTS
• Copy Story-Task Bundles from Rally to TFS
• Troubleshooting the Work Item Connector for Microsoft TFS/VSTS
• Work Item Connector for Microsoft TFS/VSTS Revision History

Work Item Connector for Microsoft TFS/VSTS Prerequisites

The following people should be involved in getting fields set up in both Rally and TFS:

• A TFS administrator user who can create a custom field on the work items you want to synchronize with Rally.
• A Rally administrator (subscription or workspace) user who can create a custom field on the Rally artifact you want to

synchronize with TFS (this is only for initial setup; user access is all that's needed to run the connector).
• Someone with access to the computing platform described above to install and configure the connector.

Consider the process you want to set up between Rally and TFS:

• Where do objects start and end their lifecycle?
• Which fields need to be updated?

You will also need to:

• Identify a test project in TFS to use for testing the connector.
• Identify a test Rally workspace or project to use for testing the connector.
• Acquire authentication token for TFS 2017 or VSTS 2017 to use in lieu of a password.
• Identify a TFS user with at least team project contributor (access, read, and write work items) permissions. A user with

team project reader permissions is not sufficient to run the connector.

See Rally Integrations Best Practices for useful information.

Software and Hardware Requirements

• A Rally subscription. A Rally account with administrator privileges (subscription or workspace) is needed for setup (but
only user access is needed to run the connector).

• A Windows platform (server or VM) or a Linux/Mac platform (server or VM).
• Proxy server details if the machine used to run the connector uses a proxy server to connect to Rally or TFS.
• Ruby 2.2.6 installed

– For Linux/Mac operating systems (we recommend installing using rvm or rbenv)
– For Windows operating system (x64) (download.exe)
– Rally certifies the use of Ruby 2.2.6. As of version 4.8.0 of the connector, prior versions of Ruby (2.0.0, 2.1.x) will no

longer work as they do not have code necessary to work with the connector. The connector has worked in the past
with Ruby 2.0.0-p247 and Ruby 2.1.5. We no longer test the connector with those versions. The connector will not
work with Ruby 2.3 or 2.4.

• Ruby Development Kit for Ruby 2.0 – 2.3, only necessary for Windows (download the DevKit-
mingw64-64-4.7.2-20130224-1432-sfx.exe )
– Add path to the devkit’s bin directory to environment Path variable:

a. cd to the Ruby DevKit root directory

 862

https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.6.tar.gz
https://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-2.2.6-x64.exe
https://dl.bintray.com/oneclick/rubyinstaller/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
https://dl.bintray.com/oneclick/rubyinstaller/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

b. Run command: ruby dk.rb init
c. Run command: ruby dk.rb install

• A working instance of TFS 2015 accessible on the network from your selected connector platform -or- a working
instance of TFS 2017 / VSTS 2017 with the above mentioned access characteristics.

Install the Work Item Connector for Microsoft TFS/VSTS

Before installing the connector be sure you have completed all the prerequisites.

1. Download the connector by following the steps here.

2. Unzip the downloaded zip file in a folder or directory of your choice that will be the parent of the installation and
operation directory for the connector.

3. The resulting folder or directory is named for the connector; you can change the name of that directory as you see fit.

4. Change the directory to the root of the connector installation: cd CAAgileCentralConnectorforTFS-4.8.x-
master-yy

5. Check the contents of the directory using ls -laR (or dir on Windows). As a result of unpacking the distribution
archive the following files and folders will have been created:

• README.txt
• field_handlers
• gems
• install_gems.rb
• rally_csv_user_mapping_sample.csv
• tfs_config.xml

6. Set an environment variable name GEM_COMMAND to the gem executable located in your Ruby installation directory
tree. Here are location examples on Linux and Windows respectively:

• /myhome/.rvm/rubies/ruby-2.2.6/bin/gem
• C:\Ruby226\bin\gem

7. Run the install_gems.rb Ruby script to get all associated gems installed. To run the command, in a console or
terminal window at the prompt, type the following:
ruby install_gems.rb

Sample output of the  command:
ruby install_gems.rb 

rubygems-update installed

xml-simple installed

httpclient installed

multipart-post installed

faraday installed

mime-types installed

rally_api installed

rallyeif-wrk installed

rally_hp_alm_api installed

rallyeif-qc installed

If you see output similar to "You don't have write permissions..." then you will need to either:

 863



 Rally®

• Consult with your system administrator to obtain the necessary permissions (typically done by using sudo or other
similar software).

• Have the system administrator run the install_gems.rb command.

8. To confirm that all gems were installed correctly and that the executable is accessible and executable, at the command
prompt type: ca_agile_central2_tfs_connector.rb --version

You should observe console output detailing specifics about the components of the connector (Work Item Connector
Hub, Rally Spoke, TFSConnection).

TFS Setup

You need to create a custom field in TFS to contain Rally Object IDs.

See Microsoft instructions here.

We advise that you use the value Rally.Common.ExternalId as the reference name of your custom field. You will
need to add a custom field for the Rally ID for every work item type you intend to use with the Rally TFS work item
connector (the types 'Bug', 'User Story', 'Task' and 'TestCase' are supported).

If you will be using the connector in a TFS 2017 environment, you must obtain and use a personal access token. The
value of the access token should be placed in the config file as the Password value in the TFSConnection section. You
can find more information on how to obtain a TFS 2017 personal access token from https://docs.microsoft.com/en-us/
azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops.

Rally Setup for Microsoft TFS/VSTS

Rally accesses fields from their Display Name, not their Name. Spaces and underscores are removed, for example,
Example Field becomes ExampleField .

You need to create a custom field in Rally to contain TFS work item IDs.

1. Log into Rally as a workspace administrator or subscription administrator.

2. Select Setup

from the Rally menu bar in the upper-right corner of the display.

3. Select Workspaces & Projects.

4. Select the workspace that you wish to map to TFS. This will take you to the detail page for the given workspace.

5. Select the Fields link in the sidebar and ensure the Work Item type selected is defect (or whatever work item you are
mapping).

6. Select Actions, New Field.

7. Enter a Name of ExternalID , Display Name of ExternalID (name and display name must match), and type of
String . You can choose a different name (such as TfsId ) for the custom field in Rally, but the name you choose
must conform to these rules:

Make note of the name of this field. Once you start using the connector, this will contain the TFS ID of the TFS work
item you are mapping between the two systems.

• Begin with an uppercase letter
• Less than 41 characters (40 is the maximum for display name)
• No underscores, dashes, or spaces

 864

https://docs.microsoft.com/en-us/azure/devops/organizations/settings/work/customize-process-field?view=azure-devops
https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops
https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops


 Rally®

8. Select Save & Close.

Connector for Microsoft TFS/VSTS Configuration

A sample configuration file, tfs_config.xml , is part of the installation and should be in the root directory of the
installation. This is the directory you specified during the wizard-based Windows install (such as C:\Program Files
\RallyConnectorforTFSWorkItems ).

We recommend making a backup copy of the tfs_config.xml in case you need to reference a valid configuration file
later.

Edit tfs_config.xml and enter the appropriate values between each begin and end tag.

<Config>

  <RallyConnection>

    <Url>rally1.rallydev.com</Url>

    <WorkspaceName>Workspace Name</WorkspaceName>

    <Projects>

      <Project>Project Name</Project>

    </Projects>

    <User>user@company.com</User>

    <Password>password</Password>

        <!-- You can use an APIKey in place of User and Password tags -->

        <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> -->

    <ArtifactType>Defect</ArtifactType>

    <ExternalIDField>ExternalID</ExternalIDField>

    <CrosslinkUrlField>TFSLink</CrosslinkUrlField>

     <!--

    <CopySelectors>

        <CopySelector>Field_Name = Value</CopySelector>

    </CopySelectors>

    <UpdateSelectors>

       <UpdateSelector>Field_Name = Value</UpdateSelector>

   </UpdateSelectors>

-->

    <CopySelectors>

                <CopySelector>SyncStoryToTFS = True</CopySelector>

        </CopySelectors>

        <UpdateSelectors>

           <UpdateSelector>State != Closed</UpdateSelector>

        </UpdateSelectors>

  </RallyConnection>

  <TFSConnection>

     <Protocol>http or https</Protocol>    

    <Server>your_TFS2015/2017_or_VSTS_server_name</Server>    

    <Port>port_on_which_TFS_fields_requests</Port>    

    <Instance>TFS or other virtual directory name  for your TFS instance</Instance>

          <!-- Do not use the Instance tag if you are using VSTS -->     

          <!-- If the TFS server does not use instance please use <Instance>/</Instance>-->

    <Collection>collection_name</Collection> <!-- This will be <Collection>DefaultCollection</Collection> if

 using VSTS    -->

    <User>your TFS 2015 user name</User>    

    <Password>your TFS 2015 account password or your TFS 2017/VSTS token</Password>    

 865



 Rally®

    <TeamProject>team project Name</TeamProject>

    <ArtifactType>Bug</ArtifactType>

    <IDField>System.Id</IDField>

    <ExternalIDField>Rally.Common.ExternalId</ExternalIDField>

    <CrosslinkUrlField>RallyLink</CrosslinkUrlField>

  <!--  <CopySelectors>

     <CopySelector>System.AssignedTo = My User</CopySelector>

   </CopySelectors>

   <UpdateSelectors>

       <UpdateSelector>Field_Name = Value</UpdateSelector>

   </UpdateSelectors>

 -->

  </TFSConnection>

  <Connector>

    <FieldMapping>

      <Field><Rally>Name</Rally>  <Other>System.Title</Other></Field>

      <Field><Rally>Priority</Rally>  <Other>Microsoft.VSTS.Common.Priority</Other></Field>

    </FieldMapping>

    <OtherFieldHandlers>

      <OtherEnumFieldHandler>

        <FieldName>Microsoft.VSTS.Common.Priority</FieldName>

        <Mappings>

          <Field><Rally>Resolve Immediately</Rally> <Other>1</Other></Field>

          <Field><Rally>High Attention</Rally>    <Other>2</Other></Field>

          <Field><Rally>Normal</Rally>      <Other>3</Other></Field>

          <Field><Rally>Low</Rally>     <Other>4</Other></Field>

        </Mappings>

      </OtherEnumFieldHandler>

    </OtherFieldHandlers>

  </Connector>

  <ConnectorRunner>

    <Preview>False</Preview>

    <LogLevel>Debug</LogLevel>

    <Services>UPDATE_TFS_TO_RALLY, COPY_TFS_TO_RALLY</Services>

  </ConnectorRunner>

</Config>

Each major section is surrounded by a tag to delineate that section.

RallyConnection Defines the connection information for Rally, including Rally URL, username and password or APIKey.
TFSConnection Defines the connection information for TFS, including TFS Collection URL, project name, artifact type, user,

and so on.
Connector Defines the field mapping between the two systems. Generally, strings should be mapped to strings,

integers to integers, and so on. You can get a list of all the fields for a TFS team project collection with the
command:
witadmin listfields /collection:http://<server>:<port>/tfs/<collection_name>

ConnectorRunner Specifies parameters related to the services the connector is to run and how often to run the services.

 866



 Rally®

Field Mapping

The field mapping section is located between the <Connector> tags in the configuration file and defines what fields map
between the two systems.

For example, this definition sets up a mapping between the Rally field Name with the field Headline in the TFS system. On
a create or update, the connector will only update the Name field in Rally and the Headline field in the TFS system.

<Connector>

  <FieldMapping>

    <Field>

      <Rally>Name</Rally>

      <Other>Headline</Other>

    </Field>

  </FieldMapping>

  .... </Connector>

When you set up your mapping between the two systems, ensure that the fields are compatible between the two systems
(an integer field should map to an integer field in the other system, a rich text field should map to a rich text field in the
other system).

Otherwise, you might experience situations where information is not created or updated between the two systems and you
will see an error in the log file. For example, the connector will post an error for a particular work item if you try to post a
string to a custom field of type integer in Rally.

You can add subsequent mappings by appending to this list. For example, this sets up a mapping of:

• Rally Name: Headline
• Rally Description: Description
• Rally Priority: Priority

<Connector>

  <FieldMapping>

    <Field>

      <Rally>Name</Rally>

      <Other>Headline</Other>

    </Field>

    <Field>

      <Rally>Description</Rally>

      <Other>Description</Other>

    </Field>

    <Field>

      <Rally>Priority</Rally>

      <Other>Priority</Other>

    </Field>

  </FieldMapping>

  .... </Connector>

If you are mapping a drop-down value in Rally to the other system, be sure the drop-down values match. Otherwise, the
connector will generate an error that the value was not found in the list. If the drop-down values are different between the
two systems, see Mapping Drop-Down Values.

Individual fields may also have a directionality specified, whereby that specific field will be mapped in one direction only.
For more information on this feature, see Field Directionality.

A field that has been mapped in the <FieldMapping> section can have a "field handler" registered against either field (the
Rally field or the "Other" field).

 867



 Rally®

• Mapping User Names
• Mapping Reference Fields From Rally (like Project, Release, Iteration)

XML Tags

Below is a more detailed explanation of each tag section in the configuration file.

WARNING
Incrementally set up the connector!

Start with a basic configuration file, test that you can connect to TFS and Rally in a test environment. Once you
validate this is set up correctly, then start customizing the field mapping and field handler sections.

NOTE
Special characters contained in a Rally workspace or project name, which are markup sensitive, must be
escaped as follows:

& ampersand becomes &amp;

> greater than becomes &gt;

< less than becomes &lt;

Example: Research & Development becomes Research &amp; Development

XML Tags in the <RallyConnection> Section
<RallyConnection> Required. Opening parent tag for this section.

<Url> Required. Server used to connect to Rally (excluding the HTTPS prefix, as the connector adds https:// to
whatever is specified).

Sample values:

• sandbox.rallydev.com
• rally1.rallydev.com
• myRally.mydomain.com
• 192.168.23.24

<User> Required if no APIKEY specified. Login name for user to make the Web Services requests to create and
update work items in Rally.

Sample value: user@company.com

<Password> Required if no APIKey specified. Password associated with the above <User> .

NOTE
The connector will encode this password string and update it in the configuration file to avoid
clear-text passwords being stored.

Sample value: mypassword

<APIKey> Rally APIKey (from Rally Application Manager) for the account to be used to access Rally from the
connector. If this is specified, you do not need to supply a username and password. You do not need to add
the user associated with the given APIKey value to the list of allowed users.

Sample value: ABC123plmokn43315...

<WorkspaceName> Required. Workspace in Rally you want to copy and update work items.

Sample value: My Workspace Myworkspace

 868



 Rally®

<Projects> Required. Contains a list of project tags. Each tag refers to one Rally project that will be used when finding
new Rally work items to copy to the other system. For updating work items from Rally to the other system,
all projects in <WorkspaceName> are considered. At least one Rally project must be specified in this tag.

Sample values:

• <Project>Rally1</Project>
• <Project>Rally2</Project>

<ArtifactType> Required. Type of artifact you want to create and update in Rally.

Sample values:

• (Defect, defect), (Story, UserStory, HierarchicalRequirement),
TestCase

<ExternalIDField> Required. Rally custom field of type string (name and display name must be identical) that stores the
unique ID for the other system. Refer to the Create a custom field in Rally to contain TFS work item IDs
section above.

Sample value: TFSID

<CrosslinkUrlField> A Rally custom field (of type String) which will be used to store a hyperlink to the corresponding artifact
(bug or story) in TFS.

Sample value: TFSLink

<CopySelectors> Criteria to use when finding new Rally issues to copy to TFS. Multiple criteria are ANDed together. An
individual selector specification has the form:
<CopySelector><field><relation><value></CopySelector>

where:

• <field> is the name of a TFS work item field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field> .

Sample values:

• <CopySelector>Status = Open</CopySelector>
• <CopySelector>Priority = Low</CopySelector>

<UpdateSelectors> Criteria to use when finding existing Rally issues to be updated in TFS. Multiple criteria are ANDed
together. An individual selector specification has the form:
<field> <relation> <value>

where:

• <field> is the name of a TFS work item field
• <relation> is either = or !=
• <value> is a valid value for the <field> .

Sample value: Release!= alpha

<FieldDefaults> Set a default value for a Rally field.

Sample value:

<Field><Name>Rallyfieldname</Name><Default>defaultvalue</Default></Field>

<WorkProductType> The Rally Artifact Type name for the Task WorkProduct. At this time only the value of Story is valid.
This limits Tasks copied from Rally to TFS to those Tasks whose WorkProduct is a Story. This tag is only
relevant when the ArtifactType tag value is Task .

Sample value: Story

 869



 Rally®

<WorkProductE
xternalIDField>

The field name in the WorkProductType that holds the value of the corresponding Story in Rally. This tag
only relevant when the ArtifactType tag value is Task.

Sample value: TFSId

</RallyConnection> Required. Closing parent tag for this section.

XML Tags in the <TFSConnection> Section
<TFSConnection> Required. Opening parent tag for this section.

<Protocol> http or https (defaults to http)

Sample value: https

<Server> Required. Your TFS server.
<Port> TFS REST API service port (defaults to 8080 )

Sample values: 8080 or 443

<Instance> Name of your TFS instance (defaults to tfs ). This tag is not to be used with VSTS.

Sample value: tfs

<User> Required. Login name for user to make TFS REST API requests.

Sample value: user@your_company.com

<Password> Required. Password associated with the above User. Or, if using TFS2017, the personal access token
value.

Sample value: secret_password

<Collection> Required. The URL of a team project collection. This will be DefaultCollection if using VSTS.

Sample value: CollectionName

<TeamProject> Required. The TFS team project containing work items to be associated with Rally work items. Only one
team project can be specified. If more than one team project is needed, use multiple configuration files.

Sample value: Test Project

<ArtifactType> Required. TFS work item type for the work items you want to create and update in TFS. The exact set of
default work item types that are available for your team project depends on the process template the team
project was created with, along with any custom work item types that may have been imported.

Sample value:
User story

Bug

Test case

Task

<IDField> TFS field used to store the unique ID of a work item, defaults to System.Id .

Sample value: System.Id

<ExternalIDField> Required. TFS custom field that stores the unique ID for a Rally work item. See Create a custom field in
TFS to contain Rally object IDs.

Sample value: Rally.Common.ExternalId

<ExternalEnd
UserIDField>

A custom user field in TFS of type String used to store the FormattedID of the Rally work item (DExx).
See Create an External ID User Field in TFS.

NOTE
Do not use the ExternalID for this custom field. Using the same value causes the connector to
overwrite the ExternalIDField with the Rally Formatted ID and breaks the connector.

 870



 Rally®

Sample value: Rally.Common.ExternalUserId

<CrosslinkUrlField> A TFS custom field (of type HTML) used to store a hyperlink to the corresponding artifact (bug or story) in
Rally.

Sample value: TFSLink

<CopySelectors> Criteria to use when finding new issues to copy to Rally. An individual selector specification has the form
<field> <relation> <value> , where

• <field> is the name of a TFS work item field,
• <relation> is one of = , != , gt , lt , gte , lte .
• <value> is a valid value for the <field> .

Sample value:
<CopySelector>State = Open</CopySelector>

<UpdateSelectors> Criteria to use when finding existing issues in TFS that should be updated to Rally. An individual selector
specification has the form <field> <relation> <value> , where

• <field> is the name of a TFS work item field,
• <relation> is one of = , != , gt , lt , gte , lte and
• <value> is a valid value for the <field> .

Sample value:

<UpdateSelector>System.CreateDate gte 2011-10-23</UpdateSelector>

<FieldDefaults> Set a default value for a TFS field.

Sample value:

<Field><Name>TFSfieldname</Name><Default>defaultvalue</Default></Field>

<ParentType> The TFS Artifact Type name for the Task Parent. At this time only the value of Story is valid. This tag is
only needed when the UPDATE_TFS_TO_RALLY  service is specified and is only relevant when the
ArtifactType tag value is Task .

Sample value: User Story

<ParentExternalField> The field name in the ParentType that holds the value of the corresponding Story in TFS. This tag is only
relevant when the ArtifactType tag value is Task .

Sample value: TFSId

</TFSConnection> Required. Closing parent tag for this section.

XML Tags in the <Connector> Section
<Connector> Required. Opening parent tag for this section.

<FieldMapping> Required. Determine what fields map between the two systems.

Sample values: See Field Mapping.

<RallyFieldHandlers> (opening tag)
<RallyConcat
FieldHandler>

Using the contents of Dest-fieldname as the initial string, appends each additional Src-
fieldnameN to Dest-fieldname , using HTML break tags ( <br /> ) to separate each additional
field value.
<RallyConcatFieldHandler>

      <FieldName>

         Dest-fieldname

      </FieldName>

      <ConcatFields>

         <Field>Src-fieldname1</Field>

 871



 Rally®

         <Field>Src-fieldname2</Field>

         <Field>.....</Field>

      </ConcatFields>

   </RallyConcatFieldHandler>

Sample values:

• Some custom field
• Description
• some other field

..

<RallyDateTim
eFieldHandler>

Bi-directional.

Rally to Other: Convert the Rally ISO date in field F1 into a date string formatted as specified by the string
S1 (as per the Ruby DateTime.strftime function) and store this new date string into the field F1 is mapped
to.

Other to Rally: The date string contained in the field which F1 is mapped to, is converted into a Rally ISO
date (in accordance with the Ruby DateTime.parse) and stored in the Rally F1 field. Note that string S1 is
not used in this case.

   <RallyDateTimeFieldHandler>

      <FieldName>F1</FieldName>

      <DateTimeFormat>S1</...>

   </RallyDateTimeFieldHandler>

Sample value:

TestDate

%m-%d-%Y%H:%M:%S

<RallyEnumF
ieldHandler>

Allows for the mapping of non-alike drop-down values between the two systems.

See Map Drop-Down Values.

<RallyReferenc
eFieldHandler>

Used to map a field from an object.
<RallyReferenceFieldHandler>

      <FieldName>

         name-of-field

      </FieldName>

      <ReferencedFieldLookupID>

         name-of-field

      </ReferencedFieldLookupID>

   </RallyReferenceFieldHandler>

Sample value:

User,Owner,Tester,...

Name,FormattedID,...

<RallyUserEma
ilFieldHandler>

Rally user to whom error and warning info will be emailed.
<RallyUserEmailFieldHandler>

    <FieldName>Owner</FieldName>

</RallyUserEmailFieldHandler>

Sample values:

User , Owner , Tester ...

<RallyUserF
ieldHandler>

Used to map user names. See Map User Names.
   <RallyUserFieldHandler>

      <FieldName>

 872

http://www.ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/DateTime.html#method-i-strftime
http://www.ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/DateTime.html#method-c-parse


 Rally®

         name-of-field

      </FieldName>

      <ReferencedFieldLookupID>

         name-of-field

      </ReferencedFieldLookupID>

   </RallyUserFieldHandler>

Sample values:

User , Owner , Tester ...

Name,FormattedID ,...

<RallyCSVUserMap
pingFieldHandler>

Specifies the name of a field being mapped ( name-of-field ) and a CSV file where user mappings
are stored ( name-of-file ). The CSV file is used to lookup and transform usernames based on the
mappings specified within. See a more detailed explanation on the FAQ page or an example XML file.
<RallyCSVUserMappingFieldHandler>

  <FieldName>

      name-of-field

  </FieldName>

  <FileName>

      name-of-file

  </FileName>

</RallyCSVUserMappingFieldHandler>

Sample values:

• <FieldName>SubmittedBy</FieldName>
• <FileName>MyUserMappings.csv</FileName>

</RallyFieldHandlers> (closing tag)
<OtherFieldHandlers> Allows stripping of leading path elements ( TeamProject\SubGroup\MyProject ) --> MyProject

on the way out of TFS and augmenting a value with the Prefix on the way in to TFS.

Allows you to map drop-down values for a field between systems.

<OtherFieldHandlers>

  <TFSTreePathFieldHandler>

      <FieldName>

      Project or Iteration are common Treepath fields

      </FieldName>

      <Prefix>

      Customarily the TeamProject name

      </Prefix>

  </TFSTreePathFieldHandler>

  <OtherEnumFieldHandler>

  ...

  </OtherEnumFieldHandler>

</OtherFieldHandlers>

Sample value: Example for Iteration of Swing4 --> MyProject\Swing4

See Map Drop-Down Values.

<RelatedObjectLinkers> Specifies that attachments will be reflected (copied) from the TFS system to Rally. Attachments are limited
to no more than 50 MB in size. Any attachments that are larger than that size are not transferred from TFS
to Rally.

 873

https://knowledge.broadcom.com/external/article?articleId=125058


 Rally®

Not all tags in this section must be present. For example, if the artifact type in the <ArtifactType> tag earlier
in the configuration is 'Story' and you want to have Attachments in TFS be reflected in Rally, you would only
need the <RallyAttachmentLinker /> tag.

<RelatedObjectLinkers>

    <TFSTaskToParentLinker />

    <RallyTaskToWorkProductLinker />

    <RallyAttachmentLinker />

</RelatedObjectLinkers>

The *Task*Linker tags are only relevant within a Configuration for the Task artifact type.

</Connector> Required. Closing parent tag for this section.

XML Tags in the <ConnectorRunner> Section
<ConnectorRunner> Required. Opening parent tag for this section.

<Preview> Allows you to enable a preview mode for testing where NO objects are copied and updated in either
system.

Sample values:

• false (default)
• true

<LogLevel> Determines what type of messages are written to the log file. The highest level is Debug where all
messages are displayed. The default log level is Info.

Samples values: Fatal , Error , Warn , Info , Debug

<Services> Required. Use the copy services to initially reflect items between systems, then use the update services to
keep those reflected items up to date.

The alternative update service searches Rally first for updates and pushes only the recently changed fields
to the other system. It then searches the other system for updates and pushes all mapped fields into Rally.
This allows changes done in both systems to not cause overwrites of old data.

Sample values:

Copy services:

• COPY_TFS_TO_RALLY
• COPY_RALLY_TO_TFS

Update services:

• UPDATE_TFS_TO_RALLY
• UPDATE_RALLY_TO_TFS

Alternative update service:

• UPDATE_RALLYFIELDS_AND_OTHER (may not be used in conjunction with the other update
services)

See Field Level Updates from Rally for more information.

<Emailer> Which logfile messages to email.
<Emailer>

   <Level>value</Level>

   <SendEmailFrom>value</SendEmailFrom>

   <SendEmailTo>value</SendEmailTo>

   <SMTPServer>value</SMTPServer>

   <SMTPPort>value</SMTPPort>

   <SMTPUser>value</SMTPUser>

 874



 Rally®

   <SMTPPassword>value</SMTPPassword>

   <SMTPSec>value</SMTPSec>

</Emailer>

Sample values: See example.

Error or Warning

monitor@acme.com

monitor@acme.com

smtp.acme.com

587

Username@Domain.com

Password

TLS

</ConnectorRunner> Required. Closing parent tag for this section.

Run the Work Item Connector for Microsoft TFS/VSTS

The connector accepts these command-line flags:

ca_agile_central2_tfs_connector.rb -h

Usage: /Users/nmusaelian/.rvm/gems/ruby-2.0.0-p247/bin/ca_agile_central2_tfs_connector.rb 

<options><config_filename> <interval_in_minutes>

where <options> are:

--version, -v:   Prints the revision number of the connector.

--precheck, -p:   Precheck, the connector will run in preview mode.

--run-on-validation-failure, -r:   Will ignore results of XSD Schema validation and run connector.

--log-file-size, -s <n>:   Set the size limit for a log file to <n> megabytes.

--max-log-files, -m <n>:   Set the maximum number of log files in log file rotation to <n>.

--help, -h:   Print this Usage message.

--cleartext, -c:   Bypass encrypting the credentials if they are already in clear text.

where <config_filename>

File system reference to an XML file specifying the connector configuration.  Usual extension is '.xml'.

where <interval_in_minutes>

The interval, in minutes, for which the connector will run after executing command the first time.

-1 will only run the connector once and will exit afterwards.

To start the connector, type the following command line in your terminal window or console:

ca_agile_central2_tfs_connector.rb tfs_config.xml -1

To stop the service, use Control-C in the command shell.

Prior to version 4.8.0, the connector distribution package included a program named WinTail.exe which could be
used to observe log messages written by the connector as it executed. Rally no longer packages WinTail.exe but it is
available here. If you are running the connector on a Windows platform and download and choose to use WinTail, you can
either double-click the WinTail file icon to start it or simply drag and drop the rallylog.log file on to the WinTail icon file
to begin the program which allows you to observe connector log messages as they are written to the file.

Using a BAT File on Windows

On a Windows platform you may choose to create a BAT (Windows batch commands) file to start the connector with your
targets and options.

Example of the starttfs.bat file:

 875

http://www.baremetalsoft.com/wintail/download.php?p=p


 Rally®

ca_agile_central2_tfs_connector.rb tfs_config.xml 10

We ship a starttfs.bat file to make it easier to test. Double-click on the batch file to automatically run the connector
and open the log file in WinTail.

Optionally, you can add a number to the end of the command line that specifies the time in minutes the connector should
sleep between successive executions of all services. The default is 15 minutes. We recommend sleep intervals of no less
than 10 minutes. For example:

ca_agile_central2_tfs_connector.exe tfs_config.xml 10

To stop the service, use Control-C in the command shell.

Credential Encryption

As of version 4.6.0 of the Connector, credentials occurring in the *Connection sections of the configuration file that are in
clear-text are encrypted after the initial run using that config file. Credentials are identified as any configuration item tag
appearing in a *Connection section whose name is '*User', or any '*Password' or 'APIKey'.

Credentials in the Emailer section (SMTPUser and SMTPPassword) will still be encoded. The credential encryption is
localized for the installation of the connector and various aspects of the configuration file.

In practice, as long as the installation and execution folders are constant and the key Rally parameters in the configuration
do not change, you are free to modify most of the contents of the configuration file without having to reset the credentials
to their clear-text values. However, care must be taken in environments that do not have such stable characteristics
to frequently check the log files for any entries that indicate environmental changes have taken place that prevent the
connector from decrypting the encrypted values for use in the connector execution.

NOTE
The -c option can be used to specify leaving the password in clear case (if it is already in clear text) instead of
encrypting. The command line for running the connector will be:
ca_agile_central2_tfs_connector.exe -c configfile.xml

The -1 option may still be used at the end of the command if needed.

Modify the Logging Parameters

The connector logs messages as it is processing into a rallylog.log file in the current working directory. By default,
the maximum size of a log file is 5 MB and the log rotation is limited to 10 files. You can adjust the maximum size of the
log file and adjust the maximum count of log files in the log rotation by specifying command line arguments for this.

The -s <integer> option pair can be used to specify the maximum size of the log file in MB increments (up to 100 MB).
This can also be expressed as --max-log-file-size <integer> .

The -m <integer> option pair can be used to specify the maximum count of files in the log file rotation scheme. This
can also be expressed as --max-log-files-count <integer> .

Example: To set the log file max size to 50 MB and the maximum log file rotation count to 20 files for a single invocation
of the connector:

ca_agile_central2_tfs_connector.rb -s 50 -m 20 xxx_config.xml -1

OR

ca_agile_central2_tfs_connector.rb --max-log-file-size 50 --max-log-files-count 20 xxx_config.xml -1

 876



 Rally®

Multiple Configuration Files

For users who want to map to more than one workspace in Rally, need to map multiple artifact types, or need to map to
multiple containers (such as domain/projects in TFS) in the other system, setting up multiple configuration files may be a
good option. Rally recommends naming the configuration files using descriptive names for easier troubleshooting.

To run multiple instances of the connector for different configuration files, pass in the list of config files as arguments to the
ca_agile_central2_tfs_connector.rb script or ca_agile_central2_tfs_connector.exe .

ca_agile_central2_tfs_connector.rb  config_workspaceA.xml  config_workspaceB.xml

The connector will process the configuration files based on the command line argument order, and processes one file at at
time.

Once it processes every configuration file, the connector will sleep based on the sleep value. The default is 15 minutes. To
change the sleep value between runs, set this value (in minutes) as the last command line argument. We recommend a
sleep value of 10 minutes or more and advise against anything less than 5.

ca_agile_central2_tfs_connector.rb  config_workspaceA.xml  config_workspaceB.xml  10

Copy Story-Task Bundles from Rally to TFS

You can set up the connector to copy Rally stories and their associated tasks to stories and tasks in TFS while preserving
the story-task relationships in TFS.

To do this, you will need two configuration files, one for story and one for task, then you need to run the connector to
operate using these configuration files in that sequence.

Example:

ca_agile_central2_tfs_connector.exe tfs_story_config.xml -1

ca_agile_central2_tfs_connector.exe tfs_task_config.xml -1

If the following statements are true, this section of the guide does not apply to you:

• You are not copying Rally tasks to TFS tasks.
• You do not require that the tasks in TFS be linked to your TFS stories.
• You are only copying Rally tasks to TFS tasks and not copying Rally stories to TFS stories.

Create Configuration Files for Story-Task Bundles

Create a configuration file to work with the Rally story type and the TFS story type. The following is an example for story.

<Config>

  <RallyConnection>

    <Url>rally1.rallydev.com</Url>

    <WorkspaceName>Workspace Name</WorkspaceName>

    <Projects>

      <Project>Project Name</Project>

    </Projects>

    <User>user@company.com</User>

    <Password>password</Password>

    <ArtifactType>Story</ArtifactType>

    <ExternalIDField>TFSId</ExternalIDField>

    <CrosslinkUrlField>TFSLink</CrosslinkUrlField>

  </RallyConnection>

  <TFSConnection>

    <Server>servername</Server>

 877



 Rally®

    <Protocol>http</Protocol>

    <Port>8080</Port>

    <Instance>instance name</Instance>

    <!-- If the TFS server does not use instance please use <Instance>/</Instance>-->

    <Collection>collection name</Collection> <!--This will be <Collection>DefaultCollection</Collection> if

 using VSTS  --> 

    <TeamProject>team project Name</TeamProject>

    <ArtifactType>User Story</ArtifactType>

    <IDField>System.Id</IDField>

    <ExternalIDField>Rally.Common.ExternalId</ExternalIDField>

    <CrosslinkUrlField>RallyLink</CrosslinkUrlField>

  </TFSConnection>

  <Connector>

    <FieldMapping>

      <Field><Rally>Name</Rally>  <Other>System.Title</Other></Field>

      … other fields ...

    </FieldMapping>

   … any field handlers you need for mapped fields goes here ...

  </Connector>

  <ConnectorRunner>

    <Preview>False</Preview>

    <LogLevel>Info</LogLevel>

    <Services>COPY_RALLY_TO_TFS</Services>

  </ConnectorRunner>

</Config>  

Task example:

<Config>

  <RallyConnection>

    <Url>rally1.rallydev.com</Url>

    <WorkspaceName>Workspace Name</WorkspaceName>

    <Projects>

      <Project>Project Name</Project>

    </Projects>

    <User>user@company.com</User>

    <Password>password</Password>

    <ArtifactType>Task</ArtifactType>

    <ExternalIDField>TFSTaskID</ExternalIDField>

    <CrosslinkUrlField>TFSLink</CrosslinkUrlField>

    <WorkProductType>Story</WorkProductType>

    <WorkProductExternalIDField>TFSId</WorkProductExternalIDField>

  </RallyConnection>

  <TFSConnection>

    <Server>servername</Server>

    <Protocol>http</Protocol>

    <Port>8080</Port>

    <Instance>instance name</Instance>

    <!-- If the TFS server does not use instance please use <Instance>/</Instance>-->

    <Collection>collection name</Collection> <!--This will be <Collection>DefaultCollection</Collection> if

 using VSTS  -->

    <TeamProject>team project Name</TeamProject>

    <ArtifactType>Task</ArtifactType>

 878



 Rally®

    <IDField>System.Id</IDField>

    <ExternalIDField>Rally.Common.ExternalId</ExternalIDField>

    <CrosslinkUrlField>RallyLink</CrosslinkUrlField>

   <!--  only needed when the UPDATE_TFS_TO_RALLY service is specified

   <ParentType>Story</ParentType>

   <ParentExternalIDField>Rally.Common.ExternalId</ParentExternalIDField>

 -->

  </TFSConnection>

  <Connector>

    <FieldMapping>

      <Field><Rally>Name</Rally>  <Other>System.Title</Other></Field>

      … other fields ...

    </FieldMapping>

   … any field handlers you need for mapped fields goes here …

   <RelatedObjectLinkers>

       <TFSTaskToParentLinker/>

      <RallyTaskToWorkProductLinker/>

   </RelatedObjectLinkers>

  </Connector>

  <ConnectorRunner>

    <Preview>False</Preview>

    <LogLevel>Info</LogLevel>

    <Services>COPY_RALLY_TO_TFS</Services>

  </ConnectorRunner>

</Config>

You need to set up a custom field in Rally for the task that will hold the identity of the corresponding item in TFS after
it has been copied, also called the ExternalIdField. Adding this custom field in Rally for the task type is similar to the
directions in Rally Setup.

Note that in your configuration for task you need to have two additional tags in the RallyConnection section.

The <WorkProductType> tag value identifies the type the Rally WorkProduct that must be associated with the task in
order for it to be copied to TFS. At this time only the story type is supported.

The <WorkProductExternalIDField> tag value is the name of the WorkProduct type field that holds
the identity of the corresponding WorkProduct type in TFS. Normally, you would use the value from the
<ExternalIdField> tag in your story configuration file. For the example configuration files in this section, the tag value
for <WorkProductExternalIDField> is TFSId .

The Rally stories must be copied over to TFS first so that this first part of the story-task relationship is reflected on both
sides of the connection. Then when the connector is run with the task configuration, the tasks can be linked to their
associated stories in TFS.

You must have both configuration files in the same directory and you should run the connector naming the story
configuration file on the command line first, followed by the name of the task configuration file to ensure this sequence of
operation.

Example:

ca_agile_central2_tfs_connector.exe tfs_story_config.xml tfs_task_config.xml

 879



 Rally®

The connector runs using the story configuration and copies the Rally story to a corresponding TFS story.

 880



 Rally®

The connector runs using the task configuration and copies the Rally tasks to corresponding tasks in TFS.

 881



 Rally®

After the task is copied, the connector sets the links on the newly copied TFS tasks to have them parented by their
associated TFS story.

Update Stories and Tasks

Over time, you may want to reflect any changes in TFS stories and tasks to Rally stories and tasks (and vice-versa).

In order reflect changes from Rally to TFS, your configuration will need to specify the following:

• The <WorkProductType> and <WorkProductExternalIDField> in the <RallyConnection> section:
<WorkProductType>Story<WorkProductType> 

<WorkProductExternalIDField>TFSId<WorkProductExternalIDField>

• The relevant services as in this example configuration file fragment:
<Services>UPDATE_TFS_TO_RALLY, UPDATE_RALLY_TO_TFS, COPY_RALLY_TO_TFS</Services>

In order to reflect changes from TFS to Rally, your configuration will need to specify the following:

• The ParentType and ParentExternalIDField in the TFSConnection section:
<ParentType>Story</ParentType>

<ParentExternalIDField>RallyID</ParentExternalIDField>

• The relevant services as in this example configuration file fragment:

 882



 Rally®

<Services>UPDATE_TFS_TO_RALLY, COPY_RALLY_TO_TFS</Services>

For the scenario where you are tasking out stories and tasks in Rally and then copying them to TFS, where your
developers and testers work on the tasks and provide updates that you then want reflected back in Rally, you will need to
adjust your Services specification in the configuration file to:

<Services>UPDATE_TFS_TO_RALLY, UPDATE_RALLY_TO_TFS, COPY_RALLY_TO_TFS</Services>

You will also need the relevant XML tags as discussed in XML Tags, the <RallyConnection> and <TFSConnection>
sections.

Troubleshooting the Work Item Connector for Microsoft TFS/VSTS

Once the connector is running, all errors are written to the rallylog.log in the working directory where
ca_agile_central2_tfs_connector.exe was invoked. Informational messages, warnings, and errors are written to
the log file depending on the value of the <LogLevel> tag in the <ConnectorRunner> section of the configuration file.

Support / Feedback Log in to the Rally Community for support of this and all of our connectors. The Rally Community is your
one-stop shop for self-service and support. Accessing the Rally Community is quick and easy!

Connector Validation Before the connector starts synchronizing objects between the two systems, it performs these validations:

• Connecting to Rally is successful
• Connecting to the TFS system is successful
• The Rally fields in the field mapping section exist in Rally
• The TFS fields in the field mapping section exist in the TFS system
• Each specified field handler has a corresponding field mapping section in the configuration file

To confirm the validation is successful without moving objects between the two systems, set the
<Preview> tag in the configuration file to <true> . This is useful if you wish to experiment with some
different configuration options to debug an issue.

Using Reference Name When creating the custom field for the <ExternalIDField> in the <TFSConnection> section of
the configuration file, be sure to use the Reference Name as opposed to the Name field. If the name field
used, it will generate an error as follows:

  INFO : Connector.copy_to_rally - Copy to Rally

 DEBUG : Connector.block in map_fields_to_rally -   Mapping System.Title(T1) - to -

 Name(T1)

  WARN : TFSConnection.initialize - Unable to obtain TFSEntity field value for:

 Rally.Common.RallyID

  WARN : ConnectorRunner.exception - Message Unable to obtain TFSEntity field value

 for: Rally.Common.RallyID

Mapping Rally Projects If you are copying defects from TFS to Rally using the <RallyReferenceFieldHandler> with
projects, you may see a Could not find Rally project with name ... error in the log file if the connector user
does not have editor permissions to that project in Rally.

NOTE
RallyReferenceFieldHandlers are for the most part deprecated. Prior to the 4.4.2 release,
if multiple projects were specified in the config file, Release or Iteration value was sometimes
mapped incorrectly. By relocating some logic, that issue has been addressed as well as
being able to handle the most common Rally Reference fields (Project, Release, Iteration)
automatically without needing explicit notation in the configuration file. If the connector detects
that are using a RallyReferenceFieldHandler for one of those aforementioned fields, the
connector will emit a deprecation warning message into the log file and will not register the field
handler as that logic is now handled automatically. The are some edge cases where the use of
RallyReferenceFieldHandler may be necessary, for fields such as Parent, Child, WorkProject,
Owner and other similar fields.

 883

https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e


 Rally®

Skipped update in
rallylog.log

Currently Microsoft's REST API does not support time granularity for the ChangedDate field when
querying for items that have been updated. To compensate for it the connector has to consider all work
items that have been updated in a given day. As a side effect, the log file will contain an entry that an
update was skipped:

Skipped update for <id> since there was no change on non-external id fields.

This is a normal condition caused by connector discarding items whose mapped fields have not actually
changed.

Issue:
EnvironmentalKey

ident_vector
not valid error

Answer: The following error may be seen in TFS connector version 4.6.0 and higher. If this error is seen,
please re-enter the userid/password for both TFS and Rally.
            .....

        ERROR : Class.initialize - EnvironmentalKey ident_vector not valid for

 decryption target value

Issue: "response
status code is:

504" error when
running the connector

Rally does not have plans to support TFS 2015 version higher than v14.0.24712.0. Please upgrade to TFS
2017 or downgrade to a supported TFS 2015 version.

        .....

        ERROR : RallyEIF::WRK::TFSConnection.initialize - response status code is: 504

Issue: Unicode
characters in
description

causing stack trace

Answer: The following error may be seen in TFS connector version 4.8.0. This error is fixed in the next
version of the connector.

        .....

          ERROR : RallyEIF::WRK::ConnectorRunner.rescue in run_services - Unexpected

 exception occurred

          ERROR : RallyEIF::WRK::ConnectorRunner.exception - Message undefined method

 each' for "value":String 

        ERROR : RallyEIF::WRK::ConnectorRunner.exception - Stack Trace

Issue: Error for
Rally.Common.ExternalID

not found

Answer: This occurred because the Rally.Common.ExternalID was included in the mapped fields in the
section of the config file. Removing the mapping fixed the issue.

.....

        ERROR : RallyEIF::WRK::Connector.block in validate - FieldMapping: Other field

 "Rally.Common.ExternalID" not found

        ERROR : RallyEIF::WRK::ConnectorRunner.initialize - Invalid Configuration

Revision History

• 4.8.2-master --- March 2019
– Defects fixed:

• Fixed one-to-many mapping for EnumFieldHandler
• Fixed XML external references

• 4.8.0-master-6 --- May 2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support
– Changes:

• Elimination of dependency on nokogiri requires change in the read_config method for all custom field handlers
• 4.7.3-master-21 --- 28-Feb-2017

– Enhancements:
• Added support for VSTS 2017

• 4.7.3-master-17 --- 15-Feb-2017
– Fixes:

 884



 Rally®

• RallyConcatFieldHandler now also looks at the ConcatFields in AgileCentral for updates to determine whether a
field needs to be updated in TFS.

– Enhancements:
• Support for TFS 2017 (and continued support for TFS 2015 (REST API version)).

• 4.7.2-master --- 11-Nov-2016
– Fixes:

• Adjusted Time Zone conversion so Target Date field inRally maps correctly.
• 4.7.3-master-17 (TFS 2015) May-2016

– Enhancements:
• TFS 2015 support using the TFS REST API.
• Connector can be run on a non-Windows platform.
• Connector can be run on a machine other than the box where TFS is installed.
• Attachment support:

• can reflect attachments on a TFS Work Item in Rally.
• can reflect attachments on a Rally artifact in TFS 2015.

• 4.6.5-master-33 (TFS 2013) 24-Nov-2015
– Enhancements:

• Detecting duplicate Rally project names will now create an error log and exit condition.
• Emailer functionality is now process prioritized to allow alert emails to send even if subsequent configuration

validation fails.
• Enhanced credential value encryption.

• 4.6.5-master-72 (TFS 2012) 24-Nov-2015
– Enhancements:

• Detecting duplicate Rally project names will now create an error log and exit condition.
• Emailer functionality is now process prioritized to allow alert emails to send even if subsequent configuration

validation fails.
• Enhanced credential value encryption.

• 4.6.5-master-71 (TFS 2010) 24-Nov-2015
– Enhancements:

• Detecting duplicate Rally project names will now create an error log and exit condition.
• Emailer functionality is now process prioritized to allow alert emails to send even if subsequent configuration

validation fails.
• Enhanced credential value encryption.

• 4.6.4-master-32 (TFS 2013) 16-Nov-2015
– Enhancements:

• Brand redesign.
• 4.6.4-master-71 (TFS 2012) 16-Nov-2015

– Enhancements:
• Brand redesign.

• 4.6.4-master-70 (TFS 2010) 16-Nov-2015
– Enhancements:

• Brand redesign.
• 4.6.2-master-69 (TFS 2013) 14-Aug-2015

– Fixes:

 885



 Rally®

• Cleaned up log errors when the pre_copy method called on copy_to_rally/copy_to_other can not satisfy the
necessary conditions which typically related to missing required fields or fields with a null/blank value.

• XML include files containing Rally Url or Workspace or Project handled properly both before and after credential
encryption.

• Added better validation for RallyTaskToWorkProductLinker which identifies specific configuration items necessary
for operation and provides log error entries if not present or not containing plausible values.

• 4.6.2-master-69 (TFS 2012) 14-Aug-2015
– Fixes:

• Cleaned up log errors when the pre_copy method called on copy_to_rally/copy_to_other can not satisfy the
necessary conditions which typically related to missing required fields or fields with a null/blank value.

• XML include files containing Rally URL or Workspace or Project handled properly both before and after
credential encryption.

• Added better validation for RallyTaskToWorkProductLinker which identifies specific configuration items necessary
for operation and provides log error entries if not present or not containing plausible values.

• 4.6.2-master-31 (TFS 2010) 14-Aug-2015
– Fixes:

• Cleaned up log errors when the pre_copy method called on copy_to_rally/copy_to_other can not satisfy the
necessary conditions which typically related to missing required fields or fields with a null/blank value.

• XML include files containing Rally URL or Workspace or Project handled properly both before and after
credential encryption.

• Added better validation for RallyTaskToWorkProductLinker which identifies specific configuration items necessary
for operation and provides log error entries if not present or not containing plausible values.

• 4.6.0-master-27 (TFS 2013) 31-May-2015
– Enhancements:

• Credentials in the RallyConnection and TFSConnection sections are now encrypted.
• 4.6.0-master-65 (TFS 2012) 31-May-2015

– Enhancements:
• Credentials in the RallyConnection and TFSConnection sections are now encrypted.

• 4.6.0-master-65 (TFS 2010) 31-May-2015
– Enhancements:

• Credentials in the RallyConnection and TFSConnection sections are now encrypted.
• 4.5.5-master-24 (TFS 2013) 25-Apr-2015

– Enhancements:
• Support for using APIKey in place of Rally username and password.
• Better handling of FieldDefaults and values.
• Better logging of failed attempt to copy/update item from another system to Rally.

• 4.5.5-master-62 (TFS 2012) 25-Apr-2015
– Enhancements:

• Support for using APIKey in place of Rallyusername and password.
• Better handling of FieldDefaults and values.
• etter logging of failed attempt to copy/update item from another system to Rally.

• 4.5.5-master-62 (TFS 2010) 25-Apr-2015
– Enhancements:

• Support for using APIKey in place of Rally username and password.
• Better handling of FieldDefaults and values.
• etter logging of failed attempt to copy/update item from another system to Rally.

• 4.5.4-master-21 (TFS 2013) 02-Apr-2015

 886



 Rally®

– Enhancements:
• Better logging for create/update operations when error conditions encountered.
• Better handling of string fields mapped to Rally Name, Description, Notes that contain non-ASCII characters.
• Added support for running against TFS2013 on a server on which only VS2013 has been installed

• 4.5.4-master-60 (TFS 2012) 02-Apr-2015
– Enhancements:

• Better logging for create/update operations when error conditions encountered.
• Better handling of string fields mapped to Rally Name, Description, Notes that contain non-ASCII characters.

• 4.5.4-master-60 (TFS 2010) 02-Apr-2015
– Enhancements:

• Better logging for create/update operations when error conditions encountered.
• Better handling of string fields mapped to Rally Name, Description, Notes that contain non-ASCII characters.

• 4.5.3-master-20 (TFS 2013) 10-Mar-2015
– Enhancements:

• Updated to use Rally WSAPI v2.0.
• Added a RallyBooleanFieldHandler.

– Fixes:
• Fixed issue in YetiEmailer where header item had leading spaces not accepted by some email servers.

• 4.5.3-master-59 (TFS 2012) 10-Mar-2015
– Enhancements:

• Updated to use Rally WSAPI v2.0.
• Added a RallyBooleanFieldHandler.

– Fixes:
• Fixed issue in YetiEmailer where header item had leading spaces not accepted by some email servers.

• 4.5.3-master-59 (TFS 2010) 10-Mar-2015
– Enhancements:

• Updated to use Rally WSAPI v2.0.
• Added a RallyBooleanFieldHandler.

– Fixes:
• Fixed issue in YetiEmailer where header item had leading spaces not accepted by some email servers.

• 4.4.12-maintenance-23 (TFS 2013) 22-Jan-2015
– Enhancements:

• Support added for a RallyReferenceAttributeLookupFieldHandler intended to be used primarily with Release and
Iteration fields where the attribute used for the lookup is other than the 'Name'.

• This release is likely to be the last for the 4.4.x line that uses Rally WSAPI 1.43.
• 4.4.12-maintenance-102 (TFS 2012) 22-Jan-2015

– Enhancements:
• Support added for a RallyReferenceAttributeLookupFieldHandler intended to be used primarily with Release and

Iteration fields where the attribute used for the lookup is other than the 'Name'.
• This release is likely to be the last for the 4.4.x line that uses Rally WSAPI 1.43.

• 4.4.12-maintenance-54 (TFS 2010) 22-Jan-2015
– Enhancements:

• Support added for a RallyReferenceAttributeLookupFieldHandler intended to be used primarily with Release and
Iteration fields where the attribute used for the lookup is other than the 'Name'.

• This release is likely to be the last for the 4.4.x line that uses Rally WSAPI 1.43.

• 4.4.11-maintenance-15 (TFS 2013) Dec-2014
– Enhancements:

 887



 Rally®

• Updated TFSBridge to enable connector to also run on a platform with only VS2013 installed.
• 4.4.11-maintenance-92 (TFS 2012) Dec-2014

– No effective changes for TFS2012, changes in codebase for TFS2013.
• 4.4.11-maintenance-43 (TFS 2010) Dec-2014

– No effective changes for TFS2010, changes in codebase for TFS2013.
• 4.4.10-master-12 (TFS 2013) Oct-2014

– Enhancements:
• Modified rallyeif-wrk core dependency on rally_api to 1.1.2 (that depends on httpclient 2.4.0) to address SSLv3

security issue.
• Added support for command line arguments to specify log file max size and file count.

• 4.4.10-master-53 (TFS 2012) Oct-2014
– Enhancements:

• Modified rallyeif-wrk core dependency on rally_api to 1.1.2 (that depends on httpclient 2.4.0) to address SSLv3
security issue.

• Added support for command line arguments to specify log file max size and file count.
• 4.4.10-master-53 (TFS 2010) Oct-2014

– Enhancements:
• Modified rallyeif-wrk core dependency on rally_api to 1.1.2 (that depends on httpclient 2.4.0) to address SSLv3

security issue.
• Added support for command line arguments to specify log file max size and file count.

• 4.4.4-master-8 (TFS 2013) Sep-2014
– Enhancements:

• Improved semantic comparison of Rally boolean values to strings ('true' / 'false') should result in fewer
unnecessary updates.

• Improved semantic comparison of Rally decimal values to integers/strings (1.0 should equal 1 or "1") should
result in fewer unnecessary updates.

• Improved comparison of Rally User to user identifier from TFS 2013 should result in fewer unnecessary updates.
This also applies to TFS 2010 and 2012.

• 4.4.3-master-7 (TFS 2013) Sep-2014
– Enhancements:

• Modifications to make parsing RevisionHistory Revision records more robust, especially the Notes field.
• 4.4.2-master-6 Jul-2014

– Enhancements:
• Common Rally Reference fields (Project, Release, Iteration) no longer need to have a

RallyReferenceFieldHandler configured in the Connector - RallyFieldHandlers section of the config file.
• Mapping of Rally Reference fields such as Release and Iteration is fully project scoped to ensure that if the

DisplayName of multiple Release items is identical, the artifact contains the link to the item associated with the
Project setting in the artifact.

• Introduction of the TFSTreePathFieldHandler (for the TFS Iteration field (System.IterationPath)) that can also be
used in place of the ProjectPathFieldHandler for the TFS Project Field (System.AreaPath).

• 4.3.0-master-8 Jan-2014
– Enhancements:

 888



 Rally®

• Upgrade from Ruby 1.9.2-p290 to Ruby 2.0.0-p247.
• Performance improvement gained by using rally_api rather than rally_rest_api.
• Added more build tests.
• Connector would validate only the first config file on command line (DE17492).
• Added <suppressdeprecationwarning> XML tag.
• Added support for TFS 2012.
• Support for Task Items.
• Upgrade to version 1.42 of the WSAPI.
• Note: For the 4.3.0 version of this connector, any custom code (such as a custom field handler) will require

modifications. A working example (using the QC connector) can be found here.
Previous method for doing requires:
require 'yeti/field_handlers/other_field_handler'

require 'rexml/document'

class MyCustomFieldHandler < ....FieldHandler

  ....

end

New way of doing requires:
require 'rallyeif/wrk/field_handlers/field_handler'

module RallyEIF

  module WRK

    module FieldHandlers

      class MyCustomFieldHandler < ....FieldHandler

        # See example code in installation directory:

        # ./field_handlers/my_custom_field_handler.rb

      end

    end

  end

end

• 4.0.2-master-520 Dec-2013
– Enhancements:

• Support for task/story linking on items copied from Rally to TFS (and subsequent updates)
– Known issues:

• None
• 2.10.0-master-6 - 07-Oct-2013

– Enhancements:
• Support for TFS2012

– Known issues:
• (none)

• 2.8.9-master-2 - 20-May-2013
– Enhancements:

• Support for TFS2012
– Known issues:

• (none)
• 2.8.6-144 - 17-Oct-2012

– Enhancements/Fixes:

 889

https://knowledge.broadcom.com/external/article?articleId=125037


 Rally®

• Added artifact ID to message string
• Added more debug output in Rally connection section
• Improved performance by removing refresh on workspace read in find-workspace loop
• Updated to rally_api 0.6.0 gem

– Known issues:
• The version of this connector is erroneously reported as 2.7.7

• 2.7.4-129 - 13-May-2012
– Enhancements/Fixes:

• Added ability for FormattedID in TFS system to have lower or lower case prefix (us/US)
• Added subfield specifications on CopySelectors from Rally using the precopy feature
• Added XML include capability so common text can be included as a separate file
• Installer now has both the TFS Connector and TFS Bridge in the same installer package
• Added project path Field Handler

Okta
Okta is an enterprise-grade identity management service which enables SSO and user management for all of a
company's web applications.

Okta’s identity network seamlessly and securely connects organizations, applications, and people: anywhere, anytime,
from any device. Okta has more than 300 customers, including Box, Linkedin, and Clorox.

Ping Identity
Ping Identity is The Identity Security Company.

Our identity and access management platform gives enterprise customers and employees one-click access to any
application from any device. More than 1,000 companies, including half of the Fortune 100, rely on our award-winning
products to make the digital world a better experience.

piplanning App (Third-Party Integration)
The piplanning app integrates seamlessly with Rally to improve your PI planning process.

The piplanning app integrates with Rally by featuring:

• A Program Backlog Board that allows you to assign features, simultaneously synced with Rally to a team.
• The ability for teams to break down features into user stories on their Team Board and drag them into Rally synced

iterations.
• Identified risks that can be placed in the risk area on the Team Boards or sent to the Program Risk Board to be

ROAMed.
• The Program Board’s characteristic structure of team swimlanes and iteration columns allows you to visualize

dependencies in a transparent way.

Learn more on https://www.piplanning.io/ or sign up for a 30 day trial on http://trial.piplanning.io.

Planisware (Third-Party Integration)
Planisware includes portfolio level (budget, simulation, scenarios, and roadmapping) as well as an operational level
(project, resource and cost management, collaboration) functionality.

In conjunction with Rally, Planisware manages the product development pipeline and synchronizes it with the agile
iterative development processes driven by Rally's Agile project management functionality. The Planisware-Rally

 890

https://www.piplanning.io/
https://setup.piplanning.io/register


 Rally®

integration combines the value and benefits of a structured approach to portfolio and project management with the
flexibility of agile-oriented software development processes. Learn more.

The integration flow:

• High-level projects and releases are created in Planisware and synched to Rally
• Detailed iterations and stories are then created in Rally
• Iterations and stories are synched from Rally to Planisware
• In Planisware, high-level status is available based on the details from Rally

Policy-Based VCS Connectors
Rally has a policy-based VCS connector that supports the following Version Control System products:

• Azure DevOps Server (OpsHub)
• Bitbucket (Server and Cloud)
• Rally VCS Connector for GitHub and GitHub Enterprise
• Rally VCS Connector for GitHub and GitHub Enterprise
• Rally VCS Connector for Git Installation and User Guide

The policy-based VCS Connector allows you to cover multiple repositories in one configuration file. Repositories can be
specifically mentioned in a list or can be specified using shell-like regex/wildcard characters (for example, foo*, test-*-
alpha). In addition to posting changeset information to Rally, you can configure the connector to:

• Scan for and post related Pull Request information
• Map a VCS user name to an Rally username that will display as the Changeset Author in Rally
• Trigger a State change to a mentioned artifact based on information in the commit message

The policy-based VCS connect (PBVCS) is a one-way/one-time mechanism. Information in your VCS is never altered, it
is consulted for commit/pull-request information and important aspects of those are reflected in the Rally system for your
subscription in appropriate Changeset/PullRequest items. The connector is installed and runs on your platform according
to your scheduling.

See Supported Versions for Rally Connectors for more information on supported versions.

 891

https://www.planisware.com/


 Rally®

Bitbucket

The VCS Connector for Bitbucket comprises code that skims the Bitbucket system for recent commits and extracts
information from the commit messages and posts changeset information to a Rally SCMRepository according to
specifications in a configuration file. This connector supports both Bitbucket Server and Bitbucket Cloud.

You can include FormattedIDs (for example: US42) in commit messages. The connector processes all commits
for configured repositories and pushes information about those commits into changeset objects in Rally. If a valid
FormattedID is found in a commit message, the changeset created by the connector is associated with that defect, story,
or task in Rally.

Supported versions: 5.0, 5.1, 5.2

See the Rally VCS Connector for Bitbucket for information on installing, configuring, and using the connector.

GitHub

GitHub is a web-based hosting service for software development projects that use the Git version control system. GitHub
offers both commercial plans and free accounts for open source projects. GitHub is the most popular Git-hosting site, and
the most popular open-source hosting site.

Rally's GitHub Integrations will:

• Create changeset information
Associated with the workspace and SCMRepository you define for a given GitHub repository, it will create changeset
and change information in Rally. When viewing an artifact in Rally, there are details about changesets associated
with commits from GitHub push activities. Rally also provides reports that use the artifact, changeset, and change
information to provide insight into which files get changed more frequently or that are associated with higher than
normal defect rates and other useful reports.

• Associate changeset to artifacts
The commit messages are scanned for a FormattedID of a Rally artifact, and if found, the artifact is associated to the
changeset created in Rally.

See Rally VCS Connector for GitHub and GitHub Enterprise for information on installing, configuring, and using the
integrations.

Supported version: 1.1

GitHub Enterprise

GitHub Enterprise is the self-hosted equivalent of GitHub. Organizations that are unable to have their materials in the
cloud use this approach to gain the benefits of the GitHub approach and technology. The are minor differences in a VCS
Connector configuration file when using GitHub Enterprise as compared with GitHub. Otherwise, the connector operates
in a similar manner as described for GitHub.

See the Rally VCS Connector for GitHub and GitHub Enterprise for information on installing, configuring, and using the
integrations.

Microsoft TFS/VSTS (Git) 2017

The Rally VCS Connectors for TFS and VSTS 2017 posts information about TFS and VSTS 2017 repository commits to
Rally, relating those commits to Rally changesets and artifacts if sufficient information is contained in the VCS commit
messages to identify the relevant artifacts. The connector will also update the state of relevant Rally artifacts, specifically
defect state or user story schedule state when commit messages contain appropriate syntax, for example US123 In-
Progress. The Rally VCS Connectors for TFS and VSTS 2017 are classified as a one-way and one-time mechanism.
Information in TFS and VSTS 2017 is never altered; information is only written in Rally and no duplication of data is
attempted or allowed.

 892



 Rally®

The Rally VCS Connector as of version 2.0.0 includes functionality that detects the creation of TFS and VSTS 2017 pull
request items and posts corresponding pull request items in Rally when the configuration option for this is present in the
target configuration file.

The Rally VCS Connectors for TFS and VSTS 2017 consists of software that you run on your platform according to your
desired schedule. The configuration of the connector is policy-based, meaning that you do not need to provide a separate
configuration file for each VSTS repository for which you want the connector to operate. The policy-based nature allows
you to scope to all or a subset of repositories within a TFS or VSTS 2017 project.

See the Rally VCS Connector for TFS 2017/VSTS 2017 (Git) for information on installing, configuring, and using the
connector.

Supported version: 2017. Does not work with newer releases.

Azure DevOps Server (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Azure DevOps Server
(previously known as Team Foundation Server (TFS)) and Rally in application development organizations to effectively
communicate and collaborate with each other, thus increasing overall team agility, productivity and efficiency.

OpsHub Integration Manager supports the synchronization of all work items like requirement, bug, user story, task,
shared steps, and test assets like test suite, test run, test result in Azure DevOps Server to all the possible entities
existing in Rally such as defect, user story, test case, test set, test case result (only write support), and task. The item
synchronization includes the bidirectional synchronization of field data, attachments, comments, and linkage between
items.

• Supports unidirectional and bidirectional synchronization between Azure DevOps Server and Rally for all supported
entities.

• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between Azure DevOps Server and Rally.
• Maintains history of both systems. If Azure DevOps Server or Rally becomes unavailable, it will reflect all transactions

that occurred during that time once the system is operational again.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally, Team Foundation Server and Git Demo video.

Rally VCS Connector for Bitbucket
The Rally VCS Connector for Bitbucket Server and Bitbucket Cloud posts information about Bitbucket repository commits
on all branches to Rally, relating those commits to Rally changesets and artifacts if sufficient information is contained in
the VCS commit messages to identify the relevant artifacts.

The connector will also update the state of relevant artifacts, specifically defect state or user story schedule state when
commit messages contain appropriate syntax, for example US123 In-Progress. The connector is classified as a one-way
and one-time mechanism. Information in Bitbucket is never altered; information is only written in Rally and no duplication
of data is attempted or allowed. The connector consists of software that you run on your platform according to your
desired schedule. The configuration of the connector is policy-based, meaning that you do not need to provide a separate
configuration file for each Bitbucket repository for which you want the connector to operate. The policy-based nature
allows you to scope to all or a subset of repositories accessible to a Bitbucket user or organization.

 893

https://www.opshub.com/integrations
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_TFS_Git_Version_21_7_15.mp4


 Rally®

The Rally VCS Connector as of version 2.0.3 includes functionality that detects the creation of Bitbucket pull request
items and posts corresponding pull request items in Rally when the configuration option for this is present in the target
configuration file. Currently, the pull request functionality is available on user stories, defects, defect suites, test cases,
or tasks. To show pull requests in Rally as Third Party Context, add the PullRequests value set to True. The Rally
artifact FormattedID (ex. US1234) can be mentioned in either the pull request title or in of one of the commit messages
that is associated to the pull request in order to be processed by the connector. The connector will include open as well as
a merged pull requests.

There is no way to create a branch or pull request based on activity on a Rally user story or defect.

This connector uses Bitbucket REST API, and will operate with both Bitbucket Server and Bitbucket Cloud. Depending on
if you are using Bitbucket Server or Bitbucket Cloud, there will be minor variations in the configuration file items.

This section includes the following topics:

• Software Requirements for Rally VCS Connector for Bitbucket
• Hardware Requirements for Rally VCS Connector for Bitbucket
• Install the Rally VCS Connector for Bitbucket
• Setup the Rally VCS Connector for Bitbucket
• Operation of the Rally VCS Connector for Bitbucket
• Troubleshooting the Rally VCS Connector for Bitbucket
• Appendix A - Configuration File for the Rally VCS Connector for Bitbucket
• Rally VCS Connector for Bitbucket Revision History

Software Requirements for VCS Connector for Bitbucket

The connector includes the following software requirements.

• A computing platform running Linux, Windows, or MacOS.
• A valid subscription and credentials to Rally.
• An active Bitbucket account. Bitbucket versions 5.0, 5.1, and 5.2 are supported. Other 5.x versions may work.
• Supported on Python 3.5.x or 3.6.x (we recommend using the 64-bit version on Windows). You can retrieve the

package installer from www.python.org.
• Windows-only additional requirements:

The pywin32 package must be downloaded and installed subsequent to Python 3.5 or 3.6 installation. The pywin32
package is available from:
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download

Hardware Requirements for VCS Connector for Bitbucket

You can install the connector several ways. There can be multiple install locations on the same machine that can run in
parallel which determine the hardware required. We recommend the following guidelines:

• A computing platform on which your connector will run (Windows, Linux, Mac)
• Base hardware with a quad-core processor set and at least 8 GB RAM
• No more than 20–25 configuration files per install location
• Adequate disk storage capacity to store log files generated by the execution of the connector; we recommend 1 GB of

free disk space
• If you add more install locations running in parallel, each installed location consumes up to 200 MB of RAM when

running and less than 50 MB when idle
• 200–250 MB of space per install location is recommended since the required hard drive space is minimal and needs to

scale only with log files

 894

https://www.python.org/
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download


 Rally®

Install the Rally VCS Connector for Bitbucket

1. Download the connector by following the steps here.

2. Once you have Jenkins and Python installed, and for Windows users only, the pywin32com module installed, install
the following Python packages: pip3 install requests==2.18.4 pip3 install pyral==1.4.2 pip3
install PyYAML==3.12 pip3 install cryptography==1.7.1

3. Unpack the ZIP file.
a) Change your working directory to where you want to install the connector.
b) Use a suitable program to unzip the file. For example: unzip vcsconn-2.0.6.zip
c) Change the directory to the root of the connector. cd vcsconn-2.0.6
d) Check the contents of the directory using ls -laR .

Sample contents:

vcsconn # vcsconn module root directory vcs2ac # connector initiation script,
this is what you will run config # holds any config files used with this
connector sample_bitbucket_cloud.yml # a sample config to use as a base reference
sample_bitbucket_server.yml # a sample config to use as a base reference
sample_user_map.yml # a sample text file for user mapping log # hold log file
and time file per configuration README_BITBUCKET.txt # this file User-Mapping-
Strategies.txt # details GitHub user to Rally username mapping strategies

Setup the Rally VCS Connector for Bitbucket

In general, start simple.

See Appendix A for information on configuration file syntax.

1. Verify that your target Workspace has BuildandChangesetEnabled set to true. Your Rally workspace administrator will
need to enable this for your target workspace. If it is not enabled, the connector will work, but you will not be able to

 895



 Rally®

see any of the changeset or change information that is associated with your Rally work items (story, defect, task). The
workspace administrator must edit the workspace and do the following:
a) Select Setup

from the Rally menu bar in the upper-right corner of the display.
b) Select Workspace & Projects.
c) Select your target workspace.
d) Select Actions, Edit.
e) Select the Enable Build and Changeset check box.
f) Select Save & Close.

2. Locate the config subdirectory.

3. Copy the sample_bitbucket_(server or cloud).yml file to a file named suitably for your environment. For
example, copy sample_bitbucket_server.yml to product_x.yml (or some other suitably named file that has
a .yml suffix).

4. Edit your product_x.yml file. For example, change the sample values for credentials, workspace, project, token,
and so on to values that are relevant and valid for your environment.

5. Decide on the appropriate SecurityLevel.

6. Decide if you want to update state of Rally artifacts based on commit messages.

7. Decide if you want to map a Bitbucket committer to a valid Rally user and choose one of the three user mapping
methods: Passthrough, FileBasedUserNameLookup, or UserNameDomainAugmentLookup. See the User-Mapping-
Strategies.txt file in the main connector directory for further detail.

NOTE
The Bitbucket Cloud field Full Name and the BitBucket Server Name field will be used in the user_map.txt
file for the first column.

8. Decide on whether the repositories you want processed are repositories you own (use UserSlug) or are repositories
owned by a team of which you are a member (use TeamSlug).

Operation of the Rally VCS Connector for Bitbucket

You can choose to perform manual or scheduled operation of this connector.

Manual Operation

Using a terminal window or console: cd to the installation root directory, for example: /opt/local/sw/vcsconn-2.0.6

Then run:

python3 vcs2ac product_x.yml

This software requires that the configuration file reside in the configuration subdirectory. You specify the name of the file
on the command line. Do not specify the subdirectory in the command line argument.

Scheduled Operation

Use either cron , launchctl , or Windows Task Scheduler. Make sure the environment in effect when running this
software has an appropriate environment set so that you can run:

python3 $VCS/vcs2ac your_config_file_name.yml

 896



 Rally®

where $VCS is the reference to an environment variable containing the fully qualified path to the directory where the
software is installed. For example, if you unzipped the package in /opt/local/sw , then your VCS would be set like
this:

export VCS=/opt/local/sw/vcsconn-2.0.6

Time File

In normal operation, the connector writes a time file (in the log directory) whose name is based on the configuration
file name. Example: If the configuration file name is product_x.yml , then the associated time file name would be
product_x_time.file . The content of the time file is a single line containing a human readable date/time stamp value
in the format YYYY-MM-DD hh:mm:ss Z. The value represents the timestamp of the last commit reflected in Rally. When
the connector is run a subsequent time, it consults the time file to determine which jobs need to be considered for the
current run by only processing the commits whose start time is greater than or equal than the time file value. It is possible
to set the time file value artificially (using ISO format, such as 2017-05-12 11:37:55 Z), so that you can go back in time
and pick up commits from some arbitrary point in the past. The connector does not duplicate commits so you do not have
to worry about duplicated information getting posted to Rally. In the absence of a time file, the connector pulls commits
starting at a point three days prior to the current time.

Troubleshooting the Rally VCS Connector for Bitbucket

The connector always writes a log file named based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory.

You can control the extent of logging by specifying the level in the configuration file. Within the configuration file, you can
set the LogLevel which determines the amount of logging information written to the log file. Under the Service section,
modify the LogLevel setting (valid values are ERROR, WARN, INFO, DEBUG). When you set the LogLevel to DEBUG,
you will get the full range of logging messages that can be helpful in pinpointing where a problem occurred and what
information was being processed at the time of the anomaly.

It can be very helpful to run the connector in Preview mode when setting things up for the first time. This allows you to get
the connections to Rally and Bitbucket to initialize and validate correctly without posting any changesets.

Issue: FATAL:
VCSConnectorRunner.run

-
BitbucketConnection.connect
bitbucket_connection.py(106)

- Unable to connect
to Bitbucket

Server at https://
bitbucket.xxx.xxx.com:443/

rest/api/1.0/
projects/ISSP. 'key'

Answer: Verify that username and password for Bitbucket are correct.

Issue: Error Seen
On Windows 10 64

Bit. FATAL: DLL
Load Failed: The
Specified Module

Could Not Be Found.

Answer: Change environment variable path from ...Python/Scripts to ...Python/DLLs.

Issue: Pull
Requests are not

transferring to Rally.

Answer: Currently, pull request functionality is only available for user stories in Rally. If you are not seeing
pull requests in user stories, verify the following line is in the service section config file:
PullRequests : True # Default is False, when True VSTS PullRequests are detected and

 reflected in Rally

 897



 Rally®

Issue: Error seen
when using * in the
include statement
to pull all repos.

FATAL: VCSConnectorRunner.run - VCSConnectorRunner.getConfiguration

 vcs_connector_runner.py(288) - Unable to parse config/vsts-cloud.yml successfully,

 while scanning an alias

  in "<unicode string>", line 25, column 26:

                Include   :  *

                             ^

expected alphabetic or numeric character, but found '\n'

  in "<unicode string>", line 25, column 27:

                Include   :  *

                              ^

Answer: Escape the * in the include statement with quotes.

        Repository:

            Include   : "*"

Security Level When credentials, including ProxyUsername and ProxyPassword, in the configuration file are no longer in
clear text, SecurityLevel settings can only upgraded, but not downgraded. For example, a configuration file
with encrypted credentials cannot be used with SecurityLevel reset from Encrypted to Encoded. If users
want to downgrade security level, they have to start with a configuration file where credentials are in clear
text.

Appendix A - Configuration File for the Rally VCS Connector for Bitbucket

The Rally VCS connector for Bitbucket uses a text file in the YAML format. For complete information, consult the web
page at https://yaml.org or any other website on the subject of YAML.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

• Use a text editor (not Microsoft Word or Google Doc) to edit the file.
• Never use a tab character in the file. YAML does not allow or recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent.
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # character and all characters to

the right are ignored in processing.
• Keep the sections in the same order as is present in the sample.yml file.
• Be aware that the colon character : is significant, it separates a key from the value.
• Be aware that the dash character - is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item.
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character.

Skeleton of the template_config.yml file

Bitbucket:

         AgileCentral:

             ...  # several key value pairs are relevant for this section

         Bitbucket:

             ...  # several key value pairs are relevant for this section

         Service:

             ...  # a few key value pairs relevant for the overall operation 

                  # of the connector appear in this section

 898

https://yaml.org


 Rally®

The AgileCentral section specifies values to use to obtain a connection with Rally. The Bitbucket section specifies
values to use to obtain a connection with Bitbucket and specify the policies governing what repositories in Bitbucket
get processed to result in posting of changesets to Rally. The Service section controls some aspects of the connector
behavior on an overall basis.

*The required Project line in the AgileCentral section is used for for connection purposes; commits will still show in Rally
based on the workspace scope.

Sample Configuration File

The following is a sample file of a configuration with all of the options available and explanatory notes.

 a sample file with explanatory notations

 ---------------------------------------------

 VCSConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com      # R   if not provided, defaults to rally1.rallydev.com

         Username      : henry5@hauslancaster.uk  # R   if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415           # R   if an API_Key entry is used, then this isn't needed

         API_Key       : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org       # O

         ProxyUser     : jessonbrone              # O

         ProxyPassword : S-e-c*r*E&T321!789       # 0

         Workspace     : My Onliest Workspace     # R  name of the Rally Workspace where

                                                  #    SCMRepository, Changeset records are written

         Project       : GoneWithBreeze           # R

         Transforms    :                          # R

             Author    : Passthrough              # This is the default setting if not provided

             #Author   : FileBasedUserNameLookup(user_map.txt)

             #Author   : UserNameDomainAugmentLookup(chiselor.com)

         UpdateArtifactState: True                 # O  If present, the next entry must be present also

         StateExtractorClass: BasicActionsAndArtifactsExtractor  # O  If present, the above entry must be

 present also

     Bitbucket:      # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

                     # Also note that there are differences depending on whether your environment is Server or

 Cloud

         Protocol      :  http                       # O  defaults to http for Bitbucket Server

         Server        :  mybbs.mycompany.com        # R  fully qualified name of your Bitbucket Server

 instance

        #Server        :  api.bitbucket.org          # O  this is the fully qualified hostname for Bitbucket

 Cloud

         Port          :  7990                       # O  defaults to 7990, your installation may have a

 different port

         Username      :  validuser                  # R  provide a value when Bitbucket requires credentials

 for access

                                                     #    for Bitbucket Cloud this value must be in a valid

 email address format

                                                     #       example:  me@someco.com

         Password      :  somepasswd                 # R  provide a value when Bitbucket requires credentials

 for access

 899



 Rally®

         ProjectKey    :  LouisDeFunes               # R  but only when using Bitbucket Server, (this is an

 invalid entry for Bitbucket Cloud)

         UserSlug      :  macropolo                  # R  when processing own repositories in Bitbucket Cloud,

  (this is an invalid entry for Bitbucket Server)

                                                     #    cannot coexist with TeamSlug

                                                     #    To get the correct value, consult the Atlassian

 Bitbucket documentation

                                                     #    on how/where to locate the UserSlug value associated

 with the Username.

                                                     #    Be aware that the UserSlug value is case-

sensitive...

         TeamSlug      :  infinitepool               # R  when processing Team repositories in Bitbucket

 Cloud, (this is an invalid entry for Bitbucket Server)

                                                     #    cannot coexist with UserSlug

         Repository:        # O sub-section header for the following two items

             Include   :  base*, trophy, bottle*, floormat                   # Optional

             Exclude   :  basejump, basement, bottlecap, bottlerock*         # Optional

         # For Repository Include/Exclude, you must use a slug value.  A repository slug is a URL-friendly

         #   version of a repository name, automatically generated by Bitbucket for use in the URL.

         # For example, if your repository name was 'føøbar', in the URL it would become 'foobar'.

         # Similarly, 'foo bar' would become 'foo-bar'.

     Service:

         Preview       : True        # O  When set to True, the connector shows the items that would be

 processed

                                     #     but doesn't actually post any Changesets to Rally

                                     #    When you have completed the setup and the connections with Rally and

 Bitbucket

                                     #     are made successfully, you can change this value to True

         LogLevel      : INFO        # O This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is

 very verbose

         PullRequests  : True        # Default is False, when True Bitbucket PullRequests are detected and

 reflected in Rally

         SecurityLevel : Cleartext   # O (or Encoded, or Encrypted) The default is Encrypted if this element

 not present

         AppendVCSCommitter: False   # O True or False, default is False.  When True the VCS committer name is

 appended

                                     #   to the commit message that is posted in the resulting Rally Changeset

 item.

Rally VCS Connector for Bitbucket Revision History

• 2.0.6 February 2020
– Corrected issue where a commit message containing no Rally artifact links results in a too-expansive query of

Rally artifacts. New behavior short-circuits the query if there is nothing in the commit message that matches the
FormattedID pattern.

• 2.0.3-Master --- 9-Feb-2018
– Fixed name of StateExtractor class in sample config file
– Fixed assignment of Changeset URI for Bitbucket Server

• 2.0.0-Master --- 21-Dec-2017

 900



 Rally®

– Unified all newer policy-based VCS connectors into one distribution package
• 1.3.2-Master --- 7-Dec-2017

– Added support for pull requests
• 1.3.1-Master --- 4-Dec-2017

– Transition from author to committer for Bitbucket Server
– Added support for appending committer name to commit message

• 1.2.4-Master --- 17-Nov-2017
– Connector rewritten in Python
– Addition of Policy-based feature
– Support added for Bitbucket Cloud

Rally VCS Connector for GitHub and GitHub Enterprise
The Rally VCS Connector for GitHub and GitHub Enterprise (GHE) posts information about GitHub repository commits to
Rally, and relates those commits to Rally changesets and artifacts if sufficient information is contained in the VCS commit
messages to identify the relevant artifacts.

The Rally VCS Connector for GitHub is classified as a one-way and one-time mechanism. Information in GitHub is never
altered; information is only written in Rally and no duplication of data is attempted or allowed. The connector consists of
software that you run on your platform according to your desired schedule. The configuration of the connector is policy-
based, meaning that you do not need to provide a separate configuration file for each GitHub repository for which you
want the connector to operate. The policy-based nature allows you to scope to all or a subset of repositories accessible to
a GitHub user or organization. The connector will only search master branches for commits.

For example:

"Fixed DE1987 by changing preamble paragraph 3"

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of defect DE1987 would display as Fixed. Note this
message is case-sensitive, fixed is not the same as Fixed. The .yml file will need UpdateArtifactState value set to True to
process a state change.

The commit message may contain references to more than one artifact. For example, this is known to work:

"Test commit msg with multiple artifacts Fixed DE9 Closed DE8"

Pull requests are supported by the connector. To show pull requests in Rally as Third Party Context, add the PullRequests
value set to True. The Rally artifact FormattedID (ex. US1234) can be mentioned in either the pull request title or in one of
the commit messages that is associated to the pull request in order to be processed by the connector. The connector will
include open as well as a merged pull requests.

If your organization uses GitHub Enterprise with SSO only authentication, set up the GitHub user as an Outside
Collaborator. For more information on how to set up the GitHub user, see the following links:

• https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/adding-outside-
collaborators-to-repositories-in-your-organization

• https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-
authentication-with-saml-single-sign-on

This section includes the following topics:

 901

https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization
https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization
https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-authentication-with-saml-single-sign-on
https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-authentication-with-saml-single-sign-on


 Rally®

• Software Requirements for the Rally VCS Connector for GitHub and GitHub Enterprise
• Hardware Requirements for the Rally VCS Connector for GitHub and GitHub Enterprise
• Install the Rally VCS Connector for GitHub and GitHub Enterprise
• Setup the Rally VCS Connector for GitHub and GitHub Enterprise
• Configure the Rally VCS Connector for GitHub and GitHub Enterprise
• Operation of the Rally VCS Connector for GitHub and GitHub Enterprise
• Extensions
• Troubleshooting the Rally VCS Connector for GitHub and GitHub Enterprise
• Appendix A - Configuration File Editing for the Rally VCS Connector for GitHub and GitHub Enterprise
• Rally VCS Connector for GitHub and GitHub Enterprise Revision History

Software Requirements for the VCS Connector for GitHub and GitHub Enterprise

The connector includes the following software requirements.

• A valid subscription and credentials for Rally.
• A computing platform running Linux, macOS, or Windows.
• An active account on GitHub (https://www.github.com).
• Supported on Python 3.5.x or 3.6.x (we recommend using the 64-bit version on Windows). You can retrieve the

package installer from www.python.org.
• Windows-only additional requirements:

The pywin32 package must be downloaded and installed subsequent to Python 3.5 or 3.6 installation. The pywin32
package is available from:
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download

Hardware Requirements for the VCS Connector for GitHub and GitHub Enterprise

You can install the connector several ways. There can be multiple install locations on the same machine that can run in
parallel which determine the hardware required. We recommend the following guidelines:

• A computing platform on which your connector will run (Windows, Linux, Mac)
• Base hardware with a quad-core processor set and at least 8 GB RAM
• No more than 20–25 configuration files per install location
• Adequate disk storage capacity to store log files generated by the execution of the connector; we recommend 1 GB of

free disk space
• If you add more install locations running in parallel, each installed location consumes up to 200 MB of RAM when

running and less than 50 MB when idle
• 200–250 MB of space per install location is recommended since the required hard drive space is minimal and needs to

scale only with log files

 902

https://github.com/
https://www.python.org/
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download


 Rally®

Install the Rally VCS Connector for GitHub and GitHub Enterprise

You must have Python 3.5.x or 3.6.x available in your environment.

1. Download the connector by following the steps here.

2. Run these commands to install the following Python packages: pip3 install requests==2.18.4 pip3
install pyral==1.4.2 pip3 install PyYAML==3.12 pip3 install cryptography==1.7.1

3. Unpack the ZIP file.
a) Change your working directory to where you want to install the connector.
b) Use a suitable program to unzip the file. For example: unzip vcsconn-2.0.6.zip
c) Change the directory to the root of the connector. cd vcsconn-2.0.6
d) Check the contents of the directory using ls -laR .

Sample contents:

vcsconn # vcsconn module root directory vcs2ac # connector initiation script,
this is what you will run config # holds any config files used with this connector
sample_github.yml # a sample config to use as a base reference sample_user_map.yml
# a sample text file for user mapping log # hold log file and time file per
configuration README_GITHUB.txt # this file User-Mapping-Strategies.txt # details
GitHub user to Rally username mapping strategies

Setup the Rally VCS Connector for GitHub and GitHub Enterprise

After you install the connector, set up both Rally and a configuration file.

1. Verify that your target WorkspaceConfiguration object has BuildandChangesetEnabled set to true.

If not, your Rally workspace administrator needs to enable this for your target workspace. If it is not enabled, the
connector will work, but you will not be able to see any of the changeset or change information that is associated with
your Rally work items (story, defect, task).

a) Select Setup

from the Rally menu bar in the upper-right corner of the display.
b) Select Workspace & Projects.
c) Select your target workspace.
d) Select Actions, Edit.
e) Select the Enable Build and Changeset check box.
f) Select Save & Close.

2. Set up a configuration file.

• See Configure the Rally VCS Connector for GitHub and GitHub Enterprise.

Configure the Rally VCS Connector for GitHub and GitHub Enterprise

Configuration of the github_connector is done through a YAML file which should be in the config subdirectory.

There is a sample configuration file named sample.yml in the config subdirectory that you can use as a template.
Copy it to a file with a name reflecting your intended usage or environment, and edit the file substituting with values
relevant to your situation.

 903

https://rally1.rallydev.com/slm/webservice/v2.0/workspaceconfiguration?workspace&fetch=true


 Rally®

See Appendix A for configuration file syntax.

1. Start simple.

2. Locate the config subdirectory.

3. Copy the sample.yml file to a file named suitably for your environment, such as copy sample.yml to
product_x.yml .

4. Edit your product_x.yml file. For example, change the sample values for credentials, workspace, project, token,
and so on to values that are relevant and valid for your environment.

5. Decide on the appropriate SecurityLevel.

6. Decide whether you want to update state of Rally artifacts based on commit messages.

7. Decide whether you want to map a GitHub committer to a valid Rally user and choose one of the three mapping
methods: Passthrough, FileBasedUserNameLookup, or UserNameDomainAugmentLookup.

Operation of the Rally VCS Connector for GitHub and GitHub Enterprise

You can configure operation to be either manual or scheduled.

Manual Operation

Using a terminal window or console, cd to the installation root directory, for example /opt/local/sw/vcsconn-2.0.3

Then run:

python3 vcs2ac product_x.yml

This software requires that the configuration file resides in the config subdirectory. You specify the name of the file on
the command line. Do not specify the subdirectory in the command line argument.

Scheduled Operation

Use either cron, launchctl, or Windows Task Scheduler. Make sure the environment in effect when running this software
has an appropriate environment set so that you can run:

python3 $VCS/github_connector your_config_file_name.yml

where $VCS is the reference to an environment variable containing the fully qualified path to the directory where the
software is installed. For example, if you unzipped the package in /opt/local/sw , then your VCS would be set like
this:

export VCS=/opt/local/sw/vcsconn-2.0.3

Time File

In normal operation, the connector writes a time file (in the log directory) whose name is based on the configuration
file name. Example: If the configuration file name is product_x.yml , then the associated time file name would be
product_x_time.file . The content of the time file is a single line containing a human readable date/time stamp value
in the format YYYY-MM-DD hh:mm:ss Z. The value represents the timestamp of the last commit reflected in Rally. When
the connector is run a subsequent time, it consults the time file to determine which jobs need to be considered for the
current run by only processing the commits whose start time is greater than or equal to the time file value. It is possible
to set the time file value artificially, (using ISO format, such as 2017-05-12 11:37:55 Z) so that you can go back in time
and pick up commits from some arbitrary point in the past. The connector does not duplicate commits so you do not have
to worry about duplicated information getting posted to Rally. In the absence of a time file, the connector pulls commits
starting at a point three days prior to the current time.

 904



 Rally®

User Mapping

For the purposes of reflecting VCS revisions/changesets in Rally, there is not always a direct one-to-one mapping
between the value of the committer in the VCS and a Rally User. A Rally User is uniquely identified by the Rally
UserName field value. The VCS connector has several methods available to enable the mapping of a VCS committer
value to a Rally User. In the event that no mapping is found for a VCS committer identifier a Changeset will still be created
in Rally, but there will be no value for the Author attribute in the Changeset. Consult the User-Mapping-Strategies
text document (part of the connector installation) to determine which technique fits your needs.

The following information will be needed in the config file in the VCSConnector section (just after "Project"). See the
README_*.txt file in the main installation directory for all options.

    

    Transforms    :                           # R

       #Author    : Passthrough               # This is the default setting if not provided

         Author   : FileBasedUserNameLookup(user_map.txt)

        #Author   : UserNameDomainAugmentLookup(chiselor.com)

Extensions

To support another SaaS VCS, you will need to develop a connection spoke for your build system that can support a call
to getOrganizations and getRecentRepositoryActivity(ref_timestamp) .

That method needs to return a list of commit items, where a commit item has the following attributes:

• SHA
• timestamp
• author
• message
• changes

Troubleshooting the Rally VCS Connector for GitHub and GitHub Enterprise

The connector always writes a log file named based on the configuration file name. The log file is written into the logs
subdirectory under the base installation directory.

You can control the extent of logging by specifying the level in the configuration file. Within the configuration file, you can
set the LogLevel which determines the amount of logging information written to the log file. Under the Service section,
modify the LogLevel setting (valid values are ERROR, WARN, INFO, DEBUG). When you set the LogLevel to DEBUG,
you will get the full range of logging messages that can be helpful in pinpointing where a problem occurred and what
information was being processed at the time of the anomaly.

It can be very helpful to run the connector in Preview mode when setting things up for the first time. This allows you to get
the connections to Rally and GitHub to initialize and validate correctly without posting any changesets.

Issue: Pull
Requests are not

transferring to Rally.

Answer: Verify the following line is in the config file:
     PullRequests : True # Default is False, when True VSTS PullRequests are detected

 and reflected in Rally

Issue: Error seen
when using * in the
include statement
to pull all repos.

FATAL: VCSConnectorRunner.run - VCSConnectorRunner.getConfiguration

 vcs_connector_runner.py(288) - Unable to parse config/vsts-cloud.yml successfully,

 while scanning an alias

  in "<unicode string>", line 25, column 26:

                Include   :  *

                             ^

expected alphabetic or numeric character, but found '\n'

 905



 Rally®

  in "<unicode string>", line 25, column 27:

                Include   :  *

                              ^

Answer: Escape the * in the include statement with quotes.

        Repository:

        Include   : "*"

Security Level When credentials in the configuration file are no longer in clear text, SecurityLevel settings can only
upgraded, but not downgraded. For example, a configuration file with encrypted credentials cannot be used
with SecurityLevel reset from Encrypted to Encoded. If users want to downgrade security level, they have to
start with a configuration file where credentials are in clear text.

Appendix A - Configuration File for the Rally VCS Connector for GitHub and GitHub Enterprise

The Rally github_connector for GitHub uses a text file in the YAML format. For complete information, consult the web
page at https://yaml.org or any other website on the subject of YAML.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

• Use a text editor (not Microsoft Word or Google Doc) to edit the file.
• Never use a tab character in the file. YAML does not allow or recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent.
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # char and all chars to the right

are ignored in processing.
• Keep the sections in the same order as is present in the sample.yml file.
• Be aware that the colon character : is significant, it separates a key from the value.
• Be aware that the dash character - is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item.
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character.

Skeleton of the template_config.yml file

 GitHub:

         AgileCentral:

             ...  # several key value pairs are relevant for this section

         GitHub:

             ...  # several key value pairs are relevant for this section

         Service:

             ...  # a few key value pairs relevant for the overall operation of the connector appear in this

 section

The AgileCentral section specifies values to use to obtain a connection with Rally. The GitHub section specifies values
to use to obtain a connection with GitHub and specifies the policies governing what repositories in GitHub get processed
to result in posting of changesets to Rally. You must specify the server for your GitHub Enterprise in the GitHub section
of the configuration file. The Service section controls some aspects of the connector behavior on an overall basis. For
example, For example, Pull Requests can be added to this section as True.

The following is a sample file of a configuration with all of the options available and explanatory notes.

 a sample file with explanatory notations

 906

https://yaml.org


 Rally®

 ---------------------------------------------

 VCSConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com       # R   if not provided, defaults to rally1.rallydev.com

         Username      : henry5@hauslancaster.uk   # R   if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415            # R   if an API_Key entry is used, then this isn't needed

         APIKey        : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org        # O

         ProxyUser     : jessonbrone               # O

         ProxyPassword : S-e-c*r*E&T321!789        # 0

         Workspace     : My Onliest Workspace      # R  name of the Rally Workspace where

                                                   #    SCMRepository, Changeset records are written

         Project       : GoneWithBreeze            # R

         Transforms    :                           # R

             Author    : Passthrough               # This is the default setting if not provided

             #Author   : FileBasedUserNameLookup(user_map.txt)

             #Author   : UserNameDomainAugmentLookup(chiselor.com)

         UpdateArtifactState: True                 # O  If present, the next entry must be present also

         StateExtractorClass: BasicActionsAndArtifactsExtractor  # O  If present, the above entry must be

 present also

     GitHub:         # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Protocol      :  https                      # O  defaults to https if not specified

         Server        :  api.github.com             # O  defaults to the GitHub API server, for GHE use your

 server

         Port          :  443                        # O  defaults to value appropriate for https, a GHE

 installation may use a different port

         User          :  validuser                  # R  provide a value when GitHub requires credentials for

 access

         Password      :  somepasswd                 # R  provide a value when GitHub requires credentials for

 access

         Token         :  320ca9ae9408d099183aa052ff3199c2  # O can use in place of Password when credentials

 required

         Organization  :  LouisDeFunes               # O  in the absence of this item, only repositories owned

 by the User are accessed

         Repository:                                 # O  sub-section header for the following two items

             Include   :  base*, trophy, bottle*, floormat                   # Optional

             Exclude   :  basejump, basement, bottlecap, bottlerock*         # Optional

     Service:

         Preview       : True        # O  When set to True, the connector shows the items that would be

 processed

                                     #     but doesn't actually post any Changesets to Rally.

                                     #    When you have completed the setup and the connections with Rally and

 GitHub

                                     #     are made successfully, you can change this value to False (or just

 drop this entry).

         LogLevel      : INFO        # O This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is

 very verbose

         PullRequests  : True        # O Default is False, when True GitHub PullRequests are detected and

 reflected in Rally

 907



 Rally®

         SecurityLevel : Cleartext   # O (or Encoded, or Encrypted) The default is Encrypted if this element

 not present

         AppendVCSCommitter:  False  # O True or False, default is False.  When True the VCS committer name is

 appended

                                     #   to the commit message that is posted in the resulting Rally Changeset

 item.

Rally VCS Connector for GitHub and GitHub Enterprise Revision History

• 2.0.6 February 2020
– Corrected issue where a commit message containing no Rally artifact links results in a too-expansive query of

Rally artifacts. New behavior short-circuits the query if there is nothing in the commit message that matches the
FormattedID pattern.

• 2.0.3-Master --- 9-Feb-2018
– Fixed name of StateExtractor class in sample config file
– Fixed assignment of Changeset URI for Bitbucket Server

• 2.0.0-Master --- 21-Dec-2017
– Unified all newer policy based VCS connectors into one distribution package

• 1.3.2-Master --- 7-Dec-2017
– Support for appending committer name to commit message

• 1.3.0-Master --- 28-Nov-2017
– Added support for pull requests

• 1.2.2-Master --- 16-Oct-2017
– Included pull request title to be parsed for formatted id

• 1.1.1-Master --- 12-Sept-2017
– Added support for GitHub Enterprise (GHE) as of version 2.10.0

• 1.0.0-master --- 30-May-2017
– Initial release

Rally VCS Connector for TFS/VSTS (Git)
The Rally VCS Connector for TFS 2017/VSTS 2017 (Git) posts information about TFS 2017 and VSTS 2017 commits to
Rally, relating those commits to Rally changesets and artifacts if sufficient information is contained in the VCS commit
messages to identify the relevant artifacts.

This connector works with TFS 2017 when the TFS server is configured to use git for version control. The connector
will also update the state of relevant Rally artifacts, specifically defect state or user story schedule state when commit
messages contain appropriate syntax, for example US123 In-Progress. The Rally VCS Connector for VSTS 2017/TFS
2017 is classified as a one-way and one-time mechanism. Information in VSTS 2017 and TFS 2017 is never altered;
information is only written in Rally and no duplication of data is attempted or allowed.

The Rally VCS Connector includes functionality that detects the creation of TFS and VSTS pull request items and posts
corresponding pull request items in Rally when the configuration option for this is present in the target configuration file.

The Rally VCS Connector for TFS 2017/VSTS 2017 consists of software that you run on your platform according to your
desired schedule. The configuration of the connector is policy-based, meaning that you do not need to provide a separate
configuration file for each VSTS or TFS repository for which you want the connector to operate. The policy-based nature
allows you to scope to all or a subset of repositories within a VSTS project (or accessible to a TFS user in a collection).

This section includes the following topics:

 908



 Rally®

• Software Requirements for the Rally VCS Connector for TFS 2017/VSTS 2017
• Hardware Requirements for the Rally VCS Connector for TFS 2017/VSTS 2017
• Install the Rally VCS Connector for TFS 2017/VSTS 2017
• Setup the Rally VCS Connector for VSTS 2017/TFS 2017
• Operation of the Rally VCS Connector for TFS 2017/VSTS 2017
• Troubleshooting the Rally VCS Connector for TFS 2017/VSTS 2017
• Appendix A - Configuration File for the Rally VCS Connector for TFS 2017/VSTS 2017
• Rally VCS Connector for TFS 2017/VSTS 2017 Revision History

Software Requirements for the VCS Connector for TFS 2017/VSTS 2017

The connector has the following software requirements:

• For VSTS 2017 - A personal security token for VSTS REST API access and an active VSTS account.
• For TFS 2017 - A personal security token for TFS 2017 REST API access and access to a TFS 2017 instance.
• A computing platform running Linux or macOS or Windows.
• Python 3.5.x or 3.6.x (we recommend using the 64-bit version on Windows). You can retrieve the package installer

from www.python.org. The connector is not supported and has issues running on any Python version later than 3.6.
• Windows-only additional requirements: The pywin32 package must be downloaded and installed subsequent to Python

3.5 or 3.6 installation. The pywin32 package is available from:
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
– https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download.

Hardware Requirements for the VCS Connector for TFS 2017/VSTS 2017

You can install the connector several ways. There can be multiple install locations on the same machine that can run in
parallel which determine the hardware required. We recommend the following guidelines:

• A computing platform on which your connector will run (Windows, Linux, Mac)
• Base hardware with a quad-core processor set and at least 8 GB RAM
• No more than 20–25 configuration files per install location
• Adequate disk storage capacity to store log files generated by the execution of the connector; we recommend 1 GB of

free disk space
• If you add more install locations running in parallel, each installed location consumes up to 200 MB of RAM when

running and less than 50 MB when idle
• 200–250 MB of space per install location is recommended since the required hard drive space is minimal and needs to

scale only with log files

 909

https://www.python.org/
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.5.exe/download
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download


 Rally®

Install the Rally VCS Connector for TFS 2017/VSTS 2017

You must have Python 3.5.x or 3.6.x available in your environment.

1. Download the connector by following the steps here.

2. Run these commands: pip3 install requests==2.18.4 pip3 install pyral==1.4.0 pip3 install
PyYAML==3.12 pip3 install cryptography==1.7.1

3. Unpack the ZIP file.
a) Change your working directory to where you want to install the connector.
b) Use a suitable program to unzip the file. For example: unzip vcsconn-2.0.6.zip
c) Change the directory to the root of the connector. cd vcsconn-2.0.6
d) Check the contents of the directory using ls -laR .

Sample contents:

vcsconn # vcsconn module root directory vcs2ac # connector initiation script,
this is what you will run config # holds any config files used with this connector
sample_vsts.yml # a sample config to use as a base reference sample_user_map.yml
# a sample text file for user mapping log # hold log file and time file per
configuration README_VSTS.txt # this file User-Mapping-Strategies.txt # details VSTS
user to Rally username mapping strategies

Setup the Rally VCS Connector for TFS 2017/VSTS 2017

After you install the connector, set up your VSTS 2017/TFS 2017 and Rally subscriptions.

See Appendix A for configuration file syntax.

1. Start simple.

2. Identify the person most familiar with the setup and administration of your VSTS 2017/TFS 2017 and Rally
subscriptions.

3. Locate the configuration subdirectory.

4. Copy the sample_vsts.yml or sample_tfsgit.yml file to a file named suitably for your environment for example,
cp sample_vsts.yml to product_x.yml (or some other suitably named file that has a .yml suffix).

5. Edit your product_x.yml file. For example, change the sample values for credentials, workspace, project, token,
and so on to values that are relevant and valid for your environment.

6. Decide on the appropriate SecurityLevel.

7. Decide if you want to update state of Rally artifacts based on commit messages.

8. Decide if you want to map a VSTS or TFS committer to a valid Rally user and choose one of the three mapping
methods: Passthrough, FileBasedUserNameLookup, or UserNameDomainAugmentLookup.

9. Decide whether you want to process repositories for a specific user or for a named organization.

Operation of the Rally VCS Connector for TFS 2017/VSTS 2017

You can configure operation to be either manual or scheduled.

Manual Operation

Using a terminal window or console: cd to the installation root directory, for example /opt/local/sw/vcsconn-2.0.6 .
Then run:

 910



 Rally®

python3 vcs2ac product_x.yml

This software requires that the configuration file reside in the configuration subdirectory. You specify the name of the file
on the command line. Do not specify the subdirectory in the command line argument.

Scheduled Operation

Use either cron, launchctl, or Windows Task Scheduler. Make sure the environment in effect when running this software
has an appropriate environment set so that you can run:

python3 $VCS/vcs2ac your_config_file_name.yml

where $VCS is the reference to an environment variable containing the fully qualified path to the directory where the
software is installed. For example, if you unzipped the package in /opt/local/sw , then your VCS would be set like
this:

export VCS=/opt/local/sw/vcsconn-2.0.6.

Updates

If you re-install or update the connector, save a copy of your configuration files so that you do not have to redo your
configuration work.

Time File

In normal operation, the connector writes a time file (in the log directory) whose name is based on the configuration
file name. Example: If the configuration file name is product_x.yml , then the associated time file name would be
product_x_time.file . The content of the time file is a single line containing a human readable date/time stamp value
in the format YYYY-MM-DD hh:mm:ss Z. The value represents the timestamp of the last commit reflected in Rally. When
the connector is run a subsequent time, it consults the time file to determine which jobs need to be considered for the
current run by only processing the commits whose start time is greater than or equal than the time file value. It is possible
to set the time file value artificially (using ISO format, such as 2017-05-12 11:37:55 Z), so that you can go back in time
and pick up commits from some arbitrary point in the past. The connector does not duplicate commits so you do not have
to worry about duplicated information getting posted to Rally. In the absence of a time file, the connector pulls commits
starting at a point three days prior to the current time.

Troubleshooting the Rally VCS Connector for TFS 2017/VSTS 2017

The connector always writes a log file named based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory.

You can control the extent of logging by specifying the level in the configuration file. Within the configuration file, you can
set the LogLevel which determines the amount of logging information written to the log file. Under the Service section,
modify the LogLevel setting (valid values are ERROR, WARN, INFO, DEBUG). When you set the LogLevel to DEBUG,
you will get the full range of logging messages that can be helpful in pinpointing where a problem occurred and what
information was being processed at the time of the anomaly.

It can be very helpful to run the connector in Preview mode when setting things up for the first time. This allows you to get
the connections to Rally and VSTS/TFS to initialize and validate correctly without posting any changesets.

Issue: Pull
Requests are not

transferring to Rally.

Answer: Verify the following line is in the config file:
PullRequests : True # Default is False, when True VSTS PullRequests are detected and

 reflected in Rally

Issue: Error seen
when using * in the

FATAL: VCSConnectorRunner.run - VCSConnectorRunner.getConfiguration

 vcs_connector_runner.py(288) - Unable to parse config/vsts-cloud.yml successfully,

 while scanning an alias

 911



 Rally®

include statement
to pull all repos.

  in "<unicode string>", line 25, column 26:

                Include   :  *

                             ^

expected alphabetic or numeric character, but found '\n'

  in "<unicode string>", line 25, column 27:

                Include   :  *

        ^

Answer: Escape the * in the include statement with quotes.

 Repository:

            Include   : "*"

Issue: Server error seen
in the logfile in VSTS

connector version 2.4.0

ERROR: VCSConnectorRunner.run - 'Server'

Answer: This issue will be addressed in the next release. The temporary workaround for this issue is adding
the following line to the config file in the AgileCentral Section:

Server : rally1.rallydev.com

Security Level When credentials in the configuration file are no longer in clear text, SecurityLevel settings can only
upgraded, but not downgraded. For example, a configuration file with encrypted credentials cannot be used
with SecurityLevel reset from Encrypted to Encoded. If users want to downgrade security level, they have to
start with a configuration file where credentials are in clear text.

Appendix A - Configuration File for the Rally VCS Connector for TFS 2017/VSTS 2017

The Rally vcs2ac connector for TFS/VSTS uses a text file in the YAML format. For complete information, consult the web
page at https://yaml.org or any other website on the subject of YAML.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

• Use a text editor (not Microsoft Word or Google Doc) to edit the file.
• Never use a tab character in the file. YAML does not allow or recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent.
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # character and all characters to

the right are ignored in processing.
• Keep the sections in the same order as is present in the sample.yml file.
• Be aware that the colon character : is significant, it separates a key from the value.
• Be aware that the dash character - is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item.
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character.

Skeleton of the template_config.yml file

 VCSConnector:

         AgileCentral:

             ...  # several key value pairs are relevant for this section

         VSTS (or TFSGit):

             ...  # several key value pairs are relevant for this section

         Service:

             ...  # a few key value pairs relevant for the overall operation 

                  # of the connector appear in this section

 912

https://yaml.org


 Rally®

The AgileCentral section specifies values to use to obtain a connection with Rally. The VSTS or TFSGit section specifies
values to use to obtain a connection with TFS/VSTS and specifies the policies governing what repositories in TFS/VSTS
get processed to result in posting of changesets to Rally. The Service section controls some aspects of the connector
behavior on an overall basis. See the README_VSTS.txt or README_TFSGIT.txt file in the main installation directory
of the connector for all options that can be used with this connector.

The following are sample files of a configuration with all of the options available and explanatory notes.

 a sample file for VSTS with explanatory notations

 ---------------------------------------------

 VCSConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com       # R   if not provided, defaults to rally1.rallydev.com

         Username      : henry5@hauslancaster.uk   # R   if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415            # R   if an API_Key entry is used, then this isn't needed

         APIKey        : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org        # O

         ProxyUser     : jessonbrone               # O

         ProxyPassword : S-e-c*r*E&T321!789        # 0

         Workspace     : My Onliest Workspace      # R  name of the Rally Workspace where

                                                   #    SCMRepository, Changeset records are written

         Project       : GoneWithBreeze            # R

         Transforms    :                           # R

             Author    : Passthrough               # This is the default setting if not provided

             #Author   : FileBasedUserNameLookup(user_map.txt)

             #Author   : UserNameDomainAugmentLookup(chiselor.com)

         UpdateArtifactState: True                 # O  If present, the next entry must be present also

         StateExtractorClass: BasicStateExtractor  # O  If present, the above entry must be present also

     VSTS:           # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server        :  my-projkt.visualstudio.com # R  Whatever you supplied when you set up your VSTS

 account

         Username      :  validuser                  # R  provide a value when VSTS requires credentials for

 access

         Token         :  320ca9ae9408d099183aa052ff3199c2  # O can use in place of Password when credentials

 required

         TeamProject   :  FonueyOfLuis               # R  VSTS TeamProject

         Repository:                                 # O  sub-section header for the following two items

             Include   :  base*, trophy, bottle*, floormat                   # Optional

             Exclude   :  basejump, basement, bottlecap, bottlerock*         # Optional

     Service:

         Preview       : True      # O  When set to True, the connector shows the items that would be

 processed

                                   #     but doesn't actually post any Changesets to Rally.

                                   #    When you have completed the setup and the connections with Rally and

 VSTS

                                   #     are made successfully, you can change this value to False (or just

 drop this entry).

         LogLevel      : INFO      # O This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is

 very verbose

 913



 Rally®

         PullRequests  : True      # Default is False, when True VSTS PullRequests are detected and reflected

 in Rally

         SecurityLevel : Cleartext # O (or Encoded, or Encrypted) The default is Encrypted if this element not

 present

 a sample file for TFS 2017 with explanatory notations

 ---------------------------------------------

VCSConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com      # R  if not provided, defaults to rally1.rallydev.com

         Username      : henry5@hauslancaster.uk  # R  if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415           # R  if an API_Key entry is used, then this isn't needed

         API_Key       : _zyyy34tqwet9y4t38g38y0  # O  can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org       # O

         ProxyUser     : jessonbrone              # O

         ProxyPassword : S-e-c*r*E&T321!789       # O

         Workspace     : My Onliest Workspace     # R  name of the Rally Workspace where

                                                  #    SCMRepository, Changeset records are written

         Project       : GoneWithBreeze           # R

         Transforms    :                          # R

             Author    : Passthrough              # This is the default setting if not provided

             #Author   : FileBasedUserNameLookup(user_map.txt)

             #Author   : UserNameDomainAugmentLookup(chiselor.com)

         UpdateArtifactState: True                # O  If present, the next entry must be present also

         StateExtractorClass: BasicStateExtractor # O  If present, the above entry must be present also

     TFSGit:         # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         User          : validuser                # R  provide a value for a valid TFS user

         Token         : adsf32tbg43gdsfdsf..     # R  provide a personal access token for TFS 2017

         Instance      : tfs                      # O  you may or may not have a defined instance (tfs is a

 common value)

         Collection    : LouisDeFunes             # R  defaults to "DefaultCollection"

         TeamProject   : SaintTropez              # R  TFS TeamProject

         Repository    :                          # O  sub-section header for the following two items

             Include   : base*, trophy, bottle*, floormat           # O

             Exclude   : basejump, basement, bottlecap, bottlerock* # O

     Service:

         Preview       : True       # When set to True, the connector shows the items that would be processed

                                    #                   but doesn't actually post any Changesets to Rally

                                    # When you have completed the setup and the connections with Rally and

                                    #                TFS are made successfully, you can change this value to

 False

         LogLevel      : INFO       # INFO(default), DEBUG(very verbose), WARN, ERROR

         PullRequests  : True       # Default is False, when True TFS-git PullRequests are detected and

 reflected in Rally

         SecurityLevel : Cleartext  # Encrypt(default), Encoded, Cleartext

Rally VCS Connector for VSTS 2017/TFS 2017 Revision History

 914



 Rally®

• 2.0.6 February 2020
– Corrected issue where a commit message containing no Rally artifact links results in a too-expansive query of

Rally artifacts. New behavior short-circuits the query if there is nothing in the commit message that matches the
FormattedID pattern.

• 2.0.0-Master --- 21-Dec-2017
– Initial release supporting VSTS and TFS 2017 (for projects using Git)

PractiTest (Third-Party Integration)
PractiTest test management tool is an all-in-one software where you and your team can manage, control, track, document
and optimize tests in real time. Finally have complete visibility for your entire process.

• Complete visibility - run and manage all your tests in one place.
• Completely customizable to your process - seamlessly integrate with all of your existing tools.
• Save time and shorten processes - reduce the uncertainty and the risk of delivering a partially tested product.

PractiTest 2-way integration with Rally creates an end-to-end process that seamlessly links both systems and allows users
to:

• Automatically report and link defects in Rally directly from PractiTest’s test runs.
• Automatically populate information into Rally, based on the information gathered from the run.
• Import defects and user stories from Rally to PractiTest.
• Automatically update defects or user-stories of Rally that are linked to PractiTest once they are modified in Rally.

Learn more.

 915

https://www.practitest.com/help/integrations/ca-agile-central-rally-integration/


 Rally®

ProdPad (Third-Party Integration)
The Rally integration allows ProdPad users to push ideas (finished specs) from ProdPad to Rally when the idea is ready
for development. We support custom mapping of fields, so that tickets created in Rally from ProdPad match their preferred
formatting. The integration supports pushing ideas to both parent and child projects, and multiple integrations (such as for
different projects or different preferred mapping) can be set up.

When an idea is pushed, the ticket in Rally includes a link back to the original idea, and the idea then includes a link to the
ticket in Rally.

Integrations can be set up for personal use, or can be shared with the team so that anyone can push ideas and specs to
Rally.

• Set up a Rally Integration
• Best Practices

QMetry (Third-Party Integration)
QMetry supports seamless integration with Rally, allowing testers to sync QMetry requirements as user stories and
defects.

This links both systems and allows testers:

• Unidirectional communication from Rally to QMetry for requirements – user stories
• Bi-directional synchronization between Rally and QMetry for defect management
• Check the integration synchronization scheduler status
• Integration synchronization history
• Choose the fields that are necessary for the sync

Learn more.

qTest (Third-Party Integration)
Tricentis qTest offers a suite of Agile testing tools designed to improve efficiency and ensure collaboration on your journey
to release the best software.

The qTest integration with Rally allows for scaling software testing with your enterprise agile planning initiatives.

• Integration with Rally
• Best Practices for Integrating with Rally
• Rally Test Management Integration

Rally Adapter for Jira
The Rally Adapter for Jira helps you to visualize and track work across an organization's Jira instances and projects in line
with your Rally teams, providing a comprehensive view of planned and in-progress work across your execution teams.

The Rally Adapter for Jira is ideal for companies that want to allow their engineering teams to leverage Jira for their day-
to-day work while still providing a comprehensive view of ongoing work across their portfolio in Rally, ultimately allowing
for seamless collaboration between business and engineering teams.

 916

https://help.prodpad.com/hc/en-us/articles/204944067
http://www.prodpad.com/how-to-guide/best-practice-with-prodpad-and-rally/
https://www.qmetry.com/qmetry-test-management-integration/#rally
https://support-hub.tricentis.com/open?id=show_search_result&lang=en&path=%252Fqtest%252Fod%252Fen%252Fcontent%252Fintegrations%252Frally%252Fintegration_with_rally.htm&product=qtest&sessionRotationTrigger=true&type=product_manual&version=10.4.3%2520On%2520Premise
https://support-hub.tricentis.com/open?id=show_search_result&lang=en&path=%252Fqtest%252Fod%252Fen%252Fcontent%252Fintegrations%252Frally%252Fbest_practices_for_integrating_with_rally.htm&product=qtest&sessionRotationTrigger=true&type=product_manual&version=10.4.3%2520On%2520Premise
https://www.tricentis.com/integrations/ca-agile-central-rally/


 Rally®

There are three options for integrating Rally and Jira. Review the capabilities of each option in the following table to
ensure that you are choosing the appropriate option for your needs.

Option Recommended Use Case

Rally-Jira Work Item Connector (WIC)
Less than 200 projects in Rally
Learn more

Basic Implementation
• Ideal for 50 Rally projects per connector instance.
• Designed to connect one Jira instance per connector instance.
• Supports synching defects, tasks, stories, test cases, and base

level portfolio items (Epics and Features).
• Leverages standard job schedulers to update at intervals.

Rally Adapter for Jira
More than 200 projects in Rally

Minimum Profile Configuration
• Ideal for more than 200 Rally projects.
• Designed to scale to 3000 Rally projects.
• Designed to connect multiple Jira instances.
• Supports multiple configurations.
• Ideal for more than 100,000 artifacts in the database.
• Designed to scale to 2,000,000 artifacts.
• Supports synching defects, tasks, stories, test cases, portfolio

items, and iterations.

The Rally Adapter for Jira will be referred to as the Adapter for the remainder of this section.

Watch the Rally Adapter for Jira video.

The Adapter provides:

• Bi-directional syncing between Rally features and Jira epics
• Bi-directional syncing of stories between Rally and Jira
• Support for multiple Jira instances and projects mapped to a single Rally subscription
• Flexible re-mapping of teams after initial set-up to accommodate the normal adjustments in the people/team structure

of your organization
• Iteration (sprint) matching between Rally and Jira based on sprint naming conventions
• Authentication via Atlassian OAuth 1 or Basic Authentication
• Sync of Jira defects into Rally stories

Use the Adapter to capture and manage the progress of execution efforts across all teams involved if:

• You are using Rally to manage, prioritize, and track your program level efforts, down to the lowest level of the portfolio
(we will use feature in reference to that level)

• You have teams that plan at the story level in either Rally or Jira

Learn more.

Technical Requirements

The Adapter runs on your (customer-hosted) server.

Minimum server requirements in an embedded cluster (rounded up):

• 10 CPUs
• 16 GB RAM memory
• 100 GB disk memory
• 100 GB extra disk memory required for Rook

 917

https://youtu.be/mxUo8t_RckU


 Rally®

Installing into an existing cluster depends on optional installs, please refer to the Adapter, Proxy, DB and Admin console
values. With everything installed the existing cluster should be similar to the embedded cluster.

Runtime Pods
Breakdown CPU Request CPU Limit Memory Request Memory Limit

Adapter 2 8 4Gi 16Gi

Proxy 0.1 0.5 100 Mi 500 Mi

DB 1 4 4 Gi 8 Gi

Replicated Related Pods
+ System Pods

4.35 6 6.2 Gi 6.5 Gi

Run Only at
Deployment CPU Request CPU Limit Memory Request Memory Limit

DB Migrations 0.5 1 512 Mi 1 Gi

Replicated Related
Pods Breakdown CPU Request CPU Limit Memory Request Memory Limit

Admin Console 0.25 1.4 250 Mi 500 Mi

Monitoring (Optional on
Existing Cluster)

0.65 0.9 650 Mi 700 Mi

Velero (Optional on
Existing Cluster)

1 2 700 Mi 1.5 Gi

Kube-system (Embedded
Only)

2.45 2.45 4 Gi 4 Gi

Adapter Pod
Breakdown CPU Request CPU Limit Memory Request Memory Limit

Adapter 1.9 7.75 3968 Mi 15.5 Gi

Tomcat-Logs 0.1 0.25 128 Mi 512 Mi

Adapter+TLogs 2 8 4 Gi 16 Gi

If installing the embedded Kubernetes cluster:

• Linux machines (bare metal or VMs) that meet the requirements listed above

If installing into an existing Kubernetes cluster:

• Cluster version 1.15.0 or later
• Docker container runtime
• StatefulSet containers allowed
• Unsupported distributions:

– Docker Desktop Clusters
– MicroK8s Clusters
– Minikube Clusters

 918



 Rally®

Licensing Requirements

The Adapter is available as a premium integration offering for Rally.You request an Adapter license and download by
opening a support case.

1. Open a Support case. It should include:
– Name of the person that will be setting up the Adapter
– Email address of that person
– Rally Subscription ID
– Your company name
– Whether your company is requesting the Airgap or Non-Airgap version of the Adapter

2. Follow the instructions in response to your support case.

Adapter for Jira Next Steps

• Rally Adapter for Jira Functionality
• Installing the Rally Adapter for Jira
• Setting Up the Rally Adapter for Jira
• Maintaining the Rally Adapter for Jira
• Rally Adapter for Jira Configuration Guide
• Troubleshooting the Rally Adapter for Jira

Rally Adapter for Jira Functionality

General Use Cases

• Features originate in Rally (created by the Product Manager/Product Owner). Before planning, these features are
synced back to Jira as Epics. Teams then break down the Epics into Stories. All of the work is then synced back to
Rally in order to track progress.

• Epics and stories originate in Jira (created by the Engineering team or Product Owner). They are then synced back to
Rally so that management can track progress.

Supported Adapter Mapping

Supported fields and mapping for the Adapter can be found here.

Fully Supported

Rally Flow Jira

Name ↔ Summary

Description ↔ Description

Blocked ↔ Flagged (impediment)

Blocked ↔ Custom field, recommend Select List (single choice)

Blocked Reason ↔ Custom field, recommend Text-Field (single line)

Ready ↔ Custom field, recommend Select List (single choice)

Project ↔ Project

Plan Estimate (Stories only) ↔ Story Points

Preliminary Estimate (Features only) ↔ Custom list field, recommend Select List (single choice)

 919

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Rally Flow Jira

Planned Start / End Dates (Features only) ↔ Custom date field, recommend Data Picker

Notes ↔ Custom text field, recommend Text Field (multi-line)

Custom Drop-Down Field ↔ Priority

Risks ↔ Custom IssueType

Tag ↔ Label

Partially Supported

These fields are partially supported, with the primary focus on Jira to Rally flow.

• Rally Feature State / User Story Schedule State bi-directional sync is working with limitations. Learn more.
• Dependencies can be synced between Jira and Rally, with certain limitations. Learn more.
• The Iteration field can be synced between Jira and Rally, with certain limitations. Learn more.

Not Supported

Syncing these Rally fields between the two platforms is not supported.

• Owner
• Release
• Milestones
• Parent (Features only)
• Discussions

Adapter Functionality Limitations

The topics in this section discuss some of the limitations of the Adapter.

Moving Items Across Jira Projects

If changes to an item in Rally require a project change in Jira, the item will not sync properly from Rally to Jira.

Dependency Syncing

Bi-directional dependency syncing is supported between Jira and Rally, with some limitations.

Direction Add Dependencies Remove Dependencies Cross System Linking

Rally → Jira Yes Yes No

Jira → Rally Yes Yes No

Stories and features are both supported.

The Adapter supports syncing dependencies (linked items) from Jira to Rally with some limitations:

 920



 Rally®

• If a linked item is not covered by the integration, then the dependency will not be synced.
• The Adapter will add and remove dependencies from an artifact in Rally based on the links that come from Jira. If the

target Rally item has dependencies with other items that are not integrated, those will be removed so that the item
reflects the dependencies synced from Jira.

• Only one direction should be mapped when mapping dependencies (for example, only predecessors or successors).
• Dependencies can only be linked to other items of the same type in Rally.
• Dependencies can only be linked within a “system” as defined by the integration.

The adapter supports limited dependency syncing functionality from Rally to Jira with some cautions:

• If a linked item is not covered by the integration, then the dependency will not be synced.
• Dependencies can only be linked within a “system” as defined by the integration.
• Only one direction should be mapped when mapping dependencies (for example, only predecessors or successors).

Status Syncing

The mapping defines which status on one side maps to what status on the other. After creating the two entities in the
cfg_obj_fld table, the mapping has to be created in the cfg_obj_fld_mapping table. For each mapped status a
separate entity needs to be created.

Example for mapping a single status from Rally to Jira:

Entity Name Description Sample Data

Cfg Obj Fld Ident The ident of the cfg_object_fld 99

Source Value The source Status value Defined

Target Value The target Status value To Do

IMPORTANT
Use the actual status name in Jira, not the transition name.

Workflow Status Transitions

Statuses in Jira are not mapped 1 to 1 with  Rally  Flow/Schedule States, and therefore the  Rally Jira Adapter is able to
support different interpretations of Jira statuses. When syncing a status from  Rally to Jira, the adapter has to call the Jira
transition endpoint for the affected issue. This endpoint is dependent upon the target Project's Jira Workflow. The adapter
is able to support different kind of configurations, but if the Jira Projects have Workflows that do not allow a transition from
any state to any other state, the adapter requires some special configuration (see Configure by JSON).

In the example illustration below, JSON configuration will be necessary because the workflow is mono directional and
cannot move freely from one status to any other status.

 921



 Rally®

 922



 Rally®

Configure via Status/Transition/StatusCategory

When mapping a status from a dependent to Jira, the adapter will receive the following JSON from Jira:

"transitions": [

        {

            "id": "<TRANSITION_ID>",

            "name": "<TRANSITION_NAME>",

            "to": {

                "self": "https://<JIRA_URL>/rest/api/2/status/<STATUS_ID>",

                ...

                "name": "<STATUS_NAME>",

                "id": "<STATUS_ID>",

                "statusCategory": {

                    "self": "https://<JIRA_URL>/rest/api/2/statuscategory/<STATUSCATEGORY_ID>",

                    "id": <STATUSCATEGORY_ID>,

                    ...

                    "name": "<STATUSCATEGORY_NAME>"

                }

            }

        },

        ...

      ]

The  Rally Jira Adapter provides the options to map to either the <TRANSITION_NAME> , <STATUS_NAME> or
<STATUSCATEGORY_NAME> . The target value needs to be entered in the Schedule State cfg_obj_fld_map target
column.

NOTE
The Status Configuration in the cfg_obj_fld_map operates in the opposite direction, and always maps a
Jira status to a value in  Rally, so the change to map via transition must not be present in those fields.

Configure by JSON

If restrictions are present in Jira's Workflow configuration, a custom JSON needs to be configured and inserted in the
jira_field_def entry of the Status field in the column configuration_data .

An example JSON could look like this:

{

  "defaultStatus": "To Do",

  "To Do": [

    { "id": "11", "name": "In Progress" },

    { "id": "31", "name": "Released" }

  ],

  "In Progress": [

    { "id": "1", "name": "To Do" },

    { "id": "21", "name": "Done" },

    { "id": "31", "name": "Released" }

  ],

  "Done": [{ "id": "31", "name": "Released" }]

}

 923



 Rally®

Syncing Rally Iteration Objects to Jira Sprint Objects

The Adapter supports configurations to transform Rally iterations to Jira sprints. This is only available in the Rally to Jira
direction and does not support updates.

There are two different ways to configure this:

• Syncing by Board Id
No additional configuration is needed.

• Syncing by Board Name
Synchronizing by Board name requires additional configuration.
a. In the mys:cfg_obj_fld table, the Default Value is the name of the board in Jira. This example dynamically

uses the name of the project by combining it using the Transform transformMultiFieldConcat .

 924



 Rally®

NOTE
This Board name is not the name in Jira, but would look something like:
<JIRA_PROJECT_KEY> board

b. In the mys:jira_field_def:Board table, set the Schema Type to board .

 925



 Rally®

Rich Text Field Formatting

When data from rich text fields syncs between Rally and Jira, formatting may not be maintained.

There are some formatting options that are only partially preserved from one platform to the other, while a few options are
not supported. For more information on Jira formatting options, see Text Formatting Notation Help.

Fully Supported in Both Rally and Jira

These formatting options are supported by the Adapter, and will be preserved when syncing between both platforms.

 926

https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all


 Rally®

• Bold
• Italic
• Strikethrough
• Underline
• Text Color
• Bulleted List
• Numbered List
• Link
• Code Snippet
• Horizontal Rules
• Mentions
• Headings
• Superscript
• Subscript
• Monospace
• Block Quote
• Paragraph Quote
• Preformatted

Partially Supported

Certain formatting options are only partially supported due to limitations in either Rally or Jira. The expected behavior for
these options is:

• Images - Images coming from a URL will be synced across the platforms. Images coming from attachments will not be
synced.

• Jira Panels - Will lose cell padding, but retain all other supported formatting.
• Rally Tables - When tables get synced from Jira to Rally, they will retain the default Rally table format.

Not Supported

This formatting will be lost during bi-directional sync.

• Attachments
• Background Color
• Citation
• Font Type
• Font Size
• Decrease Indent, Increase Indent
• Misc
• Text Breaks

Adapter Functionality Frequently Asked Questions

What permissions in Rally are necessary for the Adapter to be set up?

In order to set up and run the Adapter in Rally, workspace administrator permissions are recommended because you may
need to add or query custom fields on the project.

Otherwise, permissions are necessary for the following operations:

 927



 Rally®

• Querying type definitions and field definitions
• Querying all integrated projects, including project attributes
• Updating and inserting items

What permissions in Jira are necessary for the Adapter to be set up and run?

The Jira integration user must have permissions to:

• Run search queries Query using saved filters* and project categories* (*if using for system refinement)
• Query Fields <jiraserver>/rest/api/2/field</jiraserver>

If syncing items from Rally to Jira, the integration user must have the following permissions in the integrated projects:

• Create Issues
• Edit Issues
• Link Issues
• Transition Issues

If syncing iteration objects from Rally to Jira sprints, integration user must have access to:

• View and Query Boards
• Manage Sprints

What happens if I convert an issue in Rally (or Jira)?

In Jira, issue types may be converted between any standard issue types (e.g. story to epic, story to defect, and vice
versa). With the default configuration, the Adapter will automatically throw an error and stop syncing items that are
converted from one type to another in Jira.

There are many use cases where changing between issue types is common and valid. For example, a user in Jira creates
a defect. After review, the product owner determines that the issue is not a defect, but instead is an enhancement and
converts the defect to a story. Tthe team may review the new story and decide that there are too many questions to be
answered and change the story to a spike.

In the above case, if the different issue types are being synced from Jira to a Rally user story (as recommended so
that items can roll up through the portfolio hierarchy), then converting between those item types is possible with some
additional configuration on the Jira system.

This is possible because all of the source (interchangeable) issue types in Jira are synced to the same Rally Object Type
(user story).

In the case where a Jira story being synced to a Rally user story is converted to a Jira epic which is being synced to a
Rally feature, the integration would not be able to convert between those issue types and would subsequently cause an
error or possibly duplication of an item.

Because interchangeable items are determined by the flows that are setup, the Adapter needs to be configured to
understand what conversions are valid and which are not. This configuration is done at the jira_system level. Steps to
enable issue type conversion between issue types in Jira are:

1. Determine which issue types can be converted for the Adapter.
2. Build the configuration, which is a JSON payload where the keys represent the source issue type and the values are

arrays containing valid issue types that source issue type can be converted to. Example payload:
{

          "Story":["Bug","Spike"],

          "Spike":["Bug","Story"],

            "Bug":["Spike","Story"]

}

 928



 Rally®

3. Add this payload to the issue_type_comp field in the jira_system and save.
4. Any items for that particular system that are converted will be validated against the rules in the above payload.
5. If an item is converted to an issue type that does not contain a path in the above payload (e.g. “Bug” → “Task” or

“Epic” → “Bug”), then the sync of that item will fail with a message in the log file. The failure will not be seen in the
reaction queue because the item will not get to that point.

Rally Adapter for Jira Release Notes
These notes provide information on the notable features, performance improvements, infrastructure changes, and bug
fixes to the Rally Adapter for Jira.

GA 3.6

Dec, 2022

What's New Adapter Synchronization

• Bi-directional dependency synchronization support has been improved. Learn more.
• Bi-directional synchronization of tags and labels is now fully supported. Learn more.
• Changed and improved the synchronization Statuses going from Rally to Jira. Learn more.

Administration and Maintenance

• Improved archive and data purge processes. Learn more.
• Improved the backup and restore scripts. Learn more.
• Updated system requirements. Learn more.
• Improved logging messages in the Adapter.
• The embedded installer includes a plugin Automated SSL rotation. Learn more.
• Improved the Performance Stats Dashboard endpoint.
• Admin Console:

– Adapter can now be restarted by scaling pods to 0.
– Added a field to configure the Log Level of the Adapter.
– Added a field to customize MYSQL-Database configurations. Learn more.

Bug Fixes • Fixed an issue in synchronization between Iteration/Sprint vs Milestone/Fix.
• Fixed an issue where the database pod ran out of space due to too many entries in the reaction table.
• Fixed an issue with non-synchronizing flows. Planned Start / End date.
• Fixed an issue with “Project is Required” error when syncing from Rally to Jira.
• Introduced a flag to mitigate concurrency issues on Rally. Learn more.
• Fixed issue with validation errors not displaying properly in the DataExplorer.
• Fixed an issue where tomcat access-log files were not being properly rotated.
• Introduced an option to escape String fields from Jira for consistency. Learn more.

Dependency Changes • Updated Apache Shiro from 1.7.1 to 1.10.1.

GA 3.5

Jun 2, 2022

What's New • Upgraded all docker base images to their latest versions available.
• Upgraded to the latest LAC version (5.4.5.5357).
• Added a Clickjacking filter to comply with latest security standards.
• Added adapter version number to each request sent to Rally.
• Add/Update resource specifications when running the application in an kubernetes environment.
• Encrypt sensitive data fields in the adapter. Learn more.
• Add option to set a custom API-Key. Learn more.

 929



 Rally®

Bug Fixes • Fixed an issue where the timezone offset calculation was not taking DST into account.
• Fixed an issue where the timezone offset calculation was not taking Rally's timezone into account.
• Fixed an issue where synchronizing the Jira sprint field was not working when using Jira Cloud.
• Fixed an issue where transitioning a Jira ticket was not possible when using oauth.
• Fixed an issue where LAC caused a memory leak, which could lead to huge memory consumption.
• Fixed the kots Admin Console instructions on how to create a SSL certificate chain.

Dependency Changes • Upgraded
– jackson-databind to 2.13.2
– Log4j to 2.17.1
– MySQL connector to 8.0.28>

• Removed
– Spring Framework

GA 3.4.1

Jan 19, 2022

What's New • The Backup script in the database container accepts an additional optional argument to specify a
database host, enabling it to be used outside of the actual database pod.

• Add support for preformatted text in rich text fields.

Bug Fixes • Fixed whitespace/font styling issue in rich text fields.
• Updated LAC to version 5.4.4 to properly mitigate CVE-2021-44228 and CVE-2021-45046.

– Log4j 2.13.2 to 2.17.0
– Apache Camel 2.24.1 to 2.25.1

• Changed definition for Restore functionality to use namespace scoped Role/Rolebinding instead of
ClusterRole/ClusterRolebinding.

• Removed namespace definition default from ServiceAccount Rolebinding for Restore
functionality.

GA 3.4.0

Dec 17, 2021

What's New • Enhancement of several options in rich text fields and their consistency between both platforms:
– Code snippets
– Citation
– Indent
– Monospace
– Images
– Horizontal Rulers
Learn more.

• Add capabilities to backup and restore the RallyJiraAdapter database manually.

Bug Fixes • Fixed an issue where syncing Jira status was not working when non-default transition names were
used.

• Fixed some issues in Rich Text synchronization regarding Lists, Font Color, and Anchors/Mentions.
• Deleted the JndiLookup.class out of the log4j2-core lib to mitigate CVE-2021-44228 and

CVE-2021-45046. Learn more.

GA 3.3.0

Nov 26, 2021

 930

https://github.com/advisories/GHSA-jfh8-c2jp-5v3q
https://github.com/advisories/GHSA-7rjr-3q55-vv33
https://knowledge.broadcom.com/external/article?articleId=230390


 Rally®

What's New • There is a new synchronous config field attribute, which forces any changes related to those fields
to be processed sequentially instead of concurrently. This mitigates an issue where parallel updates to a
story can lead to concurrency problems in Rally.

What's Improved • Enhanced several options in rich text fields and the consistency between both platforms:
– Numbered lists
– Bulleted lists
– Panels
– Tables
– Headings (h1 to h6)
– Font colors
– Strikethrough and underline
– Mentions

Bug Fixes • Optimized the database by removing a view that caused problems with temporary files on the
filesystem.

• Fixed an issue with using OAuth when the Adapter and Jira instances are located in different time
zones.

GA 3.2.2

Oct 22, 2021

What's Improved • Fixed errors when installing external SSL certificate.

GA 3.2.1

Oct 12, 2021

What's Improved • Tuned database queries to avoid maxing out disk space caused by temporary tables.
• Set mysql binlogs to expire in 4 days (instead of 30) to avoid maxing out disk space.
• Better handling of Jira polling to reduce CPU and Memory used by the Adapter.

GA 3.2.0

Oct 1, 2021

What's New • Subfolders are allowed during the airgap installation when pushing integration images to your private
registry. Learn more.

• You can adjust the Adapter polling intervals. Learn more.
• Added support for Jira Priority field.
• Added support for Jira Cascading Select custom fields.
• Enabled synchronization of AffectedWorkItems in a Risk object.
• Added fetchBack settings to integration settings with improved default values.

What's Improved • Fixed problem with encoding/decoding of Boolean values.
• Does not overwrite existing field definitions.
• Improved Adapter performance:

– Fixed Connection closed errors.
– Fixed a polling issue with Jira.

GA 3.1.0

July 29, 2021

 931



 Rally®

Kubernetes Customer
Action Required

There have been some updates to KOTS recently which we recommend all our customers install. This
requires action from the administrator managing the Adapter instance. Learn more.

• Embedded (kURL) Installations
Follow these instructions on how to update an embedded cluster. Learn more.

• Existing Cluster Installations
Follow these instructions for how to update your kots kubectl plugin and your kotsadm console. As a
part of this process, when you run kubectl kots admin-console upgrade , you must pass
an additional flag --with-minio=false . Learn more.

What's New • Added the ability to set Jira Cascading Select custom fields from Rally.
• Added pre- and post-backup Snapshot hooks to enable easier disaster recovery. Learn more.

Security Fixes Vulnerabilities fixed with this build:

• com.mchange : c3p0 : 0.9.5.2
• jquery 2.1.0
• moment 2.8.3
• org.apache.commons : commons-dbcp2 : 2.1.1
• org.apache.shiro : shiro-core : 1.5.0
• org.apache.shiro : shiro-web : 1.5.0
• underscore 1.5.2
• com.sun.activation : javax.activation : 1.2.0
• javax.activation : javax.activation-api : 1.2.0
• org.glassfish.hk2 : hk2-locator : 2.5.0-b32
• org.glassfish.hk2 : osgi-resource-locator : 1.0.1
• org.glassfish.hk2.external : aopalliance-repackaged : 2.5.0-b32
• org.glassfish.hk2.external : javax.inject : 2.5.0-b32
• org.jvnet.mimepull : mimepull : 1.9.6
• com.mchange : c3p0 : 0.9.5.2
• org.apache.derby : derbynet : 10.14.1.0

Rally Adapter for Jira Release and Support Lifecycle Dates
The following table describes the support lifecycle dates for the Rally Adapter for Jira.

NOTE
For more information about the Broadcom End of Service (EOS) and End of Life (EOL) policy, see the
Broadcom Maintenance Policy Handbook.

Product Release GA Date
End of Service (EOS),

End of Life (EOL),
or Stabilization Date

Rally Adapter for Jira 3.6 Dec 20, 2022 -

Rally Adapter for Jira 3.5 Jun 3, 2022 Jun 3, 2023

Rally Adapter for Jira 3.4.1 Jan 19, 2022 Jan 19, 2023

Rally Adapter for Jira 3.4 Dec 17, 2021 Dec 17, 2022

Rally Adapter for Jira 3.3 Nov 26, 2021 Nov 26, 2022

Rally Adapter for Jira 3.2.2 Oct 22, 2021 Oct 22, 2022

Rally Adapter for Jira 3.2.1 Oct 12, 2021 Oct 12, 2022

Rally Adapter for Jira 3.2 Oct 1, 2021 Oct 1, 2022

 932

https://docs.replicated.com/release-notes/rn-app-manager
https://docs.replicated.com/enterprise/updating-embedded-cluster
https://docs.replicated.com/enterprise/updating-apps
https://ftpdocs.broadcom.com/cadocs/0/contentimages/Broadcom%20Software%20Maintenance%20Policy%20Handbook_Final%2022July2020.pdf


 Rally®

Product Release GA Date
End of Service (EOS),

End of Life (EOL),
or Stabilization Date

Rally Adapter for Jira 3.1 July 29, 2021 July 29, 2022

Rally Adapter for Jira 3.0.1 Jun 03, 2021 Jun 03, 2022

Rally Adapter for Jira 3.0 and older Apr 23, 2021 Apr 23, 2022

Installing the Rally Adapter for Jira
This section contains the installation instructions for the Rally Adapter for Jira.

There are two Kubernetes cluster options:

• Embedded
The install script includes an embedded Kubernetes cluster for easy setup.

• Existing
The installation deploys to a target namespace in an existing Kubernetes cluster.

There are two installation options:

• Airgap
Installed on a server that has no path to inbound or outbound internet traffic.

• Non-Airgap
Installed on a server that will have internet access (inbound/outbound). We highly recommend installing the Non-
Airgap option if your environment has internet access to take advantage of a more efficient and seamless installation
and software update process.

Server Access Required

• SSH access to a new server running a standard distribution of Linux. You should use the latest version of Ubuntu,
Debian, CentOS, or Red Hat Enterprise Linux.

• TCP Inbound port 8800 for access to the Admin Console.
• Inbound HTTP and HTTPS access for managing application components.
• Outbound access from the server to:

– https://rally1.rallydev.com/
– Jira servers to be integrated using the Adapter

Prerequisites
Credentials Your personal download portal URL and password will be supplied to you in your support case.

SSL Key and
Certificate Files

• If you do not have an SSL key and certificates, you can use the self-signed certificates provided by
default.

• Self-signed certificates will give you warnings that the sites are not safe because they have not been
verified by a valid certificate authority.

• The Adapter can run with a self-signed certificate, but there will be some additional steps that you will
need to take later in the process to access the Adapter dashboards from your browser.

NOTE

For Embedded Cluster Installation:

The embedded installer adds the kURL add-on EKCO that automatically renews certificates 30
days prior to their expiration date. This automatic renewal only applies to default, self-signed
TLS certificates for the KOTS Admin Console and for the Kubernetes Control Plane. Custom

 933



 Rally®

certificates are not automatically renewed. Find more information on the Kurl documentation
page here.

Install the Adapter for Jira, Non-Airgap Only

1. Login to your personal download portal using the URL and password supplied in your support case.
2. Download your license.
3. SSH into the server where the Adapter will be running.
4. Run one of the following installation commands.

– [Embedded Cluster]
curl -sSL https://k8s.kurl.sh/rally-jira-integration-kots | sudo bash

– [Existing Cluster]
curl https://kots.io/install | bash

kubectl kots install rally-jira-integration-kots

5. Follow the instructions in the console.
6. Continue with the Adapter setup. Learn more.

Install the Adapter for Jira, Airgap Only

1. Login to your personal download portal using the URL and password supplied in your support case.
2. Select your cluster type:

Bring my own cluster This is an existing cluster installation.
Embedded cluster This is an embedded cluster on a VM.

3. Download your license.
4. Download the latest airgap bundle.

You can review Release Notes by selecting the note icon next to the bundle.
5. Do one of the following:

– [Embedded Cluster]
a. Download the kURL embedded install bundle .
b. Move the kURL bundle to your host machine.
c. SSH into the server where the Adapter will be running.
d. Install the Admin Console components:

tar xvf /rally-jira-integration-kots.tar

cat install.sh | sudo bash -s airgap

e. Finish the installation by following the instructions in the console.
– [Existing Cluster]

a. Watch this YouTube video that walks through the steps: Performing an Airgap Install on an
Existing Kubernetes Cluster.

b. Download the Latest Kots CLI from your download portal.
If you need to install without root access, follow these instructions: Getting Started with KOTS

c. Download the Latest Kots Admin Console Airgap bundle from your download portal.
d. Set up a private registry and create a namespace in the top folder of your private registry. Ideally, you would

name it rally-jira-integration-kots ; you will use this name as the KOTS admin namespace name
in the KOTS install (Step f). Images will be pushed/pulled to this registry for the Admin Console and the
integration.

e. Optionally, you can push the integration images to a private registry, scan, and move to a restricted production
registry that limits to pull only permissions. Do this by using the KOTS install instruction on how to push
the Admin Console images to the private registry, replacing ./kotsadm.tar.gz with the airgap bundle
filename. For example:

 934

https://kurl.sh/docs/install-with-kurl/setup-tls-certs#kots-tls-certificate-renewal
https://www.youtube.com/watch?v=OLjwKSuRCXM
https://www.youtube.com/watch?v=OLjwKSuRCXM
https://docs.replicated.com/reference/kots-cli-getting-started#installing-without-root-access


 Rally®

./rally-jira-integration-kots-3.0.0.airgap

NOTE
You can prevent the application from pushing images to the private registry. To do so, during
the Admin Console setup, on the Install in airgapped environment screen, select the Disable
Pushing Images to Registry check box.

f. Follow the installation instructions in KOTS Install, with the following changes.
• Use the name of the namespace you created in Step d in place of the <APP_NAME> here ./

kotsadm.tar.gz private.registry.host/<APP_NAME> and here --kotsadm-namespace
<APP_NAME> .

NOTE
The same name must be used in both commands.

• Use the actual integration name rally-jira-integration-kots in place of <APP_NAME> in the
following instruction (install the Admin Console):
kubectl kots install <APP_NAME> \

6. Once the installation is complete and you have access to the Admin Console, continue with the Adapter setup. Learn
more.

Setting Up the Rally Adapter for Jira
After installing the Rally Adapter for Jira, you need to finish your setup.

Make sure to read each step and update your installation accordingly.

NOTE

• The default database password is password .
• You can return to the configuration page later by selecting Config from the Admin Console Dashboard

toolbar.

1. When the installation finishes, you are put onto the Config page in the Admin Console. Select Continue. The Preflight
Checks run, making sure that your cluster meets the minimum requirements.

2. Select Continue. The Admin Console Dashboard displays. Wait until the Application tile displays a Status of Ready .

3. Confirm that the Adapter is running.
a) In a browser, go to the root hostname .
b) Login with the following credentials:

• Default username: admin
• Default password: somepassword

Your setup is successful! You are now ready to start configuring the Adapter. Learn more.

Maintaining the Rally Adapter for Jira
The topics in this section explain items that are needed to maintain the Rally Adapter for Jira.

These maintenance tasks are performed from the Admin Console.

• Backup/Restore (Snapshots)
• Backup/Restore (Scripts)
• Troubleshooting (Support Bundle)
• Update the KOTS Application

 935

https://docs.replicated.com/enterprise/installing-existing-cluster#kots-install


 Rally®

Backup/Restore (Snapshots)

Review the external kots.io documentation on how to set up and use the snapshot capabilities from
your Admin Console. Learn more.

See the configuration guide for information on the ways to start and stop the Adapter. Learn more.

Backup Details

When you start a snapshot, the stopProcessing flag is set to 1 to stop the Adapter and FLUSH LOGS is called to start a
new mysql binary log file.

Once the snapshot is complete, the stopProcessing flag is set to 0 to start the Adapter and FLUSH LOGS is called
again to make it easier to find backup logging if needed.

Disaster Recovery

For point-in-time recovery, you are responsible for live backups of the mysql binary logs in a separate location. These
logs can be used to restore the database to a more accurate state after a snapshot restore. If you choose to not backup
the binary logs, there is risk of artifact duplication for any artifacts created since the last backup snapshot.

The  mysqlbinlog  utility, included with mysql , can be used to create live backups. To continue a live backup after the
server has been restarted, you must also restart the mysqlbinlog utility.

By default, the binary log files are located under the /var/lib/mysql directory. To change the location, edit the log-
bin variable in my.cnf :
log-bin=/path/to/new/directory/mysql-bin

Restore Details

If possible, set the stopProcessing flag to 1 to stop the Adapter. Next, restore a snapshot either through the Admin
Console or disaster recovery. Learn more.

Once the snapshot has been restored, the stopProcessing flag is already set to 1 to stop the Adapter from running as
that was the state it was in during the backup. This gives you time to restore any binary logs needed and to restart the
mysqlbinlog utility before the Adapter starts processing. Once all restore procedures have been completed, you are
now ready to set the stopProcessing flag to 0 to start the Adapter (the Adapter will automatically start if you did not
manually set it to stop prior to the restore).

mysqlbinlog Examples

• List binary logs:
SHOW BINARY LOGS;

• Get current log and position:
SHOW MASTER STATUS;

• Live backup with starting file:
mysqlbinlog --read-from-remote-server --host=host_name --raw

  --stop-never binlog.000130

• Disable binary logging during restore: use the -D flag
• Re-execute events:

– Using a specific list of log files:
mysqlbinlog --start-position=27284 binlog.001002 binlog.001003 binlog.001004 | mysql --host=host_name -u

 root -p

– Using all log files:

 936

https://docs.replicated.com/enterprise/snapshots-understanding
https://dev.mysql.com/doc/refman/5.6/en/mysqlbinlog-backup.html#mysqlbinlog-backup-static-live
https://docs.replicated.com/enterprise/snapshots-restoring-full


 Rally®

mysqlbinlog --start-position=27284 --to-last-log binlog.001002 | mysql --host=host_name -u root -p`

• Another approach is to write all the logs to a single file and then process the file:
mysqlbinlog binlog.000001 >  /tmp/statements.sql

mysqlbinlog binlog.000002 >> /tmp/statements.sql

mysql -u root -p -e "source /tmp/statements.sql"

Backup/Restore (Scripts)

This section contains information on performing a backup and restore of the database without using snapshots.

The backup and restore scripts allow administrators to generate a mysqldump file of the databases integration and
dblocal_users , and to restore them from this file. Database backup and restore scripts are included in the database
container in the db/backup and db/restore folders respectively.

Creating a Backup (Script)

By default, the backup will not cover transient data: actions, reactions, and catalyst data. This means the following tables
are not included:

• mys:ac_action
• mys:ac_action_archive
• mys:jira_action
• mys:jira_action_archive
• mys:catalyst
• mys:catalyst_archive
• mys:reaction
• mys:reaction_archive

However, the backup script does offer an optional flag to include these tables, as well as the possibility to archive actions,
catalysts and reactions prior to creating the mysqldump file. See the -a argument explanation for more information.

In addition, if it is enabled, the integration setting stopProcessing is automatically toggled to pause and resume the
adapter synchronization before and after the backup .

Show backup script help section:

backup_database.sh --help

Optional input arguments:

backup_database.sh 

    -d <target directory> 

    -a <archive interval> 

    -h <host address> 

    -p <database password> 

    -c <config object ident(s)> 

    -f <config mapping filter(s)> 

    -t <backup transient data>

-d (target directory) The desired target folder. The script will create a sub-folder backup_run_ for each run with the current
time, where the generated sql dump file and logs will be stored.

Default value: Current directory

-a (archive
interval in days)

Executes the database procedure archive and passes an integer argument before creating the sql
dump. This will archive actions, catalysts and reactions which are older than the given amount of days. E.g.

 937



 Rally®

-a 30 affects entries older than 30 days. The archived entries are written to their respective *_archive
tables.

Default value: 0 (nothing is archived)

-h (host address) Specify a mysql host to connect to. Allows the script to be called from another Pod by passing the ClusterIP
address of the database service. If you have a mysql client installed then you can also call the script from
outside the Kubernetes cluster.

Default value: localhost

-d (database password) By default, the script reads the database password from an environment variable. If this variable is not set
(e.g. if the script is called from outside the pod), you can specify the password through this flag.

Default value: Empty

-c (config
object(s) export)

Expects one or multiple cfg_obj idents as a comma separated string of integers. If set, the script
will only export configuration tables related to these config flows, which includes the tables cfg_* ,
ac/jira_field_def , ac/jira_sync_cfg , ac/jira_sync_cfg_fld , api_def and
integration_settings . No sensitive data such as password fields or synced data is exported.
When a dump file is restored, all related tables are first cleared in the target database before the dump is
applied. Other tables are not affected.

Default value: Empty

-f (config
mapping filter(s))

This setting allows certain cfg_obj_fld_map entries to be excluded from the dump file. They can be
specified as a comma separated string of integers, containing cfg_obj_fld idents. The map entries
related to the given idents will be skipped.

Default value: Empty

NOTE
This setting is only considered if -c is also set.

-t (include
transient data)

If set to true, this script will include all tables in the mysqldump file, including actions, catalysts, reactions
and their archive tables.

Default value: False

NOTE
If the option -c is set, then -t is ignored.

Example: Dump default tables into current directory:

./backup_database.sh

Example: Dump all tables in /tmp directory and archive data older than 30 days

./backup_database.sh -t true -d /tmp -a 30

Example: Dump only configuration data for flows 12, 13 and 14, specifying db host and password

./backup_database.sh -c 12,13,14 -h 10.98.3.11 -p <TESTPASSWORD>

Backup the Adapter Using the Script

The backup_database.sh script is located in the database container in the db/backup folder.

1. SSH into the host machine running the Rally Adapter for Jira in Kubernetes.
2. Get the Kubernetes Pod name of the Adapter database.

Example call: kubectl get pods
Example response:rji-db-0

3. Execute the backup script.

 938



 Rally®

Example:kubectl exec -it <DB_POD_NAME> -- /bin/bash -c "/backup/backup_database.sh -d /
tmp"
This creates a subfolder in the /tmp directory containing a file named dumpfile.sql .

4. Copy the dump file from the database Pod to the host machine.
Example: kubectl cp <NAMESPACE>/<DB_POD_NAME>:tmp/backup_run<TIMESTAMP>/dumpfile.sql
<HOST_FOLDER>/dumpfile.sql

5. Exit the Adapter host machine or open a separate terminal tab.
6. Copy the dump file from the original host machine to the local filesystem.

Example: scp <USER>@<HOSTMACHINE_ADDRESS>:<HOST_FOLDER>dumpfile.sql <TARGET_PATH>

Restoring from a Backup (Script)

The script is provided in the database container in the db/restore folder.

To make a restore in a Kubernetes environment easier, this script will automatically shut down the Adapter pod before
importing the dump file, and will restart it afterwards (see argument -s for more details).

WARNING
Restoring the dump file will drop the target databases integration and dblocal_users before importing the
file.

Show backup script help section:

restore_database.sh --help

Mandatory arguments:

restore_database.sh -d <DUMP_FILE>

Optional arguments:

-s <scale deployment>

-h <host address>

-p <database password>

-l <log directory>

-d (dump file) Path of the mysqldump file to be restored.
-s (scale deployment) By default, the restore script will send requests to the Kubernetes API in order to scale the Adapter Pod

deployment replicas to 0 before the restore, and then back to its original count afterwards. When running in
a Docker environment, this scaling option has to be disabled (see example for restore in Docker).

Default value: rji-adapter

-h (host address) Specify a mysql host to connect to. Allows the script to be called from another Pod by passing the ClusterIP
address of the database service. If you have a mysql client installed, you can also call the script from
outside the cluster.

Default value: localhost

-d (database password) By default, the script reads the database password from an environment variable. If this variable is not set
(e.g. if the script is called from outside the pod), you can specify the password with this flag.

Default value: Empty

Example: Restore in Kubernetes environment

./restore_database.sh -d /tmp/dumpfile.sql

Example: Restore in Docker environment

 939



 Rally®

./restore_database.sh -d /tmp/dumpfile.sql -s false

Admin Console Permissions Required to Restore

By default, these roles are created with all permissions and cluster-level privileges by the KOTS installer. However, if you
are using Namespace-scoped kotsadm roles with a restricted RBAC set, consider granting the following permissions
which are needed for the restore functionality:

  - apiGroups: ["apps"]

    resources: ["deployments/scale"]

    verbs: ["get", "create", "update", "patch", "delete"]

  - apiGroups: [""]

    resources: ["serviceaccounts"]

    verbs: ["get", "patch"]

  - apiGroups: ["rbac.authorization.k8s.io"]

    resources: ["roles", "rolebindings"]

    verbs: ["get", "create", "update", "patch", "delete"]

Restore the Adapter Using the Script

The restore_database.sh script is in the database container in the db/restore folder.

1. Copy the dump file from your local file system to the new Kubernetes host.
Example: scp dumpfile.sql <USER>@<KUBERNETES_HOST_ADDRESS>:/tmp/

2. SSH into the host machine running the Adapter in Kubernetes.
3. Get the Kubernetes Pod name of the Adapter database.

Example call: kubectl get pods
Example response:rji-db-0

4. Copy the dump file from the host machine to the database pod.
Example: kubectl cp <HOST_FOLDER>/dumpfile.sql <NAMESPACE>/<DB_POD_NAME>:tmp/
dumpfile.sql

5. Execute the restore script.
Example: kubectl exec -it <DB_POD_NAME> -- /bin/bash -c "/restore/restore_database.sh -
d /tmp/dumpfile.sql"

6. Ensure that the Adapter Pod restarted successfully after the restore.
Example: kubectl get pods

7. Verify that the database backup has been correctly restored.

Troubleshooting (Support Bundle)

Review the external kots.io documentation for troubleshooting an application from the Admin Console. Learn more.

External Logging for the Adapter

The Adapter has a sidecar container that is used for creating external logs. Learn more.

The logs included are:

• Adapter rotating external logs:
– external-(pod id).log

• Default logs:

 940

https://docs.replicated.com/enterprise/troubleshooting-an-app
https://kubernetes.io/docs/concepts/cluster-administration/logging/#streaming-sidecar-container


 Rally®

– catalina.%Y-%m-%d.log
– host-manager.%Y-%m-%d.log
– localhost.%Y-%m-%d.log
– localhost_access_log.%Y-%m-%d.txt
– manager.%Y-%m-%d.log

These logs are used when a support bundle is necessary for troubleshooting after a support ticket has been opened. Your
company may already handle capturing these logs. If not, you can set up third-party logging tools.

Set Up Google Cloud Logging

Use the Google Compute Engine for Google Cloud logging. Learn more.

1. In the Google UI, find the VM and select Install Agent in the Logging agent status column OR ssh into the VM and
run: curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh sudo bash
install-logging-agent.sh

2. Customize the agent configuration.
a. Create a new configuration file in the third-party configuration directory ( /etc/google-fluentd/config.d )

with the following configuration: sudo nano /etc/google-fluentd/config.d/rji-external-logs.conf
b. Add the following: <source> @type tail # Format 'none' indicates the log is unstructured

(text). format none # The path of the log file. path /var/log/pods/*rji-adapter*/
tomcat-logs/* # The path of the position file that records where in the log file #
we have processed already. This is useful when the agent # restarts. pos_file /var/
lib/google-fluentd/pos/rji-external-logs.pos read_from_head true follow_inodes true
# Without this parameter, file rotation causes log duplication. # The log tag for
this log input. tag rji-external-logs </source>

c. Enter Ctrl+O to save, press Enter to confirm the file name, then Ctrl+X to exit.
3. Restart the agent to apply the configuration changes: sudo service google-fluentd restart
4. View logs in the Google Logs Explorer.

– Filter by log name rji-external-logs .

Set Up Splunk Logging

See the Splunk Enterprise Getting Data In page for information on setting up logs in Splunk.

Set Up Loggly Logging

See the Loggly Logging Setup page for more information.

1. ssh into VM.
2. Set logs to use adm user permissions:

a. In a terminal window, enter: nano /etc/rsyslog.conf
b. Change $PrivDropToUser to adm : $PrivDropToUser adm
c. Enter Ctrl+O to save, press Enter to confirm the file name, then Ctrl+X to exit.

3. In Loggly, select Logs, Source Setup from left sidebar menu.
4. Select Linux File Monitoring.
5. Copy the automatic configure-file-monitoring script and paste it into your terminal.
6. Replace FILENAME with: /var/log/pods/*rji-adapter*/tomcat-logs/*.log
7. Replace ALIAS with: rji-external-logs

(or a recognizable name of your choice)
8. Run the script, entering your Loggly Password when prompted.
9. Your logs should now appear in Loggly and can be filtered with: syslog.appName:"rji-external-logs"

 941

https://cloud.google.com/logging/docs/agent
https://console.cloud.google.com/monitoring/dashboards/resourceList/gce_instance
https://console.cloud.google.com/logs
https://docs.splunk.com/Documentation/Splunk/8.1.2/Data/WhatSplunkcanmonitor
https://documentation.solarwinds.com/en/success_center/loggly/content/admin/logging-setup.htm


 Rally®

Update the KOTS Application

Review the external kots.io documentation for updating a KOTS application from the Admin Console. Learn more.

Update the Admin Console

Review the external kots.io documentation for updating the Admin Console. Learn more.

Rally Adapter for Jira Configuration Guide
Once the Rally Adapter for Jira infrastructure is in place, it needs to be configured.

For further support on initial configuration, contact your solutions engineer.

Stopping and Starting the Adapter

The Adapter is turned on ("started") during initial configuration. You may need to stop and start the Adapter for the
following scenarios:

• When adding or editing configurations, you should stop the Adapter temporarily to avoid synchronization errors. These
may be caused by the Adapter trying to run the configuration being added or edited.

• When rebooting the servers, you should stop the Adapter to avoid a reboot in mid-processing which can cause errors.
• If Jira or a network outage occurs you may turn off the Adapter temporarily to avoid recurring volumes of errors.

The stopProcessing flag is used to turn the Adapter off ("stop") and on ("start"). It is located in the
integration_settings table in the integration database. When the settings_value is set to 1, the Adapter is
stopped. Setting it to 0 starts the Adapter.

Changing the stopProcessing flag value can be done three different ways:

• In the Data Explorer, select integration_settings from the Entities drop-down menu in the top left. For the
stopProcessing flag, set the Settings Value to 1 (to stop) or 0 (to start) and save.

• Change the stopProcessing value manually in the database with the following statement (use
settings_value='1' to stop or settings_value='0' to start):
UPDATE integration_settings SET settings_value='0 or 1' WHERE settings_key='stopProcessing'

• Use a REST ‘GET’ request containing the startProcessing function:
http://<HOSTNAME>/rest/default/orchestrator/v1/startProcessing

To stop it:
http://<HOSTNAME>/rest/default/orchestrator/v1/stopProcessing

Archiving and Purging

There are several tables in the database that hold transient data (transaction information). This information is used to
analyze trends in usage and errors, along with performance reporting, and the corresponding tables continually grow in
size. Depending on Adapter usage, this can cause  Rally Dashboard Apps to no longer be able to retrieve performance
data and require a more sizable database. You can archive the summary of this data, allowing data to be purged from
these tables without affecting the Adapter system or data integrity. From version 3.6, an advanced mechanism was
introduced to archive and purge obsolete data from the database. Both functions can be individually configured to run
daily, or be called directly on demand.

The following tables are affected by archiving and purging:

 942

https://docs.replicated.com/enterprise/updating-apps
https://docs.replicated.com/enterprise/updating-apps


 Rally®

• mys:ac_action
• mys:jira_action
• mys:catalyst
• mys:reaction

Both functionalities have two integration_settings respectively for enabling/disabling scheduling and the time
frame. For the configuration of the timeframes the adapter provides the modes d for days, w for weeks and m for
months.(e.g. 2w for 14 days or 10d for 10 days). On activation only entries will be considered where the timestamp
(last_updated for jira_action , ac_action and catalyst; complete_ts for the reaction table) is older than
the current time minus the timeframe (e.g. with 10d the archiving will only archive table entries that fulfill the timeframe
constraint). Both archiving and purging require a minimum timeframe that is at least one day.

Integration settings table:

Table 7: Integration Settings Table

Settings Key Settings Value Description

archiveEnabled        0 or 1 (default is 0) Setting to 1 will enable daily archiving

archiveOlderThan <TIMEFRAME> (default is 2m) Timeframe to be archived daily

purgeEnabled 0 or 1 (default is 0) Setting to 1 will enable daily purging

purgeOlderThan <TIMEFRAME> (default is 6m) Timeframe to be purged daily

Archiving

When archiving is called the entries in the tables are moved to the catalyst_archive , reaction_archive ,
ac_action_archive , orjira_action_archive tables respectively. Afterwards the mysql command optimize
table will be called on each of the tables to rebuild the tables on the file system. The setting to enable scheduling is
called archiveEnabled and the timeframe can be defined with the archivingOlderThan key.

NOTE
If scheduled, archiving will run daily at 3:00 AM server time.

Call Archive Manually

The archiving functionality can be triggered by simply calling a function endpoint:

<ADAPTER_URL>/rest/default/orchestrator/v1/archiveArtifacts?archiveOlderThan='<TIMEFRAME>'

Purging

When purging is executed, entries from the archive tables (ac_action_archive , jira_action_archive
, catalyst_archive and reaction_archive ) will be analyzed. The result will be inserted into the
performance_stats table. Any errors in the reaction table will be put into the errors_archive table. Afterwards,
everything that fits the time constraint in the four archive tables will be deleted and an optimize table command will
be called for each one of them.

NOTE
If scheduled, the purge will run daily at 3:30 AM server time.

Call Purge Manually

The purge functionality can be triggered by simply calling a function endpoint:

<ADAPTER_URL>/rest/default/orchestrator/v1/purgeArtifacts?purgeOlderThan='<TIMEFRAME>'

 943



 Rally®

Adjust Adapter Polling Intervals

You can adjust the polling intervals to ensure that your Jira and Rally data are catching all object changes.

When the Jira Adapter fetches updates from Jira or Rally, it queries for any object changes since the last_run date.

The setting values jiraFetchBackMinutes and rallyFetchBackSeconds are used to extend the query time frame
beyond last_run (further into the past), which allows the Adapter to catch older changes.

The setting jiraFetchBackMinutes is used for polling Jira, which only supports precision down to a minute. If the fetch
back value is too low, the polling may miss changes. If the value is too high, the performance may be affected.

NOTE
If your Jira server and Adapter server are located in different timezones, you may set jiraFetchBackMinutes
to a higher value to compensate for the time difference between the Adapter and Jira.

The setting rallyFetchBackSeconds is used when polling Rally.

1. In the Data Explorer, select mys:integration_settings from the Entities drop-down menu in the upper-left of the
window.

2. Select jiraFetchBackMinutes in the left pane.
3. In the right pane, enter the number of minutes. The default value is 10.
4. Select rallyFetchBackSeconds in the left pane.
5. In the right pane, enter the number of seconds. The default value is 180.
6. Select Save in the top toolbar.
7. Restart the Adapter.

Enable Adapter Sequential Processing

By default, the Adapter processes a certain number of changes in parallel for better performance, defined by the
reactionBatchSize setting.

This parallel processing can lead to concurrency errors in Rally under a specific use case (parenting multiple user stories
simultaneously to a common user story). This is due to a limitation in the Rally API, which does not support concurrent
modifications of HierarchicalRequirements .

To avoid this, configure a field that is causing errors to be synchronous, which forces it to be processed sequentially.

NOTE
The processing of these changes will be slower since they are not done in parallel. However, this performance
decrease only affects the config fields where this check box is active.

1. In the Data Explorer, select mys:cfg_obj_fld from the Entities drop-down menu in the upper-left.
2. Select the source field in the left pane (for example, Jira Stories to Rally Stories, Epic Link).

 944



 Rally®

3. Select the Synchronous check box in the right pane.
4. Select Save in the top toolbar.

Syncing Rally Tags and Jira Labels

Rally supports the bi-directional syncing of Rally tags and Jira labels.

To enable this synchronization, you must define the following configurations in the Data Explorer.

• ac_field_def:Tags to sync Rally tags to Jira labels.
• jira_field_def:Labels to sync Jira labels to Rally tags.

NOTE
These configurations are not enabled by default when the ac_field_def and jira_field_def are created
for tags. You must modify these configuration to enable the synchronizations.

Sync Rally Tags to Jira Labels

1. In the Data Explorer, select mys:ac_field_def from the Entities drop-down menu in the upper-left.
2. Add a new entry or modify an existing one with the following values:

– Name: Tags
– User_Attribute: Name
– System_Attribute: _ref
– Attribute_Type: COLLECTION
– Attribute_Type_Def: Tags

 945



 Rally®

Sync Jira Labels to Rally Tags

1. In the Data Explorer, select mys:jira_field_def from the Entities drop-down menu in the upper-left.
2. Add a new entry or modify an existing one with the following values:

– Name: Labels
– Schema_Type: labels

 946



 Rally®

Adapter Database Options

This topic describes modifying the database options for the Rally Adapter for Jira.

To modify the database options, upload the database configuration file (my.cnf) in the Admin Console.

The file must contain the following two lines:

[mysqld]

secure_file_priv = etc/mysql

We also recommend adding the following additional lines and modifying them for your environment:

max_connections = 2000

binlog_expire_logs_seconds = 345600

innodb_buffer_pool_instances = 4

innodb_buffer_pool_size = 3221225472

 947



 Rally®

NOTE
Do not add database configuration on the first deploy. There is a chance that bad database settings can prevent
the pod from initializing properly, which requires a new installation. Once the database pod is initialized, you can
upload new settings and restart the pod.

Rally Adapter for Jira Dashboard Apps

There are three apps available for monitoring your Rally Adapter for Jira:

Reaction Queue Helps you troubleshoot processes by providing insight into each transaction run through the Adapter,
including updates, duration, and status.

Performance Overview Provides an overview of the distribution of processing times of all transactions to provide insights into
performance issues or need for increased volumes.

Reactions per Month Provides a snapshot of total reactions through the system per month, which can help you predict future
volumes and system needs.

Dashboard Apps Prerequisites

In order to add and use the Adapter dashboard apps, you need:

• The ability to add and configure the Custom HTML app from the Rally App Catalog. Your subscription administrator
must have enabled this capability.

• Access to the Adapter web service from the browser client.
It is likely that these dashboard apps will only work when run from inside your company network or VPN.

• Trust for the Adapter SSL certificate.
– The Adapter is configured as HTTPS and serves either a self-signed certificate (default) or a certificate provided

by you. In either case, the client accessing the server through a Rally dashboard app must be able to trust the
certificate.

– If this is not automatically setup by your IT organization, then the certificate must be added to your certificate trust
store.

• SSL requirements for the Adapter
A valid SSL certificate used to expose HTTPS endpoints is required. This is needed to expose an HTTPS endpoint on
the Adapter so that Rally browser clients on your internal VPN can display the Adapter performance dashboards. Note
that self-signed or internally signed certificates will only work if the certificate is installed into the browser client's trust
store.
(Optional) You need to install your certificate into the Adapter's trust store if:
– Your certificate is signed internally and not by a public CA.
– At least one of the following:

• You require HTTPS connection to your Jira Server and your certificate is signed internally.
• You are using SSL inspection and will intercept outgoing HTTPS calls for inspection.

Install the Adapter Dashboard Apps

You can add the Adapter dashboard apps to a custom page that you create.

1. Create a custom dashboard page. Learn more.
2. Add the Custom HTML app. Learn more.
3. On the RallyAdapterForJira-DashboardApps GitHub page, select the app you want to install:

– PerformanceApp.html
– ReactionQueue.html
– ReactionsperMonth.html

4. Enter the name of the app as the Title for the Custom HTML.

 948

https://github.com/RallyCommunity/RallyAdapterForJira-DashboardApps/tree/add-app-html


 Rally®

5. Copy the HTML code from the GitHub page.
6. Paste the HTML code into your app's HTML field.
7. Select Save.
8. Repeat steps 2 through 7 for the other two apps.

Configure the App Settings

You need the Adapter apikey to configure the apps.

1. Make a GET request to the apikey endpoint as the sa user. https://<hostname>/rest/abl/admin/v2 /
apikey:apikeys?sysfilter=equal(name:'Dashboard%20User')

2. Copy the apikey value and use this in the Auth Token setting in the dashboard apps.
If no apikey is found, follow these steps to create one.
a. Make a POST request to the apikey endpoint as the sa user. https://<hostname>/rest/abl/admin/v2/

apikey:apikeys { "account_url_name": "default", "project_url_name": "orchestrator",
"name": "Dashboard User", "apikey": "your-apikey-value", "is_active": true,
"expiration": null, "description": "Token used for Rally Dashboard Apps", "logging":
"*=FINE", "data": "", "roles": "\"Dashboard User\"" }

NOTE
The apikey value that you specify must be less than 128 characters, and consist of upper- and lower-
case letters and numbers. For example, VadfHWI24sdG43H49df .

b. Copy the apikey value and use this in the Auth Token setting in the dashboard apps.
3. For each app in your dashboard:

a. Select the app Gear

and select Edit App Settings.

b. Enter the apikey value in the Auth Token field.
c. Enter the adapter host without the protocol in the Host (without protocol) field.

4. Select Save.

 949



 Rally®

Adapter Security

Access to the Adapter DataExplorer / REST via Password

The Adapter comes with two predefined users. You are limited to these two users and cannot create new users.

The system administrator is used for managing the Adapter. The default credentials are:

• username: sa
• password: Password

The data administrator is used for setting up the Adapter workflows. The default credentials are:

• username: admin
• password: somepassword

Changing the Default sa Password

Change the default password for the sa user.

1. Make a POST request to https://<hostname>/rest/abl/admin/v2/@authentication?
enablePasswordChange!
with a body like this:
{

    "username": "sa",

    "password": "Password",

    "new_password": "insertNewPassword"

}

Changing the Default admin Password

Change the default password for the admin user.

1. Make a POST request to https://<hostname>/rest/default/orchestrator/v1/@authentication?
enablePasswordChange!
with a body like this:
{

    "username": "admin",

    "password": "somepassword",

    "new_password": "insertNewPassword"

}

Access to the Adapter REST API via API Token

The REST API can also be accessed through an API-Token for dashboards and other integrations with an Authorization
Header:

{

      “Authorization”: “CALiveAPICreator <YOUR-API-TOKEN>:1”

}

        

Changing the API Token

Since version 3.5.0, the Rally Adapter for Jira enables the customization of the API Key. This API Key can be modified
at any time by updating the API Token field in the Admin Console Config page in the section Security Configuration. A

 950



 Rally®

generated random string is suggested, but it can be changed to any string that is up to 128 characters long. The adapter
pod is automatically restarted if this field has been modified.

Encryption of Sensitive Data

Since version 3.5.0, all fields that contain sensitive information are encrypted by default. The encryption mechanism is
based on javax.crypto and java.security. The algorithm used is AES with a key length of 256 and a unique initial vector
that is based on java.security.SecureRandom. The key is based on a configurable string from the Encryption Key field
in the Admin Console Config page in the section Security Configuration. The encryption happens automatically on
upgrade or whenever a field is modified.

Fields that are encrypted:

* ac_system:

    * apiKey

    * pw

    * proxy_password

* jira_system:

    * pwd

    * oauth_private_key

    * oauth_token

    * proxy_password

      

When upgrading from a version that is older than 3.4.0, this encryption is fully automated and no additional steps are
required.

IMPORTANT

If the Encryption Key is modified after the initial upgrade, we recommend halting processing by setting
stopProcessing in the integration_settings to value 1 in the DataExplorer. Additionally, the reaction queue
should also be empty. This is a precaution to prevent Jira or Rally from locking out the adapter because of too
many failed authentications. If the user is locked out of Jira, they can be unlocked through a normal login directly
through the Jira UI. In Rally, a subscription admin might be required.

To ensure that the procedure is safe and secure, the Adapter pod will not restart automatically if only the
Encryption Key setting has changed. After all prerequisites have been met, the fields described should be re-
entered through the DataExplorer. The Adapter can then be restarted and will use the new key for encryption/
decryption.

Troubleshooting the Rally Adapter for Jira
This section contains troubleshooting information for the Rally Adapter for Jira.

Concurrency Exception

Issue: If you try to sync epics in Jira to parent user stories in Rally and epic stories in Jira to Rally child user stories (using
the Rally capability to have a parent/child relationship on user stories), you would get a Concurrency Error. This results in
several of the child user stories not getting synced to Rally

Answer: This parallel processing can lead to concurrency errors in Rally under a very specific use case (parenting
multiple user stories simultaneously to a common user story). You can turn on a Synchronous flag in the Adapter, which
forces those fields to be processed sequentially.

 951



 Rally®

Any change related to a field with this flag enabled will be processed by the adapter in a strictly sequential way only. This
avoids the possibility of running into ConcurrentModificationExceptions in Rally, which can occur when parenting
multiple user stories to a common user story.

This fixes the errors, but the processing of such changes is slower since they are not done in parallel. However, this
performance decrease only affects the config fields where this setting is active.

Learn more.

IMPORTANT
While Rally does allow you to create parent-child relationships between user stories, the best practice is to
always parent a user story to a portfolio item. Creating parent-child relationships between user stories can
create unexpected issues with your data model and reporting and can make it difficult to find and manage your
user stories in some Rally features.

Concurrency Exception Handling via Session Token

The adapter supports the usage of the Rally session token to reduce concurrency problems with Rally. Since this is a
performance heavy operation it is only recommended when facing concurrency problems on a regular basis. It is disabled
by default but can be enabled by adding enableServerSession = “true” into the integration_settings table.

Special Character Handling

Issue: When a flow from Jira to  Rally uses names like <foo> Bar for string fields (e.g. Summary -> Name ),  Rally will
transform this text into Bar . This is because these fields allow certain HTML inputs (e.g. links via <a></a> ) and the API
will filter anything not known to it.

Answer: If names like <foo> Bar are used in the Jira project, the target field can be configured to escape these strings
by setting the attribute_definition field (found in the ac_field_def table) from STRING to ESCAPED_String . This
will cause the ticket to be synchronized from <foo> Bar to &lt;foo&gt; Bar , which will be displayed as <foo> Bar
in  Rally.

NOTE
If this special handling is enabled via the attribute_definition syncing  Rally-> Jira can lead to
inconsistencies if  Rally names or other fields contain allowed HTML input. From  Rally to Jira these will not be
escaped unless a synchronisation also exists in the other direction. Instead, the tags will be escaped and
no longer parsed as HTML tags in  Rally.

Rally-Jira Work Item Connector (WIC)
The Rally-Jira Work Item Connector (Rally-Jira WIC) provides bi-directional copying and updating of stories, defects, and
tasks between Rally and Jira. This integration lets team and project members work in the system that is best suited to
their needs while providing the ability to view activity that is recorded in another system.

 952



 Rally®

There are three options for integrating Rally and Jira. Review the capabilities of each option in the following table to
ensure that you are choosing the appropriate option for your needs.

Option Recommended Use Case

Rally-Jira Work Item Connector (WIC)
Less than 200 projects in Rally

Basic Implementation
• Ideal for 50 Rally projects per connector instance.
• Designed to connect one Jira instance per connector instance.
• Supports synching defects, tasks, stories, test cases, and base

level portfolio items (Epics and Features).
• Leverages standard job schedulers to update at intervals.

Rally Adapter for Jira
More than 200 projects in Rally
Learn more

Minimum Profile Configuration
• Ideal for more than 200 Rally projects.
• Designed to scale to 3000 Rally projects.
• Designed to connect multiple Jira instances.
• Supports multiple configurations.
• Ideal for more than 100,000 artifacts in the database.
• Designed to scale to 2,000,000 artifacts.
• Supports synching defects, tasks, stories, test cases, portfolio

items, and iterations.

Features:

• Runs the following item copying and update services:
– Copy Rally artifacts to Jira issues.
– Copy Jira issues to Rally artifacts.
– Update Jira issues to match updates to Rally artifacts.
– Update Rally artifacts to match updates to Jira issues .

• Supports the copying of Attachments from one system to the other.
• Supports reflecting Jira Comments in Rally Discussion elements (and vice-versa).
• Supports the Jira Workflow in effect for a Jira Project.
• Supports http(s) proxy servers.
• Optionally creates hyperlinks between the Rally artifact and Jira issue.

See the Rally-Jira Work Item Connector Installation and User Guide for information on installing, configuring, and using
the connector.

Supported Versions

The Rally-Jira-WIC has been tested with Jira On-Demand Cloud, Datacenter, and Server version 8.

Cost: Entry Level can be used on any paid for subscription.

NOTE
If you are still using the original Rally Connector for Atlassian Jira, you can access the documentation here.

Rally-Jira Work Item Connector Installation and User Guide
The Rally-Jira Work Item Connector (Rally-Jira WIC) allows customers to use Rally for Agile lifecycle management while
still using Jira for defect management or other issue tracking purposes.

This connector supports Jira Server version 8.x, Jira Data Center, and Jira OnDemand (SaaS). The Rally-Jira WIC
provides the ability to reflect work items between Jira and Rally. The connector runs on a computer behind your firewall
using Python, the Rally WSAPI, and the Jira REST API. Most fields between the two systems can be mapped. The

 953

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Rally-Connector-for-Atlassian-Jira.pdf


 Rally®

elements that the connector supports are Rally Feature, Story, Defect, Task, and TestCase as well as the Jira issue types
of Epic, Story, Bug, Task, and Test. Additionally, the connector supports the Rally attribute of Milestones in a Rally artifact.
Rally Releases and Iterations are not supported as distinct artifact types but are supported as attributes in a supported
Rally artifact.

WARNING
It is important to recognize that the data models of Rally and Jira are not identical and, as such, the two systems
are only partially compatible. We recommend that you take some time to identify the key data items you want to
track in both systems and consider what you want the policy to be as far as having a primary system of record.
This guide discusses some of the trade-offs to be considered and some potential approaches.

The connector is configured through a text file that can be in YML (preferred) or XML format. A log file is created to track
activity and all changes made in Rally and Jira by the connector and is named with the base name of the configuration file.
The connector requires that a custom field exists in each system to store the unique ID of the corresponding item in the
other system. The connector copies fields from Rally or Jira based on a field mapping specified in the configuration file.
Standard and custom fields can be mapped between the two systems.

The connector provides five services to map objects between Rally and Jira:

• Copy issues created in Jira to Rally work items
• Copy work items created in Rally to Jira issues
• Update Rally work items based on changes made to Jira issues
• Update Jira issues based on changes made to Rally work items
• Update Jira issues based on changes made to Rally work items and then update Rally work items based on changes

made to Jira issues (but considering only changes that do not conflict)

The configuration file specifies which services to run, and in what order.

An alternative update service, UPDATE_RALLYFIELDS_AND_OTHER, first searches Rally for updates and pushes
only the changed fields to the Jira system. It then searches the Jira system for updated artifacts, and pushes all mapped
fields of those artifacts into the Rally system. This reduces the chances of data overwrites. The only scenario where an
overwrite might occur is if a change is made in Rally and a change is made in Jira (in reference to two artifacts previously
associated together). In this scenario, first any mapped field in Rally which has been modified is copied to Jira (potentially
overwriting a previously modified mapped field in Jira), then all mapped fields are copied from Jira to Rally.

This section includes the following topics:

• Install the Rally-Jira WIC
• Jira Setup
• Rally Setup for the Rally-Jira WIC
• Configure the Rally-Jira WIC
• XML Tags in the Rally-Jira WIC Configuration File
• Run the Rally-Jira WIC
• Rally-Jira WIC Workflows
• Rally-Jira WIC Best Practices
• Troubleshoot the Rally-Jira WIC
• Rally-Jira WIC Revision History

The Rally-Jira WIC supports mapping top-level Jira issues (story, bug, new feature, improvement, task, or a custom issue
type) but not Jira sub-level types (for example, sub-task). We recommend mapping the Rally defect work item type to Jira
bug and Rally user story work item type to the Jira story issue type.

The remainder of this guide assumes mapping the Rally defect work item type to a Jira bug issue type. If you are mapping
another Jira issue type, you will need to have a modified jira_config.yml or jira_config.xml file to accommodate
that scenario. In general, you can follow these instructions if your scenario differs from the one presented here. For

 954



 Rally®

example, you can substitute your Jira issue type for bug or user story for defect when referencing the Rally work item
type.

Before you begin, review the following items:

• The following people will be involved in getting fields set up in both Rally and Jira:
– A Jira administrator user who can create a custom field on Jira issue types.
– A Rally administrator user (subscription or workspace) who can create a custom field on the Rally artifact you want

to map with Jira.
• Consider the process you want to set up between Rally and Jira:

– What problem are you trying to solve?
– Where do objects start and end their lifecycle?

• Which fields need to be updated? Identify a test project in Jira to use for testing.
• Identify a test Rally workspace and project to use for testing.
• Decide on which computer the connector will run.

Rally Integrations Best Practices contains some useful information for connector setup.

Rally-Jira WIC Software and Hardware Requirements

The following are the hardware and software requirements to install and run the Rally-Jira work item connector:

• A Rally subscription
• A computing host or VM running a recent version of Linux, macOS, or Windows 2019 Server (or newer)/Windows 11
• A working instance of Jira Server (8.0 or greater), a Jira Data Center instance, or a Jira OnDemand instance
• Python 3.9.x installed

– For Windows operating systems, you will need to install pywin32 . Consult the Python Package index site
(pywin32) or follow the directions on the GitHub repo for pywin32 for installing with pip or downloading a binary for
the package.

– Add the path to the Python installation bin directory to the environment PATH (or %path% ) variable.
• The Rally-Jira WIC does not support LDAP.

Rally-Jira WIC Installation Prerequisites

Before you begin the installation, be sure you have the following:

• Access to a non-production environment installation of Jira.
• Rally administrator privileges (subscription or workspace) are needed for setup, but only user access is needed to run

the connector.
• Proxy server details if the machine used to run the connector uses a proxy server to connect to Rally or Jira.
• A Jira user with administrator privileges.

Set the HTTP_Proxy Variable

(Optional) If your site uses a proxy server to access Rally or Jira, you will need to set the http_proxy environment
variable. The following procedure is for a Windows platform.

1. From Start, right-click on Computer, then select Properties.
2. Select Advanced system settings.
3. On System Properties, select Environment Variables.
4. On Environment Variables, select New under System Variables.
5. On New System Variables, enter http_proxy in the Variable name: field, then enter your proxy's full HTTP URL in the

Variable value field (for example, http://corp-proxy-1:8000 ).
6. Select OK (three times) to save and exit this process.

 955

https://pypi.org/project/pywin32/
https://github.com/mhammond/pywin32


 Rally®

You may need to restart your system in order for the change to take effect.

Install the Rally-Jira WIC

Before installing the connector be sure you have completed all the prerequisites.

1. Download the connector by following the steps here.

2. Extract the contents of the zip file Rally-Jira-WIC-5.0.z.zip locally on your machine (such as C:\rally for
Windows or /Users/username/Downloads/ for a Linux or Mac platform).

As a result of unpacking of the distribution archive, the following files and folders are created:

• config — A folder for configuration files. There are two sample files provided.
• log         — A folder for log files and lock files.
• appkg     — A folder containing the Python packages installed by the installer script.
• wheel     — A folder with the package files used for installation.
• installer.py     — Python script to install the necessary packages for this connector.
• local_pkgs          — Python script to show the packages installed in appkg .
• rally_jira_wic — Executable to run the connector.

3. Change the directory to the root of the connector installation: cd Rally-Jira-WIC-5.0.z

4. Run python3 installer.py to install all packages.

If you see output similar to "You don't have write permissions ..." then you will need to either:

• Consult with your system administrator to obtain the necessary permissions (typically done by using sudo or other
similar software).

• Have the system administrator run the command in a console or terminal window. At the prompt, type the following:
python3 installer.py

Sample output:

% python3 installer.py

Installing package for pyral ...

        pyral-1.5.2-py3-none-any.whl

Processing ./pyral-1.5.2-py3-none-any.whl

   …text related to specific packages required by pyral elided…

Installing collected packages: certifi, urllib3, six, idna, charset-normalizer, requests, pyral

Successfully installed certifi-2021.10.8 charset-normalizer-2.0.12 idna-3.3 pyral-1.5.2 requests-2.27.1

 six-1.16.0 urllib3-1.26.9

---------------------------------------------------------------------------

Installing package for jirpa ...

        jirpa-1.0.6-py3-none-any.whl

Processing ./jirpa-1.0.6-py3-none-any.whl

    …text related to specific packages required by jirpa elided…

Installing collected packages: certifi, urllib3, idna, charset-normalizer, requests, jirpa

Successfully installed certifi-2021.10.8 charset-normalizer-2.0.12 idna-3.3 jirpa-1.0.6 requests-2.27.1

 urllib3-1.26.9

---------------------------------------------------------------------------

Installing package for html5lib ...

 956



 Rally®

        html5lib-1.1-py2.py3-none-any.whl

   …text related to specific packages required by html5lib elided… 

Installing collected packages: webencodings, six, html5lib

Successfully installed html5lib-1.1 six-1.16.0 webencodings-0.5.1

---------------------------------------------------------------------------

Installing package for textile ...

        textile-4.0.1-py3-none-any.whl

   …text related to specific packages required by textile elided… 

Installing collected packages: webencodings, six, regex, html5lib, textile

Successfully installed html5lib-1.1 regex-2022.3.15 six-1.16.0 textile-4.0.1 webencodings-0.5.1

---------------------------------------------------------------------------

Installing package for wicore ...

        wicore-5.0.8-py3-none-any.whl

Processing ./wicore-5.0.8-py3-none-any.whl

…text related to specific packages required by wicore elided…

Installing collected packages: certifi, xmltodict, urllib3, six, PyYAML, pycparser, idna, charset-

normalizer, requests, cffi, pyral, cryptography, wicore

Successfully installed PyYAML-5.4.1 certifi-2021.10.8 cffi-1.14.6 charset-normalizer-2.0.12

 cryptography-3.4.8 idna-3.3 pycparser-2.20 pyral-1.5.2 requests-2.27.1 six-1.16.0 urllib3-1.26.9

 wicore-5.0.8 xmltodict-0.12.0

---------------------------------------------------------------------------

Installing package for jira_spoke ...

        jira_spoke-5.0.12-py3-none-any.whl

Processing ./jira_spoke-5.0.12-py3-none-any.whl

Installing collected packages: jira-spoke

Successfully installed jira-spoke-5.0.12

---------------------------------------------------------------------------

Installation complete.

The installer script must exit with a return code of 0 for the installation to be considered complete.

5. Run python3 local_pkgs to get a listing of the Python packages installed in the appkg directory.

Setup Jira for the Rally-Jira WIC

The Jira connector user (as specified in the configuration file) does not need to be part of the jira-admin group, but
they must have permissions for the following operations:

 957



 Rally®

• Add comments
• Assign issues
• Assignable user
• Browse projects
• Close issues
• Create attachments
• Create issues
• Edit issues
• Modify reporter
• Resolve issues
• Schedule issues

NOTE

• The Jira configuration can become quite complex. We have found that it is good to use the Jira Permission
Helper button to check that everything is correct. All eleven of the above permissions must show a green
check mark in the Permission Helper before using the connector.

• As a secondary test, log in to your Jira instance as the connector user. Try to edit an existing issue. If this is
not allowed, then most likely the permissions are not correct for the connector to run.

In most cases, a Jira user in the jira-developers group has the above permissions. If one of the above permissions is
absent, the log file will likely show something like this:

         INFO : JiraConnection.connect - Using jirpa version 1.0.6

        DEBUG : Jirpa.JiraComm.block in execute_request - issuing a GET request for endpoint:

                        /rest/api/2/serverInfo

        DEBUG : Jirpa.JiraComm.execute_request - {

                        "baseUrl":"http://jira.hoodat.org:8080","version":"5.2.9","versionNumbers":[5,2,9],

                        "buildNumber":852,"buildDate":"2013-03-12T00:00:00.000-0400",

                        "serverTime":"2013-10-17T10:37:05.815-0400",

                        "scmInfo":"31363faa193505dadf581a01e480744edf4ac0de",

                        "serverTitle":"GMS Issue Tracker"}

         INFO : JiraConnection.connect - Connected to JIRA at http://jira.hoodat.org:8080, (version 5.2.9)

        DEBUG : Jirpa.JiraComm.block in execute_request - issuing a GET request for endpoint:

                        /rest/api/2//mypermissions?projectKey=JPK

        DEBUG : Jirpa.JiraComm.execute_request - {

                        "permissions":{

                                "EDIT_ISSUE":{"id":"12","key":"EDIT_ISSUE",

                                        "name":"Edit Issues","description":"Ability to edit issues.",

                                        "havePermission":true},

                                "VIEW_VERSION_CONTROL":{"id":"29","key":"VIEW_VERSION_CONTROL",

                                        "name":"View Issue Source Tab",

                                        "description":"Allows users to view related source code commits ....",

                                        "havePermission":true},

                                "MODIFY_REPORTER":{"id":"30","key":"MODIFY_REPORTER",

                                        "name":"Modify Reporter",

                                        "description":"Ability to modify the reporter when creating or ....",

                                        "havePermission":false},

                                ....}}

        ERROR : JiraConnection.initialize - JIRA Permissions incorrect for Modify Reporter

         INFO : JiraConnection.disconnect - Disconnected from JIRA

 958



 Rally®

Use the following procedure to modify the permissions on a project.

1. Log in to Jira with an account which has appropriate privileges.
2. Select your desired project under the Projects tab.
3. Select Administration under the project name (instead of Overview).
4. Select Permissions in the left column.
5. Edit the permissions.

Determine How to Handle Closed Issues in Jira When Using Restrictive Flow

By default, Jira Server 8 comes with a simplified workflow that allows updating an issue (story or bug, etc.) in a final status
to be updated. The same is true for Jira Data Center (which is based on Jira 8.x).

Your installation and setup for Jira may have defined a more restrictive workflow than the default workflow. If that is the
case, you may want to consider using a CopySelector and/or an UpdateSelector on the JiraConnection to
exclude issue items in the final state.

Create an External ID Field in Jira

In the Jira system, you must create a custom field which will be used to record the Rally Object ID (OID) of the
corresponding Rally artifact. The underlying database for the Jira instance should support this External ID field up to 15
digits in length.

NOTE
You may need to contact your Jira administrator to perform the following steps.

1. On the Administration tab in the navigation panel, select Custom Fields in the Issue Fields section.
2. On the Custom Fields page, select Add Custom Field.
3. On the Select a Field Type page, select Standard in the left pane, then select Number Field in the right pane.
4. Select Next.
5. On the Configure Number Field page:

a. Enter RallyID for the Name.
b. Enter Must default to -1 for the Description. (Not applicable if using Jira OnDemand.)
c. Select Create.

6. On the Associate field RallyID to screens page, select ALL of the available screens. Typically, there are at least three
(Default Screen, Resolve Issue Screen, and Workflow Screen), but there may be more.

7. Select Update.
The Custom Fields page should display with your newly created custom field displayed in the list.

8. Select the gear

to the right of your new custom field name, then select Configure.
9. On the Configure Custom Field: RallyID page, select Edit Configuration.
10. On the Modify configuration scheme context page:

a. In the Choose applicable issue types section, select Any issue type (or a specific, top-level issue such as sub-
task, technical task, bug, epic, improvement, new feature, story, or task).

b. In the Choose applicable context section, select Global context (or choose a specific project after selecting Apply
to issues under selected projects).

c. Select Modify at the bottom of the screen.
11. On the Configure Custom Field: RallyID page, select Edit Default Value. (Not applicable if using Jira OnDemand.)
12. On the Set Custom Field Defaults page, enter -1 in the box next to RallyID, then select Set Default. (Not applicable if

using Jira OnDemand.)

 959



 Rally®

Create a CrosslinkUrlField in Jira

It can be useful to have a selectable link in the Jira issue that will open the corresponding Rally artifact in a browser
window. The CrosslinkUrlField element in the JiraConnection section of the configuration file allows you to
specify the name of the custom field that will contain this link (URL). Use the same process in Jira as you used for the
External ID field.

• Use a field name of RallyLink or RallyURL.
• Must be a URL Field or Free Text type of field.
• This field name will be used in the CrosslinkUrlField element in the JiraConnection section of the

configuration file.
• This field will only populate during a copy, it will not populate during an update.

Configure Jira Workflow to Allow Transitions to be Executed by Users Other Than Assignees

For example, workflow may have been defined and associated with your target Jira project that has a condition on the
Start Progress, Stop Progress, and Resolve Issue transitions that restricts the ability to execute the transition to the
issue's assignee. Since the connector user (the value of the User element in the JiraConnection section of the
configuration file) will likely not be the assignee for many issues, the connector will fail to progress those issues through
the workflow and update their status when copying or updating based on changes in Rally. You may see the following
error message if you encounter this issue:

ERROR : Connector.copyToOther - Unable to create a Jira Bug with these fields

If your usage scenario includes the default Jira workflow and the Rally-Jira WIC Services of COPY_RALLY_TO_JIRA and/
or UPDATE_RALLY_TO_JIRA , you may need to modify your workflow.

If you are already using a custom Jira workflow, make it inactive, make edits as described to remove any conditions on
transitions, and re-activate it.

1. Use the Copy link for the Jira workflow on the View Workflows page to create a copy of the default workflow.
2. On the Workflows page, select Steps in the new workflow to display the transitions.
3. Select the Start Progress transition. Under the Only assignee can execute this transition section, select Delete.
4. Repeat step 3 for the Stop Progress and Resolve Issue transitions.
5. Create a new workflow scheme to contain the new workflow and assign the new workflow to it for issue type Bug.
6. Associate the new workflow scheme with your test project.

Rally Setup for the Rally-Jira WIC

Rally accesses fields from their ElementName, not their DisplayName. Spaces and underscores are removed, for
example, Example Field becomes ExampleField.

Create an External ID Field in Rally

The External ID custom field in Rally is used by the connector to record the key of the corresponding Jira issue.

1. Log into Rally as a workspace or subscription administrator.
2. Select Setup

from the Rally menu bar in the upper-right corner of the display.
3. Select Workspaces & Projects.
4. Select the workspace that you wish to map to Jira. This will take you to the detail page for the given workspace.
5. In the left pane, select Fields and ensure the Work Item Type selected is Defect or User Story (whichever work item

you are mapping).

 960



 Rally®

6. Select Actions, New Field.
7. Enter a Name of JiraKey, Display Name of JiraKey (name and display name must match), and type of String. Note:

You can choose a different name (like JiraID) for the custom field in Rally, but the name you choose must conform to
these rules:
– Begins with an uppercase letter
– Less than 41 characters (40 is the maximum for display name)
– No underscores, dashes, or spaces

8. Select Save & Close.
9. Make note of the name of this field. Once you start using the connector, this will contain the Jira key (such as

TST-213) of the Jira issue you are mapping between the two systems.

Create a CrosslinkUrlField in Rally

It can be useful to have a selectable link in the Rally artifact which will open the corresponding Jira issue in a browser
window. The CrosslinkUrlField XML element in the RallyConnection section of the configuration file is where to
specify the name of the custom field in Rally which will contain this selectable link (URL). Use the same sort of process in
Rally as you used for the External ID field.

• The first character of the field name must be upper case.
• It is helpful to make the Name and Display Name identical.
• Use a field name of JiraLink.
• The field type must be Text (selectable). A field type of Web Link does not have sufficient behavior to be used as a

CrosslinkUrlField for the connector.
• This field name will be used in the CrosslinkUrlField element in the RallyConnection section of the

configuration file.
• This field will only populate when using the Copy service. The field will not populate during an update.

Set Up Rally States and Resolutions
There are two additional setup steps required for the connector to successfully push issues through the Jira workflow. We
recommend starting with a Jira project that uses the default Jira workflow. Once the connector is working successfully, you
can transition to a custom workflow.

Create an Additional Reopened State for Rally Work Items

1. Log into Rally as a workspace or subscription administrator.
2. Select Setup

from the Rally menu bar in the upper-right corner of the display.
3. Select Workspaces & Projects.
4. Select the workspace that you wish to map to Jira. This will take you to the workspace's detail page.
5. In the left pane, select Fields and ensure the Work Item Type selected is Defect (or whichever work item you are

mapping).
6. Find the State field and select Edit

on the left.
7. Add a State named Reopened.
8. Select Save & Close.

 961



 Rally®

Make Choice Lists for Resolution Match Between the Two Systems

NOTE
By default, only Defect items have State and Resolution fields. If you want to use these fields with user stories,
you must create custom fields for that work item type.

You can edit the list of resolutions in Jira from the Administration tab by selecting the Resolutions link in the Issue Setting
section in the navigation panel on the left.

Alternatively, you can use an OtherEnumFieldHandler to create a one-to-one mapping between Rally resolutions and
Jira resolutions. This approach is described more fully in the Mapping Drop-Down Values section of How to Map Fields.

If your instance of Jira does not allow creating issues without an assignee, try one of the following:

• Turn on Allow Unassigned Issues in Jira (on the Administration page, under System, General Configuration).
• Set up a field handler for mapping users, and explicitly map the Rally Owner to the Jira Assignee.
• Specify a default assignee by adding the following to your configuration file in the JiraConnection section.

WorkItemConnector:

    …

    JiraConnection:

        FieldDefaults:

            - Name: Assignee

              Default: someuser

        …

1. Log into Rally as a workspace or subscription administrator.
2. Select Setup

from the Rally menu bar in the upper-right corner of the display.
3. Select Workspaces & Projects.
4. Select the workspace that you wish to map to Jira. This will take you to the workspace's detail page.
5. In the left pane, select  Fields and ensure the Work Item Type selected is Defect or User Story (whichever work item

you are mapping).
6. Find the Resolution field and select Edit

on the left.
7. Edit the list of resolutions to make them match the corresponding list in Jira.
8. Select Save & Close.

Configure the Rally-Jira WIC

You will need to create the configuration file for the Rally-Jira WIC using the syntax detail below. Starting with version 5.x
of the Rally-Jira WIC, the recommended approach is to use YAML (commonly shortened to YML) file syntax rather than
the XML syntax supported in previous versions. While the XML format is still accepted, be aware that the connector will
process the XML file and write out and use an equivalent YML file. For complete information on YML, see The Official
YAML Web Site or other websites that cover YML syntax and usage.

Some useful guidelines for YML use:

 962

https://yaml.org/
https://yaml.org/


 Rally®

• Use a text editor (not Microsoft Word or Google Docs) to edit the file.
• NEVER use a tab character in the file. YAML does not allow/recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent. An indent of 4 spaces is commonly used.
• On a line, the first occurrence of a non-quoted # character indicates a comment. The # character and all characters to

the right are ignored in processing.
• Keep the sections in the same order as in the sample_config.yml file.
• Be aware that the colon character : is significant. It separates a key from its value.
• Be aware that the dash character - is significant. It denotes an element of a list which may have one or more key-

value pairs that make up the list item.
• You usually do not have to quote values if they have spaces in them. You will have to quote the value if it contains an

embedded # character.
• Providing some spacing between the configuration item name and the associated value before using the : character to

separate them can often result in a more readable presentation by lining up the colons on successive lines.

An example of a Rally-Jira WIC configuration using YML is shown in the following sections.

Rally-Jira WIC Configuration File Major Sections (YML)

A valid Rally-Jira WIC configuration file using the YML syntax has an identifying WorkItemConnector tag to start the
file, followed by four sections with specifications associated with the following:

RallyConnection Defines the connection information for Rally, including Rally URL, user, and password or APIKey.
JiraConnection Defines the connection information for Jira, including the Jira URL, user, password, and artifact type.

Connector Defines the field mapping between the two systems. Generally, strings should be mapped to strings, and
integers to integers. In Jira, field names are generally specified with the first letter capitalized, such as
Summary or Priority.

ConnectorRunner Specifies parameters related to the services the connector is to run, the log level, and whether the
connector will be run in Preview mode.

Multiple Configuration Files

If you want to do any of the following, setting up multiple configuration files is either required or recommended.

• Map to more than one workspace in Rally.
• Map multiple artifact types.
• Projects in either Rally or Jira have drop-down fields (single select or multi-select) that are not identical across the

projects.

To run multiple instances of the connector for different configuration files, pass in the list of configuration files as
arguments to the rally_jira_wic executable script.

rally_jira_wic config_workspaceA config_workspaceB

The connector processes the configuration files based on the command line argument order and processes one file at a
time.

Once it processes every configuration file, the connector exits. To run the connector on a schedule, use a scheduling tool
such as cron , launchctl , or Windows Task Scheduler (depending on your connector host operating system).

A common practice is to schedule a run of the connector every 10 minutes. When the connector is processing
a config file, a lock file is established which prevents a simultaneous execution for the same config file. Once the
processing for a config file is complete, the lock file is removed.

 963



 Rally®

It is possible to run several connectors in parallel if you have multiple config files that deal with different workspaces/
projects and/or artifact types. However, be aware that Rally reserves the right to throttle WSAPI traffic. Running multiple
configs in parallel can result in lower throughput overall than running small sets of configs in sequence.

Edit the Configuration File

NOTE
Incrementally set up the connector! Start with a basic configuration file, ensure that you can connect to Jira and
Rally in a test environment. Validate that this is set up correctly, then start customizing the field mapping and
field handler sections.

Edit the Configuration File (YML)

A sample configuration file (sample_config.yml ) is included in the Rally-Jira-WIC distribution package and is
located in the config subdirectory after the installation. Make a copy of the sample_config.yml file before you start
making additions or modifications (for example, my_project.yml ). Keep the original sample_config.yml in case
you need to reference a valid configuration file later.

Example skeleton configuration file (YML):

WorkItemConnector:

    RallyConnection:

        Url      : rally1.rallydev.com

        User     : somebody

        Password : xxx***yyy===+++

        WorkspaceName: Target Workspace

        Projects:

            - SomeProject

        ArtifactType     : Story

        ExternalIDField  : JiraKey

        CrosslinkUrlField: JiraLink

        CopySelectors:

            - ScheduleState != Released

    JiraConnection:

        Url       : https://ourjira.ourco.com

        User      : validuser

        Password  : 999***333???

        Project   : OURS

        ArtifactType     : Story

        ExternalIDField  : RallyID

        ExternalEndUserIDField: RallyItem

        CrosslinkUrlField: RallyURL

        CopySelectors:

            - Status != Done

        UpdateSelectors:

            - Priority = Top Level

    Connector:

        FieldMapping:

            Field:

            - Rally: Name

              Other: Summary

            - Rally: Priority

 964



 Rally®

              Other: Priority

            - Rally: ScheduleState

              Other: Status

            - Rally: Owner

              Other: Assignee

        

        OtherFieldHandlers:

            OtherUserFieldHandler:

                - FieldName: Assignee

                  Domain: ourco.com

        

            OtherEnumFieldHandler:

                - FieldName: Priority

                  Mappings:

                      Field:

                      - Rally: None

                        Other: Medium

                      - Rally: High Attention

                        Other: High

                      - Rally: Normal

                        Other: Medium

                      - Rally: Low

                        Other: Low

        

                - FieldName: Status

                  Mappings:

                      Field:

                      -  Rally: Submitted

                         Other: To Do

                      -  Rally: Open

                         Other: In Progress

                      -  Rally: Fixed

                         Other: In Review

                      -  Rally: Closed

                         Other: Done

        

                - FieldName: Reporter

                  Mappings:

                      Field:

                      -  Rally: mobi@ourco.com

                         Other: Mobius

                      -  Rally: anotherperson@ourco.com

                         Other: PersonX

    ConnectorRunner:

        Preview : False

        Loglevel: Warning

        Services: COPY_JIRA_TO_RALLY

      

 965



 Rally®

Edit the Configuration File (XML)

A sample configuration file (sample_config.xml ) is included in the Rally-Jira-WIC distribution package and is
located in the config subdirectory after the installation. Make a backup copy of the sample_config.xml file before
you start making additions or modifications, in case you need to reference a valid configuration file later.

Edit your configuration file, entering the appropriate values between each begin and end tag.

<Config>

    <RallyConnection>

          <Url>rally1.rallydev.com</Url>

          <WorkspaceName>Workspace Name 44</WorkspaceName>

          <Projects>

             <Project>ProjectSeven</Project>

          </Projects>

        

          <User>user@company.com</User>

          <Password>password</Password>

          <!-- You can use an APIKey in place of User and Password tags -->

          <!-- <APIKey>YourAPIKeyValueGoesHere...</APIKey> -->

          <ArtifactType>Defect</ArtifactType>

          <ExternalIDField>JiraKey</ExternalIDField>

    </RallyConnection>

    <JiraConnection>

          <Url>http://jiraserver:port</Url>

          <User>jirauser</User>

          <Password>jirapassword</Password>

          <ProxyURL>proxy_host:port</ProxyURL>

          <ProxyUser>proxy_user_name</ProxyUser>

          <ProxyPassword>proxy_password</ProxyPassword>

          <Project>The Project Key (not the project name)</Project>

          <ArtifactType>bug</ArtifactType>

          <ExternalIDField>RallyID</ExternalIDField>

          <CopySelectors>

                  <CopySelector>Status != Closed</CopySelector>

          </CopySelectors>

    </JiraConnection>

    <Connector>

        

        <FieldMapping>

            <Field><Rally>Name</Rally>         <Other>Summary</Other></Field>

            <Field><Rally>Description</Rally>  <Other>Description</Other></Field>

            <Field><Rally>State</Rally>        <Other>Status</Other></Field>

            <Field><Rally>Resolution</Rally>   <Other>Resolution</Other></Field>

        </FieldMapping>

        <OtherFieldHandlers>

            <JiraNewlineFieldHandler>

                <FieldName>Description</FieldName>

            </JiraNewlineFieldHandler>

            <OtherEnumFieldHandler>

 966



 Rally®

                <FieldName>Status</FieldName>

                <Mappings> 

                    <Field><Rally>Submitted</Rally><Other>Open</Other></Field>

                    <Field><Rally>Open</Rally><Other>In Progress</Other></Field>

                    <Field><Rally>Reopened</Rally><Other>Reopened</Other></Field>

                    <Field><Rally>Complete</Rally><Other>Done</Other></Field>

                </Mappings>

            </OtherEnumFieldHandler>

        </OtherFieldHandlers>

    </Connector>

    <ConnectorRunner>

           <Services>COPY_JIRA_TO_RALLY, UPDATE_RALLY_TO_JIRA</Services>

           <Preview>false</Preview>

    </ConnectorRunner>

</Config>

Field Mapping Between Rally and Jira

The field mapping subsection is located in the Connector section in the configuration file and defines which fields map
between the two systems.

For example, the following setup defines a mapping between the Rally fields Name, Priority, State, and Owner to the
Summary, Priority, Status, and Assignee fields in Jira (respectively). On a create or update, the connector will only work
with fields specified in this FieldMapping section.

YML

 …

        Connector:

            FieldMapping:

                Field:

                - Rally: Name

                  Other: Summary

                - Rally: Priority

                  Other: Priority

                - Rally: State

                  Other: Status

                - Rally: Owner

                  Other: Assignee

XML

<Config>

     ....

     <Connector>

           <FieldMapping>

             <Field><Rally>Name</Rally>        <Other>Headline</Other></Field>

             <Field><Rally>Description</Rally> <Other>Description</Other></Field>

             <Field><Rally>Priority</Rally>    <Other>Priority</Other></Field>

           </FieldMapping>

           ....

     </Connector>

When you set up your mapping between the two systems, ensure the fields are compatible between the two systems (an
integer field should map to an integer field in the other system, a rich text should map to a rich text in the other system).

 967



 Rally®

Otherwise, you might experience situations where information is not created or updated between the two systems and you
may see an error in the log file. For example, the connector will post an error for a particular work item if you try to send a
string to a custom field of type integer in Rally.

If you are mapping a drop-down value field, the connector assumes the drop-down values match. Otherwise, the
connector will generate an error that the value was not found in the list. If your drop-down values are different between the
two systems, see the Mapping Drop-Down Values section of How to Map Fields.

Other Multiple Value Fields

Jira has several fields that can have multiple values that are not as restrictive as State or Resolution fields. Affects
Versions, Fix Versions, and Components fields in Jira can be bi-directionally mapped with Rally fields, as long as an
EnumFieldHandler is used to handle disparate values (see the Field Directionality section of How to Map Fields). In the
course of mapping from Jira to Rally, if there are multiple values for the field they will be copied to Rally (or updated in
Rally) as a string of comma-separated values.

Field Handlers

See the following sections of How to Map Fields:

• Mapping Drop-Down Values
• Mapping User Names
• Mapping Reference Fields from Rally

CopySelector and UpdateSelector Relation Operators

The Rally-Jira WIC supports standard copy and update selectors using equality, inequality, and other relational operators
(=, !=, >, <, >=, <=). Additionally, it supports subset operators using in and !in , and range operators using between and
!between operators. The in and !in operators are intended to select a subset of allowed values of drop-down fields, for
example, Status in Jira or State or ScheduleState in Rally. The multiple values are delimited using a comma character
[ , ]. The following example shows copy and update selectors in a section of a configuration file that limits a copy and
update service from Jira to Rally to defects with a Status within a certain subset of allowed values.

Subset Selector Examples

YML

CopySelectors:

    - Status in To Do, In Progress

    - Priority !in Low, Trivial

XML

<CopySelectors>

    <CopySelector>Status in To Do, In Progress</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>Status in To Do, In Progress</UpdateSelector>

</UpdateSelectors>

In the following example, the defects are selected using the !in operator. The returned subset is effectively the same
as the subset of defects limited by the in operator in the previous example. Note that when using negation with drop-
down fields that allow empty values like Priority, the subset of included work items will contain work items where this
field is empty. If inclusion of those items is undesirable, the in operator should be preferred. Empty field values are not
supported by subset selectors.

YML

CopySelectors:

 968



 Rally®

    - Status !in In Review,Done

XML

<CopySelectors>

    <CopySelector>Status !in In Review,Done</CopySelector>

</CopySelectors>

The between and !between operators select work items where a specific field falls within a certain range, where both
ends of the range are included. The range selectors are intended to work with date fields such as Created in Jira or
CreationDate in Rally. Here is an example of copy and update selectors in a section of a configuration file that limit a
copy and update service from Rally to Jira to stories created within a certain date range.

Range Selector Examples

YML

CopySelectors:

    - CreationDate between 2022-01-18 and 2022-01-31

UpdateSelectors:

    - LastUpdateDate between 2022-02-07 and 2022-04-22

XML

<CopySelectors>

    <CopySelector>CreationDate between 2016-07-05 and 2016-07-06</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>CreationDate between 2016-07-05 and 2016-07-06</UpdateSelector>

</UpdateSelectors>

A variation of the range selector that uses the !between operator will select only stories that were created on either side
of the date range.

YML

CopySelectors:

    - CreationDate !between 2022-02-03 and 2022-02-10

UpdateSelectors:

    - LastUpdateDate !between 2022-02-10 and 2022-02-17

XML

<CopySelectors>

    <CopySelector>CreationDate !between 2016-07-05 and 2016-07-06</CopySelector>

</CopySelectors>

<UpdateSelectors>

    <UpdateSelector>CreationDate !between 2016-07-05 AND 2016-07-06</UpdateSelector>

</UpdateSelectors>

The Rally Tags and Milestones fields are multi-valued fields and require different logic from a singly valued field (such as
Name, State, Plan Estimate, and so on) for consideration of inclusion or exclusion from processing.

The Jira Labels, Components, and Versions fields are multi-valued fields and require different logic from a singly valued
field (such as Summary, Status, or Due Date) for consideration of inclusion or exclusion from processing.

The contains operator and the single value or list of comma separated values designate the values that must exist in a
item's attribute value (like Tags) in order for the item to be processed.

 969



 Rally®

• !contains is the operator that inverts the sense of "contains". Use this when you want to exclude items whose Tags
have a certain value or set of values.

• containsany is the operator to use when you want to include items whose Tags values have any single Tag from a set
of Tag Name values.

• containsall is the operator to use when you want to include items whose Tags values must have a complete set
matching the list of Tag Name values in the selector condition.

Rally Selector Example Using Tags

YML

CopySelectors:

  - Tags contains Blue,Yellow,Expedited

XML

 <CopySelectors>

   <CopySelector>Tags contains Blue,Yellow,Expedited</CopySelector>

 </CopySelectors>

Jira Selector Example Using Labels

YML

CopySelectors:

  - Labels contains Domestic,Regulated

XML

 <CopySelectors>

   <CopySelector>Tags contains Domestic,Regulated</CopySelector>

 </CopySelectors>

Field Handlers for the Rally-Jira WIC
As a Work Item Connector (WIC) creates and updates fields in one system based on the value of the corresponding field
in the other system, there are situations where the values are not simply the exact same value. There may be limitations
like data type mismatch or text casing or a set of values associated with a field in one system that has a corresponding set
of values in another that is partially or fully disjoint.

Consider the set of (1, 2, 3) != (‘first’, ‘second’, ‘third’). While the two sets aren’t equal, each set is valid for one of the
systems being considered here (Rally and Jira). To accommodate these sorts of situations, a WIC may employ one or
more FieldHandlers to successfully manage the mapping or transformation of values from one system to another.

A FieldHandler has what is termed an orientation where the orientation refers to the system the field named in the
FieldHandler is associated with. For example, a RallyBooleanFieldHandler has a Rally orientation which will handle the
transformation into and out of Rally for a Boolean field.

Here is the comprehensive list of FieldHandlers that can be used with the Rally-Jira WIC. Note that the list is broken into
three major sections: Rally-oriented FieldHandlers, Other-oriented FieldHandlers and Jira-oriented FieldHandlers. An
Other system is a designation of a system that is not Rally and is not otherwise system specific.

Example of a FieldHandler configuration:

        RallyFieldHandlers:

           RallyEnumFieldHandler:

               FieldName: Severity

               Mappings:

                   Field:

                       - Rally: Crash Data/Loss

 970



 Rally®

                         Other: S1

                       - Rally: Major Problem

                         Other: S2

                       - Rally: Minor Problem

                         Other: S3

                       - Rally: Cosmetic

                         Other: S4

RallyFieldHandlers
RallyUserFieldHandler Transforms a string with a Rally UserName into a ref to an existing Rally User entity on the inbound side

and on the outbound side transforms a Rally User ref into a Rally UserName string.

Requires a FieldName specification (typically User, Owner, Submitter, etc.).

transformIn Transform a string identifying a Rally UserName into a Rally User entity ref.
transformOut Transform a Rally User entity ref to the UserName value (string) for that User.

RallyUserEma
ilFieldHandler

Used for emailing connector error and warning messages to the appropriate person.

Requires FieldName from this set (User, Owner, SubmittedBy, Tester).

transformIn Given an email address (Rally UserName value is an email address), find the
associated Rally User for the FieldName value and return the reference to the User.

transformOut Given a Rally artifact, get the value for the FieldName attribute in that artifact which
will resolve to a Rally User from which the string value for the email address will be
returned.

RallyEnumFieldHandler Used to map enumerated values for a Rally field to appropriate enumerated values for another system
(Jira).

Requires FieldName that is the attribute of a Rally artifact.

Requires Mappings (list of paired values (Rally value, Other value)).

transformIn Given an Other field value, return the corresponding Rally value.
transformOut Given a Rally field value, return the corresponding Other value.

RallyBoolean
FieldHandler

Used to map a Rally artifact Boolean field value to the appropriate value in another system.

Requires FieldName of a Rally artifact attribute having a Boolean data type.

Requires Mappings (list of paired values from false value and true value).

A false value can be denoted as any of  'false', 'no', 'off', or 0 and can be upper-case, lower-case or mixed
case (Examples : 'False', 'NO', 'off').

A true value can be denoted as any of 'true', 'yes', 'on' or 1 and can be upper-case, lower-case or mixed
case (Examples: 'True', 'YES', 'on').

transformIn Use value from other artifact and convert to appropriate Rally Boolean field value.
transformOut Use value from Rally artifact Boolean field and convert to mapped value for

otherartifact.

RallyConcat
FieldHandler

Used to concatenate one or more Rally field values to a primary Rally field value.

Requires FieldName for Rally artifact primary field.

Requires a list of one or more ConcatField names to be concatenated.

transformIn This is an invalid operation for this FieldHandler.
transformOut Using the Rally artifact' FieldName value as the initial portion, append each

additional field to the result using HTML break tags to separate each additional field
value.

 971



 Rally®

RallyDateTim
eFieldHandler

Used to convert a Date/Time representation from/to Rally standard format into another format.

Requires a FieldName of a Rally artifact that is an ISO-8601 standard datetime representation.

Requires a DateTimeFormat in standard shell syntax to represent just a date representation or an
alternative datetime representation.

Example '%m/%d/%Y' format looks like 07/21/2022.

transformIn Given a string in standard shell syntax format that matches by the DateTimeFormat,
return the ISO-8601 format of just the date portion of the given value for the midnight
value.

Example: '02/14/2022 10:43.29' --> '2022-02-14T00:00:00.000Z'

transformOut Given a Rally artifact, extract the value of the FieldName attribute and convert into
format specified by DateTimeFormat.

RallyTruncat
eFieldHandler

Used to truncate a value to be set in a Rally artifact to the maximum size allowed by the data type of the
Rally FieldName attribute. If the value is less than or equal to the maximum size for the data type, no
truncation of the value occurs.

Requires FieldName for a Rally artifact.

transformIn Perform truncation of the given value to the maximum size of the Rally
FieldNameattribute data type.

transformOut This is an invalid operation for this FieldHandler.

RallyKeyword2T
agFieldHandler

Used to transform keywords to tags associated with a Rally artifacts.

Requires a Type of either "String" or "Array".

Requires a Delimiter which must be a character used to separate out distinct keywords in a string.

• The default value is a newline character "\n" if not specified.
• Other common delimiters are ',' (comma) and ':' (colon).

transformIn Transforms the given value into a full reference to the Tag entity whose text value
matches.

transformOut Obtain the associated text for all Tags associated with the target Rally artifact and
convert to a string with those text items delimited by the Delimiter specified in the
configuration.

RallyNameID
FieldHandler

Used to concatenate Name and FormattedID values for a Rally artifact.

FieldName specification defaults to FormattedID.

transformIn This is an invalid operation for this FieldHandler.
transformOut Given a Rally artifact, return a concatenation of Name and FormattedID. If the

FormattedID is already in the Name then just return the Name.

RallyCSVUserMap
pingFieldHandler

Used to permit the use of a CSV file to store user name mappings to identities in another system (like Jira).
The field handler reads in the CSV file contents and performs a lookup/readout operation based on the
values in the file.

Requires a FieldName of a User valued Rally entity attribute (like Owner or SubmittedBy).

Requires a FileName specification for the CSV filename with the mapping information.

transformIn Locates and returns the UserName value associated with the target value given
representing the identity of a user on the non-Rally system.

transformOut Locates and returns the identity value of a user on the non-Rally system associated
with the UserName attribute value for User-valued attribute named in the FieldName
specification.

 972



 Rally®

RallyMilestone
sFieldHandler

Used to translate incoming distinct string values into a list of references to Milestone items suitable for
assigning to a Rally artifact's Milestones attribute.

The FieldName specification for this is always 'Milestones'.

Requires a TargetAttribute to be used to match distinct string values (usually FormattedID is a good
choice).

transformIn The incoming value (which should be a single string or a list of strings) representing
the Milestone FormattedID value(s) is used to locate the corresponding Rally
Milestone item(s) and references to Milestone item(s) are returned to be used in the
Rally create/update operation under consideration.

transformOut Given a Rally artifact, obtain any/all individual Milestone item(s) FormattedID values
for the artifact's Milestones attribute and return a list of those FormattedID values.

RallyMultiSele
ctFieldHandler

Used to turn a list of string values into a Rally WSAPI compliant collections data structure, and also to turn
a Rally WSAPI supplied collections data structure into a list of string items.

Requires FieldName that is the attribute of a Rally artifact.

transformIn Given the value or values for an Other multi-valued field, produce a data structure
that conforms to the Rally WSAPI for a collection with the value or values.

transformOut Given a Rally Artifact instance, extract the collection named by the configured
FieldName and return a list of the string values associated with references in the
collection.

RallyEnumMultiS
electFieldHandler

Used to map enumerated values for a Rally field to the appropriate enumerated values for another system
(Jira).

Requires FieldName that is the attribute of a Rally artifact.

Requires Mappings (list of paired values (Rally value, Other value)).

transformIn Given an Other field value or values, return the corresponding Rally field value or
values.

transformOut Given a Rally field value or values, return the corresponding Other value or values.

RallyReferenc
eFieldHandler

Used to connect a single reference from one Rally artifact to another.

Requires a FieldName from the following set: (Iteration, Release, TestCase, TestCaseResult, WorkProduct,
Feature, Requirement, Parent, TestFolder, TestSet).

Uses ReferencedFieldLookupID value, which is an attribute of the entity named in FieldName (common
values used include Name, FormattedID).

If not specified, the Name is used as the ReferencedFieldLookupID.

transformIn Given a presumed attribute (identified by ReferencedFieldLookupID) value for a
Rally entity identified by FieldName, locate such an entity and return the reference
for that object.

transformOut Given a Rally artifact, obtain the referenced entity identified by FieldName and return
that entity's attribute identified by ReferencedFieldLookupID.

RallyReferenceAttribu
teLookupFieldHandler

Similar to RallyReferenceFieldHandler but with the key difference that the ReferencedFieldLookupID
does not default to 'Name'. The value for this MUST be explicitly specified in the configuration for this
FieldHandler.

RallyTimeboxP
athFieldHandler

Used to return a path specification to a release/iteration for TFS with a prefix as specified in the
configuration. (Only useful when used in a TFS/VSTS WIC.)

Requires a FieldName specification.

Requires a Prefix value specification for the resulting path.

transformIn This is an invalid operation for this FieldHandler.

 973



 Rally®

transformOut Given a Rally artifact extract the Release.Name and Iteration.Name, returning
a string in a Windows path-like format of: prefix \\ Release.Name \\
Iteration.Name

RallyTestFold
erFieldHandler

Used to transform a path specification denoted by a string to a chain of references in Rally and vice versa.

transformIn Given a string with zero, one, or more leading path elements to a leaf folder, find the
chain of corresponding TestFolder elements in Rally ending with a reference to the
Rally leaf folder and return that leaf reference.

transformOut Given a Rally artifact, obtain the full folder path to its TestFolder attribute and return a
string in Windows path-like format with the Name attribute of each TestFolder in the
full path.

OtherFieldHandlers
OtherUserFieldHandler Used to convert a user identifier in a non-Rally system to a valid Rally User equivalent.

Requires a FieldName specification.

Requires a Domain specification (example: ourcompany.com ).

transformIn Transform a user identification string isolating the name (from the organization).
transformOut Transform a user identifier by suffixing the @ and Domain value.

OtherUserEma
ilFieldHandler

This is a parent class for a field handler that will take a user from another system (like Jira) and get the
email field for that user to pass to Rally.

An actual field handler will need to subclass this and define the methods of getUserEmail and
getUserByEmail .

Requires a FieldName specification.

transformIn Take a parameter with a Other system (Jira) email address for a Jira use and
transform it the the Jira user name value.

transformOut Transform a user identifier into the associated email address for that User

OtherEnumFieldHandler Enables mapping of a set of values for a field in the Other system (like Jira) to a set of values for the
associated field in the Rally system.

Requires a FieldName specification.

Requires Mappings(list of paired values (Rally value, Other value)).

transformIn Given a Rally field value, return the corresponding Other (Jira) value.
transformOut Given an Other system (Jira) field value, return the corresponding Rally value.

OtherConditionalE
numFieldHandler

Similar to OtherEnumFieldHandler but differs in that values coming from the Other system that are not part
of the Mappings pass through unchanged to be a candidate value for the field in the Rally system. This
allows reduced specification for sets that have many values in common so that only the items that require a
transformation need to be specified.

Requires a FieldName specification.

Requires Mappings(list of paired values (Rally value, Other value)).

transformIn Given a Rally field value, return the corresponding Other (Jira) value and if such a
mapping does not exist, return the given Rally value.

transformOut Given an Other system (Jira) field value, return the corresponding Rally value and if
such a mapping does not exist, return the given Other value.

OtherConcat
FieldHandler

Used to concatenate one or more Other field values to a primary Other field value.

Requires FieldName for Other issue type primary field.

 974



 Rally®

Requires a list of one or more ConcatField names to be concatenated.

transformIn This is an invalid operation for this FieldHandler.
transformOut Using the Other issue_type FieldName value as the initial portion, append each

additional field to the result using HTML break tags to separate each additional field
value.

JiraFieldHandlers
JiraComponen
tsFieldHandler

Used to turn a list of Jira Component/s values into a CSV string and vice-versa.

Does not explicitly require a FieldName specification (this only works with the Component/s field).

transformIn Given a string with a single value, return that string;

Given a string that is CSV with multiple values, convert to an actual list of the
multiple string values after splitting by comma character.

transformOut Given a Jira issue, extract the Component/s attribute value, if the value is a list of
values, convert to a CSV string, otherwise returns the simple string value of the
Component/s attribute.

JiraVersions
FieldHandler

Used to turn a list of Jira 'Affects Version/s' attribute or 'Fix Version/s' attribute into a CSV string and vice-
versa.

Optional FieldName can only be either 'Affects Version/s' or 'Fix Version/s'

Default is 'Affects Version/s'.

transformIn Given a string with a single value, return that string; given a string that is CSV with
multiple values, convert to an actual list of the multiple string values after splitting by
comma character.

transformOut Given a Jira issue, extract the specified FieldName attribute value, if the value is a
list of values, convert to a CSV string, otherwise returns the simple string value of the
Component/s attribute.

JiraEnumVersio
nsFieldHandler

Used to map enumerated values for a Jira version(s) valued attribute to the appropriate enumerated values
for a Rally item attribute.

Requires FieldName which can be either 'Affects Version/s' or 'Fix Version/s'.

Requires Mappings(list of paired values (Other value, Rally value)).

transformIn Given a non-empty string or a non-empty list of string values, use the Mappings
to produce the Jira counterpart values in a form suitable for the Jira REST API to
populate a version(s) value attribute.

transformOut Given a Jira issue, extract the FieldName attribute value and produce a list of
counterpart Rally values.

JiraHTMLFieldHandler Used to wrap/unwrap a string value with '{html}' markers.

Requires FieldName of Jira Attribute.

Can only be using with a Jira string valued Attribute (like Description or Notes).

transformIn Return any non-null value wrapped in '{html}' markers or ensure that the value
provided is already thusly wrapped.

transformOut Given a Jira issue, extract the Attribute value and remove any beginning and ending
"{html}" markers.

JiraNewline
FieldHandler

Used to convert newline chars into HTML break tags (and vice-versa).

Does not strictly require a FieldName specification as it defaults to Description and Description is the only
Jira Attribute this field handler will accommodate.

 975



 Rally®

transformIn Converts HTML break tags (<br> or <br />) into newline characters.
transformOut Converts newline characters to HTML break tags.

JiraAgileSprin
tFieldHandler

Handles conversion necessary for a Jira Sprint valued attribute (inbound/outbound).

Requires FieldName of Jira Attribute

transformIn Convert a given string value into a form suitable for the Jira REST API to populate a
Sprint valued attribute --> {'name' : value} .

transformOut Extract the textual representation for a Jira Sprint attribute limiting to one value (the
first) if there are multiple Sprint values for the given Jira issue.

JiraUserToEm
ailFieldHandler

Return the Jira user name for a given email_address or the email_address for a Jira User.

Requires FieldName Attribute that is 'User' valued (like reporter or assignee).

transformIn Return the Jira user name for a given email address if on exists in Jira.
transformOut Return the email address for the FieldName's Attribute value (that is User valued).

JiraWikiText
FieldHandler

Handles conversion of Jira WikiText to HTML markup (and vice-versa).

Does not strictly require a FieldName specification as it defaults to Description.

transformIn Convert a text corpus from HTML markup to equivalent WikiText markup.
transformOut Convert a text corpus from WikiText markup to equivalent HTML markup.

Rally-Jira WIC Configuration File Tags Using YML

The following sections contain configuration items for the YML file.

The items listed below can be specified at the initial level of the section. Not all items are required; some are optional for
use in a scenario where they are relevant. Many items (particularly in the Connector section) have sub-items that will be
detailed later in this document.

Configuration Items for the RallyConnection Section
Url Required. Server used to connect to Rally (excluding the HTTPS prefix, as the connector adds https://).

There is only one valid value:

• rally1.rallydev.com

User Required if no APIKey specified. Login name for user to make the Web Services requests to create or
update work items in Rally.

Sample value: user@company.com

Password Required if no APIKey specified. Password for user to make the Web Services requests to create or update
work items in Rally. Note: The first time the connector runs, it will encode the password so it is not saved in
plain text.

Sample value: mypassword

APIKey Rally APIKey (from Rally Application Manager) for the account to be used to access Rally from the
connector. If this is specified, you do not need to supply a username and password. You do not need to add
the user associated with the given APIKey value to the list of allowed users.

Sample value: ABC123plmokn43315...

ProxyURL hostname or IP address and port.
ProxyUser User name for the https proxy server.

ProxyPassword Password for the https proxy server.
WorkspaceName Required. Workspace in Rally where you want to copy and update work items.

 976



 Rally®

Sample values:

• My Workspace
• MyWorkspace

Projects Required. Contains a list of project tags. Each tag refers to one Rally project that will be used when finding
new Rally work items to copy to the other system. For updating work items from Rally to the other system,
all projects in WorkspaceName are considered. At least one Rally project must be specified in this tag.

Sample value: Advanced Sensor Research

ArtifactType Required. Type of artifact you want to create or update in Rally.

Sample values:

• (Defect, defect), (Story, UserStory, HierarchicalRequirement),
TestCase

ExternalIDField Required. Rally custom string field (name and display name must be identical) that stores the unique ID for
the other system. Refer to Create an External ID field in Rally.

Sample value: JiraID or JiraKey

EndUserExternalIDField Name of the field in Jira holding an item identifier (often the ExternalId is sufficient, and this is not used).
CrosslinkUrlField Rally custom field of type string (not-selectable) or text (selectable) containing a hyperlink to the

corresponding bug in Jira. Only populated during a copy.

Sample value: JiraLink

FieldDefaults List of fields and their default values.
CopySelectors Criteria to use when finding new Rally issues to copy to Jira. An individual expression has the form

<field> <relation> <value> , where:

• <field> is the name of a Rally artifact field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

You can have multiple CopySelector criteria in the CopySelectors . All given CopySelector
conditions are ANDed together.

CopySelectors:

    - expression

   

# using multiple CopySelector items

CopySelectors:

    - expression_1

    - expression_2

Sample selector specification value: State = Open

UpdateSelectors Criteria to use when finding existing issues in Rally that should be updated to Jira. An individual selector
specification has the form <field> <relation> <value>, where:

• <field> is the name of a Rally artifact field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

You can have multiple criteria in UpdateSelectors . All given specification conditions are ANDed
together.

UpdateSelectors:

    - expression_1

    - expression_2

   

 977



 Rally®

Sample selector specification value: Release != alpha

Configuration Items for the JiraConnection Section
Url Required. Jira server name (or IP address) and port. Syntax is server:port.

Sample value: myjiraserver:8080

User Required. The Jira username.

Must have permissions for the following operations: Browse Projects, Create Issues, Edit Issues, Schedule
Issues, Assign Issues, Assignable User, Resolve Issues, Close Issues, Modify Reporter, Add Comments,
Create Attachments. In most cases, a Jira user in the jira-developers group has these permissions.

Sample value: jirauser

Password Required. Password for the Jira user. The first time the connector runs, it will encode the password so it is
not saved in plain text.

If the Url value indicates that a Jira OnDemand instance is being accessed (with a distinctive
*.atlassian.net value) then the value for the Password tag must be an API token value. The token
value is generated from within the Jira tool after navigating to the Account Settings, Security page.

Sample values: mypassword

AccountID Jira user AccountID. This tag must be used if the Url has a value that indicates that a Jira OnDemand
site is the target. A Url of this sort contains .atlassian.net The user's Jira account ID value can be
obtained by observing the browser status line after selecting the user's icon (lower left) and hovering over
the 'Profile'.

Sample value: abcde12345RST654CVB369CDE89

ProxyURL Jira field if using a proxy.

Sample value: proxy_host:port

ProxyUser Jira field that may be used depending on the setup of the proxy authentication.

Sample value: proxy_user_name

ProxyPassword Jira field that may be used depending on the setup of the proxy authentication.

Sample value: proxy_password

Project Required. Specify the Jira Project Key name which contains the issues to be associated with Rally work
items. Be sure to specify the Jira Project Key and not the Jira Project Name. The Project Key is a string of
uppercase characters entered as the key when the project was created.

Sample value: TST

ArtifactType The issue type to be processed. For example, Bug, Story, or Epic.
ExternalIDField Required. Jira custom field (Number Field type) that stores the unique ID for a Rally work item. For more

information, refer to Create an External ID field in Jira.

Sample value: RallyID

EndUserExternalIDField Name of the custom field to hold the counterpart Rally artifact Formatted ID.
CrosslinkUrlField Jira custom field (URL Field or Free Text types) containing text of a hyperlink to the corresponding artifact in

Rally. Only populated during Copy.

Sample value: RallyURL

FieldDefaults List of fields and corresponding default values.
CopySelectors Same syntax as in the RallyConnection section, but with the name of Jira fields and values.

UpdateSelectors Same syntax as in the RallyConnection section, but with the name of Jira fields and values.

 978



 Rally®

Configuration Items for the Connector Section
FieldMapping Required. Used to specify what fields are to be mapped between the two systems.

See Field Mapping.

RallyFieldHandlers See Field Handlers for the Rally-Jira WIC.
OtherFieldHandlers See Field Handlers for the Rally-Jira WIC.

RelatedObjectLinkers For more complex mappings of fields (like collections). Included are Attachments (RallyAttachmentLinker)
and Comments (RallyJira Comment Linker).

Configuration Items for the ConnectorRunner Section
Preview Allows you to enable a preview mode for testing where NO objects are copied or updated in either system.

Sample values:

• false (default)
• true

LogLevel Determines what type of messages are written to the log file. The highest level is debug where all
messages are displayed. The default log level is Info.

Sample values:

• Fatal, Error, Warning, Info, Debug

Services Required. Use the copy services to initially reflect items between systems, then use the update services to
keep those reflected items up to date.

The alternative update service searches Rally first for updates and pushes only the recently changed fields
to the other system. It then searches the other system for updates and pushes all mapped fields into Rally.
This allows changes done in both systems to not cause overwrites of old data.

Sample values:

• Copy services:

• COPY_JIRA_TO_RALLY
• COPY_RALLY_TO_JIRA

• Update services:

• UPDATE_JIRA_TO_RALLY
• UPDATE_RALLY_TO_JIRA

• Alternative update service:

• UPDATE_RALLYFIELDS_AND_OTHER (may not be used in conjunction with the other update
services)

• See the Field-Level Updates from Rally of How to Map Fields for more information.

Emailer Specification of which conditions result in emailing to the interested party.
  Level         : Error

  SendEmailFrom : {SMTPSender}

  SendEmailTo   : {SMTPRecipient}

  SMTPServer    : {SMTPServer}

  SMTPPort      : {SMTPPort}

  SMTPUser      : {SMTPUser}

  SMTPPassword  : {SMTPPassword}

  SMTPDomain    : {SMTPDomain}     # optional

  SMTPSec       : {SMTPSec}        # optional

 979



 Rally®

YML Syntax for Specifying Selector Items

In YML syntax, a dash character [ - ] designates what follows as a list item. A CopySelector or UpdateSelector
can have one or more elements. When specifying these multiple items, they need to be presented as a list in valid YML
syntax.

Here is an example of a valid CopySelectors specification:

CopySelectors:

    - Status = Completed

    - Priority = Normal

Another valid example with the same data:

CopySelectors:

- Status = Completed

- Priority = Normal

The only difference is the extent of the indentation; both specifications are valid.

Many of the examples in this document will use the syntax of the first example as the list items indented from the
containing item stand out more clearly. While either style can be used interchangeably, we recommend that you choose a
style that fits your situation and is employed consistently.

YML Syntax for Specifying FieldMapping Information

In the Connector section, the FieldMapping Field item contains a list of Rally and Jira field pairings and any
directionality of operation that should be implemented (the default directionality is bi-directional) for the field pair. As a list
of items, this will use the dash character [ - ] similar to Selectors, but each list item will be a pair of items, one for the Rally
field name and one for the Jira field name. Note that the literal value of ‘Rally’ and ‘Jira’ are followed by a colon char [ : ],
which in YML syntax defines the preceding text label as a key name with the actual value for the key appearing to the right
of the colon character.

The following example is valid YML syntax for a FieldMapping element occurring in the Connector section:

FieldMapping:

    Field:

        - Rally: Name

          Other: Summary

        - Rally: Description

          Other: Description

        - Rally: Priority

          Other: Priority

          Direction: TO_RALLY

YML Syntax for Specifying FieldHandlers

A field handler is oriented towards either Rally or Jira. A field handler can transform the data for a field as the data is
retrieved for an operation or as the data is prepared before writing to a given system. The orientation designates the given
system (Rally or Jira) where any transformation of the data is to occur. All field handlers must be associated with a specific
field aligned with the orientation system name.

An example of a simple field handler oriented to the Jira system in valid YML follows:

JiraWikiTextFieldHandler:

    FieldName: Description

An example of a field handler oriented to the Rally system in valid YML follows:

 980



 Rally®

RallyDateTimeFieldHandler:

    FieldName: EffectiveDate

    DateTimeFormat: %d/%m/%y

For RallyEnumFieldHandler or JiraEnumFieldHandler usage, the paired values are specified in a list:

RallyEnumFieldHandler:

    FieldName: Priority

    Mappings:

        Field:

            - Rally: High

              Other: Must Do

            - Rally: Normal

              Other: Medium

            - Rally: Low

              Other: Low

In the event where you are using multiple field handlers of the same type, the correct syntax is shown in the following
example. Note that the name of the field handler is named once, and the FieldName is a list element (there are 2 in the
example below) where each list element has its own Mappings sub-item with a Field sub-element with Rally/Other list
elements.

RallyEnumFieldHandler:

    - FieldName: Priority

      Mappings:

          Field:

              - Rally: High

                Other: Must Do

              - Rally: Normal

                Other: Medium

              - Rally: Low

                Other: Low

    - FieldName: Severity

      Mappings:

          Field:

              - Rally: Crash/Data Loss

                Other: 3-Highest

              - Rally: Major Problem

                Other: 2-Moderate

              - Rally: Minor Problem

                Other: 1-Minor

The following example has field handlers from both orientations and multiple field handlers of the same type:

OtherFieldHandlers:

    OtherEnumFieldHandler:

        - FieldName: Priority

          Mappings:

              Field:

                  - Rally: None

                    Other: Medium

                  - Rally: Resolve Immediately

                    Other: Highest

                  - Rally: High Attention

 981



 Rally®

                    Other: High

        - FieldName: Resolution

          Mappings:

              Field:

                  - Rally: Fixed

                    Other: Fixed

                  - Rally: Won't Fix

                    Other: Won't Fix

RallyFieldHandlers:

    - RallyEnumFieldHandler:

          - FieldName: Temerity

            Mappings:

                Field:

                    - Rally: Outrageous

                      Other: Huffy

                    - Rally: Heated

                      Other: Argh

          - FieldName: Status

            Mappings:

                Field:

                    - Rally: Submitted

                      Other: Open

                    - Rally: Open

                      Other: In Progress

                    - Rally: Fixed

                      Other: Resolved

   - RallyUserFieldHandler:

         FieldName: SubmittedBy

         Domain: ourco.com

Rally-Jira WIC Configuration File Tags Using XML

The following tables contain definitions of the XML tags in each section of the configuration file.

XML Tags in the <RallyConnection> Section

NOTE
Avoid special characters contained in a Rally workspace or project name that are markup-sensitive.

Some examples of markup sensitive characters are:

• & ampersand becomes &amp;
• > greater than becomes &gt;
• < less than becomes &lt;

Example: Research & Development becomes Research &amp; Development

<RallyConnection> Required. Opening parent tag for this section.

<Url> Required. Server used to connect to Rally (excluding the HTTPS prefix, as the connector adds https://).

 982



 Rally®

There is only one valid value:

• rally1.rallydev.com

<User> Required if no APIKey specified. Login name for user to make the Web Services requests to create or
update work items in Rally.

Sample value: user@company.com

<Password> Required if no APIKey specified. Password for user to make the Web Services requests to create or update
work items in Rally. Note: The first time the connector runs, it will encode the password so it is not saved in
plain text.

Sample value: mypassword

<APIKey> Rally APIKey (from Rally Application Manager) for the account to be used to access Rally from the
connector. If this is specified, you do not need to supply a username and password. You do not need to add
the user associated with the given APIKey value to the list of allowed users.

Sample value: ABC123plmokn43315...

<ProxyURL> HTTP/S proxy hostname or IP and port number (if using a proxy to connect with Rally)

Sample value: proxy_host:port

<ProxyUser> User name for connection to proxy (if the proxy is an authenticating proxy)

Sample value: proxy_user_name

<ProxyPassword> Password for connection to proxy (if the proxy is an authenticating proxy)

Sample value: proxy_password

<WorkspaceName> Required. Workspace in Rally you want to copy and update work items.

Sample values:

• My Workspace
• MyWorkspace

<Projects> Required. Contains a list of project tags. Each tag refers to one Rally project that will be used when finding
new Rally work items to copy to the other system. For updating work items from Rally to the other system,
all projects in <WorkspaceName> are considered. At least one Rally project must be specified in this tag.

Sample value: <Project>Rally1</Project> <Project>Rally2</Project>

<ArtifactType> Required. Type of artifact you want to create or update in Rally.

Sample values:

• (Defect, defect), (Story, UserStory, HierarchicalRequirement),
TestCase

<ExternalIDField> Required. Rally custom string field (name and display name must be identical) that stores the unique ID for
the other system. Refer to the Create an External ID field in Rally section.

Sample value: JiraID

<CrosslinkUrlField> Rally custom field of type string (not-selectable) or text (selectable) containing a hyperlink to the
corresponding bug in Jira. Only populated during a copy.

Sample value: JiraLink

<CopySelectors> Criteria to use when finding new Rally issues to copy to Jira. An individual expression has the form
<field> <relation> <value> , where:

• <field> is the name of a Rally artifact field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

You can have multiple CopySelector criteria within the CopySelectors. All given CopySelector conditions
are ANDed together.

 983



 Rally®

<CopySelectors>

   <CopySelector>

      expression

   </CopySelector>

   ....

</CopySelectors>    

Sample value: <CopySelector>State = Open</CopySelector>

<UpdateSelectors> Criteria to use when finding existing issues in Rally that should be updated to Jira. An individual selector
specification has the form <field> <relation> <value>, where:

• <field> is the name of a Rally artifact field
• <relation>  is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>

You can have multiple <UpdateSelector> criteria within <UpdateSelectors> . All given <
UpdateSelector> conditions are ANDed together.

<UpdateSelectors>

   <UpdateSelector>

      expression

   </UpdateSelector>

   ....

</UpdateSelectors>    

Sample value: <UpdateSelector>Release != alpha</UpdateSelector>

<FieldDefaults> Used when the destination system has a required field, but the field is not going to be mapped in the
configuration file. This will cause field F1 to be set to value of V1.

<FieldDefaults>

   <Field>

      <Name>F1</Name>

      <Default>V1</Default>

   </Field>

   [....]

</FieldDefaults>    

Learn more in the Mapping Required Fields and Field Defaults section of How to Map Fields.

</RallyConnection> Required. Closing parent tag for this section.

XML Tags in the <JiraConnection> Section
<JiraConnection> Required. Opening parent tag for this section.

<Url> Required. Jira server name (or IP address) and port. Syntax is server:port.

Sample value: myjiraserver:8080

<User> Required. The Jira username.

Must have permissions for the following operations: Browse Projects, Create Issues, Edit Issues, Schedule
Issues, Assign Issues, Assignable User, Resolve Issues, Close Issues, Modify Reporter, Add Comments,
Create Attachments. In most cases, a Jira user in the jira-developers group has these permissions.

Sample value: jirauser

<Password> Required. Password for the Jira user. The first time the connector runs, it will encode the password so it is
not saved in plain text.

 984



 Rally®

If the <Url> value indicates that a Jira OnDemand instance is being accessed (with a distinctive
*.atlassian.net value) then the value for the Password tag must be an API token value. The token
value is generated from within the Jira tool after navigating to the Account Settings, Security page.

Sample values: mypassword

<AccountID> Jira user AccountID. This tag must be used if the <Url> has a value that indicates that a Jira OnDemand
site is the target. A Url of this sort contains .atlassian.net The user's Jira account ID value can be
obtained by observing the browser status line after selecting the user's icon (lower left) and hovering over
the 'Profile'.

Sample value: abcde12345RST654CVB369CDE89

<ProxyURL> HTTP/S proxy hostname or IP and port number (if using a proxy to connect with Jira).

Sample value: proxy_host:port

<ProxyUser> User name for connection to proxy (if the proxy is an authenticating proxy).

Sample value: proxy_user_name

<ProxyPassword> Password for connection to proxy (if the proxy is an authenticating proxy).

Sample value: proxy_password

<ArtifactType> Required. Jira issue type for the issues you want to create or update in Jira.

Sample values: Bug, Task, Initiative, Defect, User Story, ...

<IDField> Jira field used to store the unique ID of an issue, defaults to key. The ID field can also be used as the value
for this tag. Using the value of ID ensures that the connector can locate an issue even if the project for the
issue is changed. When an issue is moved to another project in Jira the key value will change but the ID
value does not.

Sample value: key

<ExternalIDField> Required. Jira custom field (Number Field type) that stores the unique ID for a Rally work item. For more
information, refer to Create an External ID field in Jira.

Sample value: RallyID

<ExternalEnd
UserIDField>

A custom field in Jira of type Text Field (single line) which will be used to store the FormattedID of the Rally
work item (such as DExx).

Sample value: RallyFormattedID

<CrosslinkUrlField> Jira custom field (URL Field or Free Text types) containing text of a hyperlink to the corresponding artifact in
Rally. Only populated during Copy.

Sample value: RallyURL

<Project> Required. Specify the Jira Project Key name which contains the issues to be associated with Rally work
items. Be sure to specify the Jira Project Key and not the Jira Project Name. The Project Key is a string of
uppercase characters entered as the key when the project was created.

Sample value: TST

<CopySelectors> Criteria to use when finding new Jira issues to copy to Rally. An individual selector specification has the
form: <field> <relation> <value>, where :

• <field> is the name of a Jira issue field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>.

You can have multiple CopySelector criteria within the CopySelectors. All given CopySelector conditions
are ANDed together.

<CopySelectors>

   <CopySelector>

      expression

 985



 Rally®

   </CopySelector>

   ....

</CopySelectors>    

Sample values:

• <CopySelector>Status != Closed</CopySelector>
• <CopySelector>Priority = Low</CopySelector>

<UpdateSelectors> Criteria to use when finding existing issues in Jira that should be updated to Rally. An individual selector
specification has the form <field> <relation> <value> , where:

• <field> is the name of a Jira issue field
• <relation> is one of =, !=, gt, lt, gte, lte
• <value> is a valid value for the <field>.

You can have multiple UpdateSelector criteria within the UpdateSelectors. All given UpdateSelector
conditions are ANDed together.

<UpdateSelectors>

   <UpdateSelector>

      expression

   </UpdateSelector>

   ....

</UpdateSelectors>    

Sample value: <UpdateSelector>Release != alpha</UpdateSelector>

<FieldDefaults> Used when the destination system has a required field, but the field is not going to be mapped in the
configuration file. This will cause field F1 to be set to value of V1.

<FieldDefaults>

   <Field>

      <Name>F1</Name>

      <Default>V1</Default>

   </Field>

   [....]

</FieldDefaults>    

Learn more in in the Mapping Required Fields and Field Defaults section of How to Map Fields.

<Timeout> Maximum time in seconds for which the connector will wait in an attempt to obtain a response when
attempting to open a connection to the Jira server. Maximum value permitted is 999.

<Timeout>

   numberofseconds

</Timeout>

Sample values:

• 60
• 20

</JiraConnection> Required. Closing parent tag for this section.

XML Tags in the <Connector> Section
<Connector> Required. Opening parent tag for this section.

<FieldMapping> Required. Used to specify what fields are to be mapped between the two systems.

<FieldMapping>

      ....

 986



 Rally®

</FieldMapping>

See Field Mapping.

<RallyFieldHandlers> (opening tag)
<RallyConcat
FieldHandler>

Using the contents of Dest-fieldname as the initial string, appends each additional Src-fieldnameN to
Dest-fieldname, using HTML break tags (<br />) to separate each additional field value.

 <RallyConcatFieldHandler>

      <FieldName>

         Dest-fieldname

      </FieldName>

      <ConcatFields>

         <Field>Src-fieldname1</Field>

         <Field>Src-fieldname2</Field>

         <Field>...</Field>

      </ConcatFields>

 </RallyConcatFieldHandler>

Sample values:

• Some custom field
Description
some other field
.....

<RallyDateTim
eFieldHandler>

Bi-directional. Rally to Other: Convert the Rally ISO date in field F1 into a date string formatted as specified
by the string S1 (as per Ruby DateTime.strftime function) and store this new date string into the field F1 is
mapped to.

  <RallyDateTimeFieldHandler>

      <FieldName>F1</FieldName>

      <DateTimeFormat>S1</...>

  </RallyDateTimeFieldHandler>

Sample value:

• CreationDate (being mapped to Due Date)
%Y-%m-%d

<RallyUserF
ieldHandler>

Used to map usernames. See the Mapping User Names section of How to Map Fields.

 <RallyUserFieldHandler>

      <FieldName>

         name-of-object

      </FieldName>

      <ReferencedFieldLookupID>

         name-of-field

      </ReferencedFieldLookupID>

 </RallyUserFieldHandler>

Sample values:

• User,Owner,Tester
• Name,FormattedID

<RallyEnumF
ieldHandler>

Allows for the mapping of non-alike, drop-down values between the two systems. See the Mapping Drop-
Down Values section of How to Map Fields.

   <RallyEnumFieldHandler>

      ....

 987

http://www.ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/DateTime.html#method-i-strftime


 Rally®

   </RallyEnumFieldHandler>    

<RallyReferenc
eFieldHandler>

Used to map a field from an object. Direction: Jira to Rally only. If no TestFolder is specified, then ALL tests
in the TestPlan will be copied. If a TestFolder is specified, then ALL Tests in that folder only will be copied
(but not subfolders or Tests in subfolders).

   <RallyReferenceFieldHandler>

      <FieldName>

         name-of-field

      </FieldName>

      <ReferencedFieldLookupID>

         name-of-field

      </ReferencedFieldLookupID>

   </RallyReferenceFieldHandler>

Sample values:

• TestCase, Parent, TestCaseResult, WorkProduct, TestSet, TestFolder, Requirement
• ObjectID, FormattedID

<RallyCSVUserMap
pingFieldHandler>

Specifies the name of a field being mapped (name-of-field) and a CSV file where user mappings are stored
(name-of-file). The CSV file is used to lookup and transform usernames based on the mappings specified
within. See a more detailed explanation on the FAQ page or an example XML file.

   <RallyCSVUserMappingFieldHandler>

      <FieldName>

         name-of-field

      </FieldName>

      <FileName>

         name-of-file

      </FileName>

   </RallyCSVUserMappingFieldHandler>

Sample values:

• SubmittedBy
MyUserMappings.csv

<RallyKeyword2T
agFieldHandler>

Specifies the mapping of Rally Tags to Jira labels. See example configuration file at JIRArest-Labels-to-
Tags.pxml.

   <RallyKeyword2TagFieldHandler>

      <Type>

         type-value

      </Type>

      <Delimiter>

         some-character

      </Delimiter>

   </RallyKeyword2TagFieldHandler>

Sample values:

• String
,

<RallyBoolean
FieldHandler>

Specifies the mapping of Rally Boolean fields to Jira Radio buttons only. Works bi-directionally. See a more
detailed explanation in the Mapping Boolean Fields To and From Rally section of How to Map Fields.

   <RallyBooleanFieldHandler>

      <FieldName>

         name-of-Rally-field

 988

https://knowledge.broadcom.com/external/article?articleId=125058
https://knowledge.broadcom.com/external/article?articleId=125050
https://knowledge.broadcom.com/external/article?articleId=125050


 Rally®

      </FieldName>

      <Mappings>

         <Field><Rally>false</Rally>

         <Other>Jira-field-value</Other></Field>

         <Field><Rally>true</Rally>

         <Other>Jira-field-value</Other></Field>

      </Mappings>

   </RallyBooleanFieldHandler>

</RallyFieldHandlers> (closing tag)
<OtherFieldHandlers> (opening tag)

<OtherEnum
FieldHandler>

Allows a user to map non-alike, drop-down values between the two systems. See the Mapping Drop-Down
Values section of How to Map Fields.
   <OtherEnumFieldHandler>

      ....

   <OtherEnumFieldHandler>

<OtherConditionalE
numFieldHandler>

Very similar to the <OtherEnumFieldHandler> except with this one only the exceptions need to be
declared. Corresponding entries in the pull-down lists of both system which are identical, need not be
declared.

   <OtherConditionalEnumFieldHandler>

      ....

   </OtherConditionalEnumFieldHandler>

<OtherConcat
FieldHandler>

Using the contents of Dest-field as the initial string, appends each additional Src-fieldN to
Dest-field , using HTML break tags (<br />) to separate each additional field value.

   <OtherConcatFieldHandler>

      <FieldName>

         Dest-field

      </FieldName>

      <ConcatFields>

         <Field>Src-field1</Field>

         <Field>Src-field2</Field>

         <Field>.....</Field>

      </ConcatFields>

   </OtherConcatFieldHandler>

Sample values:

• Some custom field
Description
Some other custom field
.....

<JiraNewline
FieldHandler>

Used to declare the Jira Description field is to be processed, having newlines converted. Currently, only the
Description field is supported.

   <JiraNewlineFieldHandler>

      <FieldName>

         Description

      </FieldName>

   </JiraNewlineFieldHandler>

<JiraUserToEm
ailFieldHandler>

Used to declare the Jira field to be used for finding an email address. This can be used to map the Jira
Reporter email field or Jira Assignee email field to the Rally Owner field when sending information from Jira
to Rally. See example below.

   <JiraUserToEmailFieldHandler>

 989



 Rally®

      <FieldName>

         name-of-field

      </FieldName>

   </JiraUserToEmailFieldHandler>    

Sample values:

• (opening tag)
Reporter
(closing tag)

</OtherFieldHandlers> (closing tag)
<RelatedObjectLinkers> For more complex mappings of fields (like collections).

<RallyAttachmentLinker /
>

Used to copy attachments between Jira and Rally (bi-directional). Can be used on any object which
supports attachments (in Rally: tasks, defects, stories, and tests; in Jira: any issue type with attachments).
See Jira-config-bugAttachment2Rally.pxml for an example.

<RallyJiraCommentLinker /
>

Used to copy discussions or comments between Rally and Jira.

WARNING
There is a known limitation with this feature. Once Rally discussions have been synced with
Jira comments, they should never be modified in Jira. It will cause a recursive copy, back-and-
forth between the two systems, with the discussions and comments growing with each iteration.
This occurs because the connector compares the two sets of discussions and comments. If they
are not identical, it assumes they need to be re-synced. However, Rally discussions are read-
only (once they have been created), so an edited comment in Jira is copied to Rally as a new
discussion. At that point the discussions and comments between the two system will be out of
sync again, and this loop will continue indefinitely. See Jira-config-RallyJiraCommentLinker.pxml
for an example.

</RelatedOb
jectLinkers>

(closing tag)

</Connector> Required. Closing parent tag for this section.

XML Tags in the <ConnectorRunner> Section
<ConnectorRunner> Required. Opening tag for this section.

<Preview> Allows you to enable a preview mode for testing where NO objects are copied or updated in either system.

Sample values:

• false (default)
• true

<LogLevel> Determines what type of messages are written to the log file. The highest level is debug where all
messages are displayed. The default log level is Info.

Sample values:

• Fatal, Error, Warning, Info, Debug

<Services> Required. Use the copy services to initially reflect items between systems, then use the update services to
keep those reflected items up to date.

The alternative update service searches Rally first for updates and pushes only the recently changed fields
to the other system. It then searches the other system for updates and pushes all mapped fields into Rally.
This allows changes done in both systems to not cause overwrites of old data.

Sample values:

• Copy services:

 990

https://knowledge.broadcom.com/external/article?articleId=125061
https://knowledge.broadcom.com/external/article?articleId=125023


 Rally®

• COPY_JIRA_TO_RALLY
• COPY_RALLY_TO_JIRA

• Update services:

• UPDATE_JIRA_TO_RALLY
• UPDATE_RALLY_TO_JIRA

• Alternative update service:

• UPDATE_RALLYFIELDS_AND_OTHER (may not be used in conjunction with the other update
services)

• See How to Map Fields for more information.

<Emailer> The Emailer feature with Authorization. Defines which logfile messages to email. Not all elements shown
below are required. Only use the elements that are applicable to your environment. SMTPDomain and
SMTPSec are frequently not applicable.

<Emailer>

   <LogLevel>value</LogLevel>

   <SendEmailFrom>value</SendEmailFrom>

   <SendEmailTo>value</SendEmailTo>

   <SMTPServer>value</SMTPServer>

   <SMTPPort>value</SMTPPort>

   <SMTPDomain>value</SMTPDomain>

   <SMTPUser>value</SMTPUser>

   <SMTPPassword>value</SMTPPassword>

   <SMTPSec>value</SMTPSec>

</Emailer>    

Sample value: See example.

</ConnectorRunner> Required. Closing parent tag for this section.

Run the Rally-Jira WIC

To run the connector, use the executable file rally_jira_wic .

The connector has the following command line flags:

$ python3 rally_jira_wic  -h

        Usage: rally_jira_wic <options> <config_filename> <config_filename_2>

        where <options> are:

          --help, -h:   Print this Usage message

          --version, -v:   Prints the revision number of the connector

          --view, -p:   Precheck, the connector will run in preview mode

          --cleartext, -c:   Bypass encrypting the credentials if they are already in clear text

          --log-file-size, -s <n>:   Set the size limit for a log file to <n> megabytes

          --max-log-files, -m <n>:   Set the maximum number of log files in log file rotation to <n>

        where <config_filename>

          File system reference to a file in the config subdirectory whose base name (without an extension

 of .yml or .xml matches. If there are multiple files matching the <config_filename> argument, the most

 recently modified file is used.

          While the default behavior is to specify the base name of the target config file, it is acceptable

 to specify the exact full leaf name of the file.

 991



 Rally®

Once you have copied a sample configuration to another file (with the appropriate suffix) located in the config
subdirectory and edited it to match your setup, you can start running the connector. To start the connector, use the
following command line:

python3 rally_jira_wic our_first_config

It is possible to stop the connector using a Control-C in the terminal, but the normal practice is to let it run to completion
and check the log file for ERROR or WARNING entries.

Credential Encryption for the Rally-Jira WIC

Credentials occurring in the *Connection sections of the configuration file that are in clear-text are encrypted after the
initial run using that configuration file. Credentials are identified as any configuration item tag appearing in a *Connection
section whose name is *User, or any *Password or APIKey (where the * character is a wildcard for characters that may
precede the following literal value). If you have an Emailer sub-section in the ConnectorRunner section of the config and
specify any SMTPUser or SMTPPassword value, those values will also be encrypted.

In practice, as long as the installation and execution folders are constant and the key Rally parameters in the configuration
do not change, you are free to modify most of the contents of the configuration file without having to reset the credentials
to their clear-text values. However, care must be taken in environments that do not have such stable characteristics
to frequently check the log files for any entries that indicate environmental changes have taken place that prevent the
connector from decrypting the encrypted values for use in the connector execution.

The -c option can be used to specify leaving the password in clear case (if it is already in clear text) instead of encrypting.
The command line for running the connector is:

python3 rally_jira_wic -c configfile

Modify the Logging Parameters for the Rally-Jira WIC

The connector logs messages as it is processing into a file named for the configuration file being processed into the log
subdirectory. For example, if your configuration file is named biglarge , then the log file will be named biglarge.log
. By default, the maximum size of a log file is 5 MB and the log rotation is limited to 10 files. You can adjust the maximum
size of the log file and adjust the maximum count of log files in the log rotation by specifying command line arguments as
follows:

The --logfile-size=<integer> option can be used to specify the maximum size of the log file in MB increments (up
to 100 MB).

The --max-log-files=<integer> option can be used to specify the maximum number of files in the log file rotation
scheme.

Example: To set the log file maximum size to 50 MB and the maximum log file rotation count to 20 files for a single
invocation of the connector:

python3 rally_jira_wic --logfile-size=50 --max-log-files=20 xxx_config

Rally-Jira WIC Workflows

This version series (5.x) of the Rally-Jira WIC does not use workflow files as was practiced in earlier versions. The Jira
product has shifted from having "restrictive" workflows to having less restrictive workflows as the default. Less restrictive
in this context refers to being able to change the status of an issue to nearly any other issue status that is defined.

In order for the Rally-Jira WIC to accomodate whatever workflow transitions that may be defined, there must be an
existing issue for each state defined in the workflow. For Jira installations that have been operating in a normal usage
state for months, this usually isn’t a problem that needs to be addressed. If your Jira installation is quite new or you are

 992



 Rally®

using the connector for a newly instantiated project, you may need to add in some “placeholder” issues for each defined
state in the associated workflow.

You will have to do this for each of the issue types you intend to use with the connector. So, for example, if you are
running the connector for issuetype 'Story' and issuetype 'Bug' and custom issuetype 'Regulation', you need to have an
existing issue for each valid Status for each of the issue types mentioned above. These issues are probably not needed
to be reflected in the Rally system, so you may want to augment those issues with a distinctive value in an appropriate
attribute so that it can be used in a JiraConnection CopySelector specification to prevent them from being copied to Rally.
Alternatively, you may be able to use a JiraConnection CopySelector with an expression along the lines of:

created > 2022-04-30 00:00    (use a timestamp valid for your situation)

Rally-Jira WIC Best Practices

The topics in this section describe best practices for you to follow related to the Rally-Jira WIC.

Use the <JiraUserToEmailFieldHandler>

YML Syntax

OtherFieldHandlers:

    OtherUserFieldHandler:

         JiraUserToEmailFieldHandler:

              FieldName: Assignee

 

XML Syntax

   <Config>

      ....

      <Connector>

         <FieldMapping>

            <Field> <Rally>Name</Rally>  <Other>Summary</Other> </Field>

            <Field> <Rally>Owner</Rally> <Other>Reporter</Other> </Field>

              ....

         </FieldMapping>

         <OtherFieldHandlers>

            <JiraUserToEmailFieldHandler>

               <FieldName>Reporter</FieldName>

            </JiraUserToEmailFieldHandler>

         </OtherFieldHandlers>

      </Connector>

      ....

Mapping

• Mapping Jira Attachments
NOTE
Rally attachments are limited to 50 MB. If a Jira attachment size is larger than 50 MB, it will not be copied
from Jira to Rally. The <RallyAttachmentLinker> supports bi-directional mapping between Jira and
Rally.

Copy attachments between Rally and Jira with the <RallyAttachmentLinker> option in the configuration file as
follows:

 993



 Rally®

YML Syntax
Connector:

          . . . 

          RelatedObjectLinkers:

              RallyAttachmentLinker:

XML Syntax
        <Config>

              ....

              <Connector>

                   ....

                <RelatedObjectLinkers>

                              <RallyAttachmentLinker />

                </RelatedObjectLinkers>

                ....

Known issue: DE23963 - If adding attachments to a child project and the connector user only has editor permissions to
Rally, the user must have at least editor permissions to all parent projects of the child project to add an attachment.
See Jira-config-bugAttachment2Rally.pxml for an example.

• Map the Jira Sprint Field
You can map to this field, but due to limitations in the Atlassian Jira REST API implementation, the connector can only
support the mapping in the Jira-to-Rally direction. Also, note that the value which displays in the target Rally field will
be the Jira Sprint field ID value, not the Jira Sprint field label value. In the future, if Atlassian adjusts their REST API
for Jira to offer support for setting and updating Jira Sprint field values correctly under most conditions, bi-directional
support for the Sprint field should be possible.
An example specifying the supported directionality for the Sprint field:
XML Syntax
   <Config>

      ....

      <Connector>

         <FieldMapping>

            ....

            <Field>

                <Rally>Iteration</Rally>

                <Other>Sprint</Other>

                <Direction>TO_RALLY</Direction>

            </Field>

            ....

         </FieldMapping>

• Map Rally projects
If you are copying issues from Jira to Rally using the <RallyReferenceFieldHandler> with projects, you may see
a "Could not find Rally Project with name" error in the log file if the connector user does not have editor permissions to
that project in Rally.

NOTE
RallyReferenceFieldHandlers for very commonly used attributes such as Project,
Release, or Iteration are not required. These fields are handled internally same way as is done
using a RallyReferenceFieldHandler . There are some edge cases where the use of
RallyReferenceFieldHandler may be necessary, for fields such as Parent, Child, WorkProject, Owner,
and other similar fields.

Known Limitations of the Rally-Jira WIC
LDAP not supported The Rally-Jira WIC does not support LDAP.

 994

https://knowledge.broadcom.com/external/article?articleId=125061


 Rally®

Artifact hierarchy Artifact hierarchy is not maintained when copying/updating artifacts between Rally and Jira.

Troubleshoot the Rally-Jira WIC

The following items describe how to resolve some problems you might have related to the Rally-Jira work item connector.

See Log File
for Messages

Once the connector is running, all errors are written to a log file in the log subdirectory from where the
connector was invoked. Informational messages, warnings, and errors are written to the log file depending
on the value of the <LogLevel> tag in the <ConnectorRunner> section of the configuration file.

Connector Validation Before the connector starts mapping objects between the two systems, it performs a validation that
confirms:

• Connecting to Rally is successful
• Connecting to the Jira system is successful
• Fields in the field mapping exist in Rally
• Each field handler has a corresponding field mapping section in the configuration file

To confirm the validation is successful without moving objects between the two systems, the <Preview>
tag in the configuration file may be set to true . This helps to experiment with different configuration
options while debugging an issue.

Jira Custom Field
Precaution (ExternalID)

Field Default Value

The copy operation for the COPY_JIRA_TO_RALLY service is driven by the value in the custom field set
up in Jira to hold the identifier for the corresponding artifact in Rally. This field is often referred to as the
ExternalID. Precautions:

• This Jira custom field must be defined as a type Number Field (not a string and not text) and must be
defined with a default value of -1 (minus 1).

• Old Jira items that existed before this Jira custom field was created will not have the default value of -1
(as required), but instead it will be NULL. Because of this, the Jira query (performed by the connector)
to identify items eligible to be copied to Rally will not find these items. Should you want to include these
existing items in the copy, perform a bulk change operation in Jira (typically found under Tools, Bulk
Change after doing a search and filter) to set the value of the ExternalID custom field to a -1 for items
whose current value is NULL.

Jira Custom
Field Precaution

(ExternalID) Field Type

When the connector searches Jira for new artifacts, it attempts to find all Jira artifacts where the custom
field ExternalID (or whatever you named it) is equal to a -1. For this reason, the field must be defined as a
type Number Field. If it is defined as a Text Field (single line), you will see an error like:

        ERROR : JiraConnection.exception in getNewArtifacts - Trying to find new

 artifacts via query: ....

        ERROR : JiraConnection.init - ["The operator '=' is not supported by the

 'RallyObjectID' field."]

        INFO  : JiraConnection.disconnect - Disconnected from Jira

Jira Custom Field
Precaution (General)

When defining a Jira custom field (for example, to receive some field from Rally), the valid screens must be
declared during this process. It is best to select ALL screens for the field.

If the Default Screen is not selected, and the field is declared Required, and a Field Default is supplied in
the XML configuration file, you may see an error like this (in the following test, a Jira custom field named
Severity was created as Required without the Default Screen checked):

ERROR : JiraConnection.initialize - Unrecognized field Severity, cannot continue

Unrecognized Field When copying an artifact from Rally to Jira, the following sample error can occur:

 INFO : RallyConnection.getNewArtifacts -   Found 2 new defects in Rally

 INFO : Connector.copy_to_other - Copy DE442 to Jira

DEBUG : Connector.map_fields_to_other -   Mapping Name(Test) - to - Summary(Test)

                ....

 WARN : JiraConnection.init - Unable to create new Jira Bug,

               Unrecognized field |RallyField|,

 995



 Rally®

               unable to accurately realize postable data for this field in |create|

 mode

       ....

  ANY : ConnectorRunner.process_service - Finished Service COPY_RALLY_TO_JIRA

• A non-mapped field (such as a custom field like RallyLink or RallyFormattedID) is required, but not
defined

• The custom field exists, but it is not visible to the specified <Project>

Field not Found When copying an artifact from Jira to Rally, the following sample error can occur:

DEBUG : Connector.validate - RallyConnection field_mapping target "TestDateDeployment"

 existence validated

ERROR : Connector.validate - FieldMapping: Other field "CustomDate Deploy" not found

ERROR : ConnectorRunner.init - Invalid Configuration

• A mapped field (such as a custom field) is not visible on all screens

Not a Valid Field Sometimes projects will not see custom fields if the custom fields existed before the project was created.
The following error may occur for this issue:

ERROR : JiraConnection.validate - Jira ExternalIDField name of "RallyID" is not a

 valid field name"

• Solution: Verify that all screens are selected for that custom field.

Mismatched
External Identifier

This error can occur whenever artifacts are cloned or duplicated in either Rally or Jira. If the artifact has
already been copied to the other system, then the <ExternalIDField> has been given a value. When
an artifact is cloned, the value in this field is carried to the new artifact. And then there will be two artifacts
with the same value in this field.

This error also can occur when two different XML tags are incorrectly using the same custom field name
(JiraID in the following example):

        <Config>

                <RallyConnection>

                        <Url>rally1.rallydev.com</Url>

                        .....

                        <ExternalIDField>JiraID</ExternalIDField>

                        <CrosslinkUrlField>JiraID</CrosslinkUrlField>

                </RallyConnection>

                .....

The error message returned was:

DEBUG : JiraProxy.makeAnIssueInstance - Attempting to obtain a JiraIssue instance for

 RIT-37

DEBUG : JiraProxy.makeAnIssueInstance - Obtained JiraIssue for RIT-37

 WARN : Connector.update_other - JIRA Bug RIT-37 matched to Rally defect DE27 has

 mismatched external identifier in Rally item

  ANY : ConnectorRunner.process_service - Finished Service UPDATE_RALLY_TO_JIRA

Logfile is not Written
to When Running
the Connector as
a .bat (Batch) Job

If the connector is being run as a batch job, verify that the user that owns or runs the batch job has access
to the log subdirectory.

Rally is not Populated
with Jira Artifact's URL

When creating a selectable link in the Rally artifact (back to the Jira artifact), if the custom field in Rally
is not be completed, ensure the Type on the custom field is Text, and not Web Link (see Create a
CrosslinkUrlField in Rally).

EnvironmentalKey
ident_vector

not Valid Error

If the following error is seen, re-enter the userid and password for both Jira and Rally.

.....

 996



 Rally®

ERROR : Class.initialize - EnvironmentalKey ident_vector not valid for decryption

 target value

Using Parentheses
in a Copy or Update

Selector Value
Results in Error in

the JQL Query Error

When a selector contains a key/value pair that has a set of parentheses in its value, the connector does not
format the JQL correctly. This is due to the way that the connector handles escaping the parentheses in a
Copy/Update selector. This causes JQL parser to try and interpret the parentheses as a grouping construct
instead of a value to search for and an error is thrown:

.....

DEBUG : JiraComm.execute_Request - issuing a GET request for endpoint: /rest/api/2/

search?jql=type="Bug" AND project = "Project" AND "RallyFormattedID" = -1 AND

 "CustomDropDown" = Value (New Value)&startAt=0&fields=*all

DEBUG : JiraComm.execute_Request - {

"errorMessages": [

"Error in the JQL Query: Expecting ')' or ',' but got 'Value'. (line 1, character 90)"

],

"errors": {

The recommended workaround is to remove parentheses from the fields or use a different field for the
copy/update selector.

Remove HTML
from Description

When using the connector to copy data from Rally to Jira, the Description field in Jira shows HTML tags.
This is only an issue for Jira on-premises users.

In order to remove HTML from the Description field in Jira, a Jira administrator will need to enable wiki text
rendering.

1. From the gear in the top right, select Issues.
2. Select Field Configurations on the left.
3. Select the name of the configuration you are using.
4. Scroll down to the Description field.
5. Select the Renderers link to the right of Description.
6. Select wiki style renderer from the dropdown
7. Select Update.

Contact Rally Support Log in to the Rally Software Community for support of this and all of our connectors. The Rally Software
Community is your one-stop shop for self service and support.

Rally-Jira WIC Revision History

• 5.0.21 -- October 2022
– Added logging information regarding the use of Selector conditions that include multi-valued field(s), such as Tags

or Labels.
• 5.0.20 -- September 2022

– Added a RallyMultiSelectFieldHandler to provide for multi-select fields in Rally and Jira having the exact same
values. This addition complements the already existing RallyEnumMultiSelectFieldHandler, which provides for
mapping of values for multi-select fields in Rally and Jira where the values are not always identical.

• 5.0.19 -- August 2022
– Improved JiraWikiTextFieldHandler treatment of WikiText markup for text color, underline, strikethrough, and line

breaks.
• 5.0.18 -- July 2022

 997

https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e


 Rally®

– FieldDefaults in the non-RallyConnection are now enabled and processed correctly.
– Rally Tags and Milestones can be used in a Selector condition using the contains, !contains,

containsany, containsall relational operators in the RallyConnection section.
– Jira Labels, Components, and Versions can be used in a Selector condition using the contains, !contains,

containsany, containsall relational operators in the JiraConnection section.
• 5.0.17 -- June 2022

– Unique Jira user references are counted for application telemetry (connectedusers).
• 5.0.16 -- May 2022

– Adjusted item counts for UPDATE_* services to be accurate if no mapped fields are updated but attachments are
added or Rally Discussion has ConversationPost items added and/or Jira Comments have been added.

• 5.0.15 -- May 2022
– Modification to item comparisons to better identify situations where no update attempt is needed.
– Product identification to official connector name.
– Debug messages for field comparisons of multi-value attributes improved for readability.

• 5.0.14 -- Apr 2022
– Fixed a defect related to Selector using multiple values for field defined as a multi-select field.

• 5.0.12 -- Apr 2022
– Performance optimizations for Jira user-related queries and copying of JIra information to Rally.

• 5.0.6 -- Feb 2022
– Fixed defects related to mapping Rally fields for multi-select fields.

• 5.0.5 -- Feb 2022
– Fixed some defective behavior with the JiraCommentLinker.

• 5.0.4 -- Feb 2022
– Attachment handling for copy to Jira fixed, Proxy handling for RallyConnection fixed to conform to documented

behavior.
• 5.0.1 -- Jan 2022

– Reimplemented using Python, configuration files can be in YAML format. Log file is named per configuration file.
Features and Epics are supported.

Rally Add-in for Excel 2016 and Excel for Microsoft 365
The Rally Add-in for Excel 2016  and Microsoft 365 provides a quick and easy way to import or export data from your
Rally subscription for tracking, reporting, or sharing. The data can be organized in a pivot table or displayed using Excel's
built-in charting capabilities. Multiple object types can be imported from or exported into multiple worksheets and the data
cross referenced for more complex needs.

NOTE
This feature is currently in Beta. Select the yellow Feedback button and let us know how we could improve your
experience.

The add-in is capable of importing and exporting data. It cannot update the fields or statuses of existing work items. If
you export an existing item, change a field, and then import, you will see a new copy of the existing work item. This also
applies to user upload.

See the Rally Add-In for Excel 2016 and Excel for Microsoft 365 Installation and User Guide for information on installing,
configuring, and using the connector.

Rally Add-In for Excel 2016 and Excel for Microsoft 365 Installation and User Guide
The Rally Add-in for Excel 2016 and Excel for Microsoft 365 provides a quick and easy way to import or export data from
your Rally subscription for tracking, reporting, or sharing.

 998



 Rally®

NOTE
This feature is currently in Beta. Select the Feedback button and let us know how we could improve your
experience.

WARNING
The Excel 2016 and Excel for Microsoft 365 add-in will only work for versions of Excel 2016 and for Microsoft
365. Information on the Excel 2010 and 2013 add-in can be found here.

In the Rally Add-in for Excel 2016 and Microsoft 365 you can:

• Organize data in a pivot table or display data using Excel's built-in charting capabilities.
• Export multiple Rally object types into multiple tabs and cross reference the data for more complex needs.
• Import multiple Rally object types into Rally.
• Use the add-in to export all work items from a project, then import new items to another project.
• Create (not only update) new users as a bulk upload.

This installation and user guide includes:

• Install the Microsoft Excel 2016 Add-In
• Uninstall the Microsoft Excel 2016 Add-In
• Authentication for the Microsoft 2016 Add-In
• Export Data from Rally to Microsoft Excel 2016
• Refresh Exported Data
• Import Data from Microsoft Excel to Rally
• Troubleshooting the Microsoft Excel 2016 Add-In
• Microsoft Excel 2016 Add-In Revision History

Install the Microsoft Excel 2016 Add-In

The add-in is supported on both Windows and Mac environments.

Administrators can share the add-in with users in your organization without requiring each user to do the installation.
Learn more.

NOTE
If you have an older version of the Rally Add-in for Excel, you can still install and use the Excel 2016 and
Microsoft 365 version. Queries created in the old add-in will not be automatically moved to the Excel 2016 add-
in.

Download the Microsoft Excel 2016 Add-In

The Rally Add-in for Excel is distributed as a single manifest.xml file.

For rally1 users: manifest.xml file (rally1)

For eu1 users: manifest.xml file (eu1)

Modification for On-Premises Installation

You can install the Beta version of the Excel 2016 and Microsoft 365 add-in on Rally On-Premises version 2.0 or above by
modifying the SourceLocation value in the manifest.xml file.

1. Open the manifest.xml file in an editor.
2. Locate the line containing <SourceLocation DefaultValue="path" />
3. Replace rally1.rallydev.com (rally1 users) or eu1.rallydev.com (eu1 users) with your on-premises server

information. For example:

 999

https://docs.microsoft.com/en-us/office/dev/add-ins/publish/publish
https://rally1.rallydev.com/slm/js-lib/excel-addin/get/
https://eu1.rallydev.com/slm/js-lib/excel-addin/get/


 Rally®

– <SourceLocation DefaultValue="https://onpremserver.company.com/slm/js-lib/excel-
addin/index.html" />

– <SourceLocation DefaultValue="https://100.14.12.111/slm/js-lib/excel-addin/
index.html" />

4. Save your edited manifest.xml file and continue with the installation.

Install on a Mac

1. If the ~/Library/Containers/com.microsoft.Excel/Data/Documents/wef folder does not exist, open a
terminal and create it. mkdir ~/Library/Containers/com.microsoft.Excel/Data/Documents/wef

2. Copy the manifest.xml file to the ~/Library/Containers/com.microsoft.Excel/Data/Documents/wef
folder.

3. In Excel, select the Insert tab.
4. Select the My Add-ins drop-down to show a list of developer installed add-ins.
5. Select the Rally Excel add-in.

Install on Windows (Excel 2016)

1. Create a new folder and move the manifest.xml file to it.
2. Right-click on the folder and share it with yourself. Learn more about sharing a folder.
3. Copy the network path to this folder.

 1000

https://support.microsoft.com/en-us/windows/file-sharing-over-a-network-in-windows-b58704b2-f53a-4b82-7bc1-80f9994725bf


 Rally®

4. Go to Options, Trust Center, Trust Center Settings, Trusted Add-in Catalogs and add the network location from
step 3.

 1001



 Rally®

5. Restart Excel 2016.
6. Select the Insert tab.
7. Select the My Add-ins button.
8. Select the SHARED FOLDER link.
9. Select the Rally Excel add-in.

Install on Excel for Microsoft 365

1. Log in to your Microsoft 365 subscription.
2. Open a new Excel workbook.
3. Select the Insert tab.
4. Select the Office Add-ins button to open up your add-in catalog.
5. Select the MY ADD-INS link.
6. Select the caret next to Manage My Add-ins and choose the Upload My Add-in option.
7. Upload the manifest.xml file.

Uninstall the Microsoft Excel 2016 Add-In

You can uninstall or remove the add-in if you no longer need it.

Uninstall on Windows

1. Disable the add-in in Excel from the File, Options, Add-ins dialog.
2. To completely uninstall the add-in, remove it from the Add/Remove Programs or Programs and Features portion of the

Control Panel.

Uninstall on a Mac

1. Delete the manifest.xml file. ~/Library/Containers/com.microsoft.Excel/Data/Documents/wef/
manifest.xml

Authentication for the Microsoft Excel 2016 Add-In

You can log in to the Microsoft Excel 2016 add-in using SSO or without using SSO.

For more information on authentication, see Using Authentication.

 1002



 Rally®

Log In to the Excel 2016 Add-In When Using SSO

If your subscription is set up to use SSO and you are not an SSO exception user, you can log in to the Excel 2016 add-
in by entering your username with no password. You will be automatically redirected to your SSO site. Check with your
subscription administrator if you are not redirected (your subscription must be set to Automatically redirect to IDP to use
SSO).

Log In to the Microsoft Excel 2016 Add-In Without Using SSO

NOTE
The proxy settings are not required for most users. However, if your network traffic is routed through a proxy
you will need to provide a valid proxy server address. If your proxy is authenticated, a username and password
should also be specified.

1. Enter your Rally server (default is rally1.rallydev.com ), username, and password.
2. Select Save.

Export Data from Rally to Excel

1. In the Excel add-in pane, select Export.
2. Select the Project scoping for your export.

The Project scoping defaults to your Rally Workspace and Project.
3. Select the Type of work items to export.
4. Use the column selector to determine which fields you wish to export. Any column names preceded by an arrow will

let you choose nested attributes on that type. For example, the arrow next to Blocker means that typing "Blocker"
followed by a period in the column selector will show you the nested attributes on Blocker that you can display. To
select multiple attributes without having to type the root field name each time, hold the Shift key and select additional
attributes.

 1003



 Rally®

5. Define conditions and expressions.
6. Enter the maximum number of results to export in Result Limit. The default is 200.
7. Specify a field to sort on, and whether the sort should be ascending or descending.
8. Select the Target sheet. The default is New Sheet, meaning that any time a query is run, it will open a new sheet. You

can change this to select an existing sheet, which will cause the resulting data to overlay previously exported data.

After you have set your Project scoping, Type, Columns, Filters, Result Limit, and Sort item, you will have
the option to save your query parameters to use again later.

Conditions and Expressions

Conditions and expressions are defined in the Filters section.

1. Add one or more conditions.
a. Select Add Condition.
b. Select the Attribute, Operator, and Value.
c. Select Done.

2. Use the Expression field to choose how to apply the conditions to the results.

 1004



 Rally®

3. For date-specific fields (like Accepted Date), you can select Tokens to match relative dates like Today or Yesterday,
which will filter on a different day depending on when the query is run.

Refresh Exported Data

You can refresh the exported data in one or more sheets using the selections in the Refresh tab.

A refresh can only be done on sheets that were previously exported using the Excel 2016 add-in. The data in a sheet is
updated using the same query parameters as the original export for that sheet.

Selecting Refresh all sheets collectively refreshes all of the listed sheets. Refresh an individual sheet by selecting the
button for that sheet.

 1005



 Rally®

NOTE
Refreshing a sheet that was used to import data to Rally does not cause the data to be re-imported.

 1006



 Rally®

Import Data from Microsoft Excel to Rally

NOTE

• The items to be imported must be in table format, with column headers. If you have many required fields, it
may be easier to use the export option for your selected Type first so you have the correct column headers.

• Importing with the add-in is different with regard to associating imported items with other items. This means
using FormattedID instead of name for the existing item.

1. In the Excel add-in pane, select Import.

2. Select the Project scoping for your import.

The project scope is defined by the Workspace and Project where you want to import data. You can also scope up or
scope down (or both).

3. Select the Type for your import from the drop-down list.

4. The add-in will then display the required fields for the selected Type and Project Scope.

5. After you have a table populated with the items you wish to import, select Validate to check the data for errors. Once it
has passed validation, you can import the data into Rally.

6. When your import has completed you will have the option to undo the import which will send all the items you just
imported to the Recycle Bin in Rally.

Troubleshooting the Microsoft Excel 2016 Add-In

Use the following information to troubleshoot.

Refreshing Microsoft Excel Spreadsheet Data

Only sheets which were exported using the Microsoft Excel 2016 add-in and have export information embedded in them
can be refreshed. These sheets are listed individually on the Refresh tab.

International Usage

Some countries use a comma (,) instead of a period (.) to represent nominal values.

Workaround: Changing the list separator in Windows to a comma does not work if the decimal point separator in Excel
is also set to comma. European users will need to change to US number settings: Decimal (. instead of ,) and thousands
separator (, instead of .). This allows you to change the list separator in Windows (from ; to ,).

Microsoft Excel 2016 Add-In Revision History

• 0.2.6 - May 2021
– Rebrand as Rally
– Defects fixed:

• Data Refresh results in new table names may break existing reports
• Filters with no matches make the Excel add-in pane unusable
• Cannot associate imported items to iterations
• Cannot import Preliminary Estimate on portfolio items
• Add-in imports defects, user stories, and test cases in incorrect Rank order

• Initial Release - October 2018
– Beta release

 1007



 Rally®

Rally Add-in for Microsoft Excel 2010 and 2013
The Rally Add-in for Excel provides a quick and easy way to import or export data for tracking, reporting, or sharing. The
data can be organized in a pivot table or displayed using Excel's built-in charting capabilities. Multiple object types can
be imported from or exported into multiple worksheets and the data cross referenced for more complex needs. New user
accounts with defined project permissions may also be imported with the add-in.

NOTE
The add-in is capable of importing and exporting data. It cannot update the fields or statuses of existing work
items. If you export an existing item, change a field, and then import, you will see a new copy of the existing
work item. This also applies to user upload.

See the Rally Add-in for Excel 2010 and 2013 Installation and User Guide for information on installing, configuring, and
using the connector.

Watch the Import and Export Rally Data with the Add-In for Excel YouTube video.

Supported Version: Excel 2010, 2013 (not supported on Microsoft Excel for Mac)

Cost: Free

Rally Add-in for Excel 2010 and 2013 Installation and User Guide
The Rally Add-in for Excel provides a quick and easy way to import or export data from your Rally subscription for
tracking, reporting, or sharing.

NOTE
If you are using Excel 2016 or Excel for Microsoft 365, you need to use our later add-in. Learn more.

• Organize data in a pivot table or display data using Excel's built-in charting capabilities.
• Export multiple Rally object types into multiple tabs and cross reference the data for more complex needs.
• Import multiple Rally object types into Rally.
• Use the add-in to export all work items from a project, then import new items to another project.
• Create (not just update) new users as a bulk upload.

NOTE
The add-in is capable of importing and exporting data. It cannot update the fields or statuses of existing work
items. If you export an existing item, change a field, and then import, you will see a new copy of the existing
work item. This also applies to user upload.

This installation and user guide includes:

 1008

https://youtu.be/_J1fwF-aVGU


 Rally®

• Install the Excel Add-In
• Uninstall the Excel Add-In
• Set up the Add-In in Excel
• Authentication for the Excel Add-In
• Export Data from Rally to Excel
• Import Data from Excel to Rally
• Troubleshooting the Excel Add-In
• Excel Add-In Revision History

Install the Excel Add-In

Before you install the add-in, be sure your system meets the following requirements.

NOTE

• If you have an older version of the Excel add-in, you will need to uninstall the older version prior to installing
the new version. This process will delete log files, but configuration files will remain. Connection information
and queries will be available after upgrading to a new version of Excel.

• Microsoft frequently updates the download location for the latest version of Microsoft Visual Studio 2010
Tools for Office Runtime. If the link provided above does not direct you to the correct location, you can search
for Runtime and download the latest version from the Microsoft website: http://www.microsoft.com/en-us/
download/default.aspx.

• Windows Vista/7/8/10
• Runs on 32- and 64-bit systems
• Microsoft Office 2007, 2010, 2013
• Microsoft .NET Framework 4.5 (download)
• Microsoft Visual Studio 2010 Tools for Office Runtime (download)

WARNING

• The add-in is not supported with the Mac version of Excel.
• If the machine on which you are installing the add-in does not meet all the prerequisites, the installation will

fail.

1. If you have an existing version of the add-in, uninstall it before installing a newer version.
a. To determine the current version installed: in Windows, go to Start, Control Panel, Programs and Features,

Rally Add-in for Excel. Note that the path location may be slightly different based on your version of Windows but
can be located in the Control Panel.

b. Uninstall the existing version. Learn more.
2. Download the add-in: RallyAddinForExcel_2.4.4.msi

NOTE
If you are prompted to log in, disregard the prompt. The add-in downloads without requiring you to log in.

 1009

http://www.microsoft.com/en-us/download/default.aspx
http://www.microsoft.com/en-us/download/default.aspx
https://www.microsoft.com/en-us/download/details.aspx?42642
https://www.microsoft.com/en-us/download/details.aspx?48217
https://ent.box.com/s/tgk8gl8wjxf8elua982emcm3788xayt2


 Rally®

Sample Workbook for the Excel Add-In

A sample workbook is included in the installer. You can access this sample workbook after you have installed the add-in.
Note that this workbook is meant to serve as an example only and may not be importable to your Rally workspace.

• For Windows 64-bit: the sample file is in %PROGRAMFILES(x86)%\Rally Software, Inc\Rally Add-in for
Excel\Sample.xlsx

• For Windows 32-bit: the sample file is in %PROGRAMFILES%\Rally Software, Inc\Rally Add-in for
Excel\Sample.xlsx

NOTE
Credentials are not stored in the Excel file. They are stored in the Rally plugin configuration settings file.

 1010



 Rally®

Uninstall the Excel Add-In

You should uninstall the add-in if you no longer need it or before you install an updated version.

You need to disable and then uninstall the add-in.

1. Disable the add-in in Excel from File, Options, Addins.

2. To completely uninstall the add-in, remove it from the Add/Remove Programs or Programs and Features portion of the
Control Panel.

 1011



 Rally®

3. When uninstalling the add-in, not all files are deleted. The following file remains after an uninstall:

This file is created when the add-in connects to Rally, and is used to store the Excel add-in configuration. After
updating to a newer version, this file will remain in the system, and it will contain the previous configuration. When
Excel is then started, the old configuration will be loaded and displayed in the Rally login screen after selecting the
Rally Connect button. To not use the old configuration, rename this file before updating (it may contain saved queries
you want to re-use).

• Windows XP: %USERPROFILE%\Application Data\Rally\ExcelAddIn\rallyExcel.xml
• Windows Vista, 7, 8, and 10: %USERPROFILE%\AppData\Roaming\Rally\ExcelAddIn\rallyExcel.xml

Set up the Add-In in Excel

Once you install the add-in, a new Rally tab displays in the Excel ribbon.

Most functionality will be disabled because no connection to Rally is available at this point of configuration.

IMPORTANT
For Rally On-Premises customers, you will need to select the Trust all SSL Certificates option and be working
in your corporate network to connect to Rally from the Excel Add-in.

1. Open Microsoft Excel.

2. Select Connect to Rally in the Configuration area.

3. Complete the fields on the Rally Connection Settings dialog and select Save.

 1012



 Rally®

Authentication for the Excel Add-In

You can use single sign-on or a proxy with your Excel add-in.

SSO Authentication

NOTE
SSO is not currently supported for On-Premises users.

WARNING
There is a known issue with the Rally  Add-in for Excel version 2.1.2 (and higher) and SSO that we are working
to resolve. See the revision history to learn more.

Rally follows the SAML specification for SSO authentication. This specification requires that a value called the RelayState
be passed among the participants in an SSO authentication handshake. The RelayState specifies the final destination that
the user wants to visit after being authenticated and is always a URL All SAML SSO providers allow the user to set this
value. Usually this is done by appending an additional URL parameter to the normal SSO connection URL. Be aware that
different SSO providers use different parameter names to set this value.

In order to successfully login using SSO and the Excel Add-in, you must be running a supported version of Internet
Explorer. Learn more.

Excel may show an expected identifier script error or un-supported browser message when attempting to login using
SSO if you are using an unsupported version of IE. The Excel add-in uses a .NET 4.5 webform component to display
the browser-interactive aspects of a successful SSO IdP/Rally login action. By default, .NET will always use the current
version of IE installed on the user's computer when displaying a webform.

 1013



 Rally®

SSO URLs

In the Rally internal environment we use a URL parameter named TargetResource to set the RelayState . In other
environments that we have tested, the SAML RelayState is set using RelayState or Target . Your environment may
use one of these parameter names or something completely different.

Contact your Rally administrator or Rally Support if you are having trouble constructing a URL that correctly sets the
SAML RelayState .

A complete Excel SSO URL in the internal environment looks like this:

https://CustomerACS?fromURI=/app/broadcomincexternal_rally_1/exk1gdbaindeR1Jrj1d8/sso/

saml&RelayState=noRedirect

where CustomerACS?fromURI is assigned the value you receive from Rally Support.

Basic Authentication

The proxy settings are not required for most users. However, if your network traffic is routed through a proxy you will
need to provide a valid proxy server address. If your proxy is authenticated, a username and password should also be
specified.

1. Enter your Rally server (default is rally1.rallydev.com ), username and password.
2. Select Save.
3. Follow either the export or import instructions below to complete the process.

Export Data from Rally to Excel

You can export data from Rally to Excel.

NOTE

• Date and time fields are stored in UTC format and exported in UTC format.
• The only way to specify subfields is to type them manually. Adding subfields manually and then selecting

items from the chooser erases manually entered subfields. Use caution when switching back and forth
between manual entry and the column chooser. AND/OR statements must be added manually to the Filter
field.

• You can embed queries in worksheets when you save a workbook. The Refresh All Queries button runs
all queries embedded in a saved workbook. Any pivot charts or tables based on the data are automatically
refreshed.

1. Open Microsoft Excel.
2. Select the Export option in Excel.

3. Define the Workspace and Project that you want to export. Otherwise, the default workspace and project will be used
for the export process.

 1014

https://support.broadcom.com/group/ecx/my-dashboard?
https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

4. Select the Manage Queries button to launch the Queries dialog.

5. Select New to create a new query.

6. Specify the type of Rally object to export and choose a sort order for the data.

 1015



 Rally®

7. Select Choose to select fields to export to Excel.
The fields to export are specified as a comma-separated list of those selected in the Columns text box.

 1016



 Rally®

You can also enter sub-object fields in the text box. For example, you could add Release.ReleaseStartDate or
Parent.Project.Name to the comma-separated list of fields as well. Leaving Columns empty or specifying True will
cause all fields to be returned.

8. Optionally, specify a filter to be applied to the query. The filter syntax is that used by the Rally WSAPI and is
documented here, for example: (ScheduleState = Accepted)
The Choose button launches a Filter dialog box to make it easy to select a basic filter:

 1017

https://rally1.rallydev.com/slm/doc/webservice/


 Rally®

{user} is a special macro that will automatically be replaced with your user ref when the query is run.Subfields can
be used in query clauses:
(Release.Name contains "2011 Q2")

More than one query clause can be combined using ANDs or ORs:
((ScheduleState = Accepted) AND (Release.Name Contains "2011 Q2"))

NOTE
When using a query that looks for user stories and displays the parent of the story, you can use the value of
the portfolio item in the column field to view portfolio item parent information.

Once you have defined one or more queries, you are ready to export Rally data.
9. Select a worksheet and then select a query from the Query drop-down.
10. Select Run Selected Query to populate the current worksheet with data.

NOTE
You can set the query row limit, up to a value of 2,147,483,647. The default value is 200 rows.

 1018



 Rally®

Export Test Case Steps

To ensure that test case steps are exported correctly, verify the following:

• Test case Input and Expected Result fields are populated for the test cases you want to export.

 1019



 Rally®

• Ensure that test case steps are not just listed in the Validation Input and Validation Expected Result fields. These
fields export from the Add-In using the Test Case type.

Learn more about using Excel for test cases and test case steps.

Import Data from Excel to Rally

You can import defects, iterations, portfolio items (features, initiatives, and themes), releases, tasks, test cases, test case
results and steps, test folders, test sets, users, and user stories.

The Import to Rally feature displays a list of importable artifact types available for your Rally workspace. Imported text
fields with XML are undefined in Rally unless you follow the technique described below.

NOTE

• For an import to succeed, the spreadsheet needs to contain a column for all required fields. Columns for all
other fields are optional.

• All columns in an importable spreadsheet must map to a valid attribute. If there are extra columns created by
an export, remove those columns before importing.

• If you import a text field with XML and want the XML displayed as text in Rally (such as documentation with
notes), you will need to add div tags as defined below:
<tag> text </tag>

Should be written as:
<div><tag> text </tag></div>

• When importing user stories, if the Rank Method on the destination workspace is set to drag-and-drop,
the Rank attribute is ignored. Imported stories are ranked in reverse order of their order in the source
spreadsheet. For example, the last story in the spreadsheet ends up with the highest ranking.

Rally has tested and successfully imported 500,000 rows of data. The number of rows you can import may be dependent
upon your version of Excel (2007 or 2010).

1. After connecting to Rally in Excel, select Import to Rally in the Excel ribbon.

 1020



 Rally®

2. On the Choose Import window, select the workspace in Rally where you wish to import artifact types, then select the
type of artifact that you want to import to your designated workspace. The last workspace and artifact type used during
the session are selected by default.

NOTE
If there are duplicate names for the parent, associated requirement, or test case, select the Project scope
all lookups check box to associate the work item to the parent in the same project. If you have multiple work

 1021



 Rally®

items with the same name in different projects, selecting this check box prevents you from having to enter
a FormattedID or OID to identify which item you want to associate to when there are duplicate named work
items.

3. Select Schema to view the schema for the chosen artifact type.
The schema lists details about the importable values of the chosen artifact type. For example, the defect schema lists
all valid fields in a defect. The schema is a subset of all article types available in the system with associated types
in Rally.Field schema columns can be modified as needed. For example, you might want to have the Required field
located to the left of all columns so you can see at a glance the required field for the schema. Drag and drop column
headers as needed.

You can save the schema as a PDF for reference by selecting Save PDF.Important notes regarding schemas:

• There are three ways to specify an object reference: Name (not all object types have this), OID, and Formatted ID
(not all object types have this).

• Acceptable boolean values include Yes/No, True/False, or 1/0.
• For date fields, the date must be specified in the date format designated on your computer.
• The Exists column denotes whether the artifact type value occurs in the current version of the spreadsheet.
• For the Release Artifact Type, ensure that the spreadsheet is valid prior to importing as releases are not deletable

from the undo feature in the Rally Excel Add-in and must be deleted manually in Rally.
• The following values are not supported in the current Excel Add-in: Collections, Attachments, Links, and Read-

Only.
• When downloading the schema for any artifact type where the artifact type includes the Owner value, the valid

value listed in the schema is the Owner display value and not the Owner Login Username.
4. Select Validate to validate that the spreadsheet is ready for import. This option reads the data from the spreadsheet,

ensures that it is valid based on the constraints listed in the schema, and searches any OBJECT references specified
as names or formatted IDs. If a validation error occurs, a dialog box will provide you with information regarding the
nature of the error and the column or row where the error occurred in the spreadsheet. You can save the file as PDF.

 1022



 Rally®

5. Select Import to pass artifact data to Rally. During the import you will have the capability to pause and resume the
import process as needed. The import progress window also details the elapsed time, items remaining, average
elapsed time, estimated total time, estimated remaining time, and estimated completion time.
The Import feature also allows you to undo a successful import if needed for any reason, with the exception of
releases. Releases must be manually deleted in Rally.

 1023



 Rally®

Sample Files

The sample files below can be used to import users, user stories, releases, or portfolio item features into a default Rally
instance scoped to Workspace → Sample Project. Each file contains the required columns and fields for the specified
Rally artifact.

• Import_Users_Required_Fields.xlsx
• Import_User_Stories_Required_Fields.xlsx
• Import_Releases_Required_Fields.xlsx
• Import_PI_Features_Required_Fields.xlsx

Import User Stories

In the following example, we have a spreadsheet of user stories that needs to be imported to Rally. We reviewed the
schema for the User Story artifact type and validated. Then, we selected Import for the User Story artifact type.

 1024

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Import_Users_Required_Fields.xlsx
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Import_User_Stories_Required_Fields.xlsx
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Import_Releases_Required_Fields.xlsx
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Import_PI_Features_Required_Fields.xlsx


 Rally®

After importing, there is a confirmation window that our user stories have been imported.

 1025



 Rally®

Upon checking the workspace in Rally, the new user stories have been successfully added.

 1026



 Rally®

Import Users

Administrators can import multiple users with the Excel Add-in.

NOTE
If a network issue occurs during the import process, it is possible that a user may be partially provisioned. If
this occurs, the import screen will display the number of successful and unsuccessful imported users to aid
in troubleshooting. If you decide to undo or remove all users after a network issue, this action will remove all
successfully imported users except for any partially created users. The undo screen will list the number of
successfully and unsuccessfully removed users to assist in troubleshooting any remaining users that have not
been removed.

1. To import users, select the User type. Workspace is grayed-out as it cannot be selected when importing users.

 1027



 Rally®

2. Select Schema to view the schema for the user attribute. The schema defines valid values for each importable field.

WARNING
Custom drop-down fields, including Cost Center, Department, and Office Location, must be defined in Rally
to import the values from Excel. The number of custom fields is limited to five.

 1028



 Rally®

3. Select Import to import users into Rally. When the import is complete, a dialog box displays import and undo statistics.
For example, the number of successful imports and undos, number of unsuccessful imports and undos, users
imported, users undone, time of import, and undone duration.
You will receive a validation error if you try to import more than 2000 users.

 1029



 Rally®

Troubleshooting the Excel Add-In

If you receive this error Value cannot be null. Parameter name: obj in Excel when exporting, it means that there was no
active spreadsheet for the Excel Add-in to write to.

There must be an active spreadsheet for the add-in to work properly.

 1030



 Rally®

System Event Logging

Errors for both importing and exporting are always logged. More detailed logging is enabled when the Log Details option is
selected. Logs can be viewed as soon as a transaction occurs. Double-click on any entry in the log field to view additional
details for any transaction that has been performed. The plugin issues several different kinds of requests to the Rally
server (gets, puts, and so on) and communicates with the Rally server in many different ways during each operation.

Select an individual log to display the entire log entry in a Log Message pop-up window.

You can delete all generated request logs from the system for the Rally Excel Add-in. Select the Purge and Close button
and all logs will be deleted from the Log Viewer and also from the RallyAddInForExcelLog in the Windows System
Events logs. Once the logs have been purged, the window closes automatically.

You can save logs to a file if you need to send logs to Rally for troubleshooting.

 1031



 Rally®

NOTE
In order to purge log files, you must be running the Excel add-in as an administrator. Right-click the Excel app
and select Run as administrator.

International Usage

Some countries use a comma (,) in lieu of a period (.) to represent nominal values.

 1032



 Rally®

There have been issues with European customers using the Excel Add-in (and import templates) with respect to the
decimal point separator and the list separator in Windows 7 Ultimate in combination with Microsoft Excel 2007 or 2010.

Workaround: Changing the list separator in Windows into a comma does not work if the decimal point separator in Excel
is also set to comma. European users will need to change to US number settings: Decimal separator (. instead of ,) and
thousands separator: (, instead of .) This allows you to change the list separator in windows (from ; to ,).

After these changes are in place to import, the templates and Excel should work as expected.

Excel Add-In Revision History

• 2.4.4 - May-2018
– Enhancements:

• TLS 1.2 support
• Additional security fixes

• 2.4.3 - Apr-2016
– Enhancements:

• New and improved error message states that Excel user must run the add-in as an administrator in order to
purge log files.

• 2.4.2 - Mar-2016
– Enhancements:

• Updated to correct workspace scoping for querying Portfolio Items when switching workspaces.
• 2.4.1.0 - Nov-2015

– Enhancements:
• Brand redesign.

• 2.3.3 - Mar-2015
– Fixes:

• Unable to specify Project when creating Releases and Iterations.
• Unable to import Users.
• HtmlAgilityPack error.

• 2.3.2 - Mar-2015
– Enhancements:

• Updated the add-in with the new Rally logo.
• 2.3.1.0 - Nov-2014

– Fixes:
• When trying to connect to Rally using SSO, the following error was received:  Error connecting

to Rally: Could not load file or assembly 'HtmlAgilityPack, Version=1.4.6.0, Culture=neutral,
PublicKeyToken=bd319b19eaf3b43a' or one of its dependencies. The system cannot find the file specified.

• 2.3 - Oct-2014
– Enhancements:

• On the Import dialog, the last workspace and artifact type used during the session are selected by default
• You can save logs to a file in case you need to send logs to Rally for troubleshooting

– Fixes:
• Badly formatted rich text fields (such as Description and Notes) when exported to Excel
• Failure importing artifacts with special characters in the Project or Name fields
• Importing stories with numeric names that contained dots (for example, 2014.09) failed

• 2.2.1 - Jul-2014
– Fixes:

 1033



 Rally®

• Fixed a problem with the formatting of rich text fields when exporting to Excel.
• 2.2 - Jul-2014

– Enhancements/Fixes:
• Import/Export Mode removed from the Excel ribbon.
• Added Favorites and Recent Queries drop-down menus to the ribbon.
• Added drag-and-drop order and select functionality for the Columns selector.

– Known Issues/Limitations:
• If downgrading from 2.2 version to the 2.1.2 version, be aware that some queries may not work and may need to

be deleted.
• 2.1.2 - Apr-2014

– Enhancements/Fixes:
• Support new Project Admin privilege when importing a User
• Users can be imported without defining any privileges
• Plugin tested successfully on Excel 2013
• Project scoping for duplicate parents, associated requirements or test cases
• Time zone allowed values now correct
• Properly handles queries containing special characters such as "&"
• Will create a new spreadsheet if necessary during export
• Properly handles saving schemas to .pdf
• Able to strip xml/html from exported text fields
• Fixed user import bug

– Known Issues/Limitations:
• If you are using SSO for logging into Rally with the Excel plugin please note: After an upgrade of our internal

Single-Sign-On server, we discovered an issue with HTML Form submission through Javascript embedded
into Identity Provider (IDP) login pages. IDP login pages containing Javascript must be compatible with Internet
Explorer 7 Javascript usage for the Rally Excel plugin to work with SSO.

• 2.1.1 - Jan-2014
– Enhancements/Fixes:

• Supports 1,000+ projects and workspaces
• 2.1.0 - Dec-2013

– Enhancements/Fixes:
• Users can now use Single sign-on (SSO) for Excel
• Users can now be specified by username or OID
• Supports the latest 1.43 version of Web Services API

• 2.0.0 - Aug-2013
– Enhancements/Fixes:

• Bulk upload of new users, but it does not allow update on existing users.
• Removed 10,000 row query limit.
• Validation error files can now be saved as a PDF.
• Supports the latest 1.42 Web Services API (1.30, 1.37).

– Known issues/limitations:
• When importing a large number of objects, the duration of the import is directly correlated with the number of

objects to import. The more objects to import, the longer the duration of the import process.
• The validation step does not correctly identify duplicate users that are listed in a different subscription than the

subscription the user running the connector is listed in. However, duplicate users are listed at the end of the
import process.

• If a massive network failure interrupts the Import Users process, you may need to manually remove a partially
provisioned user. The final import screen displays any unsuccessfully imported users to aid in troubleshooting

 1034



 Rally®

partially created users. If you choose to remove all users using the undo option, the final screen will display users
that have not been successfully removed. Other helpful statistics on this screen include number of successful
imports/undos, number of unsuccessful imports/undos, users imported, users undone, time of import, undone
duration and more.

• 1.11 - Jan-2013
– Enhancements/Fixes:

• Fixed issue with ribbon tab label not showing when there is no configuration file.
• 1.10 - Dec-2012

– Enhancements/Fixes:
• Updated to support importing from Excel.

– Known issues/limitations:
• When uninstalling then upgrading to a newer version, not all files are deleted. The following file remains after an

uninstall:
Windows XP:  %USERPROFILE%\Application Data\Rally\ExcelAddIn\rallyExcel.xml
Windows Vista & 7  %USERPROFILE%\AppData\Rally\ExcelAddIn\rallyExcel.xml
This file is used to store the previous Excel add-In configurations. This file is created when the add-in connects
to Rally. After updating to a newer version (for example, uninstall, reinstall), this file will remain on the system,
and it will contain the previous configuration. When Excel is then started, the old configuration will be loaded and
displayed in the Rally login screen after selecting the Rally Connect button. Solution: Rename this file before
updating (it may contain saved queries you want to re-use).

• 1.09 - Aug-2012
– Enhancements/Fixes:

• Updated to work with Excel 2007 as well as Excel 2010.
• Supports UTF-8 character set.
• No longer requires installation of PIAs.
• Includes ObjectID in query sorts if not already present in order to mitigate an issue (DE14047 - when a query

uses an Order by value that is not a unique value, the data returned could have duplicates and/or missing
records).

– Known issues/limitations:
• none

• 1.08 - Jan-2011
– Enhancements/Fixes:

• Fixed missing data issue when refreshing a previously run query
– Known issues/limitations:

• none

Rally Bot GitHub App Integration
The Rally Bot GitHub App Integration lets you connect Rally user stories or defects to pull requests in GitHub.

NOTE

• The Rally Bot GitHub App integration is compatible with GitHub .com or Cloud-hosted Enterprise versions. It
does not support the GitHub Enterprise On-Premises version.

• GitHub has developed a Rally + GitHub app that can be used with the GitHub Enterprise On-Premises
version. Learn more about the Rally + GitHub app.

• A Rally administrator must install and configure the Rally Bot GitHub App Integration. Learn more.
• Once the Rally Bot GitHub App Integration is installed, developers can connect Rally user stories and defects to pull

requests in GitHub. Learn more.

 1035

https://github.com/github/rally


 Rally®

The Rally Bot integration is between a Rally subscription and GitHub organization. This configuration exists at the
subscription level rather than the workspace or project level. Keeping the mapping at the highest level possible reduces
complications.

Configuring the integration to scan all repositories within your GitHub organization allows the integration to scan and find
the right repository, and the right pull requests, to connect to Rally.

The integration setup defines what parts of your Rally and GitHub footprints can be scanned, looking for the unique
identifiers that indicate to the integration that a connection should be established.

How the Rally Bot GitHub App Integration Works

1. Open a pull request in GitHub referencing the Rally user story or defect URL in the pull request description.
2. Rally Bot automatically creates a connection in Rally for any linked artifacts.

– The title, FormattedID, and description for the user story or defect are added to the GitHub pull request.
– The connection is added to the user story or defect, making it easy to see the associated pull request with a direct

link to view it in GitHub.

Frequently Asked Questions about the Rally Bot GitHub App Integration

• Q: Can I paste the Rally URL link in markdown syntax in the GitHub pull request?
A: No. If you paste the Rally URL as part of markdown syntax, the content reference will not be recognized by GitHub.

• Q: If I change the user story or defect URL link in the pull request, will it update with the new information from Rally?

 1036



 Rally®

A: Yes. It will remove the connection from the old URL link and put it on the new URL link.
• Q: If I change the pull request title or description in GitHub, will it update in Rally?

A: Yes
• Q: If I change the title or description in Rally, will the information in the pull request update in GitHub?

A: No. It will only update for new links added or updated.
• Q: Will a connection work on a draft pull request?

A: Yes
• Q: Can I install more than one Rally Bot on a GitHub organization?

A: No. A known limitation for GitHub is one Rally Bot per organization.
• Q: Can I remove a content attachment in GitHub?

A: Yes. You can use the Remove link in the pull request.
• Q: Can one pull request link to more than one user story?

A: Yes, but all URLs need to be in the pull request description to create the connections.
• Q: Does the pull request need to be open, or will the connection also work for closed pull requests?

A: The pull request does not need to be open, but the URL must be added to the description body of the pull request.
The connection will not work if the URL is added to a comments section.

API Keys in the Rally Bot GitHub App Integration

You need to create a Rally API Key that the integration can use to access data without requiring a username and
password.

When you choose the user that will generate your Rally API key to use in the configuration flow, you are determining the
area of Rally your integration will scan. Everything that this user has permission to see, your integration can scan looking
for the identifiers indicating a connection.

We recommend creating a service account, not tied to a real person, and assigning it the administrator level privileges that
are appropriate for your group. For example:

• If you have a Rally subscription with 10 workspaces, but only one workspace has users that are also using GitHub,
your service user should be a workspace level administrator assigned to the workspace who actively uses GitHub.

• If you have a Rally subscription with two workspaces for your two business units, and various projects and teams
across both are all using GitHub, you would create a service account and assign subscription level administrator rights
to that user.

Understanding Rally Bot GitHub App Integration Permissions

The permissions are compliant with GitHub App security policies. Learn more.

NOTE
Installation Permissions: GitHub Organization Owner or GitHub App Manager permissions. You can check
to see if you have the required permissions by going to https://github.com/organizations/{Your
Organization Name}/settings/installations . If you do not have access, you can request to become
an App Manager from your GitHub Organization owner.

What can a Rally user see in GitHub based on their permissions?

The simple answer is "whatever they could see before". No matter what level of access they have in Rally as a user, if
they select a pull request URL in Rally that someone else connected, they are required to authenticate in GitHub.

What can a GitHub user can see in Rally based on their permissions?

A GitHub user that cannot access a project in Rally will not be able to do so through a connection to GitHub. However, the
Title, Description, and FormattedID of the Rally user story or defect will be visible.

 1037

https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-your-organizations-installed-integrations
https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/roles-in-an-organization#github-app-managers


 Rally®

Install the Rally Bot GitHub App Integration
The Rally Bot GitHub App Integration allows developers to connect Rally user stories and defects to pull requests in
GitHub.

NOTE

• The Rally Bot GitHub App integration is compatible with GitHub .com or Cloud-hosted Enterprise versions. It
does not support the GitHub Enterprise On-Premises version.

• GitHub has developed a Rally + GitHub app that can be used with the GitHub Enterprise On-Premises
version. Learn more about the Rally + GitHub app.

These instructions are for installing the Rally Bot GitHub App Integration for GitHub .com or Cloud-hosted Enterprise
versions. The integration is installed within GitHub.

1. As a Rally Subscription Administrator, find your subscription ID. Learn more.

2. As a Rally Administrator, create a new API key in Rally, with Full Access.
a) To access the Rally Application Manager, log in with your Rally username and password at the following

URL:https://rally1.rallydev.com/login//
b) Select the API Keys tab.
c) Select the Create New API Key link.

 1038

https://github.com/github/rally
https://rally1.rallydev.com/login/


 Rally®

 
d) Enter a name or description for the key in the Description field.
e) Select the full access option from the Grants section.
f) Select Create. Your key is created and you can edit or delete the key as needed.

3. Copy the newly-created API key.

4. Go to the Rally Bot GitHub App Integration home page (https://rally1.rallydev.com/apps/github-app/home).

5. Select Setup Integration.

6. Install Rally Bot on your GitHub organization.

NOTE
Installation Permissions: GitHub Organization Owner or GitHub App Manager permissions. You can check
to see if you have the required permissions by going to https://github.com/organizations/{Your
Organization Name}/settings/installations . If you do not have access, you can request to
become an App Manager from your GitHub Organization owner.

a) Select repositories.
b) Review the permissions. These are required by Rally Bot, and are compliant with GitHub App security policies.

 1039

https://rally1.rallydev.com/apps/github-app/home
https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/roles-in-an-organization#github-app-managers


 Rally®

c) Select Install.

7. On the Finish Setup page:
a) Enter your Rally Subscription ID.
b) Enter your Rally API Key. We recommend copying the API key that you created earlier and pasting it here.
c) Select Complete Setup.

8. The Success! page indicates that your Rally Bot GitHub App has been successfully installed.

You are now ready to use the Rally Bot GitHub App Integration to connect Rally user stories and defects to pull
requests in GitHub. Learn more.

Update the Rally Bot GitHub App Integration Settings
You can update your GitHub repositories or the Rally Bot settings (Subscription ID or API Key).

1. Go to the GitHub App (https://rally1.rallydev.com/apps/github-app/home).

2. Select Configure Integration (at the top right).

3. Select Configure.

4. Make any changes to the GitHub repositories (select/deselect, select all).

5. Select Save. This saves the GitHub changes, and directs you to the Rally Bot setup.

6. To edit your Rally Subscription ID, select Enter New Subscription ID and enter the new value.

7. To edit your Rally API Key, select Enter New API Key and enter the new value.

8. Select Submit Changes. This saves the Rally Bot changes.

Remove the Rally Bot GitHub App Integration

You can uninstall the Rally Bot.

After you remove the Rally Bot:

 1040

https://rally1.rallydev.com/apps/github-app/home


 Rally®

• The Rally API key is removed.
• Every connection between Rally and GitHub still works (previously connected work remains linked).
• New connections cannot be added.

1. Go to the GitHub App (https://rally1.rallydev.com/apps/github-app/home).

2. Select Configure Integration (at the top right).

3. Select Configure.

4. Scroll to the bottom of the page and select Uninstall.

Using the Rally Bot GitHub App Integration
The Rally Bot GitHub App Integration allows developers to connect Rally user stories and defects to pull requests in
GitHub.

NOTE

• The Rally Bot GitHub App integration is compatible with GitHub .com or Cloud-hosted Enterprise versions. It
does not support the GitHub Enterprise On-Premises version.

• GitHub has developed a Rally + GitHub app that can be used with the GitHub Enterprise On-Premises
version. Learn more about the Rally + GitHub app.

A Rally administrator must install and configure the Rally Bot GitHub App Integration. Learn more.

Connect a Rally User Story or Defect to a GitHub Pull Request

When you create a connection between a Rally user story or defect and a GitHub pull request, Rally Bot automatically
creates:

• A content attachment that adds the title and description for the Rally user story or defect to the GitHub pull request.
This gives context to the developers that review it.

• A connection that adds the GitHub pull request name and link to the Rally user story or defect.

1. In Rally, copy the link to the user story or defect.
a. Select the FormattedID of the user story or defect to open the detail editor.
b. Select Copy link, Plain.

NOTE
Only the Plain format allows GitHub to show content attachments. GitHub will not recognize a Markdown
or HTML link as a content attachment.

2. In GitHub, create a pull request or edit an existing pull request.
3. Paste the user story or defect URL link in the pull request description (not where there is markdown syntax), and

create or save the pull request.

 1041

https://rally1.rallydev.com/apps/github-app/home
https://github.com/github/rally


 Rally®

View Rally Bot Connections from a Work Item

You can view the connections (linked artifacts) shared between a Rally user story or defect and a GitHub pull request in
Rally or GitHub.

The Connections tab displays the pull request name, a link to the GitHub pull request, and the timestamp of when the
connection was created.

Learn more.

1. Select the FormattedID to open the detail editor for the user story or defect.

2. Select Connections

to open the Connections page.

The number of connections is displayed next to the

.

 1042



 Rally®

View Rally Bot Connections on a Board or List View

You can access connections from a board or list view after you have added the Connections field to the view.

The Connections tab displays the pull request name, a link to the GitHub pull request, and the timestamp of when the
connection was created.

Learn more about customizing a board.

Learn more about customizing a list.

Choose the step appropriate to your page view:

• From a board, select Connections

.
• From a list view, select the value in the Connections column for the respective work item.

View a Rally Bot Connection in GitHub

View the GitHub pull request. It includes the content reference (FormattedID, title, description text) from the Rally user
story or defect.

 1043



 Rally®

Rally Build Connector for Bamboo
The Rally Build Connector for Bamboo posts information about Bamboo Plan Builds to Rally.

The connector is classified as a one-way and one-time mechanism. Information in Bamboo is never altered. The
connector consists of software that you run on your platform according to your desired schedule. The configuration of the
connector is policy-based, meaning that you do not need to provide configuration information in Bamboo for each plan
for which you want the connector to operate. While you can configure specific plans with this connector, you can also
configure by views and folders with the option to use shell regex syntax to include plans or exclude plans. The policy-
based nature allows you to add Bamboo Plans per Bamboo Project without altering the configuration in order to get the
builds for those plans posted to Rally.

This guide includes:

• Software Requirements
• Install the Rally Build Connector for Bamboo
• Rally Build Connector for Bamboo Setup
• Rally Build Connector for Bamboo Operation
• Troubleshooting the Rally Build Connector for Bamboo
• Appendix A - Editing the Build Connector for Bamboo Configuration File
• Appendix B - Bamboo Plan Specification
• Appendix C - AgileCentral Project Specification
• Appendix D - Protect Credentials
• Rally Build Connector for Bamboo Revision History

 1044



 Rally®

Software Requirements

• Bamboo 6.0.3 and 6.1. We expect the connector to work with the 6.x evolution as long as any Bamboo API changes
are backward compatible.

• Python 3.6 or newer (if the platform you are using is Windows, we recommend using the 64-bit version). You can
retrieve the installer package from www.python.org.

• Windows-only additional requirements: win32com module - available from SourceForge here. If you are using the 64-
bit version Python3.6.x or newer, pick the appropriate file from the SourceForge list of Python for Windows Extensions.

Install the Build Connector for Bamboo

1. Download the connector by following the steps here.
2. Install the following Python packages:

– pip3.6 install requests==2.23.0
– pip3.6 install pyral==1.42.0
– pip3.6 install pyyaml==5.3.1
– pip3.6 install cryptography==2.9.2

3. Change your working directory ( cd ) to a directory where you want to install the connector.
4. Unzip bldeif-1.1.3.zip (using a suitable program that can unzip a ZIP file).
5. Change your working directory ( cd ) to bldeif-1.1.3 .
6. Check the contents of the directory using ls -laR (or dir on Windows).

Sample contents:
bldeif             # bldeif module root directory

ac_build_connector # connector initiation script that you will run

config             # holds any configuration files used with this connector

   sample_bamboo.yml  # a sample configuration to use as a base reference

README_BAMBOO.txt  # this file

Build Connector for Bamboo Setup

These are our general recommendations for setup.

1. Start simple. Specify Bamboo Plans under their respective Bamboo Project.
2. Locate the config subdirectory.
3. Copy the sample_bamboo.yml file to a file named suitably for your environment, for example

cp sample_bamboo.yml your_config.yml

4. Edit the your_config.yml file. Change the sample values for credentials, workspace, projects, plans to values that
are relevant and valid for your environment.

See Appendix A for configuration file syntax.

Rally Build Connector for Bamboo Operation
You can choose to perform manual or scheduled operation of this connector.

Manual Operation

This software requires that the configuration file resides in the config subdirectory. You specify the name of the file on
the command line (do not specify the subdirectory in the command line argument).

1. Using a terminal window or console, cd to the installation root directory. cd /opt/local/sw/bldeif-1.1.2
2. Run: python3.6 ac_build_connector your_config.yml

 1045

https://www.python.org/downloads/
https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win-amd64-py3.6.exe/download


 Rally®

Scheduled Operation

Use cron, launchctl, or Windows Task Scheduler. Make sure the environment in effect when running this software has an
appropriate environment set so that you can run:

python3.6 $BLDEIF/ac_build_connector your_config.yml

where $BLDEIF is the reference to an environment variable containing the fully qualified path to the directory where the
software is installed. For example: If you unzipped the package in /opt/local/sw , then your BLDEIF would be set like
this:

export BLDEIF=/opt/local/sw/bldeif-1.1.2

The Build Connector for Bamboo Time File

In normal operation, the connector writes a time file in the log directory whose name is based on the configuration file
name.

For example: If the configuration file name is product_x.yml then the associated time file name would be
product_x_time.file . The content of the time file is a single line containing a human readable date and time stamp
value in the format YYYY-MM-DD hh:mm:ss Z. The value represents the timestamp of the last Bamboo plans considered
(after some negative value adjustment to ensure no Bamboo plans are ever overlooked). When the connector is run
a subsequent time, it consults the time file to determine which plans need to be considered for the current run by only
processing the builds whose start time is greater than or equal to the time file value. It is possible to set the time file value
artificially (but in the correct format) so that you can process builds from some arbitrary point in the past. The connector
does not duplicate build records so you do not have to worry about duplicated information getting posted to .

Troubleshooting the Rally Build Connector for Bamboo
The connector always writes a log file name based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory. In the configuration file, you can set the LogLevel which determines the
amount of logging information written to the log file.

When you set the LogLevel to DEBUG, you will get the full range of logging messages that can be very helpful in
pinpointing where a problem occurred and what information was being processed at the time of the anomaly.

It can be helpful to run the connector in Preview mode when setting things up for the first time. This allows you to get the
connections to Rally and Bamboo to initialize and validate correctly without posting any build information. This mode also
can show you what Bamboo plans would actually be considered without actually posting any build information to Rally.

Known Size Limitation on Bamboo Plan Names

Within AgileCentral there is an entity called a BuildDefinition which for the purposes of the Build Connector for Bamboo is
named after the Bamboo plan. The RallyBuildDefinition Name attribute is limited to 256 bytes.

VCS Support for the Bamboo Connector

Currently, the connector will not process changesets related to builds. In order to see builds related to changesets, run a
VCS connector prior to the Build Connector.

Appendix A - Editing the Rally Build Connector for Bamboo Configuration File
The Rally build connector for Bamboo uses a text file in the YAML format. For complete information, consult the web page
at www.yaml.org.html.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector:

 1046

https://yaml.org


 Rally®

• Use a text editor (not Microsoft Word or Google Doc) to edit the file.
• Never use a tab character in the file. YAML does not allow or recognize tab characters.
• Save the file in UTF-8 format.
• Use a monospace font.
• Be consistent with the number of spaces you use to indent.
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # character and all characters to

the right are ignored in processing.
• Keep the sections in the same order as is present in the sample.yml file.
• Be aware that the colon character ":" is significant, it separates a key from the value.
• Be aware that the dash character "-" is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item.
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character.

Skeleton of the Sample_config.yml

BambooBuildConnector:

        AgileCentral:

                ...  # several key value pairs are relevant for this section

        Bamboo:

                ...  # several key value pairs are relevant for this section

        Service:

                ...  # a few key value pairs relevant for the overall operation of the connector appear in

 this section

The AgileCentral section specifies values to use to obtain a connection with Rally. The Bamboo section specifies values to
use to obtain a connection with Bamboo and specify the policies governing what plans in Bamboo get processed to result
in posting of build information to Rally. The Service section controls some aspects of the connector behavior on an overall
basis.

A sample file with some explanatory notations:

 ---------------------------------------------

BambooBuildConnector:

    AgileCentral:

        Server        :  rally1.rallydev.com     # R

        #Username     : henry5@hauslancaster.uk  # R  if an API_Key entry is used, then this isn't needed

        #Password     : 2MuchAngst1415           # R  if an API_Key entry is used, then this isn't needed

        APIKey        :  _abc123                 # O  can use this instead of a Username and Password

        Workspace     :  My AC Workspace         # R  name of the Rally Workspace used for connection and

 project containment

        ProxyServer   : wu-tank.smooth.org       # O  only specify this if you intend to use a proxy server to

 communicate with Rally

        ProxyUser     : jessonbrone              # O  ditto and only if you are using an authenticating proxy

        ProxyPassword : S-e-c*r*EtT321!789       # 0  ditto and only if you are using an authenticating proxy

    Bamboo:

        Protocol  :  http                        # R  defaults to http  use https for SSL connections

        Server    :  mybamboo.mydomain.com       # R  the fully qualified hostname for your Bamboo server (or

 the Bamboo cloud server)

        Port      :  8085                        # R  port number used by Bamboo for REST API communication

        Username  :  apiuser                     # R  your Bamboo user name

        Password  :  secret                      # R  your Bamboo password

 1047



 Rally®

        AgileCentral_DefaultBuildProject :  AC Top Project # R

        Projects:

            - Project: Bamboo Project 1          # R

              AgileCentral_Project: AC Project 1 # O

              Plans:                             # O  you don't have to list individual plans, but if you

 don't all Plans of the Project will be included

                  - include: ^Quick*

                  - exclude: ^Quicksand*

                  - Plan: Bamboleo

            - Project: Bamboo Project 2

              Plans:

                  - include: ^DonCamillo*,^Return*

                  - include: ^Modi*,^VanG*,^Deg*,^Toulouse*,^Bon*

            - Project: Bamboo Project 3

              AgileCentral_Project: AC Project 3

    Service:

        Preview       : False   # O

        LogLevel      : DEBUG   # O  defaults to INFO

        MaxBuilds     : 50      # O  maximum builds for an individual plan to post to AC per one connector run

        SecurityLevel : Encrypt # O

------  end of the file ---------------------------------------

Appendix B - Bamboo Plan Specification
In the sample configuration file in Appendix A for Bamboo Project 1 and Bamboo Project 2, note that the list of exclusions
denoted with exclude entry is applied only to the list of inclusions denoted with include entry, as long as include entry is
present.

Do not list any plans in the exclusions list that otherwise do not match the include pattern. Per this configuration file, all
plans under Bamboo Project 1 where the name starts with Quick will be processed, except those plans where name starts
with Quicksand. For example, plans Quicksilver and Quickstep will be processed, along with the explicitly specified plan
Bamboleo, but a plan Quicksand by Caro will be excluded.

Next, plans under Bamboo Project 2 will be processed as long as they match patterns on the inclusions list. You may
have a single include entry that consists of a comma-separated list of patterns, or multiple include entries if you prefer
to organize them so for the ease of reading when the list is too long. Finally, all plans under Bamboo Project 3 will be
processed since there are no explicit plan names and inclusion or exclusion patterns listed under it.

Appendix C - AgileCentral Project Specification
The connector reflects Bamboo Plan and Build objects by creating respective BuildDefinition and Build objects
in AgileCentral projects.

For more granularity, specify the destination AgileCentral project in AgileCentral_Project entry under Project section.
When this entry is omitted, as in the Project: Bamboo Project 2 section of the sample configuration file in Appendix A, the 
Rally destination project defaults to the Rally project specified in AgileCentral_DefaultBuildProject entry in Bamboo section
(in this example, Rally Top Project)

In Rally, project names do not have to be unique. The connector provides a mechanism of distinguishing projects with the
same name.

 1048



 Rally®

For example, if a fragment of a project tree looks like this:

   |__ Rally Project 1

        |__ Salamandra

        |__ Corral

            |__ Salamandra

We recommend that in order for the build definitions to be assigned to the intended projects in Rally the following syntax
should be used.

Example configuration file snippet:

       Bamboo:

           ...

           AgileCentral_DefaultBuildProject :  Rally Top Project

           Projects:

               - Project: Bamboo Project 1

                 AgileCentral_Project: Rally Project 1 // Salamandra

               - Project: Bamboo Project 1

                 AgileCentral_Project: Rally Project 1 // Corral // Salamandra

Appendix D - Protect Credentials
The connector configuration file has three settings for SecurityLevel entry in the Service section:

• Encrypt
• Encode
• Cleartext

The SecurityLevel entry in the configuration file is optional. The default setting is Encrypt.

Rally Build Connector for Bamboo Revision History

• 1.1.3-Master --- 20-Oct-2017
– Fixes:

• Updated timestamp function issue
• 1.1.2-master --- 8-August-2017

– Initial release - Supports Bamboo 6.0.3 and 6.1

Rally Database Connector (Microsoft SQL Server)
The Rally Database Connector (Microsoft SQL Server) retrieves Rally entity item information and writes to a CSV file or
database table. The Rally Database Connector is classified as a one-way and one-time mechanism. The connector runs
on Windows, Linux, or Mac.

Information in Rally is never altered. Information is only written to CSV files which are used to populate tables in your
target database. The Rally Database Connector consists of software that you run on your platform according to your
desired schedule. The configuration of the connector is expressed in a YAML text file. A configuration file can list one or
more Rally entities as long as each entity specified is a leaf entity in the Rally Data Model. Common entities are story,
defect, task, release, and user.

 1049



 Rally®

Database Requirements and Considerations

• You must already have a database installed, set up, and operational; this connector does not create a database. The
connector does not need to be installed or run on the same host on which your database resides. The database must
be on a host that is reachable on the network on which you install the connector. The user that you specify in the DB
section of the configuration must have permissions to create database tables.

• The connector emits CSV files for the purpose of bulk loading tables in your target database and saves them to CSV/
<database_name> directory. The database name is set in the DB section of the configuration file, in Name property.
Do not name your database default since CSV/default directory is reserved for CSV files created during CSV-
only mode.

• If you want the data retrieved and written to the CSV file to be loaded into your target database, you must have the DB
section in the configuration file with all required entries and any optional entries. By default, in this mode, the CSV files
will be removed once the database tables are loaded with the information in the CSV files. You can alter this behavior
by a setting in the DB section of the configuration file.

• By default, when the connector is run, after the CSV file for an entity is written and before the database table is
populated with that data, the connector will drop and recreate the target table. You can alter this behavior in the DB
section of the configuration file. Be aware that this has implications about the suitability and coherence of data in the
database tables.

• Most database implementations allow table aliasing. This aliasing capability can be used in a scenario where you
indicate that you want the database table names to be timestamped, so that each time you run the connector an
entirely new set of tables is created and populated with the Rally data retrieved by the connector. You employ the alias
(typically the name of the Rally entity, for example, Task) to refer to the database table Task_<timestamp_value>
with the most recent <timestamp_value>. This would allow you to have queries or reports using just the entity names.

• The connector requires Bulk Load permissions for the database. Consult your database Administrator for assistance
with this.

STRING Fields and Size Limits

It is important to understand a specific behavior of the Database Connector that is related to fields that are defined as a
STRING in Rally with a size limit. For example, the Name field has a size limit of 256 characters.

The Database Connector uses an intermediate CSV file that is then used with the target database bulk insert capability.
If the content of a field has characters that must be escaped for use in this CSV file, those characters are preceded by
an escape character (typically "\") or prefixed by one or more quote characters (typically a double quote "). If the content
of the field is close to the character size limit, the addition of these characters can cause the length of the field in the
CSV file to exceed the maximum size limit. Because the target database tables are constructed to match the definitions
and restrictions in Rally as closely as possible (including STRING field size limits), the addition of these characters can
cause the length of the field to exceed the field size limit in the destination database as well. In this scenario, when the
bulk insert to the destination database table is executed, the insert operation can fail due to a STRING field that is larger
than the destination table field size limit. This failure can occur even when the source content of the field in Rally does not
exceed field size limits.

There is no restriction on the character set of the field name value in Rally. However, the presence of some specific
characters in the field can contribute to bulk insert failures executed by the Database Connector. The most common
characters that contribute to this problem are backslashes and quotes. In practice, if the values that you have in STRING
fields are significantly shorter than the maximum character limits, you should not encounter this problem. Also, if your
organization does not use escape characters or quotes in the Name field in Rally, you should not encounter this problem.

If you do encounter insert failures due to STRING fields that contain content that is close to the size limit AND contain
escape or quote characters, you must identify and modify the values for these fields to successfully use the Database
Connector to bulk insert this data into your database. You can either reduce the size of these values or remove the
escape and quote characters before running the Database Connector with a configuration that includes these Rally items.

 1050



 Rally®

Software Requirements for the Database Connector (Microsoft SQL Server)

• Python 3.6 (the 64-bit version is recommended for Windows). Download the installer from www.python.org.
• Microsoft SQL Server (Express, Professional, Enterprise) 2016 or better (including the ODBC driver).

This guide includes:

• Install the Rally Database Connector (Microsoft SQL Server)
• Setup the Rally Database Connector (Microsoft SQL Server)
• Rally Database Connector (Microsoft SQL Server) Operation
• Troubleshooting the Rally Database Connector (Microsoft SQL Server)
• Appendix A - Rally Database Connector (Microsoft SQL Server) Configuration File
• Appendix B - Rally Project Specification for the Rally Database Connector (Microsoft SQL Server)
• Rally Database Connector (Microsoft SQL Server) Revision History

Install the Rally Database Connector (Microsoft SQL Server)

1. Download the connector by following the steps here.

2. Install the following Python packages:

• pip3.6 install requests==2.12.5
• pip3.6 install pyral==1.4.1
• pip3.6 install PyYAML==3.12
• pip3.6 install pyodbc==4.0.21
• pip3.6 install cryptography==2.9.2

3. Change your working directory ( cd ) to the directory where you want to install the connector.

4. Unzip dbeif-1.1.0.zip (using a suitable program that can unzip a .zip file).

5. Change your working directory ( cd ) to dbeif-1.1.0 .

6. Check the contents of the directory using ls -laR (or dir on Windows).

Sample contents:

dbeif     # dbeif module root directory

ac2db     # connector initiation script, this is what you will run

configs   # holds any config files used with this connector

  sample_mssql.yml     # a sample config to use as a base reference

log       # holds log files produced by running the connector

csv       # holds CSV files produced by running the connector (actually tab separated values)

README-SQLServer.txt   # this file

Setup the Rally Database Connector (Microsoft SQL Server)
Configure the Rally Database Connector software to write entity item information to a CSV file or database table.

• Start simple:
– Mention one or two entities to process.
– Mention a minimum number of fields of interest.
– Use the Query configuration item to limit the amount of Rally entity records to retrieve or write.
– Use the Service, Preview: True configuration setting to confirm successful operation and realistic record counts.

• Decide on the database table naming policy:

 1051

https://www.python.org/


 Rally®

– It is simplest to use the Rally entity names as the name of the database tables.
– You can specify that the table names will contain a common timestamp from each run, but this means you need to

ensure adequate capacity in your database. Unless you cull older tables, your database will add n new tables each
run, where n is the number of different Rally entities you specify in the configuration file.

• Modify incrementally:
– Once you have gotten a simple configuration to work, you can incrementally add entities, fields, selectors, and more

as needed to accomplish your intended objectives.

Review the log files while you are in the initial stages to see if there are any errors or warnings. Once you have confirmed
proper operation, you may want to set up automated monitoring of the log files.

1. Locate the configs subdirectory.

2. Copy the sample_mssql.yml file to a file named suitably for your environment that has a .yml suffix.
cp sample_mssql.yml acdata.yml

3. Edit your acdata.yml file. Change the sample values for credentials, Workspace, Project, Server, Name to values
that are relevant and valid for your environment.

See Appendix A for configuration file syntax.

Rally Database Connector (Microsoft SQL Server) Operation
You can run the Rally Database Connector software on your platform either manually or on a desired schedule.

Manual Operation

This software requires that the configuration file reside in the configs subdirectory. You specify the base name of the file
on the command line. Do not specify the subdirectory in the command line argument.

1. Using a terminal window or console, cd to the installation root directory.
C:\Applications\ACConnectors\dbconn\dbeif-1.1.0

2. Run: python3.6 ac2db acdata.yml

Scheduled Operation

Use cron , launchctl , or Windows Task Scheduler. Make sure the environment in effect when running this software is
appropriately set so that you can run:

python3.6 $DBEIF/ac2db your_config_file_name

$DBEIF is the reference to an environment variable containing the fully qualified path to the directory where the software
is installed. For example, if you unzipped the package in C:\Applications\ACConnectors\dbconn , then your
DBEIF would be set like this:

export DBEIF=C:\Applications\ACConnectors\dbconn\dbeif-1.1.0

CSV-Only Mode

If you want to export data to a CSV file and do not intend to use a database, you can choose to export data directly
to CSV files. In this situation, you do not have to install a database and you will omit the database section of the
configuration file. The connector writes a CSV file (whose name contains a timestamp) for each entity processed into a
CSV/default folder. If run in this manner, the connector does not ever remove the CSV file from the CSV subdirectory.

For example, in the configuration shown, the DB section is omitted since we are not interested in populating a database.
The Service section is optional: in the absence of Service section, its properties are set to default values.

 1052



 Rally®

AgileCentral:

        Server    :    rally1.rallydev.com

        APIKey    :    _abc123x

        Workspaces:

            - Workspace: Jazz

              Projects:

                  - Deep Cats

        Entities: HierarchicalRequirement,Defect

        Fetch: ObjectID,FormattedID,Name,ScheduleState,State,Project,Workspace

        ResolveUser: False

Retrieving Data from Rally Using the Database Connector (Microsoft SQL Server)

Setting the ResolveUser property to True in the configuration file's AgileCentral section will instruct the connector to
represent users by their _refObjectName, which in AgileCentral defaults to DisplayName as long as DisplayName is not
empty. If ResolveUser is set to True, the Owner column of a work item table will be populated by display names, such as
Wallace, Gromit. If ResolveUser is set to False, the Owner column of a work item table will be populated by ObjectIDs.
Note that DisplayName field on User object in AgileCentral does not have unique constraint: an AgileCentral subscription
may have two different users with the same DisplayName Wallace.

Instead of resolving a user to a DisplayName, you may use this approach:

1. Set ResolveUser to False
2. Export Rally users to Users table in your database
3. Export Rally work items to respective tables in the same database, such as Task, Story tables
4. Consider using a Join between two tables, such as Task and Users after the connector run completes

Here is an example of a JOIN for task and users table that combines columns from both tables:

SELECT task.objectid, task.formattedid,task.owner, users.username AS "owner username", users.officelocation AS

 "owner officelocation" FROM task, users WHERE task.owner=users.objectid;

 objectid   | formattedid |    owner    |    owner username           |  owner officelocation

------------+-------------+-------------+-----------------------------+----------------------

86253669480 | TA93985     | 32429145056 | gromit@windowcleaning.com   | 62 West Wallaby St

86253670264 | TA93986     | 32429145056 | gromit@windowcleaning.com   | 62 West Wallaby St

86253670816 | TA93987     | 32429145000 | wallace@windowcleaning.com  | 62 West Wallaby St

86253670827 | TA93999     | 32429147147 | shaunthesheep@farm.com      | Mossy Bottom Farm

• In the Rally WebServices API, a query on the Rally User entity will return that user only if a query criteria is not
supplied. In order to get more than the single user, the query (expressed either as a BaseQuery or a Selector for a
User entity) should not be empty. For example:
BaseQuery:(Disabled = False)

• While it is possible to use a single configuration file, in some scenarios it is more convenient to use multiple
configuration files for the same database. For example, you want to create Task, Story, Feature, and Users tables in
a single database. You may use one configuration file, but combining dissimilar objects in the single configuration file
makes it harder to come up with an Rally BaseQuery (which serves as a lowest common denominator) and may also
make the Fetch list unwieldy. You may also create two configuration files. One configuration file's Entities property
will list Task, Story and Feature, while the other configuration file's Entity will list User object only. Note that since
User is a reserved table name in the database, the connector creates Users table to avoid a conflict. This happens
automatically: the Entities property of the configuration file must still use a valid AgileCentral entity name, User.

• When listing the field names in the Fetch specification you must use the attribute names as they appear in the WSAPI
documentation. Mostly this means that non-custom fields must have the first letter capitalized. For attributes that are

 1053



 Rally®

compound words like ScheduleState, each word must be capitalized. Use the c_ prefix when specifying a custom field.
For example:
Fetch: ObjectID,FormattedID,ScheduleState,FoundInBuild,c_ExternalID

• There is no need to duplicate a field in the Fetch even if it appears in more than one entity. For example, if your entities
list include both HierarchicalRequirement and Defect, one mention of ScheduleState will suffice.

• The connector supports both standard and custom portfolio item types. Portfolio item entities must listed in the Entities
property of the configuration file's AgileCentral section without PortfolioItem/. In the example below, both a standard
portfolio item type Feature and a custom portfolio item type Strategy are included:
Entities: Feature, Strategy

The connector does not support ambiguous use cases when a custom portfolio item type's name matches a standard
entity name. The following example illustrates this: a regular entity in Rally → task and a similarly-named portfolio item
→ PortfolioItem/Task.
This constraint applies even if you reference an ambiguously-named item. If you have the situation where a custom
portfolio item type has the same name as a existing entity in the Rally system, you cannot use this connector.

Troubleshooting the Rally Database Connector (Microsoft SQL Server)
The connector always writes a log file name based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory. Within the configuration file, you can set the LogLevel which
determines the amount of logging information written to the log file.

When you set the LogLevel to DEBUG, you will get the full range of logging messages that can be very helpful in
pinpointing where a problem occurred and what information was being processed at the time of the anomaly.

Run the connector in Preview mode when setting things up for the first time. This allows you to get the connections to
Rally and your database to initialize and validate correctly without creating and populating database tables. This mode can
show you counts of records on a per Rally entity basis that would be written to the destination CSV file or the destination
database tables.

Known Issues
ERROR:

MSSQLDBConnection.populateFromCSV(255)
- <OperationalError>
Unable to populate

table Project, [42000]
[Microsoft][ODBC
Driver 13 for SQL

Server][SQL Server]You
do not have permission

to use the bulk load
statement. (4834)

(SQLExecDirectW)
</OperationalError>

ANSWER: This occurs when the userid for Microsoft SQL does not have permissions to bulk load data into
the SQL database. Please consult your SQL database administrator for help with this.

STRING Fields and Size Limits

The Database Connector uses an intermediate CSV file that is then used with the target database bulk insert capability.
If the content of a field has characters that must be escaped for use in this CSV file, those characters are preceded by
an escape character (typically "\") or prefixed by one or more quote characters (typically a double quote "). If the content
of the field is close to the character size limit, the addition of these characters can cause the length of the field in the
CSV file to exceed the maximum size limit. This can result in insert failures for STRING fields that contain content that

 1054



 Rally®

is close to the size limit AND contain escape or quote characters. For more information, see Rally Database Connector
(Microsoft SQL Server).

Appendix A - Rally Database Connector (Microsoft SQL Server) Configuration File
The Rally Database Connector uses a text file in the YAML format.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

• Use a text editor (not Microsoft Word or Google Doc) to edit the file
• Never use a tab character in the file; YAML does not allow or recognize tab characters
• Save the file in UTF-8 format
• Use a monospace font
• Be consistent with the number of spaces you use to indent (four spaces is a common indent level in YAML docs)
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # character and all characters to

the right are ignored in processing
• Keep the sections in the same order as is present in the sample.yml file
• Be aware that the colon character (:) is significant, it separates a key from the value
• Be aware that the dash character (-) is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character

For complete information on YAML syntax, consult the web page at https://yaml.org.

Here is a skeleton of the template_config.yml file.

DatabaseConnector:

    AgileCentral:

        ...  # several key value pairs are relevant for this section

    DB:

        ...  # several key value pairs are relevant for this section

    Service:

        ...  # a few key value pairs relevant for the overall operation of the connector appear in this

 section

        ...

The AgileCentral section specifies values to use to obtain a connection with Rally. The DB section specifies values to use
to obtain a connection with the target destination database and specifies the policies governing time stamping of tables,
whether dropping existing tables is allowed. The Service section controls some aspects of the connector behavior on an
overall basis.

Sample Configuration File

The following is a sample file of a configuration with all of the options available and explanatory notes.

 a sample file with some explanatory notations

 ---------------------------------------------

 DatabaseConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com      # R   if not provided, defaults to rally1.rallydev.com

 1055

https://yaml.org/


 Rally®

         Username      : henry5@hauslancaster.uk  # R   if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415           # R   if an API_Key entry is used, then this isn't needed

         API_Key       : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org       # O

         ProxyUser     : jessonbrone              # O

         ProxyPassword : S-e-c*r*E&T321!789       # O

         Workspace     : My Onliest Workspace     # R  name of the Rally Workspace from where entities are

 retrieved

         Project       : Bentenville Energy Plant # R  name of the Rally Project from where entity items are

 retrieved

         Entities      : Story,Task,Release       # R  list of Rally entities to be processed

         Fetch         : Name,FormattedID,State   # R  list of Rally entity fields to be retrieved

         # for a lengthy Fetch list you can use the following legal YAML syntax to put entries on multiple

 lines

         # Fetch: |

         #     ObjectID,FormattedID,Name,Owner,ScheduleState,State,

         #     Estimate, Release,Iteration

         BaseQuery     : CreationDate >= 2018-01-27  # O, base the query on attribute(s) that are common

 across all specified Entities

         Selectors     :                             # O, if Selectors is omitted, do not supply any

 subentries. If Selectors are present subentries are required

             - Story: ScheduleState < Accepted

             - Task:

                 - State != Done

                 - Owner = jjmmoon

                 - Estimate > 0

             - Release: (((ReleaseStartDate <= today) AND (ReleaseDate >= today)) AND (( Name contains

 "Regional") OR (Name contains "Experimental")))

         ResolveUser: True                        # O  when False, user's ObjectID is used; when True,

 _refObjectName (not UserName).

                                                  #    Consider joining an artifact (e.g. Story) table with

 users table to have more user columns.

     DB:             # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Type        : mssql                      # R  Only mssql is valid for MS SQL Server

         Server      : .\SQLEXPRESS               # R  your server instance identifier may be different

         Name        : mydbname                   # R  name of your database (must exist prior to running the

 connector)

                                                  #    note: no Port, Username or Password is required as this

                                                  #          connector runs on the host with the database

 using a TrustedConnection.

                                                  #          Pipe Protocol must be enabled in SQL Server

 Configuration Manager

         Driver      : ODBC Driver 13 for SQL Server   # R  this is commonly used driver is the only driver

 tested with this connector

                                                       #    this driver must be installed prior to running the

         SaveCSV     : True or False              # O  should the CSV files written be saved?  (for MSSQL the

 files is tab separated values). Default is False

         TimeStampFiles: True or False            # O  should the files be named per the entity processed

 appended

 1056



 Rally®

                                                  #    with a common timestamp for the run or just for the

 entity?

                                                  #    the default is False

                                                  #    See the section (xxx) for discussion about how

 timestamped files

                                                  #    can be used with database table aliases

         DropExistingTables: True or False        # O  Only relevant if TimeStampFiles is False, controls

 whether or not

                                                  #    any existing database table named for the entity being

 processed

                                                  #    can be dropped prior to processing which will create

 and populate

                                                  #    a table named per the entity.

                                                  #    default is False

     Service:

         Preview      : True   # When set to True, the connector shows the items that would be processed

                               # but doesn't actually fetch the complete data form AgileCentral, 

                               # just the record counts of qualifying items per entity and reports those

 statistics.

                               # When you have completed the setup and the connections with AgileCentral and

 your

                               # database successfully, this value should be set to True to enable full

 operation.

         LogLevel     : INFO   # This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is very

 verbose

Appendix B - Rally Project Specification for the Rally Database Connector (Microsoft SQL
Server)
In Rally, project names do not have to be unique. The connector provides a mechanism of distinguishing projects with the
same name.

For example, if a fragment of a project tree looks like this:

|__ Biospheric

    |__ Salamandra

    |__ Corral

        |__ Salamandra

Use a // sequence to separate the path components.

To specify the first occurrence of the Salamandra project you would have:

Biospheric // Salamandra

To specify the second occurrence of the Salamandra project you would have:

Biospheric // Corral // Salamandra

The connector by default does not scope to project's parent or children. A  /*  appended to a project name will scope
down to project's child projects, as in the example of a configuration file's AgileCentral section below:

AgileCentral:

    Server : rally1.rallydev.com

    APIKey : _abc123x

 1057



 Rally®

    Workspaces:

      - Workspace: Jazz

        Projects:

          - Deep Cats/*

    Entities : HierarchicalRequirement

    Fetch : ObjectID,FormattedID,Name,Project,Workspace

    ResolveUser: False

Some scenarios require only a workspace scope, and Project specification can be entirely omitted from the AgileCentral
section. Here is a configuration file example for exporting Rally user data to a rallyusers database:

AgileCentral:

        Server    :  rally1.rallydev.com

        APIKey    : _abc123x

        Workspaces:

            - Workspace: N

        BaseQuery:  (LastLoginDate > 2017-05-01)

        Fetch: ObjectID,UserName,LastLoginDate

        Entities: User

        ResolveUser: False

     DB:

        Type     : mssql

        Server   : .\SQLEXPRESS

        Name     : myrallyusersdatabase

        SaveCSV  :  True

        Populate : True

        DropExistingTables: True

        TimeStampTables   : False

Rally Database Connector (Microsoft SQL Server) Revision History

• 1.1.0-master --- 25-Jan-2018
– Enhancements:

• Supports MS SQL Server.
• 1.0.1-master --- 2-Dec-2017

– Fixes:
• Accounted for inconsistencies of spacing in the schema.

• 1.0.0-master -- 22-June-2017
– Fixes:

• Initial Release - works with Postgres DB.

Rally Database Connector (Postgres)
The Rally Database Connector (Postgres) retrieves Rally entity item information and writes to a CSV file or Postgres
database table. The Rally Database Connector is classified as a one-way and one-time mechanism. The connector runs
on Windows, Linux or Mac.

Information in Rally is never altered. Information is only written to CSV files which are used to populate tables in your
target database. The Rally Database Connector consists of software that you run on your platform according to your
desired schedule. The configuration of the connector is expressed in a YAML text file. A configuration file can list one or
more Rally entities as long as each entity specified is a leaf entity in the Rally Data Model. Common entities are story,

 1058



 Rally®

defect, task, release, and user. See the Help documentation, in particular the sub-document concerning the WSAPI, for
more information on Rally entities and the data model.

Database Requirements and Considerations

• You must already have a database installed, set up, and operational; this connector does not create a database.
The connector does not need to be installed or run on the same host on which your database resides. The database
must be on a host that is reachable on the network on which you install the connector. The user you specify in the DB
section of the configuration must have permissions to create database tables.

• The connector emits CSV files for the purpose of bulk loading tables in your target database and saves them to CSV/
<database_name> directory. The database name is set in the DB section of the configuration file, in the Name
property. Do not name your database default since the CSV/default directory is reserved for CSV files created
during CSV-only mode.

• If you want the data retrieved and written to the CSV file to be loaded into your target database, you must have the DB
section in the configuration file with all required entries and any optional entries. By default, in this mode the CSV files
will be removed once the database tables are loaded with the information in the CSV files. You can alter this behavior
by a setting in the DB section of the configuration file.

• By default, when the connector is run, after the CSV file for an entity is written and before the database table is
populated with that data, the connector will drop and recreate the target table. You can alter this behavior in the DB
section of the configuration file. Be aware that this has implications about the suitability and coherence of data in the
database tables.

• Most database implementations allow table aliasing. This aliasing capability can be used in a scenario where you
indicate that you want the database table names to be timestamped, so that each time you run the connector an
entirely new set of tables is created and populated with the Rally data retrieved by the connector. You employ the alias
(typically the name of the Rally entity, for example, Task) to refer to the database table Task_<timestamp_value>
with the most recent <timestamp_value>. This would allow you to have queries or reports using just the entity names.

• The connector requires Bulk Insert permissions for the database. Consult your database Administrator for assistance
with this.

Software Requirements for the Rally Database Connector (Postgres)

• Installed Postgres database.
• Python 3.5 or 3.6 (the 64-bit version is recommended for Windows). Download the installer from www.python.org.

This guide includes:

• Install the Rally Database Connector (Postgres)
• Setup the Rally Database Connector (Postgres)
• Rally Database Connector (Postgres) Operation
• Troubleshooting the Rally Database Connector (Postgres)
• Appendix A - Rally Database Connector (Postgres) Configuration File
• Appendix B - Rally Project Specification for the Rally Database Connector (Postgres)
• Appendix C - Postgres Database User Privileges
• Rally Database Connector (Postgres) Revision History

 1059

https://www.python.org/


 Rally®

Install the Rally Database Connector (Postgres)

1. Download the connector by following the steps here.

2. Install the following Python packages:

• pip3.6 install requests==2.12.5
• pip3.6 install pyral==1.4.1
• pip3.6 install PyYAML==3.12
• pip3.6 install psycopg2==2.6.2
• pip3.6 install cryptography==2.9.2

3. Change your working directory ( cd ) to the directory where you want to install the connector.

4. Unzip dbeif-1.1.0.zip (using a suitable program that can unzip a .zip file).

5. Change your working directory ( cd ) to dbeif-1.1.0 .

6. Check the contents of the directory using ls -laR (or dir on Windows).

Sample contents:

dbeif     # dbeif module root directory

ac2db     # connector initiation script, this is what you will run

configs   # holds any config files used with this connector

  sample_postgres.yml     # a sample config to use as a base reference

log       # holds log files produced by running the connector

csv       # holds CSV files produced by running the connector (actually tab separated values)

README-Postgres.txt   # this file

Setup the Rally Database Connector (Postgres)
Configure the Rally Database Connector software to write entity item information to a CSV file or Postgres database table.

• Start simple:
– Mention one or two entities to process.
– Mention a minimum number of fields of interest.
– Use the Query configuration item to limit the amount of Rally entity records to retrieve or write.
– Use the Service, Preview: True configuration setting to confirm successful operation and realistic record counts.

• Decide on the database table naming policy:
– It is simplest to use the Rally entity names as the name of the database tables.
– You can specify that the table names will contain a common timestamp from each run, but this means you need to

ensure adequate capacity in your database. Unless you cull older tables, your database will add n new tables each
run, where n is the number of different Rally entities you specify in the configuration file.

• Modify incrementally:
– Once you have gotten a simple configuration to work, you can incrementally add entities, fields, selectors, and more

as needed to accomplish your intended objectives.

Review the log files while you are in the initial stages to see if there are any errors or warnings. Once you have confirmed
proper operation, you may want to set up automated monitoring of the log files.

1. Locate the configs subdirectory.

2. Copy the sample_postgres.yml file to a file named suitably for your environment that has a .yml suffix.
cp sample_postgres.yml product_x.yml

 1060



 Rally®

3. Edit your product_x.yml file. Change the sample values for credentials, Workspace, Project, Server, Name to
values that are relevant and valid for your environment.

See Appendix A for configuration file syntax.

Rally Database Connector (Postgres) Operation
You can run the Rally Database Connector (Postgres) software on your platform either manually or on a desired schedule.

This software requires that the configuration file reside in the configs subdirectory. You specify the base name of the file
on the command line. Do not specify the subdirectory in the command line argument.

Manual Operation

1. Using a terminal window or console, cd to the installation root directory.
C:\Applications\ACConnectors\dbconn\dbeif-1.1.0

2. Run: python3.6 ac2db product_x.yml

Scheduled Operation

Use cron , launchctl , or Windows Task Scheduler.

Make sure the environment in effect when running this software is appropriately set so that you can run:

python3.6 $DBEIF/ac2db_connector your_config_file_name

$DBEIF is the reference to an environment variable containing the fully qualified path to the directory where the software
is installed. For example, if you unzipped the package in /opt/local/sw , then your DBEIF would be set like this:

export DBEIF=/opt/local/sw/dbeif-1.1.0

CSV-Only Mode

If you want to export data to a CSV file and do not intend to use a database, you can choose to export data directly to
CSV files. In this situation, you do not have to install a database and you will omit the DB section of the configuration
file. The connector writes a CSV file (whose name contains a timestamp) for each entity processed into a CSV/default
folder. If run in this manner, the connector does not ever remove the CSV file from the CSV subdirectory.

For example, in the configuration shown the DB section is omitted since we are not interested in populating a database.
The Service section is optional: in the absence of Service section, its properties are set to default values.

AgileCentral:

        Server    :    rally1.rallydev.com

        APIKey    :    _abc123x

        Workspaces:

            - Workspace: Jazz

              Projects:

                  - Deep Cats

        Entities: HierarchicalRequirement,Defect

        Fetch: ObjectID,FormattedID,Name,ScheduleState,State,Project,Workspace

        ResolveUser: False

Database Tables

There are some database table settings used to configure how you store data.

Time Stamp Files Postgres only - If you want to export data to a CSV file and do not intend to use a database, you can
choose to export data to CSV files. In this situation, you do not have to install a database and you will omit

 1061



 Rally®

the database section of the configuration file. The connector writes a CSV file (whose name contains a
timestamp) for each entity processed into a CSV/default folder. If run in this manner, the connector
does not ever remove the CSV file from the CSV subdirectory.

For example: Should the files be named per the entity processed appended with a common timestamp for
the run or just for the entity?

TimeStampFiles: True or False

Drop Existing Tables Controls whether or not any existing database table named for the entity being processed can be dropped
prior to processing which will create and populate a table named per the entity. (Postgres only - Only
relevant if TimeStampFiles is False)

DropExistingTables: True or False

Retrieving Data from Rally Using the Database Connector (Postgres)

There is additional configuration you can perform to retrieve data from Rally.

Setting the ResolveUser property to True in the configuration file's AgileCentral section will instruct the connector to
represent users by their _refObjectName , which in Rally defaults to DisplayName as long as DisplayName is not
empty. If ResolveUser is set to True, the Owner column of a work item table will be populated by display names, such as
Wallace, Gromit. If ResolveUser is set to False, the Owner column of a work item table will be populated by ObjectIDs.
Note that DisplayName field on User object in AgileCentral does not have unique constraint: a Rally subscription may
have two different users with the same DisplayName Wallace.

Instead of resolving a user to a DisplayName, you may use this approach:

1. Set ResolveUser to False.
2. Export Rally users to Users table in your database.
3. Export Rally work items to respective tables in the same database, such as Task or Story tables.
4. Consider using a Join between two tables, such as Task and Users after the connector run completes.

Here is an example of a JOIN for task and users table that combines columns from both tables:

SELECT task.objectid, task.formattedid,task.owner, users.username AS "owner username", users.officelocation AS

 "owner officelocation" FROM task, users WHERE task.owner=users.objectid;

 objectid   | formattedid |    owner    |    owner username           |  owner officelocation

------------+-------------+-------------+-----------------------------+----------------------

86253669480 | TA93985     | 32429145056 | gromit@windowcleaning.com   | 62 West Wallaby St

86253670264 | TA93986     | 32429145056 | gromit@windowcleaning.com   | 62 West Wallaby St

86253670816 | TA93987     | 32429145000 | wallace@windowcleaning.com  | 62 West Wallaby St

86253670827 | TA93999     | 32429147147 | shaunthesheep@farm.com      | Mossy Bottom Farm

• In Rally WebServices API, a query on the Rally User entity will return that user only if a query criteria is not supplied.
In order to get more than the single user, the query (expressed either as a BaseQuery or a Selector for a User entity)
should not be empty.
BaseQuery: ((Disabled = True) OR (Disabled != True))

• While it is possible to use a single configuration file, in some scenarios it is more convenient to use multiple
configuration files for the same database. For example, you want to create Task, Story, Feature, and Users tables in
a single database. You may use one configuration file, but combining dissimilar objects in the single configuration file
makes it harder to come up with a Rally BaseQuery (which serves as a lowest common denominator) and may also
make the Fetch list unwieldy. You may also create two configuration files. One configuration file's Entities property
will list Task, Story and Feature, while the other configuration file's Entity will list User object only. Note that since User

 1062



 Rally®

is a reserved table name in Postgres database, the connector creates Users table to avoid a conflict. This happens
automatically: the Entities property of the configuration file must still use a valid AgileCentral entity name, User.

• When listing the field names in the Fetch specification you must use the attribute names as they appear in the Rally
WSAPI documentation. Mostly this means that non-custom fields must have the first letter capitalized. For attributes
that are compound words like ScheduleState, each word must be capitalized. Use the c_ prefix when specifying a
custom field. For example:
Fetch: ObjectID,FormattedID,ScheduleState,FoundInBuild,c_ExternalID

• There is no need to duplicate a field in the Fetch even if it appears in more than one entity. For example, if your entities
list includes both HierarchicalRequirement and Defect, one mention of ScheduleState will suffice.

• The connector supports both standard and custom portfolio item types. Portfolio item entities must listed in the
Entities property of the configuration file's AgileCentral section without PortfolioItem/ . In the example below,
both a standard portfolio item type Feature and a custom portfolio item type Strategy are included:
Entities: Feature, Strategy

The connector does not support ambiguous use cases when a custom portfolio item type's name matches a standard
entity name. The following example illustrates this: a regular entity in Rally → task and a similarly-named portfolio item
→ PortfolioItem/Task.
This constraint applies even if you reference an ambiguously-named item. If you have the situation where a custom
portfolio item type has the same name as an existing entity in the Rally system, you cannot use this connector.

Retrieving Revision History

It is not possible to do a direct query to the RevisionHistory table (as can be seen in the API, there is only a read
option, not a query option), so you must get the information using the Revision table.

In order to do this, it would take creating two database tables and then performing a join on those tables. One table for
Story, Defect, and so on, and one for Revision. To populate the Revision table, query by CreationDate and do this in
small increments so the API query will not time out.

DatabaseConnector:

    Entities : HierarchicalRequirement 

    Fetch : ObjectID,Name,RevisionHistory,FormattedID 

    BaseQuery : (FormattedID = US2) 

        ...

Here is an example query for Story:

DatabaseConnector:

    Entities : Revision 

    Fetch : ObjectID,Description,RevisionNumber,RevisionHistory 

    BaseQuery : (CreationDate > 2018-12-02T19:08:42.035Z) 

        ...

Troubleshooting the Rally Database Connector (Postgres)
The connector always writes a log file name based on the configuration file name. The log file is written into the log
subdirectory under the base installation directory. In the configuration file you can set the LogLevel which determines the
amount of logging information written to the log file. When you set the LogLevel to DEBUG, you will get the full range of
logging messages that can be helpful in pinpointing where a problem occurred and what information was being processed
at the time of the anomaly.

Run the connector in Preview mode when setting things up for the first time. This allows you to get the connections to
Rally and your database to initialize and validate correctly without creating and populating database tables. This mode can
show you counts of records on a per Rally entity basis that would be written to the destination CSV file or the destination
database tables.

 1063



 Rally®

Known Issues
Error when field is

listed twice in the fetch
Solution: Remove one of the STATE fields from the fetch.

        .....

          DEBUG: AgileCentralConnection.createFieldCategories -

 ACConn.createFieldCategories has pi_state_fields: [] and field_categories['pi_state']

 of: [] 

          ERROR: DBConnector.run - RallyResponseError in DBConnector.run processing

 entity: Story -- Unable to retrieve 10 chunks of data 

        .....

Error using an APIKey
with read only access

Solution: Use an APIKey with full access.
       .....  

FATAL: AgileCentralConnection.connect(128) - <ConfigurationError> Unable to connect

 to Rally at rally1.rallydev.com: 403 b'<html>\n<head>\n<meta http-equiv=Content-Type

 content=text/html; charset=UTF-8'

        .....

EnvironmentalKey
ident_vector

not valid error

Solution: Re-enter the userID and password for both DB and Rally.
       .....

          FATAL: SecurityManager.decrypt(51) - <ConfigurationError> EnvironmentalKey

 ident_vector not valid for decryption target value.  Reset all credential values to

 clear text in config file!

            .....

Appendix A - Rally Database Connector (Postgres) Configuration File

The Rally Database Connector uses a text file in the YAML format.

For brevity, this document mentions several of the most relevant syntax items and covers the three sections of a valid
YAML configuration that can be used with the connector.

• Use a text editor (not Microsoft Word or Google Doc) to edit the file
• Never use a tab character in the file; YAML does not allow or recognize tab characters
• Save the file in UTF-8 format
• Use a monospace font
• Be consistent with the number of spaces you use to indent (four spaces is a common indent level in YAML docs)
• On a line, the first occurrence of a non-quoted # character indicates a comment, the # character and all characters to

the right are ignored in processing
• Keep the sections in the same order as is present in the sample.yml file
• Be aware that the colon character (:) is significant, it separates a key from the value
• Be aware that the dash character (-) is significant, it denotes the start of a list which may have one or more key value

pairs that constitute the list item
• You usually do not have to quote values if they have spaces in them; you will have to quote the value if it contains an

embedded # character

For complete information on YAML syntax, consult the web page at https://yaml.org.

Here is a skeleton of the template_config.yml file.

DatabaseConnector:

    AgileCentral:

        ...  # several key value pairs are relevant for this section

    DB:

 1064

https://yaml.org


 Rally®

        ...  # several key value pairs are relevant for this section

    Service:

        ...  # a few key value pairs relevant for the overall operation of the connector appear in this

 section

        ...

The AgileCentral section specifies values to use to obtain a connection with Rally. The DB section specifies values to use
to obtain a connection with the target destination database and specifies the policies governing time stamping of tables,
whether dropping existing tables is allowed. The Service section controls some aspects of the connector behavior on an
overall basis.

Sample Configuration File

The following is a sample file of a configuration with all of the options available and explanatory notes.

 a sample file with some explanatory notations

 ---------------------------------------------

 DatabaseConnector:

     AgileCentral:   # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Server:       : rally1.rallydev.com      # R   if not provided, defaults to rally1.rallydev.com

         Username      : henry5@hauslancaster.uk  # R   if an API_Key entry is used, then this isn't needed

         Password      : 2MuchAngst1415           # R   if an API_Key entry is used, then this isn't needed

         API_Key       : _zzzyyyy234twqwtqwet89y4t38g38y0  # O can use this instead of a Username and Password

         ProxyServer   : wu-tank.smooth.org       # O

         ProxyUser     : jessonbrone              # O

         ProxyPassword : S-e-c*r*E&T321!789       # O

         Workspace     : My Onliest Workspace     # R  name of the Rally Workspace from where entities are

 retrieved

         Project       : Bentenville Energy Plant # R  name of the Rally Project from where entity items are

 retrieved

         Entities      : Story,Task,Release       # R  list of Rally entities to be processed

         Fetch         : Name,FormattedID,State   # R  list of Rally entity fields to be retrieved

         # for a lengthy Fetch list you can use the following legal YAML syntax to put entries on multiple

 lines

         # Fetch: |

         #     ObjectID,FormattedID,Name,Owner,ScheduleState,State,

         #     Estimate, Release,Iteration

         BaseQuery     : CreationDate >= 2017-02-22  # O, base the query on attribute(s) that are common

 across all specified Entities

         Selectors     :                             # O, if Selectors is omitted, do not supply any

 subentries. If Selectors are present subentries are required

             - Story: ScheduleState < Accepted

             - Task:

                 - State != Done

                 - Owner = jjmmoon

                 - Estimate > 0

             - Release: (((ReleaseStartDate <= today) AND (ReleaseDate >= today)) AND (( Name contains

 "Regional") OR (Name contains "Experimental")))

         ResolveUser: True                        # O  when False, user's ObjectID is used; when True,

 _refObjectName (not UserName).

 1065



 Rally®

                                                  #    Consider joining an artifact (e.g. Story) table with

 users table to have more user columns.

     DB:             # all of the possible key value pairs, not all must be used, see the right-hand side

                     # comments for designation as either 'R' required or 'O' optional

         Type        : Postgres                   # R  Only Postgres supported now.  Oracle,SQLServer,MySQL in

 the future...

         Server      : postgres1.mydomain.com     # R  if not provided, defaults to the host the connector is

 running on

         Port        : 5432                       # R  if not provided, defaults to 5432

         User        : validuser                  # R  provide a valid user name to access the database

                                                  #    this user must have rights to create/drop the target

 tables

         Password    : somepasswd                 # R  provide a valid password to access the database

         SaveCSV     : True or False              # O  should the CSV files written be saved?  default is

 False

         TimeStampFiles: True or False            # O  should the files be named per the entity processed

 appended

                                                  #    with a common timestamp for the run or just for the

 entity?

                                                  #    the default is False

                                                  #    See the section (xxx) for discussion about how

 timestamped files

                                                  #    can be used with database table aliases

         DropExistingTables: True or False        # O  Only relevant if TimeStampFiles is False, controls

 whether or not

                                                  #    any existing database table named for the entity being

 processed

                                                  #    can be dropped prior to processing which will create

 and populate

                                                  #    a table named per the entity.

                                                  #    default is False

     Service:

         Preview      : True   # When set to True, the connector shows the items that would be processed

                               # but doesn't actually fetch the complete data form AgileCentral, 

                               # just the record counts of qualifying items per entity and reports those

 statistics.

                               # When you have completed the setup and the connections with Rally and your

                               # database successfully, this value should be set to True to enable full

 operation.

         LogLevel     : INFO   # This is the default value, can also be DEBUG, WARN, ERROR. DEBUG is very

 verbose

Appendix B - Rally Project Specification for the Rally Database Connector (Postgres)
In Rally, project names do not have to be unique. The connector provides a mechanism of distinguishing projects with the
same name.

For example, if a fragment of a project tree looks like this:

|__ Biospheric

    |__ Salamandra

    |__ Corral

 1066



 Rally®

        |__ Salamandra

Use a // sequence to separate the path components.

To specify the first occurrence of the Salamandra project you would have:

Biospheric // Salamandra

To specify the second occurrence of the Salamandra project you would have:

Biospheric // Corral // Salamandra

The connector by default does not scope to project's parent or children. A /* appended to a project name will scope down
to project's child projects, as in the example of a configuration file's AgileCentral section below:

AgileCentral: 

       Server  : rally1.rallydev.com 

       APIKey  : _abc123x 

       Workspaces: 

           - Workspace: Jazz 

             Projects: 

                 - Deep Cats/* 

      Entities : HierarchicalRequirement 

      Fetch    : ObjectID,FormattedID,Name,Project,Workspace 

      ResolveUser: False

Some scenarios require only a workspace scope, and Project specification can be entirely omitted from the AgileCentral
section. Here is a config file example for exporting AgileCentral user data to a rallyusers database:

     AgileCentral:

        Server    :  rally1.rallydev.com

        APIKey    : _abc123x

        Workspaces:

            - Workspace: N

        BaseQuery:  (LastLoginDate > 2017-05-01)

        Fetch: ObjectID,UserName,LastLoginDate

        Entities: User

        ResolveUser: False

     DB:

        Type: Postgres

        Name: rallyusers

        User      : postgres

        Password  : postgres

        Server: 127.0.0.1

        Port: 5432

        SaveCSV:  True

        Populate: True

        DropExistingTables: True

        TimeStampTables: False

Appendix C - Postgres Database User Privileges
If the Superuser property of DB section is set to True, the connector will execute an SQL COPY command to bulk
copy csv rows to the database. Set Superuser property to False if you receive the following error: must be superuser
to COPY to or from a file.

 1067



 Rally®

Hint: Anyone can COPY to stdout or from stdin. Psql's \copy command also works for anyone. The connector will
attempt to bulk copy using psql's \copy command.

Rally Database Connector (Postgres) Revision History

• 1.1.0-master --- 25-Jan-2018
– Enhancements:

• Supports MS SQL Server.
• 1.0.1-master --- 2-Dec-2017

– Fixes:
• Accounted for inconsistencies of spacing in the schema.

• 1.0.0-master -- 22-June-2017
– Fixes:

• Initial Release - works with Postgres DB.

Rally Integration with ServiceNow DevOps (Third-Party Integration)
This integration connects Rally to ServiceNow DevOps to incorporate Rally project data into the DevOps Insights and
Change Acceleration features.

Key features of the integration:

• Expose projects, portfolio items, user stories, defects, and releases
• Import projects
• Configure webhooks in Rally to import new work items and plan versions in ServiceNow in real-time as they are

created or updated in Rally

Learn more.

Salesforce (OpsHub)
Salesforce is an on-demand customer relationship management (CRM) system service to help companies with global
customer communication. Salesforce helps companies maintain lists of cases, problems logged by their customers,
manage customer accounts, solutions for customer issues, opportunities details, and giving companies a complete
package of customer relationship solutions.

OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Salesforce and Rally in
application development organizations to effectively communicate and collaborate with each other, thus increasing overall
team agility, productivity and efficiency.

OIM supports the synchronization of cases, opportunities, and all other objects available from Salesforce to all the
possible entities existing in Rally such as defect, user story, test case, test set, test case result (only write support), and
task.

 1068

https://store.servicenow.com/sn_appstore_store.do#!/store/application/bd73bfafdb9618904292141b13961945/1.0.2
https://www.opshub.com/integrations/rally-software-integration


 Rally®

• Supports unidirectional and bidirectional synchronization between Salesforce and Rally for all supported entities.
• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between Salesforce and Rally.
• Maintains history of both systems. If Salesforce or Rally becomes unavailable, it will reflect all transactions that

occurred during that time once the system is operational again.
• Supports the application of changes to target system in transactions blocks from the source system.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally to Salesforce Demo video.

SD Elements (Third-Party Integration)
SD Elements is your guide for secure software development. SD Elements generates customized, up-to-date
requirements that integrate with Rally, allowing your development team to build security in with every project.

SD Elements integrates with Rally ALM, so users can easily import security requirements into Rally stories. When tasks
are marked as complete, the integration mechanism marks the corresponding task as complete in SD Elements. This
allows developers to consume SD Elements content from within Rally while security teams can monitor progress of
security requirements from within SD Elements.

Cost: Contact SD Elements for pricing options.

Serena Business Manager (OpsHub)
OpsHub Integration Manager (OIM) allows the cross-functional teams using disparate tools like Serena Business Manager
and Rally in application development organizations to effectively communicate and collaborate with each other, thus
increasing overall team agility, productivity, and efficiency.

 1069

https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_Salesforce.mp4
https://www.securitycompass.com/sdelements/integrations/rally


 Rally®

OpsHub Integration Manager supports the synchronization of all custom, primary item entities available in Serena
Business Manager to all the possible entities existing in Rally such as defects, user stories, test cases, test sets, test case
result (only write support), and task.

• Supports uni-directional and bi-directional synchronization between Serena Business Manager and Rally for all
supported entities, which includes the field data, attachments, comments, and issue-relationship traceability.

• Provides deployment options to fit the needs of business whether On-Premises or on the customer cloud.
• Fully manageable and functional from the web-based administration tool, including defining entities for synchronization

between Serena Business Manager and Rally.
• Maintains history of both systems. If any of Serena Business Manager or Rally becomes unavailable, it will reflect all

transactions that occurred during that time once the system is operational again.
• Provides with templates and the ability to define custom mapping between ALM systems to support mapping of fields

and linkages.
• Supports a number of replication models to support development organization such as master-slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Watch the OpsHub Integration Manager Rally and Serena Business Manager (SBM) Demo video.

ServiceNow (OpsHub)
OpsHub Integration Manager (OIM) enables smooth collaboration between teams and forms a virtual bridge of
communication between teams. OpsHub provides seamless integration between ServiceNow and Rally enabling
organization to have smooth flow of operations between different teams and achieve goals and efficiency.

OpsHub supports the synchronization of incidents, changes, problems, folders, and every item from ServiceNow which
inherits task and knowledge base entities to all the supported entities in Rally such as defect, user story, test case, test
set, test case result (only write support), and task. The item synchronization includes the bidirectional synchronization of
field data, attachments, comments, and linkage between items.

• Supports unidirectional and bidirectional synchronization between ServiceNow and Rally for all supported entities.
• The synchronization includes the field data, attachments, comments, and issue-relationship traceability.
• Provides deployment options to fit the needs of business, whether On-Premises or on Customer Cloud.
• Fully manageable and functional through the web-based administration tool including defining entities for

synchronization between ServiceNow and Rally.
• Maintains history of both systems. If ServiceNow or Rally becomes unavailable, it will reflect all transactions that

occurred during that time once the system is operational again.
• Provides with templates and ability to define custom mapping between ALM systems to support mapping of fields and

linkages.
• Supports number of replication models to support development organization such as master/slave, partitioned

ownership, dynamic ownership, peer-to-peer, and custom.
• Proactive conflict management with support for automated conflict resolution.

Silk Central Test Manager (Third-Party Integration)
Micro Focus has an integration between Rally and Silk Central Test Manager that allows Rally customers to see Rally
stories within an iteration and the related tests in Silk Central Test Manager.

Select a Rally Test Case link to navigate to the full test case in Silk Central Test Manager.

Contact your Micro Focus sales representative for information on pricing and installation.

 1070

https://www.opshub.com/integrations
https://www.opshub.com/ohftp/Resources/RallyPartnershipVideos/Rally_SBM_Demo_Video.mp4
https://www.opshub.com/servicenow-integration/servicenow-rally-software-integration


 Rally®

Subversion to Rally
The Subversion to Rally connector comprises code that skims the centralized master Subversion repository for commits. It
extracts information from the commit messages, and posts changeset and change information to a Rally SCMRepository
according to specifications in a configuration file. The connector must be installed on only one computer for your company.

You can include Formatted IDs (example: US42) in commit messages. The connector processes all commits for
configured repositories and pushes information about those commits into changeset and change objects in Rally. If a valid
Formatted ID is found in a commit message, the changeset created by the connector is associated with that defect, story,
or task in Rally.

Example workflow: You are assigned DE42 in Rally. When you make a code change and commit, include a message in
the commit like Found an issue with line breaks—fixed DE42. The connector finds that commit message and links the
information about the commit to the defect in Rally.

See the Rally VCS Connector for Subversion Installation and User Guide for information on installing, configuring, and
using the connector. This includes instructions for installing on a Linux system.

Cost: Free

Rally VCS Connector for Subversion Installation and User Guide
The Subversion to Rally Connector helps you show traceability of code changes to artifacts in Rally.

NOTE
This documentation applies to the latest polling method version of the Subversion connector.

The Subversion to Rally connector comprises code that skims a centralized master Subversion repository for recent
commits. It extracts information from the commit messages, and posts changeset / change information to a Rally
SCMRepository, according to specifications in a configuration file. While it is possible to have the connector installed on
only one computer for your company, you can also choose to install the connector on multiple computers depending on
how your organization is structured and the number of repositories that need to be reflected in Rally.

When developers put FormattedIDs, for example US42, in their commit messages, the connector processes all commits
for configured repositories and pushes information about those commits into changeset objects and change objects in
Rally. If a valid FormattedID is found in a commit message, the changeset created by the connector is associated with that
defect, story, or task in Rally.

Example:

"Fixed DE1987 by changing preamble paragraph 3"

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally defect DE1987 would display as Fixed. Note this
message is case-sensitive, fixed is not the same as Fixed. The yml file will need UpdateArtifactState value set to True to
process a state change.

The commit message may contain references to more than one artifact. For example, this is known to work:

"Test commit msg with multiple artifacts Fixed DE9 Closed DE8"

A typical workflow would be for one of your team members to be assigned DE42 in Rally. When they make a code change
and commit it. They would include text in the commit message like "Found an issue with line breaks - fixed DE42". When
the connector runs again, it locates that commit message and links the information about the commit to Rally defect DE42.

This installation guide includes the following:

 1071

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Changeset
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#Change


 Rally®

• Supported Platforms for the Rally VCS Connector for Subversion
• Prerequisites for the Rally VCS Connector for Subversion
• Set Up Rally
• Set Up the Rally VCS Connector for Subversion
• Install the Rally VCS Connector for Subversion
• Run the Rally VCS Connector for Subversion
• Extend the Rally VCS Connector for Subversion
• Install the Rally VCS Connector for Subversion on Linux
• Troubleshoot the Rally VCS Connector for Subversion
• Rally VCS Connector for Subversion Revision History

Supported Platforms for the VCS Connector for Subversion

The connector supports running in a variety of platforms. This software is written in Ruby and has been tested and
certified using Ruby 2.2.6. It will not work with any earlier version of Ruby. We expect the connector to work with
subsequent stable versions of Ruby. If this software is for use on a Linux, Unix, or macOS system, it must be installed
subsequent to installing the http client and rally_api gems.

The Rally connector for Subversion runs as a Ruby script on a machine inside your network.

Prerequisites for the VCS Connector for Subversion

• Ruby 2.2.6 - This is the supported version.
The connector may not be compatible with Ruby 2.3.x and 2.4.x, we have not certified this connector with those
versions, only 2.2.6 is certified. You may want to investigate how to use the Ruby version manager software (rvm) that
makes installation and use of specific versions of Ruby simpler.

• Ruby Development Kit for Ruby 2.0 to 2.3 (** Windows only **)
a. Download the Ruby DevKit: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
b. Add path to the devkit’s bin directory to environment Path variable.
c. cd to the Ruby DevKit root directory.
d. Run command: ruby dk.rb init
e. Run command: ruby dk.rb install

• Choose a machine which will be used to run the connector
• If the connector machine is a different machine than the Subversion server, note the Subversion server's address and

name
• Gather the paths to the centralized master repositories from which you will gather information
• Select the Rally workspace into which the changeset/change information will be posted

Set Up Rally for the Subversion Connector

NOTE
We strongly recommend creating the connector user with Workspace Administrator permissions. This will allow
the connector user access to any new projects that may be added to the Workspace in the future (a user with
Editor permissions only will not automatically be added to new projects). If the Connector User does not have
access to projects, changesets will be created in the SCM Repository only and will be orphaned (not attached to
any artifacts).

 1072

https://github.com/oneclick/rubyinstaller/releases/download/devkit-4.7.2/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe


 Rally®

Verify that your target WorkspaceConfiguration object has BuildandChangesetEnabled set to true. Your Rally workspace
administrator needs to enable this for your target workspace. If it is not enabled, the connector will work, but you will not
be able to see any of the changeset/change information that is associated with your Rally work items (story, defect, task).

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select your target workspace.

4. Select Actions, Edit.

5. Select the Enable Build and Changeset check box.

6. Select Save & Close.

Set Up the Subversion Connector

The Subversion connector is controlled by three different files:

• Repository Configuration File
• User Mapping File
• Repository Time File

Repository Configuration File

For each Subversion repository that you want to have reflected in Rally, you will need a connector configuration file which
will be located in the configs subdirectory of the connector software you just installed.

This configuration file must be in YAML format. A connector configuration file contains information on how the connector
operates in terms of how to interact with Rally and the identity and location of the Subversion repository. There is an
example configuration file shipped with the product named configs/sample.yml . Make a copy of it and use it for
your repository. We suggest naming your YAML configuration file similar to your repository name. For example, if your
repository name is My-Svn-Repo, then name your YAML configuration file My-Svn-Repo.yml (for simplicity). Edit your
new repository configuration file and modify the values to fit your environment.

Warnings about YAML syntax:

• The tab character is not a valid YAML character.
• Enclose special characters in quotes, such as if the password has exclamation marks ("!") or hashes ("#").
• The comment character ("#") must be separated from any previous element by at least one space. For example, this

string: ".../dir/dir2#this is a comment" is invalid.

RepositoryName

The conventional practice is to name the Rally RepositoryName the same as your Subversion repository. The value you
provide as the RepositoryName value is given to an SCMRepository instance in Rally. The Rally RepositoryName can be
different from the Subversion repository name, if so desired. Within the Rally section of your YAML configuration file, the
value for RepositoryName is the name of the Rally SCMRepository to which changeset/change items will be associated. If
this SCMRepository container does not exist, the connector will create it in the user's target workspace.

 1073

https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#WorkspaceConfiguration
https://en.wikipedia.org/wiki/Yaml
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository
https://rally1.rallydev.com/slm/doc/webservice/objectModel.sp#SCMRepository


 Rally®

Lookback

There is an optional Lookback variable which can display on either or both of the Rally and Subversion sections. By
default, the value for this parameter is assumed to be in minutes. You may use other units of time by specifying a suffix
character of m (minutes), h (hours), or d (days).

Examples:

Lookback: 90

Lookback: 120 m

Lookback: 8 h

Lookback: 10 d

If you do not explicitly provide a Lookback value, the connector uses a default value of one hour. If you do specify a
Lookback value in one section, we highly recommend specifying the value for it in the other section. If the Lookback
values are not identical in the two sections, there is the possibility that a changeset from Subversion would not be
reflected in Rally.

RepositoryBase

Within the Subversion section of the configuration file, use the RepositoryBase to specify full pathname of the centralized
master Subversion repository (not the working copy of the repository).

Example Repository Configuration File

---

VCSConnector:

Rally:

    Server              : rally1.rallydev.com           #

    Protocol            : https                         #

    Username            : jojo@muchly.com               #

    Password            : 22333four                     # (this will be encoded after first use)

#   APIKey              : hgiotewhgeiwhgh325930503453490    # can be used in place of Username / Password

 entries

    Workspace           : VanillaBean                   #

    RepositoryName      : Balloon                       # If it doesn't exist, it'll be created

#   Proxy               : some_proxy.yoursite.com:9876  # or an IP address:port

#   ProxyUser           : outbound                      #

#   ProxyPassword       : bvc-357%GNQ                   #

    Lookback            : 90                            # minutes by default, use h/d suffix for hours/days

    UpdateArtifactState : False                         #

    StateExtractorClass : BasicActionsAndArtifactsExtractor(message) # Only used if above is True

    Debug               : False                         # True for debug output

Subversion:

#   Server              : svnsvr.company.com            # specified if repo is not local

    RepositoryBase      : /home/svn/repos/bigproject    # Complete pathname to the centralized-master

 Subversion repository

    Lookback            : 90                            # minutes (defaults to 120)

    MaxItems            : 100                           # Max number of items to process per run

#   RevURI              : http://svnserver.com/repo/{revnumber}?id={revnumber} # if running web access to repo

#   FileURI             : http://svnserver.com/repo/{filepath}?id={revnumber}  # if running web access

    Debug               : False                         # Set to True for additional debug output

Services:

    Preview             : False                         # When True, only show what would happen

    LogLevel            : Debug                         # Default value Info

#   PostBatchExtension  : MetricsPoster                 # For future use

 1074



 Rally®

Transform:

    Author              : Passthru                      # The default

#   Author              : EmailAddressAsRallyUser

#   Author              : FileBasedUserNameLookup(user_map.txt,":")

#   Author              : RallyUserNameLookup(FirstName,LastName)

#   Author              : UserLookupChainGang(FirstName,LastName,user_map.txt,":")

#   Author              : UserNameDomainAugmentLookup(MyDomain.com)

...

URIs The RevURI and FileURI (in the Subversion section) are meant to be the root URI if you are using a web
front end for your system. The URI will be used as a base for the link to the changesets and files from
within the Rally Changeset. For example, if you have http://server:port/Subversion/rev/
as your root URI for your web access to Subversion (like Apache, ViewVC, WebSVN, or VisualSVN), a
link will be made in Rally for the changeset to http://server:port/Subversion/rev/12345
for changeset 12345. The strings {revnumber} and {filepath} will be substituted in when the
connector builds the link stored in Rally.

Proxy The three Proxy items are commented out by using a # in front of the item. Within a YAML file, any line
beginning with a # character is ignored and any content following a # character sequence is ignored
(including the  # sequence).

root URI The term root URI as discussed here is _not_ synonymous with the RepositoryBase value. The repository
base MUST be a valid filesytem path on the host for the Subversion repository. A root URI is configured
specific to the web server you are running and how that has configured routes to resources.

User Mapping File

The file configs/user_map.txt determines how user names are translated between your Subversion system and your
Rally subscription. If the user names are universally identical in both systems, then you can either comment out all Author
sub-items underneath the Transforms section or you can set the value for the Author field in the Transforms section to
Passthru. If there is a deterministic mapping that can transform a Subversion user name to a Rally user name, you will
need to adjust the transformation value for Author to the appropriate classname. Consult the User-Mapping-Strategies text
document (part of the installation) to determine which technique fits your needs.

Once you identify a suitable Author transformation technique, you will need to modify the configuration file (in the
configs subdirectory) to identify the Ruby class name that will implement that transformation. The Ruby class name
must exist in a file of Ruby source code that is in a file in the plugin subdirectory.

Example user_map.txt file:

# Subversion repo username   Rally username

# ------------------------ : -----------------------

jpkole                     : test@rallydev.com

linuxuser1                 : tester1@rallydev.com

linuxuser2                 : tester2@rallydev.com

David Beckham              : love2bendit@fifacup.com

Yogi Berra                 : aphorisms@yankees.com

Repository Time File

Each time the connector finishes running, it updates a repository time file in the base installation directory, which has
a name like My-Svn-Repo_time.file . This file contains the date of the last Subversion commit processed by the
connector. Therefore, when the connector runs again, it can locate where (such as, at what time in the past) to begin
processing commits made by the user.

On the first invocation of the connector there is no time file, so the connector will look back 72 hours in to the past for
commits.

 1075



 Rally®

You can edit this file and set the time to a value you prefer. For instance, if you have 50,000 check-ins that were
performed over the previous five years, you may not want all of that past history reflected in Rally. If so, edit the time file
and enter a date of a more recent starting point.

The file contains only one line: a time stamp in GMT/UTC time. The general format of the file is YYYY-mm-dd HH:MM:SS
Z (where the Z is for Zulu or GMT/UTC time). The following are the contents of a typical time file:

2013-05-17 18:49:22 Z

Mapping SCMRepositories to VCS Repositories

The VCS Connector was designed to operate where this is a one-to-one relationship between a Rally SCMRepository
and a VCS repository (Git, GitHub, Subversion, Mercurial, and so on). When run, the VCS Connector creates a Rally
SCMRepository item for the value specific in the connector config file if it does not already exist. This removes a small
amount of administrative burden in that you do not have to create the Rally SCMRepository item before you run a
configuration mentioning a new repository. A one-to-many mapping can create performance issues.

For each repository, there is a config file and a timefile. The timefile records the timestamp of the second-to-last commit
for the repository. For example, you have an Apricot repository that had some flurry of commits last fall but nothing since
and you also have a Banana repository that has had activity with the last couple of months. When commits for these two
repositories get poured into a single Rally SCMRepository, it has the following effect. When processing the config for the
Apricot repository, it is searching for recent Changeset records in Rally where recent is defined as the value in the timefile
for Apricot. Since the last commit to that repository was last fall, there is going to be an excessive amount of information
read-out of the single SCMRepository (because it is looking at all Changesets since last fall, not just the ones for Apricot).

For more information about creating or using SVN repositories, see Create a Centralized-Master-Repository.

Create an API Key

A Rally API Key can be created to use to access your subscription data without using your username and password.

To use the API Key in a connector, edit the Rally section in the config .yml file and add an APIKey line. When the APIKey
configuration entry is specified, omit the Username and Password from the Rally ;config section. If an APIKey entry
is present, the username and password are not used and a warning will appear in the log file if they are included in
the config file. This is true even if the APIKey entry value is invalid, blank, or nil. If your subscription administrator has
configured your subscription to be SSO only, you no longer need to add the user associated with the given APIKey value
to the approved list of authorized users.

The connector now uses rally_api version 1.2.1. Note that the APIKey specified must have full access, a read-only api key
will not allow the connector to write to Rally.

For help creating a full-access API Key, see Rally Application Manager.

Install the Subversion Connector

Subversion Server Versus Use of SSH

The primary use case is for this connector to be run on the platform that the Subversion software and centralized master
repository reside on. While it is possible to run this connector on a platform that is not the Subversion platform, that use
case assumes the use of ssh and the proper setup of public and private key information. Setting up ssh and key files is
beyond the scope of this document; consult the internet for information regarding ssh and PKI.

If you intend to use ssh when running the connector, it will be helpful to demonstrate that your key setup and permissions
are correctly set independently of the connector. As the user who will be running the connector, in a shell running in a
terminal window attempt the following:

$ ssh connector_user@svn_server_host  # substitute your actual user name and hostname...

 1076



 Rally®

$ ls -l

If this command runs correctly, you will get a long-format directory listing of the home directory for the connecter_user on
the svn_server_host. If it does not run and provide that output, you will need to troubleshoot common environmental error
conditions such as non-availability of a private key file or improper directory/file permissions or target host setup for ssh
connections. Only proceed towards running this connector when this command example succeeds for you.

Once you have demonstrated basic ssh usage using a key (so that you do not get challenged to provide a password)
you can move on to establishing that you have a valid RepositoryBase value and that your Subversion installation allows
the specific command necessary for the connector to run properly. In the following example, the RepositoryBase value
is /opt/svn/repos/tech-project . Using ssh, attempt to run an svn log command on your Subversion host,
substituting values appropriate for your environment.

$ repo='file:///opt/svn/repos/tech-project'

$ ssh -i $HOME/.ssh_keys/my_key_file_rsa  connector@svn_server_host svn log $repo

If this command succeeds, you can proceed with setup, configuration and running of the connector. Otherwise, you must
identify and correct environmental factors (no key file, invalid user, etc.) before proceeding with attempting to operate the
connector.

See Set Up SSH Access To SVNServer for more information.

Installer Versus Operator File System Permissions

As this connector is intended to run on an ongoing basis initiated by either cron or Windows Task Scheduler (WTS), it is
important to consider the identity of the user who installs the connector versus the identity of the user when run through
cron/WTS with regard to the permissioning and ACL of the directories and files in the connector installation. The runner of
the connector must be able to read all files and must be able to write in the configs and logs subdirectories.

Before proceeding with the installation, be sure your environment meets all the prerequisites.

1. Download the connector by following the steps here.

2. Unzip the ZIP file into a suitable directory where you want the software installed.

The distribution contents are:

LICENSE

README

User-Mapping-Strategies

configs

extension

gems

svn2ca_agile_central.rb

install_gems.rb

lib

logs

plugin

vcseif-1.6.0.gem

3. Change the directory to the root of the connector installation: cd svn2ca_agile_central-1.6.0

4. Set environment variable GEM_COMMAND to gem executable located in Ruby installation directory. The location
examples on Linux and Windows respectively are:

• /myhome/.rvm/rubies/ruby-2.2.6/bin/gem
• C:\Ruby226\bin\gem

5. Run the install_gems.rb Ruby script to get all associated gems installed. If you see output similar to You don't
have write permissions ... then you will need to either consult with your system administrator to obtain the necessary

 1077



 Rally®

permissions (typically done by using sudo or other similar software) or have the system administrator run the
install_gems.rb command. To run the command, in a console/terminal window at the prompt, type the following:
ruby install_gems.rb

Run the Rally VCS Connector for Subversion

The following is information about running the connector.

Preview Mode

Within the Services section of your configuration file ( configs/repo_one.yml , for example), is an entry for Preview. If
not present, the default is False. When set to True, the connector does not modify any data in Rally, but rather ensures it
can successfully connect to Rally with the credentials and information you have provided, as well as validating the use of
the use of the svn command. Once you have determined that a connector run in Preview mode operates as expected, you
can set the Preview value in your configuration to False.

Access to the svn Command

Your PATH environment variable must contain a file system path where the svn command can be found. See Linux, Unix,
macOS, and Windows documentation on how to set environment variables for use within a Unix cron job (or Windows
Task Scheduler entry). Use the Unix command which svn to determine if the svn command is in your PATH.

NOTE
You may run the connector on a box and have it access a remote host (through ssh), which has the Subversion
repository. In this case, it is not necessary to have Subversion installed on the connector box. This, however,
assumes you have enabled ssh access to the remote host, and the command ssh <remote host> which
svn returns a path to the svn command.

Run as a Scheduled Task

You can use cron (Linux) or the Task Scheduler (Windows) (or any other job-task scheduling software) to run the
connector periodically. Initially, Rally recommends the connector to be run every 15 minutes during normal business hours
and less frequently during non-business hours.

Command Line Invocation

You can have numerous configuration files in the configs subdirectory and specify any number of them for invocation.
For example:

ruby svn2_agile_central.rb apricot banana cherry dogwood

In the above example, the files apricot.yml , banana.yml , cherry.yml , and dogwood.yml must exist in the
configs subdirectory. The connector only looks for configuration files in the configs subdirectory (which is under the
installation base directory).

The Log Files

When the connector is run, two different log files are updated for each configuration file named:

• logs/svn2ca_agile_central.log
A global log file indicating the status of the connector. An entry is made in this log file to note the connector was
invoked. For each configuration named at invocation, there will be an entry in this log file noting the return code from
running the configuration. When the connector run has finished with all configurations, an entry is written to note the
completion of the connector run.

• logs/<ConfigFileName>.log

 1078



 Rally®

For each configuration file named on the command line, this log file is updated with more detail about the activity that
occurred during the run.

You can adjust the verbosity written to these log files by modifying the LogLevel value in the configuration file. Normally,
the LogLevel would be set to Info. Should you encounter situations where the connector does not complete normally, you
can adjust the LogLevel to Debug and run the connector to begin the troubleshooting process. These log files can be sent
to Rally Support to expedite the investigation of a case.

Time Files

The connector writes a file in the base installation directory corresponding to the configuration name with the date of the
last commit processed. The file is named <configuration-name>_time.file and has a time entry in the form YYYY-
mm-dd HH:MM:SS Z, for UTC (or Zulu) time. When first run, there will not be a time file for the configuration and the
connector defaults to searching for commits that occurred 72 hours prior to the run of the connector. You can override that
behavior by creating and editing a time file for the configuration file you are about to process. By providing an entry in the
format mentioned above, you can control that point from which commits are processed.

NOTE
The connector will skip processing commits for a repository until there are three or more commits to process.
Once there are three or more commits, the skipped commits will be processed. This is a design decision due to
performance issues in Rally when processing the commits.

Extend the Rally VCS Connector for Subversion

In the extension subdirectory of the installation, there is an example Ruby class in the file named statex.rb .

The class definition contained in that file is named BasicActionsAndArtifactsExtractor. This example class demonstrates
the basic technique of examining a commit message and extracting Rally artifact identifiers and state transition target
values. Using this class when the configuration file item UpdateArtifactState value is set to True results in the transition of
the State (or ScheduleState in the case of UserStory) of the identified artifact to the state value mentioned in the commit
message.

For example, if there is a Rally Defect (identified as DE1987) mentioned in the commit message with a new valid state
value either immediately preceding or following the artifact identifier, then the connector will change the State of the
identified artifact in Rally to that state. Example:

$ svn commit -m "Fixed DE1987 by changing preamble paragraph 3" my_file.java

If Rally defect DE1987 had a state of Open prior to the commit and run of the connector, then subsequent to the operation
of the connector processing this particular changeset, the state of Rally defect DE1987 would display as Fixed. Note this
message is case-sensitive, "fixed" is not the same as "Fixed".

The commit message may contain references to more than one artifact. For example, this is known to work:

$ svn commit -m "Test commit msg with multiple artifacts Fixed DE9 Closed DE8" MyFile.rb

The extension subdirectory allows you to provide your own message processing to extract Rally artifact identifiers and
state changes if the example provided does not fit your conventions. Your extension must be a class written in Ruby and
must provide an instance method called service which takes the commit message as an argument and must return a
Ruby Hash instance with entries keyed by a State name (Fixed, Completed, and so on) or nil with a Ruby Array as the
associated value populated by Rally artifact identifiers (FormattedID).

File My-Svn-proj1_time.file:

2018-04-19 14:41:34 Z

File configs\My-Svn-proj1.yml:

 1079

https://en.wikipedia.org/wiki/Coordinated_Universal_Time


 Rally®

---

VCSConnector:

Rally:

#   -------------------   ------------------------------------ #

#   an onprem rally...

    Server              : 10.32.16.78                          #

    Protocol            : http                                 #

    Username            : test@rallydev.com                    #

    Password            : encoded-d-d-d-d-d-d-d-d-d-d-d-=-     # encoded after first use

    Workspace           : My Sample Workspace            #

#   -------------------   ------------------------------------ #

    RepositoryName      : DogDogDog                            # name of Rally SCMRepository

#   Proxy               : server:port                          #

#   ProxyUser           : <proxy_user>                         # when using an authenticating proxy

#   ProxyPassword       : <proxy_password>                     # when using an authenticating proxy

    Lookback            : 90                                   # minutes

    UpdateArtifactState : True                                 #

    StateExtractorClass : BasicActionsAndArtifactsExtractor(message) # used if above is True

    Debug               : False                                #

Subversion:

#   Server              : svnsvr.company.com                   # specify if repo is not local

    RepositoryBase      : C:/Users/jpkole/vcs-svn/My-Svn-proj1 # Pathname to the centralized master Subversion

 repository

    Lookback            : 90                                   # minutes

    MaxItems            : 100                                  # maximum items to process in a run

#   RevURI              : http://svn/svnurial/bigproject/rev/{revnumber}             # if running web access

 to repo

#   FileURI             : http://svn/svnurial/bigproject/file/{revnumber}/{filepath} # if running web access

Services:

    Preview             : false                                # when True, show what would happen

    LogLevel            : Debug                                # default value is Info

#   PostBatchExtension  : MetricsPoster                        # for future use

Transforms:

Author              : FileBasedUserNameLookup(user_map.txt,":")

#   Author              : Passthru                             # the default

#   Author              : EmailAddressAsRallyUser

#   Author              : RallyUserNameLookup(FirstName,LastName)

#   Author              : UserLookupChainGang(FirstName,LastName,user_map.txt,":")

#   Author              : UserNameDomainAugmentLookup(MyDomain.com)

...

Install the Rally VCS Connector for Subversion on Linux

The Subversion (SVN) to Rally connector shows traceability of code changes to artifacts in Rally. If SVN is installed, you
can use it to check files, make changes, and check them back in Linux.

Using this installation guide, you will be able to run SVN in Linux as well as set up SSH.

1. Set up SSH access to SvnServer from your personal computer. Run these steps on the same machine where SVN is
installed.
a) Generate the SSH information to access to SvnServer: $ ssh-keygen -N "" -f ~/.ssh/id_rsa

Generating public/private rsa key pair. /Users/jpkole/.ssh/id_rsa already exists.
Overwrite (y/n)? y Your identification has been saved in /Users/jpkole/.ssh/id_rsa.

 1080



 Rally®

Your public key has been saved in /Users/jpkole/.ssh/id_rsa.pub. The key fingerprint
is: bb:40:28:be:54:1f:21:77:01:e5:fa:60:f8:a4:71:11 jpkole@Laptop.local The key's
randomart image is: ......

b) Copy the generated key to SVNServer: $ scp ~/.ssh/id_rsa.pub spp-vmubuntu64.f4tech.com:.ssh/
id_rsa.pub.mylaptop jpkole@supp-vmubuntu64.f4tech.com's password: $ ssh supp-
vmubuntu64.f4tech.com 'cat ./.ssh/id_rsa.pub.mylaptop >> ./.ssh/authorized_keys'
jpkole@supp-vmubuntu64.f4tech.com's password:

c) Test your SSH set up to make sure theSvnServer can be reached: $ ssh supp-vmubuntu64.f4tech.com ls
-l total 16 -rw-r--r-- 1 jpkole jpkole 8445 May 30 11:22 examples.desktop -rw-------
1 jpkole jpkole 410 May 30 11:32 x

2. Create a centralized-master-repository. The centralized-master-repository is the place your team will store all
commitments and code changes. The path for code changes to the SVN connector will pull from the centralized-
master-repository when it runs. For example:

To create the centralized-master-repository:

a) Log in to the remote SVNServer: $ ssh root@supp-vmubuntu64.f4tech.com root@supp-
vmubuntu64.f4tech.com's password: #

b) On the remote SvnServer, determine which version of SVN is currently installed: # svn --version Example:
svn, version 1.7.5 compiled Jun 22 2013, 03:54:07

c) The remote SVNServer maintains a list of valid SVN users, this is separate from Ubuntu's list of users which are
allowed to log in to the SVNServer. The SVN username credentials are stored on SVNServer in the file /etc/
apache2/svn.passwd . To add a new SVN user, enter this command as root on the SVNServer: # htpasswd -
m /etc/apache2/svn.passwd jpkole New password: Re-type new password

d) Add the same username as a Ubuntu user on SVNServer, and start the SSH setup process: # adduser jpkole
# mkdir -p ~jpkole/.ssh # chmod 700 ~jpkole/.ssh # chown jpkole ~jpkole/.ssh

e) Create a centralized-master-repository in SVN: # su www-data $ bash - l $ svnadmin create /var/
subversion/Demo-centralized-master-repo

f) Build a temporary directory with a source file which will be used to synchronize the centralized-master-repository: $
mkdir /tmp/tmp-proj $ echo "# Our first source file" > /tmp/tmp-proj/hw.rb

g) Synchronize the new centralized-master-repository with the temporary project directory: $ svn import /tmp/
tmp-proj file:///var/subversion/Demo-centralized-master-repo -m "JPs master svn
repo" Adding /tmp/tmp-proj/hw.rb Committed revision 1.

h) To exit the server, use the following commands: exit # from bash -l exit # from su www-data exit
# from SvnServer as root

• Interface for SvnServer: http://supp-vmubuntu64.f4tech.com/websvn/
• Powered by WebSVN 2.3.3 and Subversion 1.7.5 ✓ XHTML & CSS
• Existing subversion repository names on SvnServer and their corresponding web addresses:

• myrepo --- http://supp-vmubuntu64.f4tech.com/svn/myrepo/
• joe_repo --- http://supp-vmubuntu64.f4tech.com/svn/joe_repo/

• On the remote SvnServer filesystem, the subversion repositories live at: /var/subversion/*

3. Check a copy of the repository and make changes accordingly.

NOTE
You will be prompted for a password if this is your first time committing changes.

a) Check out a version of the centralized-master-repository from SVNServer into a working-copy-repository (directory)
on the machine that SVN is installed: $ cd $ svn checkout http://supp-vmubuntu64.f4tech.com/

 1081



 Rally®

svn/Demo-centralized-master-repo Demo-working-copy-repo A Demo-working-copy-repo/
hw.rb Checked out revision 1.

b) Make a source change in the local working-copy-repository: $ echo puts '"Hello world - 1st
change!"' >> Demo-working-copy-repo/hw.rb

c) Commit your changes to the centralized-master-repository on SVNServer: $ svn commit -m "DE421
Fixed - change #1" Demo-working-copy-repo Authentication realm: <http://supp-
vmubuntu64.f4tech.com:80> Subversion Repository Password for "jpkole": Sending Demo-
repo-working-copy/hw.rb Transmitting file data . Committed revision 2.

d) To test, make another change and commit it: $ echo puts '"Hello world - 2nd change!"' >> Demo-
working-copy-repo/hw.rb $ svn commit -m "DE421 Fixed - change #2" Demo-working-
copy-repo Sending Demo-repo-working-copy/hw.rb Transmitting file data . Committed
revision 3.

e) Check that the changes are reflected on SVNServer in the centralized-master-repository: $ svn
log http://supp-vmubuntu64.f4tech.com/svn/Demo-centralized-master-repo
------------------------------------------------------------------ r3 | jpkole
| 2013-07-25 14:37:04 -0600 (Thu, 25 Jul 2013) | 1 line DE421 Fixed - change #2
------------------------------------------------------------------ r2 | jpkole
| 2013-07-25 14:34:35 -0600 (Thu, 25 Jul 2013) | 1 line DE421 Fixed - change #1
------------------------------------------------------------------ r1 | www-data
| 2013-07-25 13:55:58 -0600 (Thu, 25 Jul 2013) | 1 line JPs master svn repository
------------------------------------------------------------------

Troubleshoot the Rally VCS Connector for Subversion

This section contains troubleshooting information.

Get Help If you have any questions, issues, or suggestions, visit Support.
See Log Files
for Messages

When the connector runs, it generates two log files:

• logs/svn2ca_agile_central.log
A global log file indicating the status of the connector.

• logs/<config-file-name>.log
For each configuration file given on the command line, this will be the log file containing information
about any issues with that configuration file.

The RepositoryName
is Case Sensitive

The configuration file contains a line like RepositoryName: Chien1, which is the name of the
SCMRepository object in Rally. This name is case-sensitive. Assuming the name was mistakenly specified
as chien1, you may see a log file error like:
 INFO : RallyVCSConnection.validate - SCMRepository: chien1

DEBUG : RallyVCSConnection.getSCMRepository - No SCMRepository named |chien1| in

 Workspace: |WS1|

 INFO : RallyVCSConnection.createSCMRepository -

        Creating SCMRepository 'chien1' (Subversion) in the 'WS1' workspace...

ERROR : UnrecoverableException (/Users/...../exceptions.rb:42 line in `initialize') -

        Unable to create SCMRepository: 

        Error on request - https://rally1.rallydev.com/slm/webservice/1.40/

scmrepository/create.js -

                {:errors=> ["Validation error: SCMRepository.Name:

        There is already a SCMRepository with the name 'chien1' in this

 Workspace"], ... ]}

Ruby Considerations This software is written in Ruby and must be executed with a supported version of the Ruby interpreter.
As of version 1.6.0 the supported Ruby version is 2.2.6. If you are running the connector on a Windows
platform, you must have installed the appropriate Ruby DevKit. See Prerequisites for more information.

No Valid Artifacts
Mentioned

Seen when connector tries to add a changeset to a Project where the Connector User does not have
permissions.

 1082

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

DEBUG : RallyVCSConnection.extract_artifact_references - No valid artifacts were

 mentioned in message

        DEBUG : RallyVCSConnection._createInternal - Created Changeset: OID:

 4935999999  Revision: 14d0f533084c700f Timestamp:|2016-01-06T14:58:01.000Z| (not

 associated with any Artifacts)

Rally VCS Connector for Subversion Revision History

• 1.6.0-master --- 25-May-2018
– Enhancements:

• Unified distribution, requires use of Ruby 2.2.6 for TLS V1.2 support.
• 1.5.3-master --- 12-Dec-2017

– Enhancements:
• Sync all vcs-eif connectors.

• 1.5.1-master --- 12-Sept-2017
– Enhancements:

• Added Message to fields eligible for Transform.
• Certified for use with Ruby 2.2.6.

• 1.4.3-master --- 24-Oct-2016
– Enhancements:

• Updated the logic to allow for processing after 1 commit.
• 1.4.1-master --- 17-Oct-2016

– Fixes:
• Addressed uncaught exception when processing an empty repository.

• 1.4.0 - master-1046 --- 16-Nov-2015
– Enhancements:

• Brand redesign.
• 1.3.2 - master-1043 --- 01-Aug-2015

– Enhancements:
• Added support for use of APIKey entry and revised documentation to encourage use of this in preference to use

of still supported ApiKey.
• 1.3.1 - master-1040 --- 19-Jun-2015

– Enhancements:
• Added support for downcasing any Rally username value, inverted sequence of retrieval from Rally and target

VCS system, and upped dependency on rally_api to 1.2.1.
• 1.3.0-master-1038 --- 29-Apr-2015

– Fixes:
• Handle commit messages with multi-byte characters whose length exceeds the Rally Changeset Message field

length limit of 4000 bytes.
– Enhancements:

• Updated dependency on rally_api to 1.2.0
• 1.2.9-cib1037 --- 10-Mar-2015

– Fixes:
• Refined handling of commit messages in excess of 4000 characters to account for JSON encoding expansion.

• 1.2.8-cib1036 --- 01-Mar-2015
– Enhancements:

 1083



 Rally®

• Improved the ability to identify artifact identifiers in commit messages surrounded by bracketing characters.
• 1.2.6-cib1035 --- 26-Jan-2015

– Enhancements:
• Updated rally_vcs_connection.rb configureExtensionEnvironment and statex.rb to accommodate custom artifact

prefixes (such as 'BUG' for Defect).
• Updated dependency for rally_api to version 1.1.2.

• 1.2.5-cib1033 --- 15-Oct-2014
– Enhancements:

• Updated to use Rally Web Services API v2.0 and the updated rally_api gem.
• 1.2.4-cib1031 --- 16-Sep-2014

– Enhancements/Fixes:
• Added support for using API Key in lieu of username and password in the Rally portion of the configuration file.
• Updated to rally_api toolkit version 1.0.1.

• 1.2.3-cib1030 --- 15-Sep-2014
– Enhancements/Fixes:

• Fixed DE21993 - to meet Rally's commit message field limitation of 4000 characters, if a commit message
exceeds the character limit, characters over the limit are truncated. Upon truncation, the commit message is
appended with an annotation of the truncation and a warning message displays in the log file.

TestRail (Third-Party Integration)
TestRail helps testers, developers, and team leads to efficiently manage, track, and coordinate software testing efforts, all
from a centralized and easy-to-use web application.

The TestRail-Rally integration allows you to directly send new defects and bug reports from TestRail to Rally. Testers
going through their test cases in TestRail can directly push bug reports to Rally as they are discovered without having to
leave the application. You can then link test results in TestRail to Rally defects and also directly look up the status of any
linked Rally issues inside TestRail. Testers can also go to linked defects in Rally to update bug reports and search any
additional details.

For more on Gurock and Testrail, visit their website. Pricing information is available as well.

Testuff (Third-Party Integration)
Testuff is a SaaS test management solution with a rich features list and intuitive GUI. It is designed to help testing
teams focus on testing, not learning how to use the software. Testuff works well with other testing tools (automation,
requirements, bug tracking, and so on) so users can customize their experience without giving up software already in
place.

Benefits:

The Testuff–Rally integration allows users to send defects with details from Testuff directly to Rally, and vice-versa,
creating a two-way synchronization.

With Testuff, the tester can:

• Report defects from Testuff while executing a test
• Import Rally defects to Testuff
• Import Rally requirements into Testuff
• Map Rally custom fields in Testuff integration setup
• Synchronize defects status from Rally to Testuff

 1084

https://www.gurock.com/testrail/rally-test-management/


 Rally®

Third-Party Context
As a Rally user, you want to be able to see and navigate to all of the context related to a work item, even if that context is
outside of Rally.

NOTE
Currently, the only connections available are from GitHub, Bitbucket, Subversion, or Mercurial. The connector
must be installed and configured to retrieve data.

• Learn more about GitHub.
• Learn more about Bitbucket.
• Learn more about Subversion.
• Learn more about Mercurial.

View Connections

You can view connections for work items from the detail editor. Learn more. You cannot edit connections data.

1. Select the FormattedID of the work item.
2. Select Connections

to open the Connections page.
The number of connections is displayed next to the icon.

3. Select the Connections tab to view the connections.
4. You can sort the information by column header.

– Type
– Name
– URL
– Creation Date

View Changesets

The Connections page includes the Changesets tab, which displays all of the changesets associated with your work item.
You can view information on each changeset, including:

• A link to the changeset
• A list of the associated individual file changes
• A list of the associated builds

UX360 (Third-Party Integration)
UX360 allows customers to create users stories linked to user research, personas, and journeys. It provides a framework
to link those user stories to relevant design deliverables, such as wireframes, visual designs, and prototypes to create
robust Minimum Viable Documentation for development teams.

UX360 then provides an interface using Rally's ALM APIs to populate backlog items, provide back-links to design details
in UX360 directly from user stories in Rally, and synchronize story changes between the systems.

Watch the Rally Integration with UX360 YouTube video.

ValueOps Connectors Powered by Tasktop
Easily extend the power of your value streams with the ValueOps Connectors and gain greater efficiency, effectiveness,
and transparency by enhancing the powerful digital product management of Clarity and the enterprise agility of Rally.

 1085

https://youtu.be/7yTKXl3LNQA


 Rally®

• Remove silos by connecting your products to aggregate data across the value stream.
• Increase collaboration between teams leveraging different tools in distributed environments.
• Eliminate errors, miscommunications, and problems due to lost or mishandled requests from manual data collection.
• Leverage a complete data set to make informed decisions to drive your business.

Learn more.

Vim (Third-Party Integration)
Vim is a highly-configurable text editor built to enable efficient text editing. It is an improved version of the vi editor
distributed with most UNIX systems.

 1086

https://academy.broadcom.com/valueops/connectors?hsCtaTracking=a2892502-91ad-4b61-8062-1073eadf668b%7Cefb4c1a7-c1a8-4be9-9ff1-818853aa039a


 Rally®

This plugin with Rally provides the ability to search and display stories, tasks, and defects. It also supports updating
task estimate and to do. Lastly, you can also show iteration burndown and cumulative flow charts for the current active
iteration.

Written mostly in Ruby, this plugin requires vim7.2 patch 374 or greater (that patch has a required Ruby interface fix) and
Ruby 1.8.6 or greater. See the installation file for details.

View the vim4rally repo in Github for installation information.

Cost: Free (donations accepted)

Work Item Connector API Key Support
Single Sign-On Work Item connector users can authenticate using API keys rather than basic authentication.

Credentials used for Work Item connectors are encrypted, not encoded. These features increase security and simplify the
use of API keys with your entire Rally subscription.

Work item connector API key considerations:

 1087

https://github.com/davidpthomas/vim4rally


 Rally®

• You can use Work Item connectors (Atlassian Jira, Micro Focus ALM/Quality Center, Microsoft TFS/VSTS) with API
key authentication rather than basic authentication.

• You can enable and disable API keys from a single location for your entire subscription, allowing you to easily ensure
that your subscription setup is aligned with your company’s policy for API key usage. Learn more.

• Subscription administrators do not need to add Work Item connector users to an allowed list.

ZAPTEST (Third-Party Integration)
ZAPTEST enables test automation using application mockups, allowing Agile/DevOps teams to perform Shift-Left testing
on the early stages of software development lifecycle and to be test ready just in time.

The ZAPTEST integration with Rally stores ZAPTEST scripts in Rally, executes scripts and stores results in Rally,
generates automation template from Rally test cases, generates ZAPDOC manual test cases in Rally, and auto-populates
automation defects in Rally.

Zendesk (OpsHub)
The Rally-Zendesk integration, created by OpsHub, supports unidirectional and bidirectional synchronization of defects,
tasks, test cases, test sets, user stories, all systems and custom properties including comments, attachments, and
traceability with a Zendesk ticket. The solution provides real-time integrations with on-premises and in the cloud
deployment options to fit the needs of your business.

Other key features of the Zendesk integration include:

• Fully manageable and functional from the web-based administration tool including defining entity to synchronize
between Zendesk and Rally to workflow management, mapping management, log management, and failure
management

• Built-in support for conflict management with support of automatic conflict detection and resolution
• Built-in failure and recovery from system crashes or failure with ability to correct data and retry failures
• Reliable solution for integrating bulk data

Building Rally Integrations
You can extend the data provided from the Rally ALM platform through our suite of web service APIs, allowing you to
connect externally, customize displays and outputs, and integrate proprietary systems with Rally.

You may create extensions or new integrations and connectors to Rally, directly via HTTP using our REST-based Web
Services APIs as well as our language-specific Enterprise Integrations Framework and data access (REST) toolkits.

You can also create custom apps that display Rally data or integrate your Rally data with external systems. Learn more.

Web Services API
Documentation

• Rally Web Services API
NOTE
The Rally Web Services API documentation is available
directly from the Rally main Help menu. Select the Help menu

and then select Rally Web Services API Documentation.
• Rally Lookback API (beta)

NOTE
Lookback API is only available in the SaaS production environment and is not available in
On-Premises or sandbox environments.

 1088

https://www.zaptest.com/
https://www.opshub.com/rally-software-integration/rally-software-github-zendesk-integration/
https://rally1.rallydev.com/slm/doc/webservice/
https://rally1.rallydev.com/analytics/doc/


 Rally®

Enterprise Integrations
Framework and Data

Access (REST) Toolkits

• Java Toolkit for Accessing the Rally Web Services API
• .NET Toolkit for Accessing the Rally Web Services API
• Node.js Toolkit for Accessing the Rally Web Services API
• Python Toolkit for Accessing the Rally Web Services API
• Ruby Toolkit for Accessing the  Rally Web Services API

Rally Developer
Community

You must have a GitHub login to participate in the developer community.

• View questions from the developer community
• Ask the developer community

Web Services API (WSAPI)
The 2.0 version of the Rally Web Services API (WSAPI) is REST based and uses the JSON format.

The  Rally Web Services Application Programming Interface (WSAPI) enables third party integration with  Rally.

The 2.0 version of the  Rally Web Services API (WSAPI) is REST based and uses the JSON format. You can access Web
Services API (WSAPI) documentation here for Rally1 users and here for EU1 users.

NOTE
The Rally Web Services API documentation is available directly from the Rally main Help menu. Select the Help
menu

and then select Rally Web Services API Documentation.

Rally offers language-specific toolkits for working with our Web Services API: Python, Java, .NET, Node.js, and Ruby.

This section includes the following topics:

• Advanced WSAPI Rally Topics
• Java Toolkit for Accessing the Rally Web Services API
• .NET Toolkit for Accessing the Rally Web Services API
• Node.js Toolkit for Accessing the Rally Web Services API
• Python Toolkit for Accessing the Rally Web Services API
• Ruby Toolkit for Accessing the Rally Web Services API

Advanced WSAPI Rally Topics
The following topics may be useful for advanced developers.

Map Rally Projects to Custom Fields with TFS

Mapping Rally reference fields requires the RallyReferenceFieldHandler tag, as described in #unique_859/
unique_859_Connect_42_c-how-to-map-fields, Mapping Reference Fields.

1. Export bug definition file bug.xml .

2. Modify bug.xml .

 1089

https://stackoverflow.com/questions/tagged/rally
http://stackoverflow.com/questions/ask?tags=rally
https://rally1.rallydev.com/slm/doc/webservice/
https://eu1.rallydev.com/slm/doc/webservice/


 Rally®

3. Find <Tab Label="Rally"> section and add the following:

4. Validate changes:

5. Import changes.

6. Notice that Rally Project drop-down is now available under Rally tab in Team Foundation Server:

7. Modify the config file to map Rally's Project field to Rally.Common.Project in TFS.

 1090



 Rally®

8. Create a new defect in TFS and set Rally Project value.

9. The defect is successfully created in Rally's Team2 project.

Unable to Get Local Issuer Certificates

The main issue is Curl fails to connect using SSL because there is a problem negotiating the Rally certificate. The output
from openssl indicates the issue is (unable to get local issuer certificate).

 1091



 Rally®

The certificate installed on Rally works with all of the major browsers. However, Curl does not work well with a wildcard
certificate. You are able to get around this by using curl -k or curl --insecure . This will continue to use SSL, but
will not validate the certificate.

Example Curl command:

curl.exe -k --user <username:password>

Time Zones in WSAPI

The normalization that occurs inside the getters and setters for these attributes is largely transparent to the rest of the
application (except for querying) and is not likely causing any issues. Rally made a change to the WSAPI in version 1.30
to handle cases where the user and workspace time zones differ. However, there were no changes to the import code.

Previously, Rally took a provided date with time zone (using the user's time zone if none specified), shift it to the start or
end of the day in the workspace's time zone, and then store the result. It was possible that the shifted date reflected a
moment in time that no longer fell on the same day as the provided date. This broke the Ext grids.

The new behavior is almost the same except that when we shift the provided date to the start or end of the day in the
workspace's time zone, we ensure that the shifted date always reflects a moment in time that falls on the same day as the
provided date.

Example (based on the one in the API Versioning section of the WSAPI docs):

• The workspace's time zone is America/Los_Angeles (with an offset of -0700).
• The user is working in the America/New_York time zone (with an offset of -0400).
• The user creates an iteration with a start date of 2012-06-12T00:00:00:000-0400.

In WSAPI version 1.29 and below:

• The start date is adjusted to 2012-06-11T03:00:00:000-0400.
• The start date, as returned by the API, rendered in UTC: 2012-06-11T07:00:00:000Z.

In WSAPI version 1.30 and above:

• The start Date is adjusted to 2012-06-12T03:00:00:000-0400.
• The start Date, as returned by the API, rendered in UTC: 2012-06-12T07:00:00:000Z.

Access Preference Permissions

The requesting user (user1) can read the preferences for user2 if they meet any of the following requirements:

• They are the same user (a user can read her own preferences)
• User1 is a subscription administrator
• User1 is a workspace administrator for ANY workspace AND user2 is not a subscription administrator.

NOTE
Workspace administrators cannot read a subscription administrator's preferences.

Additionally, in order to add or edit user preferences, the same rules apply except that workspace administrators also
need to be able to add users (the subscription setting previously mentioned).

This logic is found in User.java, canBeReadBy(user) and canBeWrittenBy(user) .

Find Object IDs (OIDs) without Administrative Rights

All Rally artifacts carry a unique Object ID (OID). This number is generally hidden and allows the software to find an item
in its exact location. When writing a webscript or custom application for Rally, these OIDs are needed to point to the
correct project or workspace.

 1092



 Rally®

Only administrators can obtain the OID for a project or workspace through the GUI. If you are not an administrator, you
can use the process below to query these values through webservices.

1. Create a new custom page.
2. In the a pop-up editor, uncomment the default code by removing the <!-- characters at the top of the window, and

then remove the --> characters below the block of text.
3. Select Save & Close.
4. The custom tab script will run, and you will see your OIDs for workspace and projects in scope.

Java Toolkit for Accessing the Rally Web Services API

Access the Java Toolkit for the Rally Web Services API on GitHub.

.NET Toolkit for Accessing the Rally Web Services API

Access the .Net Toolkit for the Rally Web Services API on GitHub.

Node.js Toolkit for Accessing the Rally Web Services API

Access the Node.js Toolkit for the Rally Web Services API on GitHub.

Python Toolkit for Accessing the Rally Web Services API

Access the Python Toolkit for the Rally Web Services API on GitHub.

Ruby Toolkit for Accessing the  Rally Web Services API

Access the Ruby Toolkit for the Rally Web Services API on GitHub.

Idea Manager
Rally Idea Manager is a great tool for agile product managers as a way to effectively connect and collaborate with all their
users (and account for distributed users) to accelerate the input to product features and enhancements, and accelerate
the feedback loop to users at informing them of the status of their ideas.

Rally Idea Manager provides a place for stakeholders to propose, vote on, and discuss ideas for features and
enhancements. This forum gives product managers access to a rich source of information to help them build the right
features in the right prioritized order.

Product managers may design custom forms that guide community users to provide specific data in their idea posts. This
eases the task of organizing and selecting ideas for consideration as enhancements or new functionality.

 1093

https://github.com/RallyTools/RallyRestToolkitForJava
https://github.com/RallyTools/RallyRestToolkitFor.NET
https://github.com/RallyTools/rally-node
https://github.com/RallyTools/RallyRestToolkitForPython
https://github.com/RallyTools/RallyRestToolkitForRuby


 Rally®

Product managers can easily promote ideas to user stories in their Rally product backlogs. When the schedule state of a
story changes, product managers may batch update the status of ideas. This allows idea submitters to know as soon as
possible when work is in progress for their request.

As work begins, developers may click a link in the story to quickly navigate to the idea and join the discussion to gain a
better understanding of the feature.

There are two types of Rally Idea Manager users:

• End users (community members)
• Administrators (product managers)

Rally Idea Manager for End Users
Rally Idea Manager is your place to share your product and feature ideas, discuss them with the community, and vote for
those you would like to see developed.

As a user of Rally Idea Manager, you can share your ideas for future enhancements and view the ideas of others.

 1094



 Rally®

Submit an Idea

You can submit your idea for others to vote on. You can also search for duplicate or similar ideas.

End users and idea submitters cannot edit an idea once it has been posted.

1. Select the Post Idea button on any page.
2. Complete the idea submission form. Required fields are marked with an asterisk (*).

– Title: As you type the title of your idea, the system suggests similar ideas in the Title field that others have
submitted. This helps to avoid posting duplicate ideas. If you find an existing idea that is similar to your idea,
comment and vote on the existing idea.

– Image: To add an image for your idea, drag-and-drop or browse to the image.
– Description, Value: Limit posts to one granular idea to ensure that the status is assigned correctly and that

community votes are meaningful. Describe your idea and the value you would gain if it was implemented.

 1095



 Rally®

The rich text editor allows you to use formatting and editing tools such as bold, italics, font color, and spell check.
– Attachments, Tags: Use tags and attachments to highlight your idea.
– Category: If you are not sure which category to select, use the Unsure category and the administrators will move it

to the correct category.

Find Ideas
There are various methods you can use to find ideas.

Search Ideas

You can search to find specific ideas.

1. Enter search criteria into the Search

field.
2. Select the

or press Enter.

All information associated with an idea, including tags, comments, and idea codes (for example, D415), is scanned for a
match on your criteria. Search is not case sensitive—all case options for your criteria is matched. The Search field finds
keywords in the Title, Description, and Tag fields. Searches on symbols (&, $, *, @, $, and so on) are not supported.

Once the search results display, you can perform a more advanced search on the types of results: ideas, comments, and
users.

You can search for ideas posted by other users by entering their screen name in the Search field. For example, Peter
Potamus has a screen name of Peter. You can enter Peter in the search field for results, but Potamus will not yield any
results.

 1096



 Rally®

Filter Ideas

You can filter ideas based on category, status, and tags.

1. Select Filter

.
2. Select filters to apply from the categories, status, or tags column.
3. Select Apply filters.

By default the filters use an and or condition. To clear filters, select Reset filters.

View Ideas by Status

Select a status to display ideas associated with that status.

View Ideas Entered by Other Users

Select a username by a posted idea to view all other ideas submitted by that user.

Sorting Tabs

The idea list in the body of the page shows all ideas associated with the filters or search constraints that you have chosen.
Use the Random, Recent, Active, Votes, Favorites, and New to Me tabs to sort the list. Your administrator might add other
tabs for sorting, such as Featured and Genius.

Next and Previous Ideas

Once you are viewing the details of an idea, you can select the margin arrows to view the next or previous idea. Hover
over the arrow to see the title and submitter of that idea.

 1097



 Rally®

View Others' Ideas
To gain a better understanding of what other users are thinking, you can view others' ideas and comments. What are
some of the more popular ideas? Which users are submitting the most ideas?

You can select another user's screen name to view ideas and comments posted by that user.

 1098



 Rally®

Use the leaderboard to track which users have the most popular ideas. Select a user's name to view the ideas they have
posted, commented on, and subscribed to. Points on the leaderboard are determined by the number of ideas you post,
promote, or demote, the number of users that promote your idea, and the number of other ideas you comment on. Point
values are set up by administrators.

View Idea Status

There are four ways to view the status of an idea:

• Find an idea and view its status
• View ideas in a specific status
• View your idea's status from your profile
• Subscribe to the idea to receive email notifications of status changes

Find an Idea and View its Status

Find the idea that interests you and read its summary information to see the current status.

 1099



 Rally®

View Ideas in a Specific Status

1. Perform one of the following steps:
– Select the status for an idea.
– Select a status in the right panel of the page.

To clear any filters you have used to search for statuses or categories, select Clear Filter above the idea.

 1100



 Rally®

View Your Idea's Status From Your Profile

To see the current status of your own ideas, check your profile.

1. Select the My Profile tab at the top-right of the page.
All of your ideas are listed on the Ideas menu.

Comment on an Idea
Discuss ideas with other members of the community by adding comments to ideas or replying to comments.

1. Select an idea that interests you.

The most recent comments are listed first.

2. Add your comment and select Post Comment.

• You can add an attachment to your comment to better illustrate your idea.
• Select Reply to discuss an existing comment.
• Your administrator must enable these features.

You can view all comments and replies to your comments on the My Profile tab in the Comments section.
Select the red flag to report abuse.

Vote on a Idea
Give or remove your support for an idea by voting.

We have enabled chip voting, where you are allotted one chip to vote with. Chips are returned to you once an idea you
have voted on reaches a specified status.

 1101



 Rally®

You remove your vote by changing the number of chips you want to give to an idea.

1. Select Edit Chips from the idea image and Custom Amount from the drop-down menu.

2. Enter 0 in the text box to remove your chip.

The number of remaining votes you have is listed on the left pane. If you wish to revoke all of your votes
throughout the site and get all your chips back, select the Return all of my votes link. Confirm your action on
the pop-up. You cannot undo this action.

Select Favorite Ideas
You can specify certain ideas that you like or agree with to the Favorites category.

NOTE
Your administrator must enable Favorites.

Select the star next to the idea you like to add it to Favorites.

A yellow star indicates an idea is in Favorites. To remove an idea, select the star again.

 1102



 Rally®

To view all your favorite ideas, select the Favorites tab at the top of the ideas page.

Subscribe to an Idea
Subscribe to an idea to follow its discussion thread and status. You can also subscribe to a category.

When you subscribe to an idea, you are notified by email if someone posts a comment or if there is a status change for
that idea. When you subscribe to a category, you are notified when someone adds an idea to that category.

Notifications specify the actual status change, such as In Progress to Released.

If you do not wish to receive any email notifications, select Turn off all emails in your profile. By default, you will receive
email notifications when the ideas you subscribe to either have new comments or a change in status. If you wish to be
alerted when an idea's status changes, subscribe to the specific idea or the idea's category.

 1103



 Rally®

1. Select the Envelope at the top-right of the idea listing to subscribe.

2. Select whether to subscribe to the idea, category, or both.

3. To complete your subscription, select outside the dialog box.

Rally Idea Manager for Administrators
Administrators in Rally Idea Manager are responsible for managing the site and the ideas posted by users. This role is
usually filled by product managers or product marketing managers.

Administrators can be traditional product managers that manage ideas as they are submitted, administrators that manage
the site, or both.

• Manage Ideas
• Manage Your Site and Users
• Rally Idea Manager Integration Setup
• Manage Multiple Sites
• Set Up Site Features
• API Access

 1104



 Rally®

Manage Ideas
As a product manager, you may use ideas to create features and stories in Rally. To make this process easier, categorize
ideas and monitor idea activity.

NOTE
Some of the features listed here are currently in Beta. Contact your subscription administrator for more
information.

When features are in progress or are ready for release, you can use Rally Idea Manager to communicate updates to the
community.

Watch a demo for managing ideas.

Managing ideas includes:

• Change the Status of an Idea
• Edit Ideas
• Organize Ideas
• Promote an Idea to a Story in Rally
• Specify Idea Details
• Hide or Update an Idea
• View a User's Ideas
• Reports
• Share Idea Links

Change the Status of an Idea

Administrators can change the status of an idea to communicate to the idea's submitter that the idea is moving ahead in
the process, or that it has changed in priority.

When you change the status of an idea, all subscribers to the idea are notified by email.

You can change the status of an idea either one idea at a time or through a batch update based upon the Schedule State
of a linked story in Rally.

 1105



 Rally®

1. Select Edit

at the top-left of the detail page for the idea next to its status.
2. Select a status from the drop-down menu.
3. You can also add reason for status change as no comment, comment or, admin comment.

Trigger a Batch Status Update

You can trigger a batch status update for all ideas linked to Rally work items.

When you trigger a batch update, statuses for all ideas with active links to Rally stories are updated based on the criteria
that the site administrator set up for the integration to Rally.

1. On the homepage, administrators can select Sync Linked Work Items and Idea Statuses to manually update
statuses.
If you do not see this link, the Rally Integration has not been set up on the Plugin tab of the setup menu.

 1106



 Rally®

 1107



 Rally®

Edit an Idea

Administrators can change information about ideas after they are posted. Idea editing must be enabled from the Setup
tab.

1. Select your avatar at the top-left corner of the page.

2. Select an idea in the Ideas tab.

3. You will see information about your idea post:

Select the edit icon next to any field you would like to edit. You can add or change tags, or to edit idea information
(other than comments).

 1108



 Rally®

4. Administrators can pin a comment to the top of of an idea list. The pinned comment will stay at the top and indicate
that the pinned comment is from your company.

To pin a comment, an administrator can mark an idea as Admin Comment. To unpin, select the thumbtack icon.

Organize Ideas

As a product manager, you need to organize ideas in a way that provides value to your site and company.

Manage Duplicate Ideas

Even though the duplicate checker searches for duplicate or similar ideas already entered, some duplicate ideas may
exist. To manage duplicate ideas, you can:

• Hide the Idea
• Create a Category for Duplicate Ideas
• Create a Status for Duplicate Ideas

Change the Category of an Idea

You can change the category to which an idea is already assigned.

1. For the idea you want to change, select Edit.
2. On the editor, select the arrow on the drop-down box of the Select a Category (Required):* field, then select the

category you wish to use.
3. Select Change Category.

 1109



 Rally®

.

Change and Add Tags to an Idea

You can change and add tags to which an idea is already assigned.

1. For the idea you want to change, select Edit Idea.
2. Add or edit tags in the Please list tags related to your submission field.

Multiple tags must be separated by a space.

 1110



 Rally®

3. Select Update Idea.

View Idea Counts

View idea counts see which ideas are getting the most views by users.

1. You must have idea view count enabled from the Setup tab. From the Ideas tab, select the Ideas page.
2. Select the Idea View Count check box.

3. Select Save Changes.

Promote an Idea to a Work Item

When you decide to implement an idea, you can quickly promote the work item to a story in Rally.

 1111



 Rally®

You can connect an idea to a new work item or to an existing work item. You can also connect multiple ideas to a work
item.

Each association and dissociation between an idea and a work item creates a discussion entry on the work item and the
URL of the idea. This is particularly useful if there is more than one idea associated with one work item.

1. Open the idea you wish to promote.
2. Select the Rally link.

3. Specify whether to create a new work item or link to to an existing work item.
4. Choose the workspace, project, and work item type and select Create New Item.

5. To view your new story in Rally, select the story link.

Once your idea is entered in Rally Software, there are two Rally Idea Manager-specific fields which can help the
development team view key information about the idea:

• Idea URL: An active link to the idea in Rally Idea Manager. Use this link to view comments and other information.

 1112



 Rally®

NOTE
More than one idea can be linked to a story, but only the first assigned idea URL field displays in this field.
When multiple ideas are linked to a story, you can access the idea URLs in the discussion area.

• Notes: Indicates which user created the story in Rally Software. This area also specifies the idea site from where the
idea came.
Only the idea's name and description are populated in Rally. Other custom or required fields you may have set up in
Rally Idea Manager do not display in a linked Rally work item.

Promote Multiple or Complex Stories

Often, an idea is too complex to be promoted to just one work item. You may encounter one of these scenarios:

• There are several different but related ideas
• An idea is too large and complex to be implemented in a single user story

Create a parent story and assign the similar ideas or break down the complex idea to child stories.

Specify Idea Details

Specify idea details to set up default information for posting and managing ideas.

1. Select the Setup tab at the top of the page.

2. Select the Ideas tab.

3. The Ideas tab has five pages:

• Ideas: Use the Ideas page to set up features related to ideas.

• Specify what fields to check for duplicates, what actions to allow for community members, and whether to allow
demote voting in addition to promote voting.

• Select the My Favorites check box to enable users to assign ideas to their My Favorites list. You must also set
up My Favorites as an idea list tab.

• Voting: If you enable voting, you can choose to use simple or chip voting.

With chip voting, specify the number of chips allotted per user and the number of chips a user can give to a single
idea. Chips can be returned to the user once an idea they have voted on have reached a specific status.

 1113



 Rally®

NOTE
Enabling chip voting will reset all existing votes to zero.

• Categories: Use the Categories page to set up the categories from which you will choose when organizing ideas.
The character limit for a category name is 50; however, Rally recommends you limit the name to 30 characters or it
will be cut off in the dashboard's Category Distribution chart.

• Statuses: Use the Statuses page to set up statuses that you will use to communicate the progress of ideas to
community members.

• Submission Form: Use the Submission Form page to customize the submission form
used by community members to post ideas. To make changes to the form, select Edit Form

.

• To add a question, select Add Question, then select the format for your question. Specify your details on the
form that is presented and select Done to save your changes.

• To edit a question, select the Edit link to the right of the question. Select Done to save your changes.
• To remove a question, select the Remove Question link to the right of the question.
• To change the order of questions, move them up or down on the page by dragging the blue bar to the left of the

question. Select Save Order to save your changes.

Update or Hide an Idea

You may want to change an idea, or add tags.

To use this feature, your must first enable idea editing.

1. Use the search or idea list filters to find the idea that you want to change.

2. Select the idea title.

3. You will see information about the idea post:

• Select Edit idea to add more tags to the idea.
• Select Edit Idea to change tags or to edit idea information (other than comments). Make your updates and select

Update Idea to save them.
• Select Toggle idea visibility to remove the idea from searches, lists and filters. Use this to hide idea posts that

may be inappropriate. Hidden ideas are not included in reports or on the dashboard, but are included in community
statistics.

 1114



 Rally®

View a User's Ideas

You can view all the ideas an individual user has entered.

1. From the Ideas tab, select the user name you wish to monitor. If you don't see the user in the list of ideas, use the
Search field to find them.

2. The Ideas section contains a list with links to all the ideas an individual user has entered. The list also specifies the
status and the number of comments for the idea.

Reports

You can download information about ideas, votes, login history, search history, categories, API, trend tracking, and
follower information from Rally Idea Manager.

Downloaded data from the last 30 days is saved in .xls files where you have set up for downloads on your computer.

Hidden ideas are not reported.

1. Select the Setup tab, then select the Exports tab.

 1115



 Rally®

2. The Exports tab contains these pages:

• Ideas: Select the Ideas page to download information about ideas.

• You can filter the ideas export to include user profile data, include submission form data, and include idea
comments

• Select any of the check boxes as needed to include user profile data, submission form data, and idea comments.
The Score column on the report reflects the number of votes an idea has received. For example, an idea with 10
positive votes has a score of 10, and an idea with 10 positive votes and one negative vote has a score of 9.

• Select Idea Status Change History to view the status history of ideas.
• Votes: Select the Votes page to download information on the number of votes per idea.
• Users: Select the Users page to download information about users and their activity on the site. This includes the

number of ideas and comments posted, last login date, and voting statistics. Specify whether to include user profile
information.

• Login History: Select the Login History page to download information about login activity on the site. Specify
whether to include user profile information.

• Categories: Select the Categories page to download information on the number of ideas assigned to each
category.

• Trend Tracking: Select the Trend Tracking page to download trend history during a given date range.

Share Idea Links

To encourage other users to comment on or promote your ideas, you can email a link to the idea.

Only administrators have access to the vanity URL necessary for sending links to ideas.

Append the idea's ID to the URL. For example, http://companyname.brightidea.com/idea/D1103 .

NOTE
You can advertise this URL by displaying it in one of the guidance panels.

 1116



 Rally®

Manage Your Site and Users
If you have Rally Idea Manager administrator privileges, you can manage users and change settings for your sites.

NOTE
Some of the features listed here are currently in Beta. Contact your subscription administrator for more
information.

To have your Ideas site set up, please contact your Rally Sales Representative. If you are unsure of who to contact,
please contact Support for assistance.

Customize Your Homepage Header

By selecting the pencil button Administrators can customize the following:

1. Headline
2. Sub-headline
3. Buttons
4. Background image

 1117

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Set Up Your Site Features

You must be an administrator to be able to configure site features.

Be sure to select Save Changes on each page after you make any changes.

1. Select the Setup tab, which defaults to the Site tab.

2. The Site tab has several pages:

• Info: The Info page contains basic information about your site, including site's title, meta keywords and
descriptions, and the Vanity URL. Use the Vanity URL field if you wish to use your own URL for your site.

• Global Navigation: Select Global Navigation to customize the Global Bar including your logo.

The Global Navigation tab allows you to enable global navigation on selected WebStorms.
• Navigation: Use the navigation tab to customize and organize which tabs you see on your global navigation. You

can also add a navigation item by selecting Add a Navigation Item.

 1118



 Rally®

• Components: The Components page allows you to enable user profiles and RSS feeds. RSS feeds are available
for public sites only.

The contact email field defines the system email from which all email notifications come. If you leave this field
blank, the system notifications will come from the site administrator's email address.

 1119



 Rally®

Specify whether to display the Dashboard tab for all users. The default is to display only for administrators.

In the Site baby-sitter field, enter the email address that should be BCCed on all system-generated emails.

You can also elect to turn off all site emails.
• Advanced Email Options: You can enable daily or weekly mail digests to reduce the number of individual

notification emails users receive regarding their ideas. Users can select these enabled options in their profile
settings.

• Security: Use the Security page to determine whether the site is public or private, as well as how users may
register.

• On the What type of site do you want? field, select Private if you want users to log in to view ideas. Select
Public to allow everyone to view ideas.

• For registrations, select one of the following options:
• Everyone: Users can select the Register tab and enter their email address and receive an automated

registration email.
• Admin Invite Only: The Register tab is disabled. Users must be invited to participate by an administrator.

• Registration: You can restrict your participants through their email address domain so that only specified domains
are allowed to self-register.

• Select the Restrict Self-Registration by Email Domain check box.
• To remove a specific email domain, select the domain and select Remove Domain.
• Select Save Changes.
• Enter a domain (such as rallydev.com, brightidea.com, yahoo.com) and select Add Domain.

Only users using domains added to the right-most box can self-register.
• Terms and Conditions: Use the Terms page to enter the Terms and Conditions for the use and participation in

Rally Idea Manager. Basic HTML is allowed. Users must agree to the terms when they first log in. A link to the
Terms and Conditions is also displayed on most pages.

• Create and Manage WebStorms: On multi-site instances of Rally Idea Manager, time-boxed WebStorms can be
used as a place to have your users actively participate in themed discussions. For instance, you're doing research
on how better to serve QA personas. As an administrator, you might create a WebStorm around QA and ask those
interested to tell you their thoughts by posting and voting on ideas specific to that theme. This will provide targeted
feedback from a broad audience on a topic that you're researching.

• To create a new WebStorm:
a. Select the Create WebStorm tab.

 1120



 Rally®

b. Name your WebStorm.
c. Select a sponsor for your WebStorm by typing in the name of the owner. A sponsor is the administrator who

will own the WebStorm.
d. Define the topic of your WebStorm.
e. Select your URL for your WebStorm by entering the name of the Webstorm at the end of the URL.
f. You can add a template to use from the drop-down if you have saved templates from previously saved

WebStorms.
g. Schedule the WebStorm by selecting a date from the launch date drop-down and a close date.
h. Select Create Webstorm.

• To manage WebStorms: Use the Manage WebStorms page to change the status of your WebStorm, configure
templates, delete a WebStorm, and set up groups that can access specific WebStorms.

• You you can ask for feedback on a WebStorm by selecting WebStorm Feedback. You can select fields you
would like to include. Select Save Template to finish.

 1121



 Rally®

• Design: Use the Design tab to set up a custom banner. The banner will appear at the top of the screen under the
Global Bar and above Navigation.
You can add content to the banner area by uploading an existing image or by using HTML. An image should be
950 pixels wide and generally no more than 150 pixels tall. Using HTML allows you to use multiple images, custom
styling, animated GIF files, embedded video, and custom navigation.
You can choose from eight different pre-set colors for quick, overall color changes. You can also customize specific
elements such as the body, buttons, widgets, menu bar, idea list, and idea-specific elements. To customize these
elements, select the color square to choose from a palette or enter the five-digit hex code.
You can customize the existing CSS (cascading style sheet) or upload your own CSS. CSS allows a highly
customizable interface that can be easily integrated into the overall branding already established by your
company. With CSS, you can customize properties such as colors, fonts, styles, widget sizes, top navigation, and
background.

• Blog: Create blog posts that all users can read. You can specify whether users can post or comment. Users must
subscribe to see the blog, or they can be added by an administrator.

 1122



 Rally®

NOTE
You must first select the Blog field on the Components page to enable the blog.

• Extra Links: Use the extra links to add an additional URL to your site.
• System Email Messages: Use system email messages to communicate quickly and effectively to your customers

regarding the state of a WebStorm.
– Under the site tab System Email Messages, you can select from a list of system email messages and

customize the message that your users will see.

– Select the email template you want to customize, and the edit message options display. The dynamic field
dropdown allows you to display information that is constantly changing. For example, if you want to display an
idea title, place the cursor in the area of the body where you want the field to be inserted, select Idea Title from
the dropdown menu, and select Insert.

 1123



 Rally®

3. API: Rally Idea Manager employs the Brightidea Application Programming Interface (API) to empower you to create
custom reports or to automate data updating functions.

This API uses the Representational State Transfer (REST) protocol that requests data in the form of an HTTP request
and receives the data back in an XML format.

For more details about using API, see the Brightidea API documentation.

An API key is no longer required with the new API3 as it is fully self-service.

 1124

https://developer.brightidea.com/_documentation


 Rally®

4. Labels

Add Users

There are two ways to add users: user self-registration and administrator invitation.

Administrators can also view which users are registered.

User Self Registration

When you administer the security settings to allow users to register, users may select the Register link to sign up.

1. Select the Setup tab.
2. On the Site tab, select the Security page.

a. Select Everyone from the Which users do you want to allow to register? field.
b. Select Save Changes.

Administrator Invitation

You can invite one or more users to create an account by sending a registration invitation through email.

1. Select the Setup tab.
2. On the Users tab, select the Registration Invites page.

– To resend or edit an existing invitation, select the Recipients link next to an invitation to resend the invitation.
– To create a new invitation:

a. Select the Create New Registration Email button to send a new invitation to email addresses that you specify.
b. Enter the information needed to create the invitation, then select Send Invites.

 1125



 Rally®

– To import users:
a. Select the Create New Registration Email button.
b. Select Import Users to import a list of users from a CSV file.
c. Specify the users you wish to invite.
d. Select Send Invites to send the invitations.

View Who Is Registered

You can see who registered to join your community as a result of your email invitations.

1. Select the Setup tab.
2. On the Users tab, select the Registration Invites page.
3. Find your invitation in the list and select the Recipients link in the row to see a list of people who registered from your

invitation.

Manage Users

You can perform the following actions from the Users tab on the Setup tab.

• Find users and display information about them
• Block and unblock users
• Reset passwords
• Designate other users as administrators
• Set leaderboard points
• Invite users to join the community 

Find Users

1. On the Users tab, select the Manage page.
2. Enter search criteria in the field and select a user from the suggested user list.
3. Select Select to display more information about the user name you specified.

 1126



 Rally®

4. Select the show details link to display more information about the user.

Block and Unblock Users

1. Select a user.
2. Select the Block or Unblock button (as applicable) to change the user's status. Blocked users may not log in until

they are unblocked.
3. Select the Blocked Users page on the Users tab to see a list of blocked users.

Reset Passwords

1. Select the user.
2. Select the Reset Password button. An email with instructions for changing the password will be sent to the user.

Designate Administrators

1. Select the Administrators page on the Users tab.
2. Enter search criteria in the User field and select a user from the suggested user list.
3. Select the Add Administrator button to grant administrator privileges to the user you selected.
4. Select the X to the right of a user in the list to remove administrator privileges.

The Site Sponsor is the first site administrator who will configure, setup, and manage the site and WebStorms after they
are created.

 1127



 Rally®

Set Leaderboard Points

1. Select the Reputation page to specify how many points a user earns for registering, promoting, demoting, posting, or
commenting on an idea, and when a user promotes another user's idea.
– Values must be whole numbers, either positive or negative.
– You can change the values at any time, but changes are not retroactive.
– Define your point system based on actions for which you would like to motivate your users. For example, set a

higher number of points for posting ideas if you want more ideas submitted.

Invite Users to Join the Community

You can invite one or more users to create an account by sending a registration invitation by email.

Set Up User Guidance

Administrators can set up customizable text boxes to guide users in Rally Idea Manager.

Text boxes are optional. If you leave them blank they do not display. These text boxes can display on the following pages:

 1128



 Rally®

• Login page
• Ideas page
• Post Idea page

1. From the main Ideas page, select the guidance panels setup link.

2. Select Edit

to edit an individual text box.

Use HTML to enter your custom text. You can change the background color of the box or the font. You can also
change the size of the text box, but be sure to set the width so that it still fits within the screen.

3. To save your changes and close editing, select Edit

again.

Rally Idea Manager Integration Setup
To set up the integration between Rally and Rally Idea Manager, you will perform setup tasks in both tools.

 1129



 Rally®

NOTE
Some of the features listed here are currently in Beta. Contact your subscription administrator for more
information.

To have your Ideas site set up, please contact your Rally Sales Representative to get started. If you are unsure of who to
contact, please contact Support for assistance.

Integration Setup in Rally

For the Rally integration, you do not need to use one of your existing Rally user licenses. You are provided a free Rally
seat dedicated to Rally Idea Manager.

• Create a User in Rally for Rally Idea Manager.
• Create Custom Fields in Rally.

Integration Setup in Idea Manager

• Define the Parameters for the Connection to Rally.

Create a User in Rally for Rally Idea Manager

You must be a workspace or subscription administrator in Rally to create a user. If you do not have these permissions, ask
your Rally administrator to log in for you.

1. Select a workspace in Rally where you will create user stories from ideas.

2. Select Setup mode on the top-right menu.

3. Select the Users tab.

4. Select the + Add User button.

5. Enter the following information:

• User Name: rim_user@<yourcompanyname>.com
• Email Address: <your email address>
• Display Name: Rally Idea Manager

6. For the integration user you defined above, set the user permission to one of the following.

NOTE
Rally strongly recommends that you set a workspace user with only Editor permissions on projects in
which ideas will be promoted to stories. Setting the user permissions to either a subscription or workspace
administrator will result in performance degradation for Rally subscriptions that have multiple workspaces
and projects. Only use that option if you have one workspace and less than a dozen projects.

 1130

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

• Workspace user: Restricts the integration to create stories in one or more specific projects. Set workspace access
rights to User, then expand the Project tree and select Editor for each project where Rally Idea Manager will create
stories. Note: View permissions will not enable the integration.

• Workspace administrator: Restricts the integration to create stories in all projects for one or more specific
workspaces. Set workspace access rights to Admin for each workspace desired.

• Subscription administrator: Enables the integration to create stories in all workspaces and projects. Select the
Subscription Admin check box.

7. Leave the default values for the remaining fields.

8. Select Save and Close.

You will receive a welcome email from Rally with instructions for setting the password for
rim_user@<yourcompanyname>.com.

Create Custom Fields in Rally

You must be a workspace or subscription administrator in Rally to create custom fields. If you do not have these
permissions, ask your Rally administrator to create them for you.

1. Select Setup

from the Rally menu bar in the upper-right corner of the display.

2. Select Workspaces & Projects.

3. Select the workspace in Rally where you will create custom fields for user stories.

4. Select the Fields link in the sidebar.

5. From the Work Product Type drop-down menu, select User Story, Defect, or Portfolio Item.

6. Select New Field.

7. Create the Idea URL custom field with the following information:

 1131



 Rally®

This field provides navigation to the idea in Rally Idea Manager from Rally so Rally users can read the conversation
(idea comments) happening in Rally Idea Manager. Note that when linking multiple ideas to a story, a better place to
access the idea URL is in the story Discussions page where URLs for each linked idea are listed.

• Name: Rally_ideas_URL
• Display Name: Idea URL
• Type: Web Link
• URL: https://na5.brightidea.com/${id}

8. Select Save & Close.

Define the Parameters for the Connection to Rally

You must be an administrator in Rally Idea Manager to manage the connection between Rally Idea Manager and Rally.

Update the status of an idea when the schedule state changes for a related Rally user story, defect, or portfolio item.
When the Rally story changes to a schedule state of In-Progress or later, change the idea status to In-Progress.

Complete the following steps in Rally Idea Manager:

1. On the Setup tab, select the Plugins link.

2. Enter the information for your Rally Idea Manager user.

3. Optionally, specify default values for fields in Rally.

You must do this for every available workspace. Default values are case-sensitive. If a field is listed as required on this
screen, you will have to specify a default value.

The field type and allowed values display for the fields, which can help you determine a default value.

 1132



 Rally®

NOTE
The fields that display on this screen will vary based on the workspace you select.

4. Select Save.

5. Specify the idea status that should be updated when the corresponding user story, defect, or portfolio item status is
updated. Specify these statuses for each workspace.

If you select Do Not Update for each row, the Update statuses from Rally option is removed from the user interface.
Changes made to this screen take effect after an administrator selects the Update statuses from Rally link.

 1133



 Rally®

6. Select Save.

Manage Multiple WebStorms
Multiple WebStorm functionality allows your company to deploy multiple idea WebStorms.

Multiple idea WebStorms allow multiple product managers within the same organization to independently gather ideas and
enhancement requests in Rally Idea Manager, then integrate the ideas in their respective backlogs in Rally. The terms
WebStorm and Site are used interchangeably throughout the application and documentation.

Managing multiple WebStorms (Sites) includes:

• Multi-WebStorm Navigation
• Customize your WebStorm
• Manage Users and Groups
• Monitor WebStorm Usage
• Create a WebStorm
• Manage WebStorms
• Authenticate Users

Multiple WebStorms have an additional administrative role: system administrator. The system administrator creates
new WebStorms, designates the WebStorm sponsor for each WebStorm, and manages user groups. Only system
administrators have access to the Manage WebStorms tab.

Use the Manage WebStorms tab to create and manage WebStorms, run usage reports, and manage WebStorm access.
Once a WebStorm is created, a system or a WebStorm administrator can manage the details of individual WebStorms.
See Manage WebStorms for more information.

The Manage WebStorms page has four tabs: System, Users, Reports, and WebStorm. Each of these tabs have pages
where you can specify settings.

 1134



 Rally®

Your company may choose to create a separate WebStorm for each product it sells, for example, a software company
could set up a separate WebStorm for its sales, development, and marketing departments.

With multiple WebStorms, you can:

• Track product-specific statuses and categories
• Build a user community with a more focused target audience

Each WebStorm has its own:

• Branding and colors, name and description
• Security (public or private WebStorm, registration type)
• Set of registered users
• WebStorm sponsor
• URL
• Content: ideas, categories, tabs, statuses, submission form, reports
• Community and user statistics
• Leaderboard
• Rally Integration setup
• Guidance panels text
• Reports and dashboard
• Contact email

All WebStorms share:

• User credentials and passwords
• User profiles
• Blocked users

Multi-WebStorm Navigation

Once you have chosen to make your system multi-WebStorm instead of single WebStorm, you will also have
multiple homepages to help navigate between these WebStorms.

From the Enterprise Homepage, system administrators can access the WebStorms they have created. Changes made to
the settings on the Enterprise Homepage affect all the WebStorms on the homepage.

 1135



 Rally®

Each WebStorm will have its own homepage the Site Administrators can customize to their specific site. For information
on customizing your specific WebStorms, see Manage Your Site and Users. Each WebStorm has its own URL which you
can use to access the WebStorm. Alternatively, you can visit the landing page to view a list of all the WebStorms to which
you have access (https://<company-name>.brightidea.com).

Once you are in a WebStorm, to access a different WebStorm, select the View Sites tab on the navigation bar. Because
the tabs are customizable, your tab may be named differently.

If you log in and do not have access to any WebStorm, the following message displays: You do not have access to any
WebStorm. Please contact your administrator for assistance.

 1136



 Rally®

Archived WebStorms do not display. For closed WebStorms, you may browse and read ideas, but voting, commenting,
and idea submission are disabled.

Customize Your WebStorm

Each WebStorm can be customized to your site by adding a masthead or a logo to the global bar.

You can also add and change colors to match your site and logo.

1. Use the Components page to specify the contact email for your system of WebStorms. This email contact is for users
to reach the system administrators.

 1137



 Rally®

2. Use the Design page to specify a banner for the system login page. The banner is the area at the top of the screen.
You can add content to the banner area by uploading an existing image or by using HTML. An image should be 900
pixels wide and generally no more than 200 pixels tall. Using HTML allows you to use multiple images, custom styling,
animated GIF files, embedded video, and custom navigation. You can also add custom CSS to customize the site
further.

3. Select Save Changes on each page.

Manage Users and Groups

When you add users to a specific group, they have access to every WebStorm to which that group is assigned.

1. As system administrator on the Manage WebStorms page, select the Users tab.

Add Users to Groups

Group membership determines a user's access to a WebStorm. System administrators assign users to groups; groups
are assigned to WebStorms. The ALL group is a group that contains all registered users in all WebStorms in a system.
The ALL group cannot be modified or deleted.

When a system administrator creates a new WebStorm, a default group is automatically created for the WebStorm. The
group name is based on the WebStorm name and cannot be changed.

On the Groups page, you can search for a specific group, or display all groups. Highlight a group to display all its
members.

1. Select the Groups page.
2. Enter the user's name in the Name field and select Add Member. If a user has received an administrator's invitation

email from an individual WebStorm, she is automatically added to the default group created for the WebStorm.

 1138



 Rally®

3. To edit a group, select Edit

.
4. To add members to a group, enter a user's name in the Name field and select a user from the selected list.

If a WebStorm administrator blocks a user from one WebStorm, the user is blocked from all WebStorms.

System Administrators

Use the Administrators page to add and remove system administrators.

Monitor WebStorm Usage

The system administrator can run a usage report to view WebStorm information such as WebStorm status, login activity,
and number of ideas. This is a consolidated usage report across all WebStorms.

The report is in a Microsoft Excel format. Each line on the report represents an individual WebStorm.

 1139



 Rally®

The report includes:

• WebStorm Name
• WebStorm URL
• Privacy (Public or Private)
• Registration (Self or Admin)
• Created By
• Created Date
• WebStorm Sponsor Name
• WebStorm Sponsor Email
• Status (Active, Closed, Archived)
• Number of Users
• Number of WebStorm Administrators
• Number of Ideas
• Number of Ideas 30 Days Prior
• Number of Comments
• Number of Comments 30 Days Prior
• Number of Logins
• Number of Logins 30 Days Prior

Select the Exports tab, then select Download Usage for All WebStorms.

Create a New WebStorm

System administrators can create new WebStorms from the Manage WebStorms page.

When you create a new WebStorm, you must specify the WebStorm sponsor, vanity URL, and WebStorm name.

 1140



 Rally®

When you create a new WebStorm, the WebStorm sponsor is sent a system-generated email notifying them that their
WebStorm has been created. The email is also sent to the system administrator who created the WebStorm. The email
reads:

Dear <WebStorm sponsor name>,

Your <WebStorm name> WebStorm has been created. Select <URL link> to login or paste the following in to your

 browser <URL link>.

For more information on setting up your WebStorm, select here.

As a system administrator, you automatically have access to any WebStorm you create.

1. Select the WebStorms tab, then select the Create page.

2. On the Setup Wizard, enter a WebStorm name.

The name must be unique and contain 4–25 characters. The wizard will indicate whether your WebStorm name is
valid.

3. Enter a description.

This description displays on the WebStorm list page.

 1141



 Rally®

4. Enter the WebStorm sponsor's email address.

The sponsor is the first WebStorm administrator who will configure, setup, and manage the WebStorm after it is
created. System administrators can change a WebStorm sponsor at any time. The WebStorm sponsor can add
WebStorm administrators from their WebStorms.

5. The suffix field defaults to the WebStorm name. Optionally, you can change the vanity URL. This WebStorm sponsor
or future WebStorm administrators can change the WebStorm name, WebStorm description, and vanity URL later.

The base URL cannot be changed. These fields are automatically populated.

6. Select Create WebStorm.

7. On the New WebStorm window, select one of the following links:

• Go visit your new WebStorm. Go directly to the new WebStorm.
• Configure the WebStorm access groups. Go to the Manage page to define WebStorm access for users.

Manage Webstorms

1. As the system administrator, select the WebStorms tab, then the Manage page.

2. Select the WebStorm you wish to manage from the WebStorms drop-down list. To further refine your search, select the
Active, Closed, or Archived radio buttons.

Decommission a WebStorm

There are three ways in which you can decommission a WebStorm. No email notifications are sent when a system
administrator decommissions a WebStorm.

 1142



 Rally®

• Closed status: Users can view ideas, but not submit ideas, comments, or vote.
• Archived status: Only system administrators can view the WebStorm.
• Delete a WebStorm: Select the delete button next to the WebStorm name. At the prompt, select Yes. You cannot

recover data from a deleted WebStorm. The default group that was created for the WebStorm is also deleted.

CAUTION
Rally highly discourages WebStorm deletion.

Change the WebStorm Sponsor

You can change the WebStorm sponsor at any time. The new WebStorm sponsor and the current system administrator
receive an email notification of the change.

Define User Access to WebStorms

The system administrator can choose whether all users have access to a WebStorm (the default ALL group), or only users
in selected groups. The ALL group includes every user in the system and administrators cannot remove users from this
group.

Assign Groups to a WebStorm

1. You can use the search field and Search button to find a specific group, or select All to display all groups.
2. To assign groups to a WebStorm, select a group from the All Groups window and select the >> arrows. The group

displays in the Assigned Group window.
3. To remove groups from a WebStorm, select the group and select the Remove Group button to unassign a group from

a WebStorm.
4. To delete a group, select the group in the All Groups section and select the Delete Selected button. The ALL group

and default groups for each WebStorm cannot be deleted.
5. Select Save Changes at the bottom of the page to save any changes you make.

Authenticate Users

Multiple WebStorm administrators can set up a single sign-on (SSO) integration using SAML 2.0.

1. Select the Authentication tab, then the Auth Selection page. This page displays a list of available authentication
options. By default, only enable login and registration display. After you add an SSO method, the SSO option will
display.

2. To set up an SSO authentication, select the SAML Profiles page. For troubleshooting and testing information, refer to
the SAML SSO Setup Guide link at the top of the page.

 1143

https://en.wikipedia.org/wiki/Security_Assertion_Markup_Language
https://support.brightidea.com/hc/en-us/articles/205833277-Single-Sign-On-SSO-Setup-Guide


 Rally®

Service Provider Info Fields

Field Description

Assertion Consumer Service The endpoint URL for receiving SAML response. Select Change
to the right of the field to make any changes. Select Cancel link to
cancel changes.

Download Metadata Metadata is information used in the SAML protocol. It defines
attributes like service addresses and certificates. Download from
this link and upload it into your identity management setup.

Identity Provider Setting

Select Add New to enter a new profile.

Field Description

Upload Metadata Export metadata from your internal identity management system.
This metadata can auto-populate some of the fields in this profile.

Single Sign-on Service The URL of your single sign-on service page.

Identity Provider Issuer Specify the identity provider.

Upload Public Key Enter the certificate used for signature verification in
a SAML response.

Assertion Attribute Name Mapping These attributes are required when receiving SAML response: the
user's email address and screen name.

Customize SSO Settings

Select the Configure Advanced Settings link.

Field Description

Entity ID of this Profile This defaults to the value in the Service Provider section, but you
can specify a different value if necessary.

Logout URL The URL your users should go to after logging out.

Authentication Binding Specify how the authentication request is sent: post or redirect.

Signed Authentication Blank by default. Specify the signature algorithm for the
authentication request.

Create member on initial access If this field is selected, a user account is created automatically
upon initial access. Only users who have existing accounts have
access. Accounts are verified using either an email address or
value from the NameID attribute in SAML response.

Update member on subsequent access If this field is selected, a profile is updated from SAML response
attributes automatically for returning users. If not selected, user
attributes from SAML response will not overwrite existing user
profile data. Accounts are verified using either an email address or
value from the NameID attribute in SAML response.

 1144



 Rally®

Field Description

Profile Attribute Name Mappings Send profile attributes of the user in the SAML response. Map
the names of those attributes to the profile fields. Combine the
first and last names to create a screen name. A screen name is
required for user access. If your identity management system
cannot pass a screen name attribute on user SSO login, enable
this option to combine values from first and last name fields to
create a user’s screen name.

Group Attribute Specify an attribute name from the SAML response that contains a
user group value. The user is assigned to the group upon access.

Update Support Settings

Specify support contact information for users if they get a login error. You can specify whether your support contact
receives an email alert for login errors and whether to display the contact information for users. A Reference ID is
generated with every login error to help with troubleshooting.

1. Select Save Support Settings to save your changes.

View SAML Transaction Log

Select the Go to SAML Transaction Log link to view every user access for the last 30 days.

• You can filter and sort on each column in the log.
• The list provides access to all SAML activities from last 30 days.
• Select a Transaction ID link to open the Transaction Detail page.

Set Up Site Features
The following instructions are for administrators to set up and manage their Rally Idea Manager site.

1. Select the Setup tab, which defaults to the Site tab.

NOTE
Be sure to select the Save Changes button on each page after you make any changes.

2. The Site tab has seven pages:

• Info: The Info page contains basic information about your site, including site's title, meta keywords and
descriptions, and the Vanity URL. Use the Vanity URL field if you wish to use your own URL for your site.

• Components: The Components page allows you to enable user profiles and RSS feeds.

• Specify whether to display the Dashboard tab for all users. The default is to display only for administrators.
• RSS feeds are available for public sites only.
• The Contact Email field defines the system email from which all email notifications come. If you leave this field

blank, the system notifications will come from the site administrator's email address.
• In the Site "baby-sitter" field, enter the email address that should be BCCed on all system-generated emails.
• You can also elect to turn off all site emails.
• Advanced Email Options: You can enable daily or weekly mail digests to reduce the number of individual

notification emails users receive regarding their ideas. Users can select these enabled options in their profile
settings.

 1145



 Rally®

• Security: Use the Security page to determine whether the site is public or private, as well as how users may
register.

• On the What type of site do you want? field, select Private if you want users to log in to view ideas. Select
Public to allow everyone to view ideas.

• For registrations, select one of the following options:
Everyone: Users can select the Register tab and enter their email address and receive an automated
registration email.
Admin Invite Only: The Register tab is disabled. Users must be invited to participate by an administrator.

• Registration: You can restrict your participants through their email address domain so that only specified domains
are allowed to self-register.

a. Select the Restrict Self-Registration by Email Domain check box.
b. To remove a specific email domain, select the domain and select Remove Domain.
c. Select Save Changes.

• Enter a domain (such as rallydev.com, brightidea.com, yahoo.com) and select Add Domain.
Only users using domains added to the right-most box can self-register.

 1146



 Rally®

• Terms: Use the Terms page to enter the Terms and Conditions for the use and participation in Rally Idea Manager.
Basic HTML is allowed. Users must agree to the terms when they first log in. A link to the Terms and Conditions is
also displayed on most pages.

• Design: Use the Design page to set up the overall look and feel of Rally Idea Manager.

• The banner is the area at the top of the screen. You can add content to the banner area by uploading an existing
image or by using HTML. An image should be 950 pixels wide and generally no more than 150 pixels tall. Using
HTML allows you to use multiple images, custom styling, animated GIF files, embedded video, and custom
navigation.

• You can choose from five different pre-set colors for quick, overall color changes. You can also customize
specific elements such as the body, buttons, widgets, menu bar, idea list, and idea-specific elements. To
customize these elements, select the color square to choose from a palette or enter the five-digit hex code.

• You can customize the existing CSS (cascading style sheet) or upload your own CSS. CSS allows a highly
customizable interface that can be easily integrated into the overall branding already established by your
company. With CSS, you can customize properties such as colors, fonts, styles, widget sizes, top navigation,
and background.

• Blog: Create blog posts that all users can read. You can specify whether users can post or comment. Users must
subscribe to see the blog, or they can be added by an administrator.

NOTE
You must first select the Blog field on the Components page to enable the blog.

 1147



 Rally®

API Access
Rally Idea Manager employs the Brightidea Application Programming Interface (API) to empower you to create custom
reports or to automate data updating functions.

This API uses the REST protocol that requests data in the form of an HTTP request and receives the data back in an XML
format.

For more details about using API, see Overview, Methods, and Sample Code.

 1148

https://www.brightidea.com/api1/


 Rally®

Extending Rally with Apps
Learn how to add apps to extend Rally and customize your views and dashboards.

Your Rally subscription includes a catalog of Rally apps that you can add to custom page to add functionality or a custom
data view. You can also create your own custom apps to add to Rally through a custom page.

You can also use the Rally App SDK and Web Services API to build apps of your own that you can use on custom pages.

• Using Rally Apps
• Building Apps for Rally

Using Rally Apps
An app allows for the combination of data from more than one source into a single, integrated page within Rally. Rally
offers custom apps and managed apps.

A catalog of managed apps is available to Rally users. These managed apps can be easily installed in custom pages
within Rally, or on your dashboard.

Custom apps combine the information you have stored in Rally with HTML, JavaScript, and an API to render and
manipulate data to suit your specific needs.

You can add an app to an existing dashboard or custom page or create a new custom page specifically for the app. Learn
more about creating a custom page.

Install an App

1. Select the gear

at the top right of the page and select Add App.
2. In the App Catalog window, search or use the Source or Category filters to locate an app from the App Catalog

window and select Add.

 1149



 Rally®

NOTE
Use Shift + Add to keep the catalog open after adding an app.

You can display the apps in a list or by tiles using the view results toggle.

App Basics
You can further customize your page by moving apps, editing app settings, creating custom apps, or using custom
queries. You can add or remove apps as your needs change.

Some apps allow you to build custom queries that filter work items based on entries in various fields. Learn more.

Move an App on a Page

Select the top bar of the app and drag the app into one of the columns. You can drag the app above or below any app that
is currently in the column you are moving it to.

 1150



 Rally®

View an App in Full Screen

You can view apps in full screen.

NOTE
Some features may not work properly when viewing an app in full screen.

1. To view an app in full screen, select full screen

in the top bar of the app.

Edit App Settings

Each app has its own settings menu where you can adjust the settings of the app. The options present in the settings
menu will vary based on the app.

1. Select the gear

at the top of the app and select Settings.

 1151



 Rally®

Remove an App from a Page

You can remove an app from a page.

1. Select the gear

in the top bar of the app and select Delete App.
2. Select Delete to confirm.

Adjust App Height

To increase or decrease the vertical size of an app, select and drag the gripper icon at the bottom of of the pane:

Some apps, such as boards and custom apps, can automatically adjust the vertical space to display all visible data.

NOTE

• If a gripper icon is not present at the bottom of an app, the vertical size cannot be adjusted.
• Manually adjusting the vertical size by dragging with the gripper icon will clear the Auto Height setting, if

applicable.
• The Auto Height setting can only be enabled when there is only one app in a dashboard or custom page

column. Moving an app underneath one with the Auto Height setting enabled will clear the option.
• Apps that support the Auto Height setting will have it enabled when the app is installed only if there are no

other apps in the column.
• To print the full contents of an app through the right-click menu, disable the Auto Height setting first.

1. Select the gear

in the top bar of the app and select Settings.
2. In the app settings menu, select the Auto Height check box.

 1152



 Rally®

Customizable Apps
The Rally app catalog also contains customizable apps. You can install these apps to manipulate Rally data, use your own
custom code, or access external web resources.

NOTE
The Custom URL or Custom HTML apps must be enabled by a system administrator. Learn more.

The Custom HTML app Allows you to insert your own custom HTML or Javascript code.

The Custom List app Allows you to sort and filter Rally data in a list-based format.

The Query field in the app settings menu provides you with the ability to filter the data with SQL-style
queries through the Rally Web Services API.

The Custom URL app Allows you to view external web resources or websites within a custom page.

Apps Not Available for Rally On-Premises
The following apps are not available to Rally On-Premises customers:

 1153



 Rally®

• Cycle Time Chart (Community)
• Cycle Time Data (Community)
• Milestone Burnup
• Milestone Cumulative Flow
• Portfolio Item Burnup
• Portfolio Item Cumulative Flow
• Portfolio Item Scope Change Chart (Community)
• Project Cumulative Flow
• PSI Feature Burnup (Community)
• Release & Iteration Burndown
• Super Customizable CFD (Community)

Learn more.

App Catalog
Rally has many apps to augment your experience.

Available Apps

The following is a list of all available apps that may be installed on your Dashboard page or on personal and shared
custom pages

NOTE
For a list of deprecated apps, see App Deprecation.

Name Description

Boards

Custom Board Customize the way you view work items on a board.

Estimation Board View user stories, defects, and defect suites organized by plan
estimate sizes.

Iteration Planning Board View the progress of user stories and defects ready to be
scheduled, as if looking at a whiteboard.

Iteration Tracking View the progress of user stories and defects in your iterations, as
if looking at a whiteboard.

Kanban Board Manage pull-based, lean software development projects with other
iterative and timeboxed projects.

Portfolio Kanban Board Track the status of your portfolio items as they move along in your
portfolio process.

Print Story Cards Formats selected story information into cards that can be printed
and used on a physical scrum wall.

Print Task Cards Formats selected task and story information into cards that can be
printed and used on a physical scrum wall.

Release Planning Board Schedule lowest-level portfolio items (features) into releases.

Task Board View tasks in the current iteration, as if you were viewing a
whiteboard.

Compliance and Regulatory Templates

 1154



 Rally®

Name Description

System Requirement Validation Document See how functional and nonfunctional requirements are
implemented by generating a printable report.

Traceability Matrix Trace from product requirements to test cases and corresponding
results.

Custom

Custom Board Customize the way you view work items on a board.

Custom HTML Build a custom app using HTML and Javascript code that you
specify. You can use data from Rally's web services interface.

Custom List Use custom queries on work item fields to sort and filter Rally data
in a list-based display.

Custom URL Build a custom app using HTML and Javascript code that you
specify. You can use data from Rally's web services interface.

Developer Tools

Build Health View proportions of build successes to failures along with build
duration for the past 30 days.

Build Health by Iteration View proportions of build successes to failures along with build
duration for the past 10 iterations.

Source Code Check-In View changeset and check-in details for the last 20 check-ins for
your projects in scope.

General

Getting Started for Contributors Provides guidance for developers, testers, tech writers, and other
individual contributors to help them manage their work.

Getting Started for Executives Provides guidance for portfolio managers, directors, and
executives to help them understand what is happening across
multiple initiatives or teams.

Getting Started for Organizers Provides guidance for project managers, product owners, or
scrum masters to help them plan and track work for a team.

Tip of the Day Provides you with a short piece of advice each time you visit the
page.

Hierarchies

Portfolio Hierarchy View a hierarchy of portfolio items, user stories, and tasks in a
tree layout. Create, edit, and re-parent work items from a single
location.

Story Hierarchy View a hierarchy of user stories and tasks in a tree layout. Create,
edit, and re-parent work items from a single location.

Iteration Management

Incomplete Stories for Current Iteration View user stories in the current iteration that have not been
completed or accepted.

Iteration Burndown View work remaining in the iteration to proactively anticipate
whether the committed work will be delivered by the end of the
iteration.

Iteration Burnup View work delivered so far in the iteration to proactively anticipate
whether the iteration scope will be delivered.

 1155



 Rally®

Name Description

Iteration Cumulative Flow View work-in-progress status to determine the trend in lead time
for delivery of working code.

Iteration Dashboard View a graphical summary of scheduled work, test cases, defects,
and a burndown chart with a visual indicator of iteration health.

Iteration Defects by Priority View any non-closed defects in the iteration, categorized by
priority to assess end-of-iteration technical debt.

Iteration Defects by State View all defects in the iteration, categorized by state to assess
end-of-iteration technical debt.

Iteration Planning Board View the progress of user stories and defects ready to be
scheduled, as if looking at a whiteboard.

Iteration Scope Change See any scope changes after the team has committed to an
iteration.

Iteration Summary View team progress against an iteration based on the status of
work, defects, and test cases. Colored indicators help address
problems as they occur.

Iteration Tracking View the progress of user stories and defects in your iterations, as
if looking at a whiteboard.

Kanban Board Manage pull-based, lean software development projects with other
iterative and timeboxed projects.

Ready to Accept See work that is ready to accept.

Super Customizable Iteration Chart View iteration burndown data with multiple chart type, trend
display, and color options.

Unassigned Tasks for Current Iteration See all tasks in the current iteration where the Owner field is
blank.

Team Member Board A board view of the Team Members for each of your Projects.

Personal Work

My Availability View your number of available capacity hours entered versus the
number of assigned task hours for multiple iterations.

My Defects View defects you own.

My Notifications View notification alerts generated per rules entered in the My
Notification Rules section of Rally setup.

My Tasks View tasks you own.

My Test Cases View test cases you own.

Planning & Estimation

Blocked Work View what is currently blocked in your workspace and who
blocked it.

Cycle/Lead Time View the average number of days it takes for work to flow through
your process.

Dependency Status Dashboard View cross-project dependencies between user stories in
upcoming iterations.

Estimation Board View user stories, defects, and defect suites organized by plan
estimate sizes.

 1156



 Rally®

Name Description

Iteration Planning Board View the progress of user stories and defects ready to be
scheduled, as if looking at a whiteboard.

Iteration Scope Change See scope changes after the team has committed to an iteration.

Planned vs. Actual Burndown Chart View a release burndown chart comparing ideal with actual
progress, including a table of figures.

Project Cumulative Flow See the work-in-progress status to analyze the delivery trends of a
project or on a team.

Release Planning Board Schedule lowest-level portfolio items into releases.

Release Scope Change See scope changes after the team has committed to a release.

Story Map See a top-level view of a user story hierarchy across multiple
iterations.

Throughput View the count of work items accepted in a given interval (weeks,
months, quarters).

Velocity Chart View the trend in value delivery, including work accepted after
the iteration, completed work not yet accepted, best, worst, and
average velocity.

Portfolio / Program Management

Agile EVM View the Earned Value Management metrics for the current Rally
release.

Milestone Burnup View how work is tracking to a target date.

Milestone Cumulative Flow View the flow of work for a milestone target date to view potential
process bottlenecks.

Portfolio Hierarchy View a hierarchy of portfolio items, user stories, and tasks in a
tree layout. Create, edit, and re-parent work items from a single
location.

Portfolio Item Burnup Track the delivery trend on work associated with a portfolio item.

Portfolio Item Cumulative Flow View a work-in-progress analysis on the delivery trend for a
portfolio item.

Portfolio Item Timeline See how portfolio items are progressing.

Portfolio Kanban Board Track the status of your portfolio items as they move along in your
portfolio process.

Release Planning Board Schedule lowest-level portfolio items into releases.

Quality

Defect Summary Matrix View a breakdown of defects in a release by the State and Priority
fields.

Defect Trend Compare cumulative defects opened versus closed over time,
indicating whether the trend is increasing or decreasing.

Defects by Priority View non-closed defects for the past 30 days, categorized by
priority.

Defects by State View all defects for the past 30 days, categorized by state.

Open Defect Age View the mean age of defects.

 1157



 Rally®

Name Description

Release Defect Trend Compare cumulative defects opened versus closed in a release.

Release Management

Cross Workspace Release Status View of work items assigned to a release across multiple
workspaces that share the same release schedule.

Dependency Status Dashboard #2 View cross-project dependencies between user stories in
upcoming iterations.

Milestone Burnup View how work is tracking to a target date.

Milestone Cumulative Flow View the flow of work for a milestone target date to view potential
process bottlenecks.

Planned vs. Actual Burndown See a release burndown chart comparing ideal with actual
progress, including a table of figures.

Release & Iteration Burndown View delivery trend on work associated with a selected release or
iteration.

Release Burnup View work delivered in the release to proactively anticipate
whether the release scope will be delivered.

Release Cumulative Flow View work-in-progress status to analyze the trend in lead time for
release value delivery.

Release Dashboard See a graphical summary of scheduled work, test cases, defects,
and a burndown chart with a visual indicator of release health.

Release Defect Trend Compare cumulative defects opened versus closed in a release.

Release Dependencies View a table of user stories scheduled for the selected release that
have a predecessor or successor.

Release Planning Board Schedule lowest-level portfolio items into releases.

Release Scope Change See scope changes after the team has committed to a release.

Release Summary View stories and defects accepted in a release.

Super Customizable Release Chart View release burndown data with multiple chart type, trend
display, and color options.

SAFe (Scaled Agile Framework)

Portfolio Item Timeline See how portfolio items are progressing.

Release & Iteration Burndown View the trend of work associated to a specific release or iteration
in burndown format. A predictive line is provided based on recent
team velocity.

Utilities

Custom URL Build a custom app using HTML and Javascript code that you
specify. You can use data from Rally's web services interface.

Print Story Cards Format selected user story info into cards that can be printed and
used on a physical scrum wall.

Print Task Cards Format selected task info into cards that can be printed and used
on a physical scrum wall.

Recent Activity See recent comments in your workspace, and who commented.

 1158



 Rally®

Name Description

Story Deep Copy Makes a deep copy of a story that contains copies of all its
children and tasks.

User Lookup Provides the ability to easily filter, search, and edit users.

Agile EVM
Agile EVM is an adaptation of the traditional project management practice of measuring actual value of integrated
cost, schedule, and scope against a baseline plan using Earned Value Management (EVM) metrics. The methods of
measurement have been adapted to easily fit within the Scrum project management framework.

Source code is available: Agile EVM source code

For information on Agile EVM calculations, see:

• Agile EVM: Measuring Cost Efficiency Across the Product Lifecycle, Tamara Sulaiman, Oct 2007
• Measuring Integrated Progress on Agile Software Development Projects, Methodsandtools.com, Oct 2007

To provide valuable results, your agile team should do the following:

• The project should have at least one release.
• Developers must consistently populate the Actuals field on all their tasks.
• All release stories should have their Planned Estimate field populated during release planning.
• Iterations are required for the release you are reporting on.

Agile EVM Default Values

The app assumes the following default values:

• Blended hourly rate for an employee: Default = $50/hour
• Ratio between story points and task hours: Default = 5
• Variance for Green, Yellow, and Red indicators: Default = 5

NOTE
Changing the variance value results in the following percentage change to the variance indicator:

• Variance of 5: >95% green, 85% to 94% yellow, < 84% red
• Variance of 10: >90% green, 80% to 89% yellow, < 79% red

 1159

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/AgileEVM.html
https://www.infoq.com/articles/agile-evm/
https://www.methodsandtools.com/archive/archive.php?61


 Rally®

You can change the default values by editing the app's global variables.

1. Create a custom page.
2. Add a Custom HTML app to the custom page.
3. Copy the code from the Agile EVM app in the Rally app catalog to the newly created Custom HTML app and edit the

following variables in the Global Variables section of the code:
– Billable_rate : Blended hourly rate for an employee.
– Multiplier : Number of hours in an ideal developer day. For example, if a story point is equivalent to five hours of

developer work, the multiplier is 5.
– baseVar : Variance for green, yellow, and red indicators. Options are limited to 5 or 10.

Blocked Work
The Blocked Work app displays which user stories and defects are currently blocked in your project scope.

Source code is available: Blocked Work source code

The app includes:

• The FormattedID, which links to the work item's detail editor page.
• The date when the work item was blocked.
• The person who blocked the work item.
• The blocked reason (if provided).

Build Health
The Build Health app allows you to view proportions of build success to failure along with build duration for the past 30
days.

Data is displayed in the app in the same format as the Build Health Chart. Selecting the chart takes you to the Reports
tab, where you may view additional information (including a key).

 1160

https://github.com/RallyApps/app-catalog/tree/master/src/apps/blockedwork


 Rally®

To modify the Build Health app settings:

1. In the gear

menu, select Settings.
2. To enable the legend for the app, select Show Legend.
3. To change which build displays, use the Build Definition drop-down menu.
4. Select Save.

Build Health by Iteration
The Build Health by Iteration app allows you to view proportions of build success to failure along with build duration for the
past 10 iterations.

Data displayed in the app is in the same format as the Build Health Chart, with the x-axis representing iterations instead of
days.

To configure the Build Health by Iteration app:

1. In the Gear

menu, select Settings.
2. To enable the legend for the app, select Show Legend.
3. To change which build displays, use the Build Definition drop-down menu.
4. Select Save.

Clarity Timesheet
This app allows users to enter their time from Rally into Clarity.

 1161



 Rally®

The Clarity timesheet app provides an easy way to launch into a configured Clarity timesheet. For more information, see
the Clarity documentation for your version.

• Using Timesheets in Clarity
• Using Timesheets in Classic PPM

Requirements:

• If your browser has pop-up windows disabled, the app will not open automatically. Enable pop-up windows for the app
to work properly.

• Clarity version 15.2 or above
• Clarity must use HTTPS

 1162

https://techdocs.broadcom.com/us/en/ca-enterprise-software/business-management/clarity-project-and-portfolio-management-ppm-on-premise/15-9-2/using/new-user-experience-enter-hours-and-submit-a-timesheet.html
https://techdocs.broadcom.com/us/en/ca-enterprise-software/business-management/clarity-project-and-portfolio-management-ppm-on-premise/15-9-2/Using-Classic-Clarity-PPM/submit-a-timesheet.html


 Rally®

Adding and Configuring the Clarity Timesheet App

Add this as the only app on a custom page in Rally.

1. Create a new custom page and select Start adding apps to view the app catalog. Learn more.

2. In the app catalog, type timesheet in the Search field to display the Clarity Timesheet app.

3. Select Add.

4. Select the Gear

at the top of the app and select Settings.

5. Enter the following information:
a) Clarity hostname (for SSO the IdP URL).
b) The port number (HTTPS).
c) If your Clarity system uses SSO, you will also need to enter the Clarity host relative path.

6. Select Save.

Using the Clarity Timesheet App

The timesheet launched from the app does not have full Clarity functionality, only a limited view.

When the app is loaded, a new tab or window launches with information from the configured Clarity server. If the tab or
window was previously launched from the app, it will open automatically when the app is loaded. Otherwise, the app
launches a new tab when you select the link.

 1163



 Rally®

If a standard Clarity client is already open in another tab (that was not launched by the app), the app still launches the
limited timesheet view in a new tab.

1. Open the custom page that contains your Clarity Timesheet app.

2. Select Click here to access or re-launch Clarity.

If you do not have an existing Clarity session, you will need to authenticate.

3. If your timesheet for this time period is not already available in Clarity, select one of the following:

Select Create Timesheet.

• Copy previous timesheet (time period): copy the timesheet information from the previous time period.
• Work to timesheet: create a new timesheet.

4. Enter your time information in the timesheet.

Cross-Workspace Release Status
The Cross-Workspace Release Status app provides a management view of work across workspaces that share the same
release schedule.

Source code is available: Cross Workspace Release Status source code

A shared release schedule is determined by a set of releases with the same names, start, and end dates.

In the app, you can:

 1164

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/CrossWsReleaseStatusMashup.html


 Rally®

• View all user stories, defects, and defect suites in shared releases.
• View FormattedID, Name, Schedule State, Plan Estimate, Task Estimate, and To Do field values.
• View blocked work in releases, identified by a red schedule state icon.
• Print the app contents from the Actions menu.
• Use the Release drop-down menu to view past and future shared releases.

If a release with the same name and different dates exists, the Release drop-down list displays the unique dates.

Custom Board
The Custom Board app provides you with a way to view and edit work items.

Similar to the Custom List app, you can add multiple copies of the app to a page and set each app to display data from
multiple projects, iterations, releases, work item types, or other criteria. Is a custom board or a Kanban board right for your
team? Learn more.

• Use drag-and-drop controls to quickly change the state of a work item.
• Add new work items to the board.
• Accept a work item from the front of the card.
• Block a work item and include a reason on the front of the card.
• Customize the fields you see on cards.
• Edit fields directly from the front of the card.
• Change the color of the card.
• Use advanced filtering capabilities.
• Customize the columns on the board.
• Add swimlanes to the board.

Source code is available: Custom Board source code

 1165

https://github.com/RallyApps/app-catalog/tree/master/src/apps/board


 Rally®

Configure the Custom Board App

Settings through this app are per project. Project administrators may only change app settings in projects they administer.

1. From the gear

menu, select Settings.

2. You can modify the following settings for the Custom Board:

• Change the default Title.
• Specify the Project scope.

You can set the board to change its data with your global project picker, or you can choose a specific project or
group of projects to work from. When the app resides on a custom page shared with an entire workspace, only
workspace administrators and subscription administrators may edit global settings.

• Select Follow Global Project Setting to have the contents of the board change according to your global project
picker.

• Select Choose Specific Project if you want to see another project's work, regardless of your global project
setting.

If your board is installed on a shared custom page, select the Default Settings check box to use the settings
selected in the lower section of the menu for all projects in the workspace. Changes you make to columns, fields
displayed on cards, and other options will be used when viewing the board from any project.

 1166



 Rally®

If you have previously saved settings for the app while viewing it from a specific project, those settings will not be
overwritten when checking the Default Settings check box. Any changes you save while this check box is empty will
be project-specific.

• Select the columns to display.
• Select whether you want to include swimlanes.

Swimlanes are horizontal rows that can be applied to a board for a team to easily visualize work items by category
or sub-process. Administrators can choose custom fields to be used as swimlanes on the Kanban Board.

When you add swimlanes that are based on a custom field, the field values will be ordered alphabetically as lanes.
You may force a specific value to the top by adding a numerical prefix to the field value name, for example, 1 - Blue
or 2 - Green.

NOTE
Best Practice: The most common usage in kanban is to add an Expedite swimlane. You can use this
swimlane to visualize a single work item that is allowed to violate work in progress (WIP) limits. This work
item receives priority treatment over other work items in a column.

• Select the order of how you want cards to display.
• Specific queries you want to add.

3. Select Save.

Custom Board Cards

Cards allow you to view or update items on the Custom Board.

Update Card States

Each card resides in a column according to its current state. To update the state, drag-and-drop the card into the
appropriate column.

Edit Card Details

You can edit fields directly on a card.

1. Select an editable field on the card and edit. For example, you can edit the name, the Estimate, To Do, and Owner
fields on a task card.

2. To view or edit more details on a card:
a. Hover over the card.
b. Select the gear (Actions) menu, and select Edit.

 1167



 Rally®

Add New Work Items

You can add new work items of the type defined in the board settings.

1. Select the Add New button at the top of the app to add a task, defect, defect suite, test set, or user story. If you are
adding a task, you must also specify the parent from the drop-down menu.

2. To quickly add a work item (without details), enter a Name and select Add.
or
To add a work item with details, select Add with Details.

 1168



 Rally®

Filter Cards

You can filter cards by owner, or you can use the advanced filtering option.

1. Select Filter

to display the filtering tray.
2. Select Add Filter to add quick filters.
3. Select Advanced Filters to add advanced filtering. Learn more..

a. To hide your advanced filters select Hide Advanced. You can see how many filters are applied as the filter icon will
list active filters numerically.

b. To clear your filters, select Clear Advanced Filters. Your filters will remain active when you navigate away from
the page.

Select Fields to Display on Cards

You can show or hide fields on cards.

1. Select Show on Cards.

2. Search or scroll to select fields to display on the cards. Clear fields that you do not want to display.
NOTE
ID, Name, and Owner are grayed-out in the list because they are always displayed.

3. Select Apply to save your changes.

Mark Cards as Blocked or Ready

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to notify your team of a
problem. Blocked cards display on the board with a red border.

When a card is ready to move to the next stage of development, you can mark it as ready to update your product owner or
other team members. The card displays on the board with a green border.

 1169



 Rally®

1. Hover over a card to display the menu at the bottom of the card.
2. To mark a card as blocked, select Blocked

.
a. After Blocked

is selected, the Blocked Reason field displays. Type the reason for the blocked status, then select outside of
the card to save. You can edit the Blocked Reason by selecting the field on the card. When a blocked status is
removed, the Blocked Reason field is cleared.

3. To mark a card as ready, select the Check Mark
.

Choose a Color for Cards

Hover over a card and use the Color Picker

to change the top border of the card.

 1170



 Rally®

Copy or Delete a Card

Copy or delete a work item by hovering over a card and selecting the Gear

.

Custom Board App Actions

Action How To

Change status Drag-and-drop a card from one state column to another.
Expand or collapse rows Select the arrows on the right side of the row to expand or

collapse.
Select cards to display on the board Select Show on Cards. You can search for fields to add to the

cards and select the check box next to the field to display it on the
card.

Add new work items Select the Add New button at the top of the board.
Filter cards on the board Select Filter

.
You can refine what you see on the board by selecting multiple
Fields, Operators and Values.

Filter by owner Select the Show work owned by drop-down menu and choose a
team member name. User stories and tasks in the iteration owned
by the team member display.

Show additional fields on cards Select Show on cards, located next to the Filter options, and
select or clear check boxes for fields you want to show on the
cards on the board.

 1171



 Rally®

Action How To

View or edit fields Select an editable field on the card. Changes are automatically
saved when you select away from the card. You can also hover
over a card, select the gear menu and select Edit.

Delete a card Hover over the card, then select the gear menu from the bar at the
bottom of the card and select Delete. The task is recoverable from
the Recycle Bin.

Block and unblock cards Hover over the card and select Blocked
.

To unblock, select the now red Blocked

again.
Mark as ready Hover over the card and select the Check Mark

.
The card will display a green border along with a green check
mark when marked ready to pull.

View associated story details Hover over the user story ID to view the percent done, owner and
state fields. Select the user story ID to open the detail page for
that story.

Add a discussion Hover over the card, then select the

to add or respond to a discussion.

Custom HTML
The Custom HTML app allows you to create an app using your own custom HTML and Javascript code.

WARNING
Enabling custom app pages allows users to create pages containing HTML, JavaScript, and other client-side
scripting languages. Your subscription administrator must enable custom apps. Customers should consider
and follow their own security policies and procedures when developing and implementing custom HTML pages.
Improper implementation can expose your subscription to Cross Site Scripting (XSS) security vulnerabilities
such as code injection and the manipulation of client-side applications by malicious users. Handle output
properly by encoding or using an escaping sequence, validating user-supplied input, and using HTTPOnly
cookie flag. For more information, please visit XSS (Cross Site Scripting) Prevention Cheat Sheet.

 1172

https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html


 Rally®

IMPORTANT
You are responsible for developing and maintaining the custom code entered into the Custom HTML app. Code
may be written in HTML or Javascript, and query data using Rally's Web Services API and App SDK.

View Source Code of an Installed App

You may quickly obtain the code from an existing Custom HTML app to make a copy or edit details.

1. Select the app Gear

,
then select View Source.

 1173

https://rally1.rallydev.com/slm/doc/webservice
https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/


 Rally®

2. From the window, select Select All to highlight the app code.
3. Copy the highlighted code.
4. Paste the code into a new Custom HTML app or editor and make your changes.

Custom List
The Custom List app is a powerful tool for helping manage work across enterprise teams. It is utilized commonly in
custom pages and dashboards, which are some of the most heavily used pages in Rally.

These pages help focus in on and manage the work most cared about, while also communicating real-time status
with the rest of the organization. You can use the Custom List app to prepare, plan and track portfolios, programs and
development work.

NOTE
The Custom List app has full WSAPI 2.0 support. This means full support for objects such as Milestones.
However, this also means that you cannot just use the display name for custom fields. The full WSAPI field
name must be used. For example, c_customfieldname should be used instead of customfieldname. A query will
fail if the full WSAPI field name is not used.

The Custom List app allows you to set up a view of set of work items. You can add multiple copies of the app to a page
and set each to display data from multiple projects, iteration, releases, work item types, or other criteria. For example, you
can create one app pulling data from dozens of projects and another one focused on a specific project filtered by iteration,
release, and so on.

You can choose which fields display inside of the app and (with most fields) edit the values directly by double-clicking. You
can change the owner of several selected user stories, or associate a group of defects to a user story.

NOTE
The Custom List app does not have full multi-artifact hierarchical support. The app supports one top-level work
item (artifact) type at a time. Work items beneath the top-level work item in the view are shown hierarchically.

Source code is available: Custom List source code

Configure the Custom List App

1. From the app gear menu, select Settings.

2. Select the project settings.

• Select Follow Global Project Setting to have the contents of the list change according to your global project
picker.

• Select Choose Specific Project if you want to see another project's work, regardless of your global project setting.

 1174

https://github.com/RallyApps/app-catalog/tree/master/src/apps/customlist


 Rally®

3. Select the Type of work items to include in the list.

4. The Query field provides you with a way to filter the data displayed using multiple criteria. You can enter SQL-style
queries into the field to find specific work items based on their state, owner, or other fields. For example, you can filter
all user stories in project X, completed in iteration Y, owned by user Z, with a tag of A.

• Learn more about building app queries.
• Learn more with general query examples.

5. Select the Show Control Bar check box to enable adding new work items, filtering, and showing columns on the list.

Add New Work Items in a Custom List App

Add a new work item, based on the type selected in the app settings.

NOTE
The Add New component will NOT automatically set filtered fields. For example, if you create a Custom List that
is filtered by Owner, the Add New component will not automatically set the Owner field when a new work item is
added.

1. Select Add New.

2. You can enter a name and select the Add button to quickly add a new work item and enter details later, or you can
select Add with Details to open the detail page for the work item and enter details.

 1175



 Rally®

Add a Peer or Child Inline in a Custom List App

You can inline add a peer or child work item.

Select Add Peer Inline from the gear menu of a work item on the list. Children can be added to a parent story by
selecting the Add Child Inline option in the gear menu.

 1176



 Rally®

NOTE
Work items must be sorted by rank to add a peer inline.

Sort Items in a Custom List App

Sort items in the list in ascending or descending order by selecting the column header. The Custom List currently allows
sorting by single field.

For example, if you sort by Rank first and then click the ID column header, the rank sorting will not persist.

Use Filters and Custom Queries in a Custom List App

The Custom List app gives you the ability to customize items listed by applying filters as well as using custom queries.

The Filter popover on the app provides dropdown lists where you can easily select values that you want to apply to your
list, whereas the Query field requires that you enter a query using the correct syntax to apply to your Custom List.

The advanced filtering option allows you to filter, set any field as a quick filter, search, and set up custom filter conditions.

1. Select Filter

to display the filtering tray.

2. Select Add Filter to add quick filters. Default quick filters are owner, schedule state, and type. You can also filter on
blank fields, allowing you to filter on items that have fields that have no value or are blank.

By default, multiple filters use an and/or condition so all results are displayed.

 1177



 Rally®

3. Select Advanced Filters to add advanced filtering. Learn more about advanced filtering here.
a) To hide your advanced filters select Hide Advanced. You can see how many filters are applied as the filter icon will

list active filters numerically.
b) To clear your filters, select Clear Advanced Filters. Your filters will remain active when you navigate away from

the page.

Saved and Shared Views in a Custom List App

You can use saved views to save and come back to the views you use most often.

1. Select the Select or Add Saved View drop-down.

2. From the drop-down you can save a new view or manage your saved views. You can then share it at the project or
workspace level.

Select Columns to Show in a Custom List App

Select Show Columns

.
Search or scroll to select columns that you want to display on the list.

Rank, ID, and Name display as columns by default on the Custom List, but you can select to hide these columns by
clearing the check box. Select Apply to confirm your selections.

NOTE
Show Columns is only available to the administrator that created and shared the list. Users viewing a shared
list will not have permissions to change the column view.

 1178



 Rally®

Examples of columns that might be helpful to add to your custom list:

• Blocked - whether or not a work item is blocked
• Collaborators - Count of anyone that has ever worked on the PI or any work item associated with the PI

Pagination in a Custom List App

The pagination component that you see on a number of other Rally pages is available on the Custom List app.

Import, Export, and Print

 1179



 Rally®

You can perform the following actions from Import/Export/Print

:

• Import work items
• Export to CSV
• Print

NOTE
Import is context-sensitive based on the type of work item you have selected for your Custom List app.

Bulk Edit in a Custom List App

You can edit the field value of multiple work items at once, using bulk edit mode.

1. Select more than one work item by the check boxes on each row. The gear menu switches to Bulk Actions mode.

2. Select the

gear menu and select Edit.

3. Select the field that you want to edit and select a new value.

NOTE
You can only bulk edit a subset of supported fields.

Work item type Supported Fields

All work items • Rich text fields (Description, Notes)
• Rank
• FormattedID

Custom fields • Text fields
• Web link fields

Tasks • Project
• Task Index

Test cases • Rich text fields (Expected Result, Validation Input)
• Test Case Result

Portfolio items • Type

4. Select Apply to edit the selected work items.

Bulk Tagging in a Custom List App

Bulk tagging allows you to quickly apply the same tag to multiple items.

You can do this from most work item list pages.

NOTE
Bulk tagging is also available from the Backlog page and Iteration Status page.

1. Select the check box for the items that you want to tag or untag. The gear

menu switches to bulk edit mode.

 1180



 Rally®

2. Select the bulk edit mode gear menu and select Tag.

 1181



 Rally®

3. On the Bulk Tag editor, select an existing tag, or create a new tag by typing the tag name in the search field and
selecting Create New.

4. Select Apply to add the tag to the selected items.

Bulk Parent or Associate in a Custom List App

You can add or change the parent of a group of user stories, or associate a group of tasks, defects, or test cases to
related work items in a single step.

NOTE

• Portfolio items cannot be bulk parented.
• Defect suites and test sets cannot be associated to other work items.

1. Select more than one work item by selecting the check boxes on each row. The gear menu switches to Bulk Actions
mode.

2. Select the

gear menu and select Choose Parent or Choose Work Product (depending on work item selected).

 1182



 Rally®

3. From the chooser, search by keyword or ID to locate the work item you want to associate or set as the parent.

4. Select the work item and select Choose.

Custom List Examples

High Priority Defects

This shows open P1 defects. Select Defect as your Type in the Settings panel.

Enter the following in the Query field:

((Priority = "Resolve Immediately") and (State < "Closed")) and (Requirement = null))

 1183



 Rally®

Support Top 10

Used for a support team who tags up to 10 items that they would like to be fixed soon.

Enter the following in the Query field:

((Tags.Name = "Top10") AND (State < "Closed"))

Custom List 2.0 App
The Custom List 2.0 app is a powerful tool for helping manage work across enterprise teams. It is commonly used in
custom pages and dashboards, which are some of the most heavily used pages in Rally.

These pages help focus on and manage the work most cared about, while also communicating real-time status with
the rest of the organization. You can use the Custom List 2.0 app to prepare, plan and track portfolios, programs, and
development work.

The Custom List 2.0 app allows you to set up a view of a set of work items. You can add multiple copies of the app to
a page and set each to display data from multiple projects, iteration, releases, work item types, or other criteria. For
example, you can create one app pulling data from dozens of projects and another one focused on a specific project
filtered by iteration, release, and so on.

You can choose which fields display inside of the app and (with most fields) edit the values directly. You can change the
owner of several selected user stories, or associate a group of defects to a user story.

This section contains the following topics:

• Configure the Custom List 2.0 App
• Create New Work Items Using the Custom List 2.0 App
• View Work Items Using the Custom List 2.0 App
• Edit Work Items in the Custom List 2.0 App

Configure the Custom List 2.0 App

The Custom List 2.0 settings panel lets you define the title of the app, the work item types that display, and turn automatic
sizing on or off.

You can also create a custom query in the page to determine the items that display in your custom list.

After adding the Custom List 2.0 app to your dashboard or a custom page, configure it to display the desired information.

NOTE
By default, the Custom List 2.0 app follows the project scoping and the filter options for Iterations, Releases, and
Milestones that are defined for the page where the app displays.

 1184



 Rally®

To select project settings for the app:

1. Select Show Filters.
2. Select the project settings from the Projects drop-down menu.

– Select Use Global Project Scope to have the contents of the list change according to your global project picker.
– Select Browse All Projects to select work from other projects, regardless of your global project setting.

For more information about customizing your view, see View Work Items Using the Custom List 2.0 App.

Change the Title of the App

To change the title of the app on a custom page or dashboard:

1. Select the gear

and select Settings.
2. Edit the title.
3. Select Save.

Build a Query for the App

The Query field provides a way to use multiple criteria to filter the data that displays in the app. You can enter SQL-style
queries into the field to find specific work items based on their state, owner, or other fields. For example, you can filter all
user stories in project X, completed in iteration Y, owned by user Z, with a tag of A.

1. Select the gear

and select Settings.
2. Type or paste your query in the Query field.

For help with the syntax of your query and to view query examples, see Build App Queries.
3. Select Save.

Select the Item Types

You can select the specific types of item types to display in the app. You can select work item types as a filter in the app,
or you can select them through the Settings.

NOTE
If you select item types through the Settings panel, the option to filter on work item types in the app does not
display. Your list of items is limited to those that are defined in the settings.

To select items types through the Settings panel:

1. Select the gear

and select Settings.
2. Select Manage Types Here.

NOTE
To allow users to select work item types through the filters in the app, select Manage Types in App.

3. Select whether you want to limit the app to Work Item Types or Non Work Item Types.
4. Select the check box for each type you want to include from the drop-down list.
5. Select Save.

Your list is now limited to the selected item types.

 1185



 Rally®

Turn Auto Height On or Off

With the Auto Height option off, you can drag the bottom of the Custom List 2.0 app to size the app manually. With the
Auto Height option on, the app automatically sizes according the space that is available.

1. Select the gear

and select Settings.
2. Do one of the following:

• Turn the Auto Height toggle on to have the app size automatically.
• Turn the Auto Height toggle off to manually size the height of the app.

3. Select Save.

Create New Work Items Using the Custom List 2.0 App

You can add new work items from the Add New component or from the toolbar.

Add a New Work Item

NOTE
The Add New component will NOT automatically set filtered fields. For example, if you create a Custom List that
is filtered by Owner, the Add New component will not automatically set the Owner field when a new work item is
added.

1. Select Add New.
2. Select the work item type from the Work Item Types drop-down list.
3. You can enter a name and select the Create button to quickly add a new work item and enter details later, or you can

select Create with details to open the detail page for the work item and enter details.

Add a Peer Work Item

Use the Add Peer toolbar action to add a new peer work item to an existing work item.

1. Select the check box of a work item. The work item you select determines where the new work item will be inserted as
a peer.

2. Select Add Peer from the toolbar.
3. Complete the suggested fields. Required fields are marked.
4. Select one of the following:

– Create + New to add this work item and continue adding work items at this position in the list.
– Create to add a single work item at this list position.
– Create with details to open the detail page for the work item and enter details.

Add a Child Work Item

Use the Add Child toolbar action to add a new child work item to an existing work item. If you want to link to an existing
work item as a child, use the Link Existing toolbar action.

1. Select the check box of a work item. The work item you select determines where the new work item will be inserted as
a child.

2. Select Add Child from the toolbar.
3. Select a work item type from the drop-down list.
4. Complete the suggested fields. Required fields are marked.

 1186



 Rally®

5. Select one of the following:
– Create + New to add this work item and continue adding work items at this position in the list.
– Create to add a single work item at this list position.
– Create with details to open the detail page for the work item and enter details.

View Work Items Using the Custom List 2.0 App

Select Columns to Show in the Custom List 2.0 App

Rank, ID, and Name display as columns by default on the Custom List 2.0 app. To display additional fields:

1. Select Show Fields.
2. In the Show Columns dialog box, select or clear the corresponding check box next to each field you want to display in

the list.
3. Select Apply.

Sort Items in the Custom List 2.0 App

You can sort the list by a particular column. Select the column header to sort by the contents of that column. Select the
column header again to reverse the sort order.

Use Filters in the Custom List 2.0 App

Use filters to narrow down what displays in your Custom List 2.0 app. Learn more.

NOTE
If you select item types through the Settings panel, the option to filter on work item types in the app does not
display. Your list of items is limited to those that are defined in the settings. To filter on work item types, you must
clear the item type selections in the Settings panel.

Group Work Items in the Custom List 2.0 App

To organize your view into convenient categories, you can group work items into swimlanes. The total number of work
items in each group displays after the group header.

When you select Group By to organize your work items, the page omits entries where the field you selected to group on
is empty. Select Show Empty Groups to include the work items where that field is blank.

1. Select Group By from the toolbar.
2. Select the field to group by from the drop-down list. Only one field can be selected.

Select Show Empty Groups to include work items where the field is blank.
To stop grouping, select --No Entry--.

Use Saved and Shared Views in the Custom List 2.0 App

Once you have your Custom List 2.0 app configured the way you want, you can save the view for future use, or share it
with other users. Learn more.

Export Data from the Custom List 2.0 App

When you export a list, you export only the top-level work item that exists in the list. For example, when you export a list of
user stories, the exported file does not include the tasks associated with those user stories.

 1187



 Rally®

Use

.
There are two options:

• Download CSV of this view: Create a CSV file using the fields currently selected on your window.
• Download CSV with more columns: Select additional fields to include in the CSV file.

Learn more.

Edit Work Items in the Custom List 2.0 App

To edit single work items in the list:

• Select the field and either type a new entry or use the drop-down list to select a new value.
• Select the FormattedID and make changes using the detail editor.

You can edit fields in multiple work items when the fields are common to all work items selected from the list.

1. Select the check box of the work item(s).
2. Select Edit from the toolbar to view the Bulk Edit dialog box.
3. In the Bulk Edit dialog box, select the fields that you want to edit and select a new value for each field. You can bulk

edit up to four fields.
4. Select Apply to save your changes.

Custom URL
The Custom URL app displays content from the URL you specify.

WARNING
Enabling custom app pages allows users to create pages containing HTML, JavaScript, and other client-side
scripting languages. Allowing this feature may expose your subscription to Cross Site Scripting (XSS) security
vulnerabilities such as code injection and the manipulation of client-side applications by malicious users. Your
subscription administrator must enable custom apps.

You can use the Custom URL app to display the URL of any website or app you choose. For example, you can include the
URL of your team wiki. Only HTTPS URLS are supported.

NOTE

• Some web pages may not allow display within a Rally app frame and will attempt to refresh the current
browser such that the URL replaces the Rally view. If this occurs and you are unable to navigate back to a
Rally page, you may enable safe mode to modify the URL or delete the app. To enable safe mode, enter ?
safe into your current dashboard or custom page URL, immediately following the .com section. Example:
https://rally1.rallydev.com?safe/#/1234567d/dashboard

• Modern browsers may block sites from displaying due to same-origin policy or protocol settings. We are
aware of an issue where the Custom URL app either returns a vague error or does not load content for some
URLs if the destination website does not allow iframes from pages with different origins to display. With
many companies increasing the security of their webpages, this is going to be much more common. This still
happens when using https:// depending on how the target site's security is set up.

Cycle/Lead Time
The Cycle/Lead Time app allows you to view the average number of days it takes work to flow through your process.

 1188



 Rally®

You can measure the time it takes for work to pass through Rally schedule states to acceptance. This is useful for teams
who use Kanban and Lean practices in Rally.

Data displayed in the app is in the same format as the Cycle/Lead Time chart. Select the chart to go to the Reports tab
where you may view additional information, including a key and summary metrics.

NOTE
The data rollup for the Cycle/Lead Time chart occurs at the end of the time period, while the legend label
indicates the beginning of the time period. You will not see data for a time period while it is still being collected.

Filtering Cycle/Lead Time Data

1. From the app gear

menu, select Settings.
2. Set the Date Range amount and term (weeks, months, or quarters) fields to set the boundaries of the chart.
3. Select check boxes in the Series drop-down list to control what type of work items are charted.
4. Select a beginning Schedule State value with the Start field drop-down list to set the beginning point of your process.

Select an ending Schedule State value with the End field drop-down list.
5. Select Tags to filter on a group of user stories or defects marked with a specific tag.
6. To enable the legend for the app, select Show Legend.
7. Select Save.

Defect Summary Matrix
The Defect Summary Matrix app displays a breakdown of defects in a release by the State and Priority fields.

When the app loads, you will see a summary table of defect states and priorities. Priority field values are represented as
rows, while State field values are columns.

 1189



 Rally®

• A count of defects in the release with each priority and state are displayed in each cell. Use the Release drop-down
menu to view the totals from past or future releases.

• If you have added custom values to the State or Priority fields, they will be displayed in the app.
• A blank or no entry row is provided if the defect does not have a priority.
• Totals are provided in the bottom row and right-most column.

Source code is available: Defect Summary Matrix source code

View Additional Defect Information from the Defect Summary Matrix App

• Select a cell in the summary table to see a table of details for all defects that match the conditions for severity and
priority.

The detailed information includes the FormattedID, Name, State, Priority, and Owner for each defect.
• Sort data by selecting column names.
• Select the FormattedID of a defect to navigate to the item's detail page.

Defect Trend
The Defect Trend app allows you to view cumulative defects opened versus closed over time, showing whether the trend
is increasing or decreasing.

This chart shows the rate at which defects are being activated (red line) and in a state other than closed, the rate at which
defects are being terminated or closed (green line), and the trend for the total number of active defects (black line).

Data displayed in the app is in the same format as the Defect Trend chart. Select the chart to go to the Reports tab,
where you may view additional information including a key and summary metrics. You may also print, email, and export
the chart from the Reports tab.

 1190

https://github.com/RallyApps/app-catalog/tree/master/src/apps/defectsummarymatrix


 Rally®

To configure the Defect Trend app:

1. From the app gear

menu, select Settings.
2. Modify the app settings:

– Set the Date Range amount and term (weeks, months, or quarters) fields to set the boundaries of the chart.
– The Terminal States parameter allows you to specify which defect states to include in the Cumulative Terminated

series (green line). All unselected states are included in the Cumulative Activated series (red line) as well as the
Total Active series (black line).

– You can specify to display only defects of a certain priority (Select Priorities) or severity (Severities).
NOTE
If you do not select any values in these sections, the chart includes ALL defects, including defects where
the priority or severity is not specified. However, selecting all the check boxes will exclude those with no
value for priority or severity.

– To enable the legend for the app, select Show Legend.
3. Select Save.

Defects by Priority
The Defects by Priority app displays active defects categorized by priority over time.

Using the app, you can:

• View a count of non-closed defects in scope over time, color-coded by the Priority field.
• Hover over a colored area of a bar to see the priority value and count of defects for that day.

Data displayed in the app is in the same format as the Defects by Priority chart. Select the chart to go to the Reports tab,
where you may view a key, export, email, and print the chart.

To configure the Defects by Priority app:

1. From the app gear

menu, select Settings.
2. Modify the app settings:

NOTE
If you do not select any values for States, Priorities, or Severities, the chart includes all defects (including
those with priority or severity set to No Entry). If you select values for all of these, the chart excludes defects
set to No Entry.

 1191



 Rally®

– Set the Date Range amount and term (weeks, months, or quarters) fields to set the boundaries of the chart.
– Select the Priorities field to select what defect priorities to chart.
– Select the the States and Severities fields to filter by additional criteria.
– To enable the legend for the app, select Show Legend.

3. Select Save.

Defects by State
The Defects by State app displays active defects categorized by state over time.

Using the app, you can:

• View a count of non-closed defects in scope over time, color-coded by the State field.
• Hover over a colored area of a bar to see the state value and count of defects for that day.

Data displayed in the app is in the same format as the Defects by State chart. Select the chart to go to the Reports tab,
where you may view a key, export, email, and print the chart.

To configure the Defects by State app:

1. From the app gear

menu, select Settings.
2. Modify the app settings:

– Set the Date Range amount and term (weeks, months, or quarters) fields to set the boundaries of the chart.
– Select the Priorities field to select what defect priorities to chart.
– Select the the States and Severities fields to filter by additional criteria.
– To enable the legend for the app, select Show Legend.

3. Select Save.

Dependency Status Dashboard
The Dependency Status Dashboard app shows dependencies between user stories for a series of upcoming iterations.

The dashboard assists groups with forecasting potential blockers or stoppages in the next iteration. Product owners will be
able to see what teams they need to talk to about their dependencies.

 1192



 Rally®

Dependencies are based on predecessor and successor settings among user stories. Any iterations with a State field
value of Planning or Committed will display in the app.

Warnings will appear in the app when a dependency is:

• Not yet scheduled
• Scheduled too late to start work on the original story
• Marked as blocked

NOTE

• Only immediate story predecessors are listed in the app
• Be sure to set the state of your iteration to Accepted after it has ended to prevent old data from being

displayed

Source code is available: Dependency Status Dashboard source code

Dependency Status Dashboard #2
The Dependency Status Dashboard app shows dependencies between user stories for a series of upcoming iterations.

This app assists groups with forecasting potential blocks in the next iteration. Product owners will be able to see what
teams they need to talk to about their dependencies.

 1193

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/DependencyStatusApp.html


 Rally®

Dependencies are based on predecessor and successor settings in user stories. Any iterations with a State field value of
Planning or Committed display in the app.

Features include:

• View a list of any user stories in iterations that have dependencies on other stories or defects
• View the FormattedID, Name, and Plan Estimate values of user stories with dependencies
• View the FormattedID, Name, and Schedule State values of dependent user stories
• View the FormattedID, Name, and Owner values of dependent defects
• Select any of the blue hyperlinks to navigate to an iteration, user story, or defect detail page
• Warning icons

will display in the app when:
– A dependency is not yet scheduled
– A defect is associated to a user story or dependency
– A dependency is scheduled too late to start work on the original story
– A dependency is marked as blocked

NOTE

• Only immediate story predecessors are listed in the app.
• Be sure to set the state of your iteration to Accepted after it has ended to prevent old data from displaying.

Source code is available here: Dependency Status Dashboard #2 source code

 1194

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/DependencyStatus2App.html


 Rally®

Estimation Board
The Estimation Board app provides a view of unaccepted stories, defects, and defect suites organized by plan estimate
sizes. Default sizes are provided when you first add the app. You can customize the sizes for the app by updating the
settings under the gear menu.

The Estimation Board allows for:

• Drag-and-drop controls to quickly change the plan estimate of a story or defect
• Filtering cards by type
• Direct links to stories and defects
• Custom settings for plan estimate sizes

Some stories and defects will be sized where their plan estimates do not exactly match the size column. They are
either too small for the larger size or too large for the smaller size. These stories and defects do not have their planned
estimates auto-updated to the size of the column on display. They will be auto-updated when dragged to another size.

NOTE

• If you have manual ranking enabled, you will not be able to use drag-and-drop re-ranking within a state.
• Any work items with a Schedule State of Accepted will not display on the board.
• Columns are limited to 200 cards.

Source code is available: Estimation Board app source code

To customize plan estimate sizes:

1. From the app gear

menu, select Settings.
2. Sizes require a column name and plan estimate value. Add a new size by selecting the

.
Delete a size by selecting

.

 1195

https://github.com/RallyCommunity/EstimationBoard/blob/master/deploy/App.html


 Rally®

Getting Started for Contributors
The Getting Started for Contributors app provides guidance for developers, testers, tech writers, and other individual
contributors to help them manage their work.

Select any of the links to open help resources in a new window.

Getting Started for Executives
The Getting Started for Executives app provides guidance for portfolio managers, directors, and executives to help them
understand what is happening across multiple initiatives or teams.

Select any of the links to open help resources in a new window.

Getting Started for Organizers
The Getting Started for Organizers app provides guidance for project managers, product owners, or scrum masters to
help them plan and track work for a team.

Select any of the links to open help resources in a new window.

 1196



 Rally®

Incomplete Stories for Current Iteration
The Incomplete Stories for Current Iteration app displays user stories that have not been completed or accepted in the
current iteration.

Summary information on associated tasks, defects, and test cases is also included.

Features include:

 1197



 Rally®

• Hover over the FormattedID of a user story to see the description and hierarchy details.
• Select the user story FormattedID to navigate to its detail page.
• Double-click in the Name and Owner fields to edit details.
• Sort data by selecting column names.
• Select Add New to add additional stories.
• Use the Filter by Owner drop-down menu to find stories assigned to you. You can also clear the filter or select No

Owner to display stories that are not currently owned by anyone.
• Select Show Columns and select the check boxes to customize the columns displayed on the app.
• You can import stories, export to CSV and print by selecting Import/Export/Print

.
• Enter a query through the Settings menu.
• You can bulk edit user story fields.
• You can bulk parent user stories.

Status Columns Used in the Incomplete Stories for Current Iteration App

The app includes status columns for defects, tasks, and test cases associated to the user story. Status is based on the
cumulative status of the associated work items.

Task Status • None - no tasks associated to the work item
• Defined - all tasks associated to the work item have a state of Defined
• In Progress - at least one task associated to the work item has a state of In Progress, none are blocked
• Blocked - at least one task associated to the work item, at least one is Blocked
• Completed - all tasks associated to the work item have a state of Completed, none are blocked

Defect Status The Defect Status column is only applicable to user stories on the Backlog page.

• None - no defects associated to the user story
• Some Closed - at least one defect associated to the user story does not have a state of Closed
• Closed - all defects associated to the user story have a state of Close

Test Case Status • None - no test cases associated to the work item
• None Run - no test case results have been entered for test cases associated to the work item
• Some Run - for test cases associated to the work item, all those with a result have a verdict of Pass, all

other test cases have no results
• Some Not Passing - for test cases associated to the work item, at least one with a result has a verdict

other than Pass
• All Passing - for test cases associated to the work item, all have results with a verdict of Pas

Iteration Burndown
The Iteration Burndown app displays work remaining and completed in the iteration to proactively anticipate whether the
committed work will be delivered by the iteration end date.

The app is also useful during iteration retrospective meetings, to help identify events during the iteration or problems with
estimation during planning.

 1198



 Rally®

Features include:

• Remaining task hours are blue bars.
• Completed story points are green bars.
• Ideal burndown rate is a black line, based on the task estimate.
• Hover over the bars or line to see detailed figures on current and past progress.
• Enable the legend for the app from the Settings menu.

Data displayed in the app is in the same format as the Iteration Burndown Chart. Select the chart to go to the Reports tab,
where you may view past iterations, export, email, and print the chart.

Source code is available: Iteration Burndown source code

Iteration Burnup
The Iteration Burnup app displays work delivered so far in the iteration to proactively anticipate whether the iteration scope
will be delivered.

Features include:

• The vertical axis represents the accepted work in hours.
• The horizontal axis represents the dates.
• Completed story points are green bars.
• Total scope of work in the iteration is a black line.
• Hover over the bars or line to see detailed figures on current and past progress.
• Enable the legend for the app from the Settings menu.

A burnup app differs from a burndown app in that the burnup includes a scope line that allows you to visualize when work
has been added or removed from the project. The chart also represents a more realistic completion date for a project.

Data displayed in the app is in the same format as the Iteration Burnup chart. Select the chart to go to the Reports tab,
where you may view past iterations, export, email, and print the chart.

 1199

https://github.com/RallyApps/app-catalog/tree/master/src/apps/charts/burndown


 Rally®

Iteration Cumulative Flow
The Iteration Cumulative Flow app allows you to view the states of work in the iteration to analyze the trend in lead time
for delivery of working code.

Features include:

• Work in the iteration is color-coded based on the Schedule State field.
• View the proportions of work in each state as the iteration progresses.
• View the size of work in each state in plan estimate points.
• Enable the legend for the app from the Settings menu.

Data displayed in the app is in the same format as the Iteration Cumulative Flow Diagram. Select the chart to go to the
Reports tab, where you may view past iterations, export, email, and print the diagram.

Iteration Dashboard
The Iteration Dashboard app displays iteration data in several formats, including a general health summary, pie charts,
and an advanced burndown chart.

View the progress in the iteration broken down by work item type and state.

 1200



 Rally®

Use the Iteration drop-down menu to select past iterations to display in the dashboard. If the app is scoped to view
multiple projects that share the same iteration, the dashboard will provide a breakdown of the iteration for each project.

Source code is available: Iteration Dashboard app source code

Iteration Dashboard App Health Computation

This section computes the health of the iteration based on the percent of stories complete (count of stories accepted or
released divided by the total number of stories in the iteration) and the number of days completed in the iteration.

• Good displays when the percentage is greater than or equal to 90.
• At Risk displays when the percentage is greater than or equal to 70 and less than 90.
• Critical displays when the percentage less than 70.

Iteration Dashboard App Pie Charts

Three pie charts display in the dashboard:

• Scheduled Work: Displays the count of user stories, defects, and defect suites in each Schedule State.
• Test Cases: Displays the total last verdict count of test cases that are associated with user stories scheduled in the

iteration.
• Defects: Display a breakdown of defects scheduled or linked to user stories that are scheduled in the iteration by the

State field.

Hover over slices in the pie charts to see a count. Select a slice to persistently display the count to perform a comparison
between the three charts.

Select the header area directly above the charts to display a key for color-coding in the pie charts.

 1201

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/IterationDashboardMashup.html


 Rally®

Iteration Dashboard App Burndown Chart

An advanced burndown chart displays next to the pie charts. Bars are color-coded according to schedule state, and an
ideal burndown trend line is provided. Hover over a bar to see details on the date and hours or points displayed.

Iteration Defects by Priority
The Iteration Defects by Priority app displays defects in the iteration that do not have a state of Closed, categorized by
priority.

This app can assist you with assessing the end of iteration technical debt.

You can:

• View a count of non-closed defects in the iteration over time, color-coded by the Priority field.
• Hover over a colored area of a bar to see the priority value and count of defects for that day.
• Enable the legend for the app from the Settings menu.

Data displayed in the app is in the same format as the Iteration Defects by Priority chart. Select the chart to go to the
Reports tab, where you can view past iterations, export, email, and print the chart.

Iteration Defects by State
The Iteration Defects by State app displays all defects in the iteration, categorized by state.

This app can assist you with assessing the end of iteration technical debt.

 1202



 Rally®

You can:

• View a count of defects in the iteration over time, color-coded by the State field.
• Hover over a colored area of a bar to see the state value and count of defects for that day.
• Enable the legend for the app from the Settings menu.

Data displayed in the app is in the same format as the Iteration Defects by State chart. Select the chart to go to the
Reports tab, where you can view past iterations, export, email, and print the chart.

Iteration Planning Board App
The Iteration Planning Board app provides your team with a view of the user stories and defects ready to be scheduled,
and any work items scheduled in the next three iterations.

Use the board to prepare for and carry out iteration planning. Use cards on the board to schedule work.

Hover over the ID field of a card to view its description. Use this feature to remind your team of the work item's goal when
planning. Select the FormattedID to navigate to the work item's detail page.

 1203



 Rally®

Backlog user stories and defects display on the board as cards in the left-most column. Cards are ordered by rank.

By default, the next three future iterations display as columns to the right of the Backlog column. Use the arrows to the left
and right of the column titles to view iterations further in the past or future.

Source code is available: Iteration Planning Board source code

This section includes the following topics:

• Set Up the Iteration Planning Board App
• Scheduling Work Items in the Iteration Planning Board App
• Filter Cards in the Iteration Planning Board App
• Update Work Items in the Iteration Planning Board App
• Create and Update Tasks with the Iteration Planning Board App
• View and Update Discussions in the Iteration Planning Board App
• View and Update Associated Defects in the Iteration Planning Board App
• Available Iteration Planning Board App Actions

Set Up the Iteration Planning Board App

1. From the app gear

menu, select Settings.

2. To ensure you plan items from the correct team backlog, set the project scoping in the app settings. The app defaults
to the setting of your global project picker unless you specify a project.

 1204

https://github.com/RallyApps/app-catalog/tree/master/src/apps/iterationplanningboard


 Rally®

3. Define what fields are displayed on a card by selecting fields from the Card Fields drop-down list.

4. Select Save.

Scheduling Work Items In the Iteration Planning Board App

Use cards on the Iteration Planning Board to schedule work into iterations.

As you schedule work into iterations, the meter at the top of the column updates to reflect the total number of story points
assigned to the iteration. The meter changes color according to the number of available points entered in the iteration's
Planned Velocity field and the total values of scheduled work item's Plan Estimate fields.

Color coding for the percentage of available planned velocity that has been scheduled:

• Blue: 0%-80%
• Green: 80%-100%
• Red: 100%+

NOTE

• Rally recommends planning up to 80% of your available velocity in each iteration, to leave room for technical
problems or other unforeseen issues.

• The meter will only display if a value has been entered in the Planned Velocity field for the iteration.

You can change the ranking of work items in the Backlog and iteration columns. This is helpful if your team has many
work items in a given iteration and you want to display which items are high priority. Drag a card vertically within a column
to change the rank.

Use the search field at the top of the Backlog column to quickly find a work item to schedule.

1. Enter your search criteria into the search field and select Search

or press  Enter.
Searches apply to the following fields:

 1205



 Rally®

• Name
• Description
• Notes
• Discussions
• Tags
• Custom string and text fields

2. Drag-and-drop a card into an iteration column to schedule it in that iteration.

Filter Cards in the Iteration Planning Board App

Filter Cards by Work Item Type

You can control what type of work items are visible on the board using filters.

1. Select Filter

.
2. Select the check box for the work item type to display. You may choose User Story, Defect, or both.

3. Select Apply.

Filter Cards by Owner

Filter cards by owner by selecting an owner from the Search all users drop-down list. Selecting an owner populates the
board with cards belonging exclusively to one person. Select Clear Filter to return the cards to their original state.

NOTE
If the selected owner is the owner of a defect or task associated to a work item, the related card will display on
the board. This includes cards owned by other users.

 1206



 Rally®

Update Work Items in the Iteration Planning Board App

Add new items to your backlog, edit the details of a work item, make copies, and delete abandoned work from the Iteration
Planning Board app.

Add New Work Items in the Iteration Planning Board App

NOTE

• New work items are automatically ranked at the bottom of the Backlog column.
• Consider adding and discussing new work from the Backlog page, during backlog refinement or planning

meetings.

1. Select Add New from the toolbar.
2. Select the type of work item to create from the drop-down menu.
3. Do one of the following:

– Enter a name in the field that displays, then select Add. You can add details later.
– Select Add with Details.

4. From the detail editor, complete additional fields.
5. Select Create.

View or Edit Work Item Details in the Iteration Planning Board App

1. You can edit the Name, Plan Estimate, and Owner fields inline.
a. Enter or select the new field value.
b. Press Enter to save your changes. You can also select outside of the card area after editing to save. Press Esc to

cancel any changes.
2. To view or edit additional fields, select the gear

and select Edit. Make your changes in the detail page.

 1207



 Rally®

Copy or Delete Cards in the Iteration Planning Board App

Use the Gear

to copy or delete a work item.

The Copy option creates a copy of the work item and any associated tasks. This feature is useful during iteration planning
when you need to create a similar story or defect, or a template set of tasks.

The Delete option immediately removes the work item from the board and moves it to the Recycle Bin.

Create and Update Tasks with the Iteration Planning Board App

After you schedule work into an iteration, you can complete the latter portion of iteration planning by creating and
assigning tasks.

As you add detail, the overall status of associated tasks display on each card.

 1208



 Rally®

After planning, you can view the task status from this app and the Iteration Tracking Board.

Add New Tasks from the Iteration Planning Board App

You can quickly create a new task associated to a work item with the Add New button in the task details display.

1. Select the Plus

in the hover menu (at the bottom of the card) and select Tasks.
2. From the task in-context editor, do one of the following:

– Enter a name in the field that displays, then select Add. You can add details later.
– Select Add with Details.

3. From the detail editor, complete additional fields.
4. Select Create.

Edit Task Fields in the Iteration Planning Board App

You can update the tasks associated with a user story.

1. Select the status icon on a card to display a list of all tasks associated to the work item. Alternatively, select the Plus

in the hover menu (at the bottom of the card) and select Tasks.
The following fields display:
– Name
– Owner
– Schedule State
– Task Estimate
– To Do
– Actuals (if visible)
– Blocked

2. Select any field to enter inline editing mode. You can enter new data into text and number fields, or use a drop-down
menu to change multiple value fields.

 1209



 Rally®

– Press Enter to save your changes and edit the next field down.
– Press Tab to save your changes and edit the next field to the right.
– Select outside of the tasks area to save changes to a field.
– Press Esc to cancel any pending changes.

3. To exit the task details display, select Close

or outside of the area.
4. To edit additional fields, select the Gear

next to a task and select Edit.

Copy or Delete Tasks in the Iteration Planning Board App

Use the Plus

in the task details display to copy or delete a task.

The Copy feature is useful during iteration planning, when you need to create a similar set of tasks associated to a work
item.

The Delete option immediately disassociates the task from the work item and moves it to the Recycle Bin.

View and Update Discussions in the Iteration Status Board App

You can review and add discussions for each card on the board. Discussions allow team members to provide detailed
updates and comments on a work item.

A Discussions

icon displays on each card, indicating the number of comments present. The icon changes color depending on the time

 1210



 Rally®

the last comment was posted. A discussion with a post less than four hours old displays as dark blue, while older posts
display as a lighter blue or grey, so you can see which work items have new information.

1. Hover at the bottom of the card, select the

and select Discussions.

2. In the discussions details display, view existing comments.

3. Enter your new comment in the text field, then select Post.

4. To delete a comment, select Delete

when viewing the details display. Only the original author and administrators may delete a comment.

5. Select outside of the card or on the Arrow to close the details display.

View and Update Associated Defects in the Iteration Planning Board App

You can quickly view the overall status of defects associated to a user story using the Iteration Planning Board App.

If defects are associated to a story, an icon and a count of active defects display at the bottom of the card.

A red icon indicates that one or more defects with a state other than Closed are associated to the user story. A green
icon indicates that one or more defects are associated to the story, but all have a state of Closed. Product owners can
quickly scan the icons when updating iteration work—a red icon indicates that open defects exist, and the story cannot be
accepted.

Edit Defect Fields in the Iteration Planning Board App

You can edit the fields on a defect.

1. Select the

on a card to display a list of all defects associated to the story. Alternatively, select the Plus

in the hover menu, then select Defects.
The following fields display:
– Name
– Severity
– Priority
– Owner
– State

2. Select any field to enter inline editing mode. You can type in the Name field and use drop-down menus to change
fields with multiple values.

 1211



 Rally®

– Press Enter to save your changes and edit the next field down.
– Press Tab to save your changes and edit the next field to the right.
– Select outside of the tasks area to save changes to a field.
– Press Esc to cancel any pending changes.

3. To exit the defect details display, select the Arrow or outside of the area.
4. To edit additional fields, select the gear

next to a defect and select Edit.

Add New Defects in the Iteration Planning Board App

You can quickly create a new defect associated to a user story with the Add New button in the defect details display.

1. Select the gear

in the header of a card and select Defects.
2. From the task details display, select +Add New.
3. Do one of the following:

– Enter a name in the field that displays, then select Add. You can add details later.
– Select the Add with Details button.

4. From the detail editor, complete additional fields.
5. Select Save & Close.

Copy or Delete Defects in the Iteration Planning Board App

Use the gear

in the defect details display to copy or delete a defect.

The Copy option creates a copy of the defect associated to the same user story.

The Delete option immediately disassociates the defect from the story and moves it to the Recycle Bin.

 1212



 Rally®

Available Iteration Planning Board App Actions

The following tables list the available actions on the Iteration Planning Board App.

Column Actions

Action What it does

Drag-and-drop to schedule Hover over the card to see the cross-hair cursor that allows you
to drag the card into any of the other columns on the board. The
Iteration field is updated when a card is moved from one column to
the next.

Drag-and-drop re-ranking Hover over the card to see the cross-hair cursor that allows you to
re-rank cards within the same column or re-rank by drag-and-drop
from one column to the next.
The card that you re-rank will always be re-ranked to a position
higher than the card beneath it. For example, if you move S456
above S123, it will set the rank of US456 higher than the rank for
US123.

Search the Backlog column Search for a specific work item by the Name field. Enter
criteria in the field at the top of the column and select Search

or press Enter.

Card Actions

Action What it does

Quickly view a description Hovering over the FormattedID link on the card title (such as
DE7018) will display the Description field in a pop-up window.

View the detail page of a work item The FormattedID link on the card title (such as DE7018) is a URL
that will take you to the detail page for the work item.

Edit card details Displays a full editor window for the work item.
Hover over the card, then select the Gear

and select Edit.

Change the name of a card Select the name in the middle of the card to enter inline editing
mode. Type in the new name, then select outside of the field.

Change the owner of a card Select the owner name in the header of the card to enter inline
editing mode. Use the drop-down to select a new owner, then
select outside of the card.

Copy a card Creates a copy of the work item and any associated
tasks. Hover over the card, then select the Gear

and select Copy.

 1213



 Rally®

Action What it does

Delete a card Removes the work item from the board and places it in the
Recycle Bin. Hover over the card, then select the Gear

and select Delete.

Review and add discussions Read or add comments to the work
item. Hover over the card, then select

and select Discussion.

Block a card Highlights the card with a red border, indicating work
is stalled. Hover over a card, and then select Blocked

at the bottom to mark it blocked. Use this same method to remove
a blocked status. Note: This indication is best used when tracking
work in a currently running iteration. Consider using the Iteration
Tracking Board.

Mark a card ready-to-pull Highlights the card with a green border, indicating
work is ready to move to the next stage. Hover
over a card, and then select the Check Mark

at the bottom to mark it ready. Use this same method to remove
a ready status. Note: This indication is best used when tracking
work in a currently running iteration. Consider using the Iteration
Tracking Board.

Task Actions

Action What it does

View overall task status The status of task progress and total remaining to do hours will
display at the bottom of each card. Task progress is represented
by an icon.

View all tasks with details Displays a list of all associated tasks and essential
fields. Select the task summary icon at the bottom
of a card, or hover over a card, then select

and select Tasks.

Edit task details inline Update the task Schedule State, Name, Owner, Estimate, and
To Do fields from the task details display. Select a field to enable
inline editing mode, then enter your changes. Text and number
fields will have an entry form, while multi-select fields will display a
drop-down. Select outside of the card area or press Enter to save
your changes.

 1214



 Rally®

Action What it does

View or edit tasks Displays an editor window to change any standard or custom
task field. From the task details display, select the Gear

to the left of the task and then select Edit.

Copy a task Creates a copy of the task and associates it with the same
work item. From the task details display, select the Gear

to the left of the task and then select Copy.

Delete a task Disassociates the task from the work item and places it in the
Recycle Bin. From the task details display, select the Gear

to the left of the task and then select Delete.

Rank a task You can change the order that tasks display when viewing the
details of a card. In the task details display, select the gripper
icons to the left of a task row and drag the task to its new position.

Associated Defect Actions

Action What it does

View overall defect status The status of associated defects at the bottom of user story cards.
An icon displays based on the number of defects associated to the
story, and indicates if all defects have been closed.

View all associated defects with details Displays a list of all associated defects and essential
fields. Select the defect summary icon at the
bottom of a card, or hover over a card, then select

and select Defects.

Edit defect details inline Update the defect State, Name, Owner, Severity, and Priority
fields from the defect details display. Select a field to enable
inline editing mode, then enter your changes. Text fields will
have an entry form, while multi-select fields will display a drop-
down. Select outside of the card area or press Enter to save your
changes.

View or edit defect Displays an editor window to change any standard or custom
defect field. From the defect details display, select the Gear

to the left of the defect and then select Edit.

Copy a defect Creates a copy of the defect and associates it with the same
user story. From the defect details display, select the Gear

to the left of the task and then select Copy.

 1215



 Rally®

Action What it does

Delete a defect Disassociates the defect from the user story and places it in
the Recycle Bin. From the task details display, select the Gear

to the left of the defect and then select Delete.

Rank a task You can change the order that defects display when viewing the
details of a card. In the defect details display, select the gripper
icons to the left of a defect row and drag the defect to its new
position.

Iteration Scope Change
The Iteration Scope Change app displays all work items (user stories, defects, and defect suites) that have been added or
removed from an iteration, giving a succinct view of whether scope is changing during the course of an iteration.

Features include:

• View a day-by-day report of work items added or removed from the iteration.
• Select a work item name or FormattedID to navigate to the item's detail page.
• Filter the report by work added or removed.
• Print the report using App Tools, Print.

NOTE

• A shared iteration schedule exists when iterations have the same name, start date, and end date. The
Iteration drop-down list shows all iterations for the currently selected workspace and projects. If iterations
with the same name but different dates are found, the drop-down list will show the dates in parentheses after
the name. Otherwise, only iteration names are displayed.

• Avoid hyphens (–) in your iteration names. Using a hyphen in the name prevents data from this iteration from
displaying correctly in the Iteration Scope Change app. A dash (-) is an acceptable character.

Source code is available: Iteration Scope Change source code

Interpreting the report is an important part of the scrum master's role to understand why work is removed or added, and
how it is affecting the team's commitments.

For example, scheduling work at the end of the iteration may occur because the team pulled in more work than originally
planned; this is a very positive scenario. At the same time, removing work at the end of the iteration may mean the team
committed to too much work, and indicates a poor practice. Unfinished work should not be removed from an iteration.
Instead, there should be a record of overcommitment so that it may be avoided in future iterations.

 1216

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/IterationScopeChangeApp.html


 Rally®

Iteration Summary
The Iteration Summary app allows you to see a simple overview of team progress against an iteration. Based on the
status of work, defects, and test cases, you’ll be able to see colored indicators that help address problems as they arise.

• Iteration Summary App Data

Source code is available: Iteration Summary source code

Why Are These Iteration Warnings Important?

Review the following with your scrum teams to ensure you create effective definitions of Done and working agreements to
tailor Rally to your unique workflow.

Why Do Stories Need
to be Accepted Early

in the Iteration?

Unaccepted stories represent risk. Risk that the story may not be completed by the end of the iteration,
and that the entire iteration could be in trouble when unacceptable work is discovered. To mitigate this risk,
inspect stories regularly and accept approved user stories as soon as they are completed. The proactive
management of user story acceptance will allow the team enough time to deliver fully acceptable stories
based on their agreed-upon definition of done.

Aside from risk, on-time acceptance of stories is important to achieve accurate burndown charts.
Completed story points are not reflected in these charts until acceptance. If you do not accept stories as
they are completed, your chart will remain flat until the last day of the iteration, rendering it useless to your
team and stakeholders.

From a Lean perspective, unaccepted user stories represent work-in-progress (WIP). In lean and agile
software development, teams try to limit WIP by limiting the number of stories concurrently in progress. This
limitation applies to stories that are complete but still unaccepted. Those stories are considered in progress,
because at any point they could be deemed unacceptable and moved out of a completed state. Maintaining
WIP limits will help the development team flow by limiting interruptions and context switching.

Why Should All Defects
Be Closed Before a
Story Is Accepted?

When creating a definition of Done for user stories, it is recommended that teams require all defects on
those stories be closed before accepting them. Since an accepted story represents a completed slice of
functionality, any defects attached to that story represent technical debt and should be resolved during the
iteration.

It is good practice to test user stories as soon as they are ready. If additional time is needed to resolve
a found defect, the team should consider doing so before starting other stories in the iteration. If the
resolution of the defect requires a significant amount of time, the team should not release the associated
user story, and consider the necessary work as part of the next iteration’s estimation. Overall, it is better to
deliver a single completed and fully tested story, as opposed to delivering several incomplete and untested
stories after an iteration.

Why Should All Tests
Pass in an Iteration?

In addition to acceptance criteria, test cases represent the overall quality and acceptability of a completed
user story or iteration. You can create many types of tests: acceptance, performance, regression,
functional, usability, and user interface. All of these types of testing are highly valuable in defining Done for
any agile development team. As your team integrates these different tests into its daily routine, it becomes
increasingly important that all tests are passing before the end of the iteration. In addition, as many tests as
possible should be passing when each story is completed as part of the acceptance process.

As you get closer to the end of an iteration, the fewer tests you have completed, the higher risk you have
that your commitments will not be met. Incomplete tests represent the risk of hidden defects that will then
lead to technical debt, and possibly disrupt future iterations.

Iteration Summary App Data

 1217

https://github.com/RallyApps/app-catalog/tree/master/src/apps/iterationsummary


 Rally®

The top section shows basic iteration details:

• Name
• Days Remaining
• Total days
• Iteration state (Planning, Committed, Accepted)

Many of these status updates rely on the age of the iteration. The rules for defining the first and second half of an iteration
are as follows:

• If the iteration is 10 days or less in length, colors will shift from grey to yellow after 50% of the days have passed.
• If the iteration is 10 days or more in length, colors will shift from grey to yellow after the fifth day of the iteration. This is

because it is much more dangerous to be in the third week of a four week iteration with no accepted work, compared to
the third day of a five day iteration.

Depending on the state of your iteration, up to three sections display with advisory messages.

Accepted Work

Accepted work total reflects all items directly scheduled into the iteration. This section will always be displayed, showing
the percentage of work with a schedule state of Accepted.

NOTE
You must have points entered into the Plan Estimate field of scheduled items in your iteration for the percentage
of accepted work to display.

Work that counts against this percentage includes:

• User stories
• Independent defects (not attached to stories in the iteration)
• Defect suites
• Test sets

 1218



 Rally®

The bar next to the percentage of accepted work will change colors, depending on the state of the iteration:

• Grey: Some, all, or no work accepted during the first half of the iteration.
• Green: All work accepted, iteration has ended.
• Yellow: Some or no work accepted during the second half of the iteration.
• Red: Some or no work accepted iteration has ended.

Active Defects

Active Defects displays defects that are associated to user stories assigned to the iteration, but are not directly scheduled
into the iteration. This section will only display if there are open defects attached to user stories in the iteration.

NOTE
The intent of this app is to display defects associated to stories that are not being counted in the points for the
iteration. This ensures that work is not missed. We do not recommend accepting stories with associated defects
prior to fixing defects.

The total number of defects that are not in a Closed state display. This bar next to this section will change colors,
depending on the iteration state:

• Yellow: Any open defects, iteration still active.
• Red: Open defects remain, iteration has ended.

Tests Passing

This section displays if test case results exist in the iteration for tests attached to a user story or test set. If there are
associated test cases, but no results, this section will not display.

The section will be colored depending on the state of the results and iteration:

• Grey: Some tests passing during first half of iteration.
• Green: All tests passing, any time.
• Yellow: No tests passing during first half of iteration, or some tests passing during second half.
• Red: Some or no tests passing, iteration has ended.

Iteration Tracking
The Iteration Tracking app provides your team with a view of work items within an iteration organized by schedule state.

NOTE
Iteration Status is available as a page under Track, Iteration Status. Learn more.

Features of the Iteration Tracking app include:

• Easily switch between list and board views to view and manage iteration details.
• Make rapid changes within a card or list without opening the detail editor.
• Choose which columns of data to display in the list view.

 1219



 Rally®

Source code is available: Iteration Tracking source code

This section includes the following topics:

• Configure the Iteration Tracking App
• View Iteration Tracking Information
• Import and Export Options
• Switch Between Board and List Views
• Use the List View
• Use the Board view

Configure the Iteration Tracking App

You can update settings according to your permissions.

There are three permission levels for settings:

• Global settings—only workspace administrators may change these values.
• Project-level settings—only project administrators may change these values.

– Show age for card after days in column: You can enter any age limit between zero and 99 days.
– Swimlanes: You can add a swimlane. Learn moreabout swimlanes.

• User-level settings—any individual may change these values.

Select the app Gear

then select Settings.

.

View Iteration Tracking Information

View and manage your user stories and defects within an iteration, including adding new work items.

In the Iteration Tracking app, you can select an iteration and filter the work items associated with that iteration.

Learn more about filtering.

Import and Export Options

You can Import User Stories, Import Tasks, and Export as a CSV file by selecting

Import/Export/Print.

 1220

https://github.com/RallyApps/app-catalog/tree/master/src/apps/iterationtrackingboard


 Rally®

Switch Between Board and List Views

When viewing work items for your iteration, you can switch between a board view with cards representing work items or a
list view that organizes work items so you can easily view relationships and dependencies.

Select the Toggle to switch between these two views.

Use the List View

The Iteration Tracking app list view allows you to:

• Display fields of interest as columns.
• Update schedule states.
• Rank work items.
• Edit work items line or in bulk.
• Add peer or child work items.

Selecting Columns to Display in the List View

You can customize which fields display as columns in the list.

1. Select Show Columns.
2. In the Show Columns dialog box, select or clear the corresponding check box next to each field you want to display in

the list.
3. Select Apply.

Updating Schedule States in the List View

You can update the schedule state for a work item by selecting the desired state in the Schedule State column.

Ranking Work Items in the List View

You can adjust the vertical position of a work item using drag-and-drop. This is helpful if your team has many work items
in a given state, and you want to visually remind them which items are high priority. At the beginning of an iteration, you
can use this feature to identify what work is most important to begin first.

You can also select the gear menu next to the work item you want to move and select the item's position.

 1221



 Rally®

Learn more about ranking work items.

Editing Work Items Inline in the List View

You can edit work items inline.

NOTE
To view and edit all fields of a work item using the detail editor, select the FormattedID.

1. Select the field in the list item.
2. Enter or select the new field value.

3. Press Enter to save your changes. You can also select outside of the area to save. Press Esc to cancel any changes.

Editing Multiple Work Items in the List View

You can edit multiple work items at once by selecting the check boxes next to the work items you want to edit, then
selecting an inline gear menu. Note that the options you see in the Bulk Actions menu depend on the types of work items
selected. For example, selecting two user stories to bulk edit will also allow you to select a parent for both stories.

 1222



 Rally®

To select all work items to bulk edit, select the check box at the top of the column.

Inline Adding Peer or Child Work Item

You can inline add peer or child work items.

NOTE
A peer cannot be added inline for a parent story. However, a child can be added inline from a parent story.

• Select Add Peer Inline from the gear menu to add a peer work item.

 1223



 Rally®

NOTE
Work items must be sorted by rank to add a peer inline.

• Select Add Child Inline from the gear menu to add children to a parent story. The type of children you can add to a
parent depends on the parent type. For a user story, you can add a child task, defect, user story or test case. For a test
case within a test set, you can add a defect.

Use the Board View of the Iteration Tracking App

The Iteration Tracking app board view allows you to:

• Display fields of interest on the cards.
• Change the color of a card.
• Update the schedule state by moving a card between columns.
• Edit work items directly on a card.

Selecting Fields to Display in the Board View

You can customize which fields are displayed on each card.

1. Select Show on Cards.
2. In the Show on Cards dialog box, select or clear the corresponding check box next to each field you want to display.
3. Select Apply.

Choosing a Color for Cards in the Board View

Hover at the bottom of the card and use the Color Picker

to change the top border of the card.

 1224



 Rally®

Updating Schedule States in the Board View

Each card resides in a column according to its current Schedule State field value. If you are starting a new iteration, your
cards should be in the left-most column. When work begins, cards are moved to the right.

To update the state of a card, drag it into the appropriate column. If the work item has tasks associated with it, the card
moves to a column automatically after updating the state of a task.

Editing Work Items in the Board View

You can edit many of the fields directly on the card.

NOTE
To view and edit all fields of a work item using the detail editor, select the FormattedID.

1. Select the field on the card.
2. Enter or select the new field value.
3. Press Enter to save your changes. You can also select outside of the card area to save. Press Esc to cancel any

changes.
4. To edit additional fields, select the FormattedID. Make your changes in the detail editor.

Kanban Board
The Kanban Board app provides teams with the option of managing pull-based, lean software development projects.

The Kanban Board allows the user to trigger an update to the Schedule State field for any drag-and-drop action from
one column to another column. Using the Schedule State field enables a shared view of work in Rally regardless of the
methodology that each team practices because many pages in Rally (such as Release Status) show status and rollups
based on the Schedule State field.

Product backlog, time-boxed iterations, and estimation are unnecessary when using a Kanban system since work is pulled
into the board and the queue is the only work of interest. Achieving maximum throughput is the main goal by determining
bottlenecks in the system and limiting the work in progress to reduce task context switching and ensure work is completed
efficiently and quickly.

Source code is available: Kanban Board source code

 1225

https://github.com/RallyApps/app-catalog/tree/master/src/apps/kanban


 Rally®

Set Up the Kanban Board App

Settings in this app are per project. Project administrators can only change app settings in projects that they administer.

1. From the app gear menu, select Settings.

2. You can set the board to change its data with your global project picker, or you can choose a specific project or group
of projects to work from. If you choose the Follow Global Project Setting, then the contents of the board will change
according to your global project picker. Select Choose Specific Project if you want to see another project's work,
regardless of your global project setting.

3. If your board is installed on a shared custom page, check the Default Settings check box to use the settings selected
in the lower section of the menu for all projects in the workspace. Changes you make to columns, fields displayed on
cards, and other options will be used when viewing the board from any project.

NOTE

• If you have previously saved settings for the app while viewing it from a specific project, those settings will
not be overwritten when checking the Default Settings check box. Any changes you save while this check
box is empty will be project-specific.

• When the app resides on a custom page shared with an entire workspace, only workspace administrators
and subscription administrators may edit global settings.

4. The Kanban Board's columns are determined based on a Rally field. You can use Schedule State, but most Kanban
teams will want to use a custom field to define customized columns. You can use different values for different projects
(teams).
a) As a workspace administrator, create a custom field of type Dropdown in Rally with a Name and Display Name of

your choosing (such as KanbanState). Spaces are allowed in the Name and Display Name, but special characters
are not supported.

b) Add values to the custom drop-down for each Kanban state. For example, Prioritized, Ready, In Dev, Released,
and so on. Create this custom field for each work item type that will be displayed on the board, so that stories,
defects, and test cases may share the same custom state.

c) Select the custom field you've created from the Columns drop-down. A table will display below the field.

 1226



 Rally®

d) Each value of your field will be listed as a row. For each row:

• Edit the Show column to determine if that value appears on the board.
• Use the Schedule State Mapping option to associate values between the custom field and the Schedule State

field. We recommend mapping the In-Progress and Accepted values of the Schedule State field to columns
displayed on your board. These values are used to generate Cycle Time and Throughput charts. Both charts
measure stories that move from In-Progress to Accepted. You can edit these settings inline by double-clicking in
the table.

• The WIP value for each row in the table represents a work in progress limit for each column on the board. This
value is the maximum number of cards that the team agrees should be in a column at any given time. When this
limit is exceeded, the column will turn red. Leave the field blank for unlimited WIP.

e) Field values are listed in the same order that was set when the custom field was created or modified. Selecting
a column name in the table will sort the fields by the specified criteria. To change the order of the values, edit the
custom field.

5. Swimlanes are horizontal rows that can be applied to a board for a team to easily visualize work items by category or
sub-process. Administrators can choose custom fields to be used as swimlanes on the Kanban Board.

NOTE
Best Practice: The most common usage in kanban is to add an Expedite swimlane. You can use this
swimlane to visualize a single work item that is allowed to violate work in progress (WIP) limits. This work
item receives priority treatment over other work items in a column.

a) Select the Swimlanes check box.
b) Select the type of swimlane you want to set up from the dropdown menu.

 1227



 Rally®

• Blocked: Work items that are blocked can be manually blocked or dragged into the swimlane.
• Expedite: Cards designated as urgent can be dragged into the swimlane and tracked. The Expedite field is

available on all artifact work items (use story, defect, portfolio item, test set and defect suite).
• Owner: Create owner swimlanes to easily drag work items that should be assigned to a specific owner.
• Sizing: Sizing points are used to easily drag work items into a specific size grouping.
• Custom: Administrators can create custom dropdown fields to create swimlanes. Custom dropdown fields can

be created at the workspace or project level to make swimlanes available to all users of a workspace or project.
A custom field must be created for both user stories and defects.

• No Entry: For work items that include the swimlane field but the field has not been set to a value, those work
items will display in a swimlane named No Entry.

6. Set up display options to determine whether a card displays on the board.

• Select the Hide cards in last visible column if assigned to a release check box to make cards disappear from
the right-most column on the board when a value is added to the work item Release field.

• Select the Show age for card after day(s) in column if you want to see a visual indicator on a card after the limit
is exceeded. You can change the maximum number of days as desired.

7. Use the Query field to display a select set of work items. You can enter SQL-style queries to filter the cards displayed
on the board, based on field values of stories and defects. Learn more.

 1228



 Rally®

Using Cards on the Kanban Board App

User stories and defects are displayed on the board as cards.

You can filter the cards as you see fit. Learn more about filtering.

NOTE
To view and edit all fields of a work item within the detail editor, select the FormattedID of the work item.

• The card on the board is what is most important during the stand-up meeting. Track the work and not the worker each
day.

• Ensure the team always prioritizes moving cards on the right side of the board before moving cards on the left side of
the board. The cards on the right are the most important to complete first as this work is closest to delivering customer
value.

• Ensure most cards on the board are about the same size or estimate. This helps provide the greatest benefit to the
cycle time report data. If your sizing is varied, the cycle time report is not as meaningful.

• Cards can be moved across swimlanes via drag-and-drop. Additionally, you can collapse a swimlane by selecting the
arrow on the right side of the swimlane header.

You can update all work items, including tasks, without leaving the Kanban board. You can add a new user story or defect
to the board with the Add New button.  You can either do a quick add or add with details.

Select Fields to Display on Cards on the Kanban Board

Select one or more fields to display on the Kanban Board. Specify which fields are displayed by selecting Show on Cards
on the app, located next to the + Add New button.

 1229



 Rally®

Update Schedule States on the Kanban Board

Each card resides in a column according to its Schedule State field or custom field value. When work begins, cards are
moved to the right.

Drag the card into the appropriate column. If the work item has tasks associated with it, the card moves to a column
automatically after updating the state of a task.

Move Existing Work to the Kanban Board

If you are not seeing work items from your backlog after setting up the Kanban board, use one of these methods:

• Assign defects and stories to the first Kanban state visible on your board. Set up a custom view with the Kanban State
custom field displayed from the Plan, Backlog page. You can then double-click on the Kanban State custom field for
each story or defect to set the Kanban state.

• Assign work to the first Kanban state by displaying the --No Entry-- column on the board. The board will limit the work
in this column to the first 100 cards.

Inline Edit Work Items on the Kanban Board

You can edit the Name, Plan Estimate, and Owner fields inline (select once on the field on the card). Note that you can
only inline edit the Plan Estimate if it is displayed on cards. Enter or select the new field value, then press Enter to save
your changes. You can also select outside of the card area to save. Press Esc to cancel any changes.

To edit additional fields, select the gear

and select Edit. Make your changes in the editor window.

Mark Cards as Blocked or Ready

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to notify your team
of a problem. Blocked cards display on the board with a red border. Hover over a card and select Blocked

to set the blocked status.

After Blocked selected, the Blocked Reason field displays. Type the reason for the blocked status, then select outside of
the card to save. You can edit the Blocked Reason by selecting the field on the card. When a blocked status is removed,
the Blocked Reason field is cleared.

When a card is ready to move to the next stage of development, you can mark it as ready to update your product owner or
other team members. The card displays on the board with a green border. Hover over a card and select the Check Mark

to set ready status.

If you check the Blocked field when using the task editor window, the blocked status will rollup to the associated work
item. The card for that work item will display the red border.

Choose a Color for Cards on the Kanban Board

Hover at the bottom of the card and use the Color Picker

to change the top border of the card.

 1230



 Rally®

Rank Cards on the Kanban Board

Adjust the vertical position of a card by dragging it up or down within a column. This is helpful if your team has many
work items within a given state, and you want to visually remind them which items are high priority. At the beginning of an
iteration, you can use this feature to identify what work is most important to begin first.

Copy or Delete Cards on the Kanban Board

You can copy or delete a work item by hovering over a card and selecting the Gear

.

Select Copy to create a copy of the work item and any associated tasks. This feature is useful during iteration planning,
when you need to create a similar story, defect, or a template set of tasks.

Select Delete to immediately remove the work item from the board and move it to the Recycle Bin.

 1231



 Rally®

View and Update Discussions within the Kanban Board App

You can review and add discussions for each card on the board. Discussions allow team members to provide detailed
updates and comments on a work item.

1. Hover over a card, select the

and select Discussions.

2. Enter your new comment in the text field and select Post.

3. If the work item already has discussion comments present, select Discussions

on the card to access the details display. You can review existing comments, and add new ones.

4. To delete a comment, select Delete

when viewing the details display. Only the original author and administrators may delete a comment.

Select outside of the card or on the Arrow to close the details display. An icon

( )
will display on each card, indicating the number of comments present. The icon will change color depending
on the time the last comment was posted. A discussion with a post less than four hours old displays as
dark blue, while older posts display as a lighter blue or grey, so you can see which work items have new
information.

View and Update Tasks within the Kanban Board App

You can quickly view the overall status of associated tasks on each card.

If tasks are associated to a work item, the icon

and a count of completed tasks display at the bottom of the card. An aggregate total of the remaining task to do hours will
display to the right of the icon.

Task Status Icons

Add the task status column to your Backlog page to see the state of tasks associated to your user story or defect. When
displayed, the column will have a colored icon indicating the status of the associated items.

 1232



 Rally®

NOTE
These columns are also available inside of Custom List apps.

Icon Tasks associated to the work item

All have a state of Defined

At least one has a state of In Progress, none are blocked

At least one is blocked

All have a state of Completed, none are blocked

Edit Task Fields on the Kanban Board

1. Select Tasks

on a card to display a list of all tasks associated to the work item. Alternatively, select the

when hovering over the card and select Tasks.
The following fields display:
– Name
– Owner
– Schedule State
– Task Estimate
– To Do
– Actuals (if visible)
– Blocked

2. Select any field to enter inline editing mode. You can enter new data into text and number fields, or use a drop-down
menu to change multiple value fields.

3. After making changes:
– Press Enter to save your changes and edit the next field down.
– Press Tab to save your changes and edit the next field to the right.
– Select outside of the tasks area to save changes to a field.
– Press Esc to cancel any pending changes.

4. To edit additional fields, select the gear

next to a task and select Edit.
5. To exit the task details display, select the Arrow or outside of the area.

Copy or Delete Tasks on the Kanban Board

Use the gear

in the task details display to copy or delete a task.

 1233



 Rally®

Select Copy to create a copy of the task. This is useful during iteration planning when you need to create a similar set of
tasks associated to a work item.

Select Delete to immediately disassociate the task from the work item and move it to the Recycle Bin.

Viewing and Updating Associated Defects

You can quickly view the overall status of defects associated to a user story on the Kanban Board.

If defects are associated to a story, an icon and a count of active defects display at the bottom of the card.

A red icon indicates that one or more defects with a state other than Closed are associated to the user story. A green
icon indicates that one or more defects are associated to the story, but all have a state of Closed. Product owners can
quickly scan the icons when updating iteration work; a red icon indicates that open defects exist, and the story cannot be
accepted.

Edit a Defect on the Kanban Board

1. Select the status icon on a card to display a list of all defects associated to the story. Alternatively, select the gear

when hovering over a card and select Defects.
2. The following fields display. Select any field to enter inline editing mode. You can type in the Name field or use the

drop-down menus to change fields with multiple values.
– Name
– Severity
– Priority
– Owner
– State

3. After making changes:
– Press Enter to save your changes and edit the next field down.
– Press Tab to save your changes and edit the next field to the right.
– Select outside of the tasks area to save changes to a field.
– Press Esc to cancel any pending changes.

 1234



 Rally®

4. To edit additional fields, select the gear

next to a defect and select Edit.
5. To exit the defect details display, select the arrow icon or outside of the area.

Copy or Delete Defects on the Kanban Board

Use the gear

in the defect details display to copy or delete a defect.

• Select Copy to create a copy of the defect associated to the same user story.
• Select Delete to immediately disassociate the defect from the story and move it to the Recycle Bin.

Filter by Tag

The Filter by tag drop-down allows you to filter what cards are shown by fading out cards that do not have the selected
tag applied. If no cards match the selected tag, all cards are faded and a message displays.

When the filter is applied to the board, you can still interact (drag-and-drop, select links, expand cards, and so on) with all
cards displayed on the board.

Filter by Owner

Filter cards by selecting an owner from the drop-down. Selecting an owner populates the board with cards belonging
exclusively to one person.

Select Clear Filter to return the cards to their original state.

NOTE
If the selected owner is the owner of a defect or task associated to a work item, the related card will display on
the board. This includes cards owned by other users.

Exit Agreements in the Kanban Board App

To document what criteria needs to be met before a card can move into the next column, use the exit agreements feature.

By default, the Exit Agreement and Exit Policy fields are hidden from the Kanban Board. To display the fields above each
column, select the following check box next to the Filter by drop-down menu:

• Show Agreements on the Kanban Board
• Show Policies on the Portfolio Kanban Board

When the fields are displayed, hover over the column you want to edit. Select Edit to open the editor. Enter your exit
criteria, then select Save.

NOTE

• The fields are independent for each project the Kanban Board is scoped to.
• Each field is limited to 256 characters.
• Editor project permissions are required to edit the fields.

 1235



 Rally®

Why are Exit Agreements/Policies Important?

In each column, the policy is the team's commitment to complete a certain list of activities before allowing work to
be pulled into the next column. This list typically takes the form of a set of testable statements, such as Code review
comments resolved or Installed in staging environment. When observing the board, you can look at a single card's
position and be assured that every policy to the left of this card has been met and act safely on that information.

As a result, exit policies answer the question: What does it mean for work to be in this state? These per-column policies
help convey clear expectations to stakeholders and anybody else viewing a team's board. This goes a long way to
resolving misunderstandings between the team and their stakeholders, creating a stronger, more trusting relationship.

Using exit policies as a checklist allows individuals to focus on leveraging their skills to achieve the product's goals, and
reduces the stress factor of having to remember each aspect of the team's commitment. This is also helpful to new team
members as they learn the team's behaviors and norms.

Available Kanban Board Actions

Column Actions

Action What it does

Drag-and-drop to another column Hover over the card to see the cross-hair cursor that allows you
to drag the card into any of the other columns on the board. The
Schedule State field is updated when a card is moved from one
column to the next.

Drag-and-drop re-ranking Hover over the card to see the cross-hair cursor that allows you to
re-rank cards within the same column or re-rank by drag-and-drop
from one column to the next.
The card that you re-rank will always be re-ranked to a position
higher than the card beneath it. For example, if you move S456
above S123, it will set the rank of US456 higher than the rank for
US123.

App Tools Actions

Action What it does

Settings Configure the Kanban Board for the current project selected in the
Project chooser.

Show Cycle Time Report Display the average cycle time (in days) for defects and stories for
the last 12 months.
This helps determine how long it takes to get a story or defect
from the In-Progress to Accepted schedule state. For example,
as soon as a story gets a Kanban state and has a schedule state
of In-Progress, it will start tracking the cycle time. Once the story
reaches the Accepted schedule state, the cycle time is displayed
in the cycle time report. Since the cycle time metrics track data
on the Schedule State field, it is important to set this mapping
correctly in the Settings dialog.

 1236



 Rally®

Action What it does

Show Throughput Report Display the throughput (count of work items) for defects or stories
for the last 12 months.
This helps determine how often a story or defect goes from the
In-Progress to Accepted schedule state. For example, as soon
as a story gets a Kanban state and has a schedule state of In-
Progress, it will start tracking the throughput. Once the story
reaches the Accepted schedule state, this work item is included
in the throughput report. Since the throughput metrics track data
on the Schedule State field, it is important to set this mapping
correctly in the Settings dialog.

Print Print the entire Kanban Board including header and page options.

Delete App Delete the Kanban Board.

Card Actions

Action What it does

View the details of the work item The FormattedID link on the card title (such as DE7018) is a URL
that will take you to the detail page for the work item.

Edit card details Displays a full editor window for the work item.
Hover over the card, then select the Gear

and select Edit.

Mark a card as ready Highlights the card with a green border, indicating work
is ready to be reviewed or moved to the next stage.
Hover over a card, and then select the Check Mark

at the bottom to mark it ready. Use this same method to remove
a ready status. The Ready check box inside of the user story or
defect will be edited when performing this function.

Block a card Highlights the card with a red border, indicating work
is stalled. Hover over a card, and then select Blocked

at the bottom to mark it blocked. Use this same method to remove
a blocked status.

Change the name of a card Select the name in the center of the card to enter inline editing
mode. Type in the new name, then select outside of the field.

Change the owner of a card Select Owner

(to the immediate right of the owner name near the top of the card)
to enter inline editing mode. Use the drop-down to select a new
owner, then select outside of the card to exit edit mode.

Copy a card Creates a copy of the work item, and copies any
associated tasks. Hover over the card, then select the Gear

and select Copy.

 1237



 Rally®

Action What it does

Delete a card Removes the work item from the board and places it in the
Recycle Bin. Hover over the card, then select the Gear

and select Delete.

Review and add discussions Read or add comments to the work
item. Hover over the card, then select

and select Discussion.

Task Actions

Action What it does

View overall task status The status of task progress and total remaining to do hours will
display at the bottom of each card. Task progress is represented
by an icon.

View all tasks with details Displays a list of all associated tasks and essential
fields. Select the task summary icon at the
bottom of a card, or hover over a card, select

and select Tasks.

Edit task details inline You can update the task Schedule State, Name, Owner, Estimate,
and To Do fields from the task details display. Select a field to
enable inline editing mode, then enter your changes. Text and
number fields will have an entry form, while multi-select fields
will display a drop-down. Select outside of the card area or press
Enter to save your changes.

Open full task editor Displays an editor window to change any standard or custom
task field. From the task details display, select the Gear

to the left of the task, and then select Edit.

Copy a task Creates a copy of the task and associates it with the same
work item. From the task details display, select the Gear

to the left of the task, and then select Copy.

Delete a task Disassociates the task from the work item and places it in the
Recycle Bin. From the task details display, select the Gear

to the left of the task, and then select Delete.

Rank a task You can change the order that tasks display when viewing the
details of a card. In the task details display, select the gripper
icons to the left of a task row and drag the task to its new position.

 1238



 Rally®

Associated Defect Actions

Action What it does

View overall defect status The status of associated defects at the bottom of user story cards.
An icon will display based on the number of defects associated to
the story, and indicates if all defects have been closed.

View all associated defects with details Displays a list of all associated defects and
essential fields. Select the defect summary icon at
the bottom of a card, or hover over a card, select

and select Defects.

Edit defect details inline You can update the defect State, Name, Owner, Severity, and
Priority fields from the defect details display. Select a field to
enable inline editing mode, then enter your changes. Text fields
will have an entry form, while multi-select fields will display a drop-
down. Select outside of the card area or press Enter to save your
changes.

Open full defect editor Displays an editor window to change any standard or custom
defect field. From the defect details display, select the Gear

to the left of the defect, and then select Edit.

Copy a defect Creates a copy of the defect and associates it with the same
user story. From the defect details display, select the Gear

to the left of the task, and then select Copy.

Delete a defect Disassociates the defect from the user story and places it in the
Recycle Bin. From the defect details display, select the Gear

to the left of the defect, and then select Delete.

Rank a task You can change the order that defects display when viewing the
details of a card. In the defect details display, select the gripper
icons to the left of a defect row and drag the defect to its new
position.

Milestone Burnup
The milestone burnup chart shows how work is tracking to the target date. The blue line indicates scope, and the green
bars are the accepted work on a given date.

WARNING
Not available in Rally On-Premises.

 1239



 Rally®

NOTE
The first story points are not the complete picture of the number of points in a milestone. The Burnup Chart
includes a total number of points for user stories and defects associated to them regardless of what milestone
the defects are associated to. The chart counts all defects which are associated to the user stories as well, even
if they are not associated to the same milestone.

From the Burnup chart Settings, you can select the count of user stories and defects instead of points, or you can select
to view both points and count.

Milestone Cumulative Flow
This app is helpful for Kanban teams or those looking for bottlenecks in the process.

WARNING
Not available in Rally On-Premises.

Elements in the chart legend are selectable to show/hide series on the chart. For example, it is easy to hide states to
focus on parts of the workflow.

 1240



 Rally®

To configure the Milestone Cumulative Flow App:

1. From the app gear

menu, select Settings.
2. Select the desired milestone from the Milestone drop-down list.
3. Specify the following:

– Points or Count: Select to view points or count on the chart.
– Field: Select Schedule State (selected by default) or a custom drop-down list.
– Show States: Select the states you want to display on the chart. You can select multiple states.

4. Select Save.

My Availability
The My Availability app allows you to see if you are underutilized, overloaded, or well-balanced for the current iteration.

This app is particularly useful for contributors who work on multiple projects simultaneously.

 1241



 Rally®

Features include:

• View status for current iterations where you have been assigned tasks.
• View status across multiple projects.
• View the entered capacity value for each project where you have assigned work.
• View the cumulative total of Task Estimate hours assigned to you in each iteration.
• View a graphical load indicator, which changes color based on the ratio of capacity to assigned work:

– Green when you are at 0–79% of your available capacity.
– Yellow when you are at 80–99% of your available capacity.
– Red when you are at 100+% of your available capacity.

• Sort the list by Project, Iteration, or Capacity by selecting the column header.

To edit the Capacity field:

1. Double-click in the Capacity field of a project.
2. Edit the capacity value.

NOTE
You must refresh the page after editing a capacity value to see changes in the Load indicator.

My Defects
The My Defects app displays non-closed defects that you own.

This app is useful for testers, developers, and other contributors who need to track assigned defect work.

 1242



 Rally®

Features include:

• The FormattedID, Name, Priority, and State fields display by default. Use Show Columns

to customize the columns displayed on the app.
• Hover over the FormattedID of defects to see description details.
• Select the FormattedID of defects to navigate to the item's detail page.
• Select inside of fields to edit details.
• Sort data by selecting column names.
• Use the Filter by Owner drop-down menu to find defects assigned to you. You can also clear the filter or select No

Owner to display defects that are not currently owned by anyone.
• You can import defects, export to CSV, and print using Import/Export/Print

.
• Enter a query through the Settings menu.
• Bulk edit defect fields.
• Bulk associate defects to a user story.

My Notifications
The My Notifications app allows you to keep track of events in a project or set of projects.

To configure the notifications you see, read Set Up Your Notifications.

 1243



 Rally®

Features include:

• View all notification alerts according to your notification rules.
• View FormattedID, name, time, change author, and details information for each notification.
• Hover over the highlighted FormattedID of work items to view description and hierarchy details.
• Select the FormattedID of work items to navigate to the item's detail page.
• Select the Comment link at the bottom of each notification to add a discussion to the affected work item.
• Select the Show more link at the bottom of the app to load additional past notifications.

You cannot manually delete notifications from this app's display. In order to keep your notifications display current and
concise, set up notification rules.

My Tasks
The My Tasks app displays tasks that you own in the current iteration. This is useful for developers, testers, and other
contributors who want to quickly view and link to their assigned tasks each day.

NOTE
Tasks must be assigned to an iteration or release before they will appear in the My Tasks app.

Features include:

 1244



 Rally®

• View all tasks that you own in the current iteration that do not have a state of Closed.
• View the FormattedID, Name, Work Product, State, Estimate, and To Do fields by default.
• Add standard and custom fields to the app display using Show Columns

.
• Hover over the FormattedID of work items to see description and hierarchy details.
• Select the FormattedID to navigate to the item's detail page.
• Select fields, operators and values to display on the app by selecting Filter

.
Use the Filter by Owner drop-down menu to find tasks assigned to you. You can also clear the filter or select No
Owner to display tasks that are not currently owned by anyone

• Select inside of fields to edit details.
• You can import tasks, export to CSV, and print by selecting Import/Export/Print

.
• Sort data by selecting column names.
• Enter a query via the Settings menu.
• Edit fields on multiple tasks.
• Bulk associate tasks to user stories or defects.

My Test Cases
The My Test Cases app allows you to view test cases for which you are the owner.

Features include:

 1245



 Rally®

• View the FormattedID, Name, Work Item, Type, Last Verdict, and Last Run fields by default.
• Hover over the FormattedID of work items to see description and hierarchy details.
• Select the FormattedID to navigate to the item's detail page.
• Select inside of fields to edit details.
• Sort data by selecting column names.
• Select the Add New button to add additional test cases.
• Use the Filter by Owner drop-down menu to find test cases assigned to you. You can also clear the filter or select No

Owner to display test cases that are not currently owned by anyone.
• Select Show Columns

and select the check boxes to customize the columns displayed on the app.
• Import test cases, export to CSV, and print by selecting Import/Export/Print

.
• Enter a query via the Settings menu.
• Bulk edit test case fields.
• Bulk associate test cases to user stories and defects.

Open Defect Age
The Open Defect Age app tracks the mean age of open defects in your project.

The mean age of open defects is a measure of how much time currently-open defects stay unresolved. In most cases it
makes sense to reduce mean age as this indicates that you do not have too many outstanding defects and customers do
not have to wait too long for fixes.

To give the full picture of the maintenance situation, mean age of open defects should be interpreted together with a mean
time to fix metric (how much time in average it takes you to fix a defect).

Source code is available: Open Defect Age app source code

Three areas of the app provide information on how your team is closing defects:

Chart A chart displays at the top of the app, showing the mean age of open defects during the last 30 days. Hover
over a point on the line to see a detailed mean age for that day.

Oldest open defects The Oldest open defects table displays the five oldest defects in your project, along with a count of how
many days each defect has been open.

• Select the FormattedID of a defect to navigate to the item's detail page.
• Sort data by selecting column names.

 1246

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/OpenDefectAge.html


 Rally®

Do we solve high
priority defects first?

This table displays the available Priority field values for defects, along with a mean age in days for each
priority.

• If you have created custom values for the Priority field, they will display in the table.
• Sort data by selecting column names.

Planned vs. Actual Burndown Chart
The Planned vs. Actual Burndown app captures a release’s burndown progress. It is a chart overview with a table to view
the data.

Use this app to help you determine if:

• The release is progressing as expected.
• The work is logically divided between the iterations.
• There should be a reallocation of the user stories to other iterations.

NOTE
This data collection works differently than some other apps, such as Release Scope Change, which use the
release name field to filter and collect work items. You may see different totals when comparing figures in each
app.

Source code is available: Planned vs. Actual Burndown Chart app source code

Understanding the Burndown Chart Data

Use the Release drop-down list to select the data to burn down in the chart. When a release is selected, any iterations
that are active after the release start date or before the release end date will be added to the chart. Work items in the
iterations, including those not directly assigned to the release, are included.

View the chart to see the difference between the planned and actual burndown values for each iteration.

The actual burndown line is dashed when the value was predicted by using the planned velocity values instead of the
actual velocity values for future iterations.

• The planned burndown line displays the trend of the planned velocity burndown.
• The actual burndown line displays the trend of the actual velocity burndown.

View the table data to see the burndown-related data broken down by iteration. The “Release Plan Estimate” value
located above the table is the sum of all plan estimates for the selected release. It is used to help calculate the planned
and actual burndown values for the beginning of each iteration by subtracting the appropriate value. The release row
shows the burndown values at the end of the last iteration.

 1247

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/PlannedVsActualBurndownApp.html


 Rally®

• Actual burndown values occurring in the past are blue.
• Actual burndown values occurring in the future are light grey.
• Planned burndown values are dark grey.

The columns in the table are:

Iteration Name The iteration names for the selected release.
Start Date The iteration’s start date.
End Date The iteration’s end date.

Plan Estimate The total plan estimates for the iteration’s user stories, defects, and defect suites.
Actual Velocity The total plan estimates for the iteration’s accepted user stories, defects, and defect suites.

Planned Velocity The iteration’s planned velocity value.
Actual Burndown The iteration’s actual burndown value at the start of iteration.

Planned Burndown The iteration’s planned burndown value at the start of iteration.

Portfolio Hierarchy
Use the Portfolio Hierarchy app to visualize and manage the relationships between different levels of portfolio items and
the stories that support them.

This app displays portfolio items and their children, including user stories. This is a useful app for project managers and
product owners.

Source code is available: Portfolio Hierarchy source code

In the Portfolio Hierarchy App you can:

• Select the inline Gear

to edit, copy, or delete items, or add a child directly from the hierarchy. When working with user stories in the hierarchy,
you can add, edit, copy, and delete tasks or defects using the gear menu.

• Use drag-and-drop to:

 1248

https://github.com/RallyApps/app-catalog/tree/master/src/apps/portfoliohierarchy


 Rally®

– Re-parent portfolio items, enforcing parents of the appropriate type.
– Re-parent stories to other stories.
– Re-parent tasks to other lowest-level stories.
– Move stories to become children of the appropriate type of portfolio item.

Configure the Portfolio Hierarchy App

Hovering over the Filter displays the current settings.

1. From the app gear

menu, select Settings.
2. Select one of the following project settings to filter the top level of items presented in the app. Project settings apply

only to the top level of the hierarchy.
– Select Follow Global Project Setting to filter according to your global project picker.
– Select Choose Specific Project if you want to see another project's work, regardless of your global project setting.

3. Use the Type drop-down list to filter the tree at a particular type of portfolio item.
4. Use the Query field to enter SQL-style queries to filter the data displayed in the app based on field values.

NOTE
Queries apply to the top-most level of portfolio items in view.

5. Select Save.

Portfolio Item Burnup
This app shows the delivery trend on work associated with a portfolio item. You can see the progress of the portfolio item,
the amount of work that remains, and how the scope of work may have changed.

WARNING
Not available in Rally On-Premises.

NOTE
This app is not currently under Rally's SLA.

You can add multiple instances of this app on your dashboard or custom pages, each referencing different portfolio items.

The vertical axis represents the count of planned portfolio items, and the horizontal axis represents completed portfolio
items. The X axis legend and Y axis legend values may sometimes overlap.

 1249



 Rally®

If no data was found for a selected portfolio item, it could be because:

• No stories are available for this portfolio item.
• There are missing Plan Estimate values.
• Work has not started.

The app displays all children of the portfolio item, regardless of whether they are in the project scope.

Source code is available: Portfolio Item Burnup App source code

Zoom in on the Portfolio Item Burnup App

To see additional details, you can zoom in on a specific date range by selecting a region on the screen to zoom in on.

 1250

https://github.com/RallyApps/app-catalog/tree/master/src/apps/charts/rpm/burn


 Rally®

If you are zoomed in on a date range, you can return to the full view by selecting Reset zoom.

 1251



 Rally®

Configure the Portfolio Item Burnup App

1. From the app gear

menu, select Settings.
2. Select Choose to select the portfolio item.

When you select a portfolio item, the settings default to the actual start and end dates, when they are available. When
the actual end date has not occurred, the end date will default to today. You can also select custom dates.
– The date format specified on the workspace setting overrides the date format specified in your user profile.
– Searches for portfolio item by Formatted ID ignores the ID prefix and returns all portfolio items that match the

numeric part of the ID. For example, a search for I1103 also returns F1103. The prefixes I and F are ignored.
Searching for 1103 would yield the same result.

3. Select Save.

Portfolio Item Cumulative Flow
This app gives a work-in-progress analysis on the delivery trend for a portfolio item.

WARNING
Not available in Rally On-Premises.

 1252



 Rally®

NOTE
This app is not currently under Rally's SLA.

You can add multiple instances of this app on your dashboard or custom pages, each referencing different portfolio items.

If no data was found for a selected portfolio item, it could be because:

• No stories are available for this portfolio item.
• There are missing Plan Estimate values.
• Work has not started.

The app displays all children of the portfolio item, regardless of whether they are in the project scope.

Source code is available: Portfolio Item Cumulative Flow source code

Zoom in on the Portfolio Item Cumulative Flow Chart App

To see additional details, you can zoom in on a specific date range by selecting a region on the screen to zoom in on.

 1253

https://github.com/RallyApps/app-catalog/tree/master/src/apps/charts/rpm/cfd


 Rally®

Select Reset zoom to restore the full view.

Configure the Portfolio Item Cumulative Flow App

1. From the app gear

menu, select Settings.
2. Select Choose to select the portfolio item. When you select a portfolio item, the date settings default to the actual start

and end dates when they are available. When the actual end date has not occurred, the end date defaults to today.
You can also select custom dates.

 1254



 Rally®

The X axis start date is the date work started on the portfolio item, as defined by the Actual Start Date. The X axis end
date is either today (if the work is not completed) or the Actual End Date if the work is complete.
– The date format specified on the workspace setting overrides the date format specified in your user profile.
– Searches for portfolio item by Formatted ID ignores the ID prefix and returns all portfolio items that match the

numeric part of the ID. For example, a search for I1103 also returns F1103. The prefixes I and F are ignored.
Searching for 1103 would yield the same result.

3. Select Save.

Portfolio Item Timeline
The Portfolio Item Timeline app allows you to visualize how portfolio items are progressing over varying time intervals.

Portfolio managers, product managers, and other executives can use the app to quickly see if a portfolio item is ahead of
schedule, in danger, or behind schedule compared to the planned start and end dates. Actual progress bars are colored
for quick reference to status. Colors displayed are based on the same algorithm used when hovering over a portfolio item
on the Portfolio Items page.

 1255



 Rally®

Data displayed in the app is in the same format as the Timeline page. All of the features on the page are also available in
the app.

• Progress bars, colored based on the Percent Done by Story Count field.
In order for the colored bars to display when you print this app, you need to enable the Background Colors and Images
setting in your browser.

• Callouts display when hovering over an actual progress bar, providing additional details.
• Timeline scope goes back one year into the past.
• The Query field is available in the app settings menu. You may enter SQL-style queries to filter the data displayed in

the app based on field values.
• The Filter

contains all portfolio item fields so you can easily choose which fields to display on the timeline.

NOTE

• There is no zoom functionality available when using Internet Explorer.
• Zoom preferences in the app are not saved between sessions.
• Queries used in the app settings menu apply to the top-most level of portfolio items in view.

View Portfolio Items Associated to a Milestone

1. Select the milestone on the timeline.
2. Select the black box that contains the milestone name. The portfolio items associated with the milestone are then

highlighted on the timeline.

 1256



 Rally®

3. To hide workspace-scoped milestones, uncheck Show Workspace Scoped Milestones.

Portfolio Kanban Board App
The Portfolio Kanban Board app helps you track the status of your portfolio items as they move along in your portfolio
process.

The functionality of the Portfolio Kanban Board app is also available as a Rally page under Portfolio, Portfolio Kanban.

Each portfolio item is displayed as its own card on the Kanban board. If a portfolio item has not been assigned a state, it
displays in the No Entry column.

• Set up the Portfolio Kanban Board App
• Work-in-progress (WIP) Limits
• Create Exit Policies

 1257



 Rally®

Source code is available: Portfolio Kanban Board source code

Set Up the Portfolio Kanban Board App

Before adding the Portfolio Kanban Board app, ensure the State field for each portfolio item type has been configured.

Default states are available, but can be customized with the terminology your organization prefers. States are represented
on the board as columns. Learn more about the State field and how to customize it.

1. Add the Portfolio Kanban Board app to a custom page or your Dashboard. Learn more.

2. From the app gear

menu, select Settings.

3. You can set the board to change its data with your global project picker, or you can select a specific project to work
from. If you select Follow Global Project Setting, then the contents of the board will change according to your global
project picker. Select Choose Specific Project if you want to see another project's work, regardless of your global
project setting.

4. Swimlanes are horizontal rows that can be applied to a board for a team to easily visualize portfolio items by category
or sub-process. Administrators can choose custom fields to be used as swimlanes on the board, as long as the custom
fields exist on all portfolio item types. Common uses on a program-level board includes grouping work by marketable
and non-marketable work or work grouped by parent portfolio items. To add a swimlane:
a) Select the Swimlanes check box.
b) Select the swimlane you want to set up from the drop-down list.

Watch this video for a demo and some examples on using swimlanes.

NOTE

• When you add swimlanes that are based off a custom field, the field values will be ordered alphabetically
as lanes. You may force a specific value to the top by adding a numerical prefix to the field value name,
for example, 1 - Blue or 2 - Green.

• Portfolio items that include the swimlane field, but the field has not been set to a value, will display in a
swimlane named None.

• Swimlanes may not display all cards correctly when there are more than 200 total cards on a board.

 1258

https://github.com/RallyApps/app-catalog/tree/master/src/apps/portfoliokanban
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/videos/featuredemo_PI_Swimlanes.webm


 Rally®

5. The Query field lets you enter SQL-style queries to filter the cards displayed on the board, based on field values of
portfolio items.

Portfolio Kanban Board App Filter Options
The filter options allow you to filter, set any field as a quick filter, search, and set up custom filter conditions.

Learn more about advanced filtering here.

You can see how many filters are applied as the filter icon will display the number of active filters. Your filters will remain
active when you navigate away from the page.

1. Select Filter

.

2. To add a quick filter select Add Filter. You can also filter on a blank field, allowing you to filter on items that have fields
that have no value or are blank.

By default, multiple filters use an and/or condition so all results are displayed.

3. Advanced filters help you look for powerful, complex conditions, such as open high-priority defects. You can add an
advanced filter by selecting Advanced Filters. To hide your advanced filters select Hide Advanced. To clear your
advanced filters, select Clear Advanced Filters.

4. Clear your filters by selecting Clear All.

Select Fields to Show on Cards in the Portfolio Kanban Board App

Each card displays the ID, Name, and Owner.

1. Select Show on Cards.

 1259



 Rally®

2. Select the check box of one or more fields to display on the portfolio item card from a subset of portfolio item fields.

3. Clear the check box of fields that you do not want to display on the card.

4. Select Apply to save your changes.

Select the Portfolio Item Type to View
Once you add the app to a custom page, you can specify the type to control which level of your portfolio hierarchy to view.

You can install multiple board apps on the same custom page to see all levels on a single screen.

1. Select the Type drop-down menu.

2. Select the the desired portfolio item type from the drop-down menu.

 1260



 Rally®

Save and Share Views in the Portfolio Kanban Board App
You can use saved views to save and come back to the views you use most often.

1. Select the Saved Views drop-down list.

2. From the drop-down list you can save a new view or manage your saved views. You can then share it at the project or
workspace level.

Change the State of a Portfolio Item in the Portfolio Kanban Board App
Changes in the board trigger an update to the State field for any drag-and-drop action from one column to another
column.

1. Select the card and drag it to the new state column.

2. You can also re-rank portfolio items with drag-and-drop (if your workspace uses the drag-and-drop ranking mode).

Inline Edit Fields in the Portfolio Kanban Board App
You can edit the Name and Owner fields inline.

1. To change the name of a portfolio item, select the text and make your changes. Press Enter or select outside of the
area to save your changes.

 1261



 Rally®

2. To change the owner of a portfolio item, select the Owner

in the header of the portfolio item. Select the new owner from the drop-down list to save.

Collapse or Expand Columns in the Portfolio Kanban Board App
Use the arrows at the top of a column to collapse or expand.

Collapsed columns will not display Exit Policies.

Card Actions

1. The Actions (gear) menu provides several ways for you to modify cards.

 1262



 Rally®

• Select Edit to view or edit details of a portfolio item.
• Select Copy to immediately create a new portfolio item in the same column.
• You can easily move a card by selecting Rank Highest or Rank Lowest.
• Move to Position can be useful if you have a large number of cards to reorder.
• Set a Watch on the portfolio item.
• You can also Delete a card.

NOTE
If you select Delete, the portfolio item is immediately removed from the workspace with no confirmation
pop-up. Restore a portfolio item from the Recycle Bin.

2. Select the FormattedID of a portfolio item to go to the detail page of the item.

3. Select the colored percentage done area to see details of progress against the total number of stories and points.

 1263



 Rally®

Portfolio Item Discussions in the Portfolio Kanban Board App
You can review and add discussions for each card on the board. Discussions allow team members to provide detailed
updates and comments on a portfolio item.

An icon

( )
will display on each card, indicating the number of comments present. The icon will change color depending on the time

 1264



 Rally®

the last comment was posted. A discussion with a post less than four hours old displays as dark blue, while older posts
display as a lighter blue or grey, so you can see which work items have new information.

1. Hover over a card, select the Plus

,
and select Discussion.

2. Enter your new comment in the text field and select Post.

3. If the portfolio item already has discussion comments present, select the

icon on the card to access the details display.

4. To delete a comment, select the Trash

when viewing the details display. Only the original author and administrators may delete a comment.

5. Select outside of the card or on the X to close the details display.

Visualize Dependencies in the Portfolio Kanban App
Cards can indicate dependencies with the

icon.

1. Add the Dependencies field from the Show On Cards chooser.

2. Select

to view details of predecessors and successors.

Multiple Kanban Boards
If you have multiple Portfolio Kanban Board apps on the same custom page or your dashboard, you can drag a card from
one board to another if the portfolio item types are the same.

Work-in-Progress (WIP) Limits in the Portfolio Kanban Board App

The WIP (work-in-progress) and WIP limit display at the top of the board under the state name. For example, if your
current WIP in a state column is 3 and your WIP limit is 11, (3 of 11) displays. If the WIP limit is exceeded, the column
turns red.

Administrators can set WIP limits for each portfolio item state in your workspace for each portfolio item type. This setting
can be found when editing the State field.

WIP limit displays for the workspace and project you are currently scoped to. To track whether you are exceeding WIP
at the portfolio level, change your project scoping to the top of the project tree in your workspace. The Kanban board
displays the portfolio WIP for each state for the type you have chosen, and the number of cards in each state for the
scoping you have selected.

 1265



 Rally®

Create Exit Policies for the Portfolio Kanban Board App

Use the exit policies feature to document what criteria needs to be met before a portfolio item can move into the next
column.

By default, the Exit Policy fields are hidden from the board.

1. To display the fields above each column, select the Show Policies check box.

2. To add or edit exit policies for each column:
a) Hover over the column you want to edit, and select the Edit link. A rich text editor displays.
b) Enter exit criteria text, then select Save to confirm your changes.

Print Story Cards
The Print Story Cards app generates a set of printable cards for a given iteration. This is useful for creating a physical
scrum or Kanban board on a shared wall when updating status in planning and check-in meetings.

Each card contains the following data:

• Story FormattedID
• Story owner and profile picture
• Story name
• Story description
• Story estimate

 1266



 Rally®

Source code is available: Print Story Cards app source code

NOTE

• These are general instructions for printing story cards. Your actual steps depend on what browser you use.
• Page breaks may be incorrect when using Firefox. If this happens, try using Chrome or Safari.
• When printing, force your printer into landscape mode to print two cards per 8.5 in x 11 in (letter) page.

1. Select the desired iteration.

2. From the app gear

menu, select Print.

3. Select Landscape layout.

4. Make sure Scale is set to 100%. If Paper Size is an option, set it to US Letter.

5. Turn off page headers and footers, or set them to blank.

6. Select Print.

Print Task Cards
The Print Task Cards app generates a set of printable cards for a given iteration. This is useful for creating a physical
scrum or Kanban board on a shared wall when updating status in planning and check-in meetings.

Each card contains the following data:

• Task ID and story ID
• Task owner and profile picture
• Task name
• Task description
• Task estimate

Source code is available: Print Task Cards app source code

 1267

https://github.com/RallyApps/app-catalog/blob/master/src/apps/printcards/printstorycards/PrintStoryCardsApp.js
https://github.com/RallyApps/app-catalog/blob/master/src/apps/printcards/printtaskcards/PrintTaskCardsApp.js


 Rally®

NOTE

• These are general instructions for printing task cards. Your actual steps depend on what browser you use.
• Page breaks may be incorrect when using Firefox. If this happens, try using Chrome or Safari.
• When printing, force your printer into landscape mode to print two cards per 8.5 in x 11 in (letter) page.

1. Select the desired iteration.

2. From the app gear

menu, select Print.

3. Select Landscape layout.

4. Make sure Scale is set to 100%. If Paper Size is an option, set it to US Letter.

5. Turn off page headers and footers, or set them to blank.

6. Select Print.

Project Cumulative Flow
The Project Cumulative Flow app is designed to help project teams analyze work-in-progress for their delivery trend.

WARNING
Not available in Rally On-Premises.

The chart allows you to choose the field to measure, including schedule state and custom fields such as a kanban state.
With this view, teams can identify and address process bottlenecks to ensure that their project is running efficiently.

Source code is available: Project Cumulative Flow source code

Configure the Project Cumulative Flow App Settings

1. From the app gear

menu, select Settings.
2. Edit the title of the chart, if desired.
3. Select one of the following project options:

 1268

https://github.com/RallyApps/app-catalog/tree/master/src/apps/charts/cfd/project


 Rally®

– Select Follow Global Project Setting to filter according to your global project picker.
– Select Choose Specific Project if you want to see another project's work, regardless of your global project setting.

4. The field to measure. For teams that are following a Kanban process, choose the custom field that defines the states
that define the progress of their work. After choosing the state, choose the state values to include in the chart.

5. Specify the time frame of the report. The time frame is always for a period that is relative to the current day.

6. Select Save.

Ready to Accept
The Ready to Accept app displays work in the current iteration that is ready to accept. A state of Completed signals that
the work is ready for acceptance.

 1269



 Rally®

Features include:

• View all user stories, defects, defect suites, and test sets in the current iteration with a Completed state.
• View the FormattedID, Name, and Schedule State fields by default.
• Add standard and custom fields to the app display through the Settings menu.
• Hover over the FormattedID of user stories, defects, and defect suites to see description and hierarchy details.
• Select the FormattedID of user stories, defects, and defect suites to navigate to the item's detail page.
• Double-click inside of fields to edit details.
• Sort data by selecting column names.

To populate the Ready to Accept app, user stories need to be at a completed state and scheduled in your current iteration.
You can track this by viewing the Iteration Status page.

NOTE

• If you have a story set to a completed state that is blocked, it will still display in the app in red.
• Only user stories with no open defects are displayed.

Recent Activity
The Recent Activity app displays the recent discussion comments in your workspace and who commented.

 1270



 Rally®

Features include:

• Control which workspace and project to reference using the Settings menu in the app.
• View all comments in the workspace.
• View FormattedID, name, time, comment author, and details information for each comment.
• Hover over the highlighted FormattedID of work items to view description and hierarchy details.
• Select the FormattedID of work items to navigate to the item's detail page.
• Select the highlighted author name to view email contact information (if entered).
• Select the Reply link at the bottom of each comment to add a discussion to the work item.
• Select the Show more link at the bottom of the app to load additional past discussions.

Source code is available: Recent Activity source code

Release & Iteration Burndown
The Release & Iteration Burndown chart functions like the Iteration Burndown chart with additional features.

 1271

https://github.com/RallyApps/app-catalog/tree/master/src/apps/recentactivity


 Rally®

WARNING
Not available in Rally On-Premises.

Based on your settings, the To Do series (blue line) burns down story points or counts. Likewise, the accepted series
(green line) burns up story points or counts. The ideal (black) line is the maximum number of points defined in the release
or iteration. Accepted stories have a schedule state of Accepted or greater.

The prediction series is only shown in active releases. It includes an advanced algorithm to help teams predict when their
release and iterations will complete. The algorithm looks at the most recent stable velocity (slope of the accepted series)
and the current scope to project the most likely time when the current scope will be completed. The sophistication of the
algorithm is in how it picks the recent stable period.

You can zoom in on the chart to get a better view of your release by selecting an area on the chart.

Source code is available: Release & Iteration Burndown app source code

 1272

https://github.com/RallyApps/app-catalog/tree/master/src/apps/charts/burndown


 Rally®

Configure Release & Iteration Burndown Settings App

When the Release & Iteration Burndown app is added to a page, the settings view displays by default.

1. From the app gear

menu, select Settings.

2. The chart is scoped to global project settings. On scoped dashboards or custom pages, the chart follows the scoping
of the page.
– Select Follow Global Project Setting to filter according to your global project picker.
– Select Choose Specific Project if you want to see another project's work, regardless of your global project setting.

3. Select the Level. The chart shows progress for a chosen release by default. You may also view the burndown for a
single iteration.

4. Select the Data Type.

 1273



 Rally®

The chart burns story points (Story Plan Estimate) down by default, but you can display burndown by story count.
Story Plan Estimate is a relative, abstract value that represents overall team effort. Story Count is the actual number
of stories.

5. Select the Chart Type.
The to do and accepted values are depicted as a line by default. You can display those values as columns.

6. Select Show Iteration Labels to display the iteration labels.
7. Select Save.

Release Burnup
The Release Burnup app displays work delivered so far in the release to proactively anticipate whether the release scope
will be delivered.

A burnup app differs from a burndown app in that the burnup includes a scope line that allows you to visualize when work
has been added or removed. The chart also represents a more realistic completion date for a release.

Data displayed in the app is in the same format as the Release Burnup chart. Select the chart to go to the Reports tab,
where you may view past releases, export, email, and print the chart.

Features include:

• The vertical axis represents the amount of accepted work in hours.
• The horizontal axis represents the dates that are contained within the release.
• Completed story points are represented by green bars.
• Total scope of work in the release is represented by a black line.
• Hover over the bars or line to see detailed figures on current and past progress.

Release Cumulative Flow
The Release Cumulative Flow app displays work-in-progress status to analyze the trend in lead time for release value
delivery.

 1274



 Rally®

Features include:

• Work in the release is color-coded based on the Schedule State field. You can turn on the color legend from the app
gear

menu, Settings.
• View the proportions of work in each state as the release progresses.
• View the size of work in each state in plan estimate points.

Data displayed in the app is in the same format as the Release Cumulative Flow diagram. Select the app to go to the
Reports tab, where you may view past releases, export, email, and print the diagram.

Release Dashboard
The Release Dashboard app displays iteration data in several formats, including pie charts, a general health summary,
and an advanced burndown chart. View the progress in the release broken down by work item type and state.

Source code is available: Release Dashboard app source code

Release Health

The health of the release is computed based on the percentage of work accepted and the number of days completed in
the release.

This calculation is one metric to determine release health, but refer to other resources to determine if revising the release
plan is appropriate. If no data is returned from the Work Items by Schedule State pie chart, then the Release Health
indicator will not display, as the calculation depends on this data.

For example, if the count of accepted work is 30 out of 50 total and there are 15 days completed in a 20 day release, the
calculation is ((30/50)/(15/20) * 100) or ((.6/.75)*100), equating to 80 percent. Here are the default thresholds:

 1275

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/ReleaseDashboardMashup.html


 Rally®

• Good displays when the percentage is greater than or equal to 90.
• At Risk displays when the percentage is greater than or equal to 70 and less than 90.
• Critical displays when the percentage less than 70.

Pie Charts

Up to three pie charts are displayed in the dashboard:

• Scheduled Work: Displays the count of user stories, defects, and defect suites in each Schedule State.
• Test Cases: Displays the total last verdict count of test cases that are associated with user stories scheduled in the

release.
• Defects: Displays a breakdown of defects scheduled or linked to user stories that are scheduled in the release by the

State field.

1. Use the Release drop-down menu to select the release to display in the dashboard.
2. Select the header area directly above the charts to display a key for color-coding in the pie charts:

3. Hover over slices in the pie charts to see a count.
4. Select a slice to persistently display the count to perform a comparison between the three charts.

Burndown Chart

An advanced burndown chart displays next to the pie charts.

Bars are color-coded according to schedule state, and an ideal burndown trend line is provided. Hover over a bar to see
details on the date and hours or points displayed.

 1276



 Rally®

Release Defect Trend
The Release Defect Trend app allows you to view cumulative defects opened versus closed over the course of a release,
showing whether the trend is increasing or decreasing.

The chart visually shows the rate at which defects are being activated (red line), the rate
at which defects are being terminated (green line) and the trend for the total number
of active defects (black line). You can turn the legend on and off from the app gear

menu, Settings menu.

Data displayed in the app is in the same format as the Release Defect Trend chart. Select the chart to go to the Reports
tab, where you may view additional information including a key and summary metrics. You may also print, email, and
export the chart from the Reports tab.

How the Data is Calculated

The data for the chart is collected at midnight (in the workspace timezone).

The chart looks at defects in project scope during the time frame of the release. For "today" it looks for defects created
today, defects closed today to get today's values for opened and closed, and all defects in project scope not in a "Closed"
state for the total active count. Basically, the release's purpose is to provide the time frame.

The chart does not look at the revision history. In the future, you can run analytics based on the revision history. See our
Lookback API documentation for more information.

The report and all subsequent data being displayed obeys project scoping.

Data in the chart includes:

• Cumulative Activated: Defect field OpenedDate for the selected Release.
• Cumulative Terminated: Defect field ClosedDate for the selected Release.
• Total Active: Count of all defects where State < "Closed".

– The Total Active value counts non-closed defects based on the chart's project scoping activity during the release's
timebox. This means the count is not limited to defects scheduled during the particular release.

– Also, multiple actions are being counted against a single defect. This then causes the cumulative defect count to be
higher than what you have scheduled into the filtered release.

What happens if a
defect was created

(outside of the release),
closed, then assigned

to a release, re-

When those things happened comes into play, but if it was closed today, it should show up in the
Cumulative Terminated count for today. Timezones could also come into play here, too. Did the defect
in question ever belong to a project that isn't in scope? The historical data is pulled from metrics collection
run at midnight of the workspace timezone based on projects in scope so if it wasn't in scope when that

 1277



 Rally®

opened, and then
re-closed, would it

appear on this chart?

processing was done, there would not be an entry for it there. In that case, the "today's" value is calculated
separately.

Release Dependencies
The Release Dependencies app displays a table of user stories scheduled for the selected release that either has a
predecessor or a successor.

For each story's relationship to a predecessor or successor, a row is displayed. For example, if there was a story for
the selected release that has 3 predecessors and 2 successors, this would result in 3 rows displayed. There are three
sections to the table: predecessors, stories, and successors. Each of these sections displays the following data:

• FormattedID
• Name
• Project
• Schedule State

You can print the list from the App Tools menu.

Source code is available: Release Dependencies app source code

Release Planning Board
The Release Planning Board app provides program managers with a view of portfolio items ready to be scheduled to a
release. Use the board to prepare for and carry out mid-range planning. Release Planning facilitates release preparation
and the planning process at the program level.

 1278

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/ReleaseDependenciesApp.html


 Rally®

This page shows release capacity which is displayed according to the project you have scoped. The bar at the top of
each Release column represents the release capacity. The release capacity algorithm is the total number of feature points
included in your preliminary estimates divided by the planned release velocity.

When scoped to a parent project that has child projects, the release velocity defaults to a rollup of all child projects under
the project you have scoped for the board. If you enter a planned velocity for the parent project that is null or zero, nothing
is shown in the planned velocity field and it displays as if it were not set.

The parenthetical number indicates the aggregation of Release Planned Velocity for child projects. If you are scoped to a
leaf level Project (one that has no children) there will be no parenthetical number displayed.

This section includes the following topics:

• Configure Project Scope
• Schedule Portfolio Items
• Add and Update Items
• Filter Cards
• Available Actions

Configure Project Scope

To ensure you plan lowest level portfolio items from the correct backlog, set the project scoping.

NOTE
If the custom page containing the Release Planning Board app is filtered to Iteration, you will not be able to
configure project scope as described. You can only change data using your global project picker.

1. From the app gear menu, select Settings.

2. You can set the board to change its data with your global project picker, or you can choose a specific project or group
of projects to work from. If you choose the Follow Global Project Setting, then the contents of the board will change
according to your global project picker. Select Choose Specific Project if you want to see another project's work,
regardless of your global project setting.

 1279



 Rally®

Schedule Portfolio Items

NOTE
The Release Capacity is read on page/app load, whereas the calculation of the Release column percentage bar
is triggered when you drag a lowest-level portfolio item in or out of a Release column. If the Release Capacity is
updated, you will need to refresh the page to view updated values.

Backlog portfolio items display on the board as cards in the left-most column.

1. Drag a card into a column to schedule it in a release.
2. You can change the ranking of lowest level portfolio items in both the Backlog and the Release columns. Ranking

cards can designate priority. Drag a card vertically in a column to change the rank.

Search for Portfolio Items to Schedule

Use the search field at the top of the Backlog column to quickly find a feature to schedule.

1. Enter your search criteria in the field at the top of the Backlog column.
2. Select Search

or press Enter.

 1280



 Rally®

Quickly View Details

You can hover over the ID field of a card to view its description.

 1281



 Rally®

Select the FormattedID to navigate to the feature's detail page.

Add and Update Lowest Level Portfolio Items

Add new lowest level portfolio items to your backlog, edit details, make copies, and delete from the app/board.

 1282



 Rally®

Add New Lowest Level Portfolio Items

1. Select +Add New.
2. Do one of the following:

– Enter a name in the field that displays, then select Add. You can add details later.
– Select Add with Details.

3. From the editor, complete additional fields.
4. Select Save & Close.

Edit Details

1. You can edit the Name, Plan Estimate, and Owner fields inline. Enter or select the new field value.
2. Select Enter to save your changes. You can also select outside of the card area after editing to save. Select Esc to

cancel any changes.

 1283



 Rally®

3. To view or edit other fields, select the card Gear

and select Edit.

Copy or Delete Cards

Select the card Gear

,
and select Copy or Delete.

The Copy option creates a copy of the feature and any associated tasks.

 1284



 Rally®

The Delete option immediately removes the feature from the board and moves it to the Recycle Bin.

Filter Cards

By default, multiple filters use an and/or condition so all results are displayed.

The advanced filtering option allows you to filter, set any field as a quick filter, search, and set up custom filter conditions.
Advanced filters help you look for powerful, complex conditions, such as open high-priority defects.

NOTE
When you filter by the Owner field on a top-level item, the filter also displays all lower-level items (such as tasks
for user stories or user stories for portfolio items) for that owner, even if that owner does not own the top-level
item.

1. Select Filter

to display the filtering tray.

2. Default quick filters are owner and parent. To add another quick filter, select Add Filter. You can also filter on blank
fields, allowing you to filter on items that have fields that have no value or are blank.

3. Select Advanced Filters to add advanced filtering. Learn more about advanced filtering here.
a) To hide your advanced filters, select Hide Advanced. You can see how many filters are applied as the filter icon

will list active filters numerically.
b) To clear your filters, select Clear Advanced Filters. Your filters will remain active when you navigate away from

the page.

Save and Share Views

You can use saved views to save and come back to the views you use most often.

1. Select the Saved Views drop-down menu.

2. From the drop-down menu you can save a new view or manage your saved views. You can then share it at the project
or workspace level.

 1285



 Rally®

Available Release Planning Board Actions

Column Actions

Action What it does

Drag-and-drop to schedule Hover over the card to see the cross-hair cursor that allows you
to drag the card into any of the other columns on the board. The
Release field is updated when a card is moved from one column
to the next.

Drag-and-drop re-ranking Hover over the card to see the cross-hair cursor that allows you to
re-rank cards within the same column or re-rank by drag-and-drop
from one column to the next.

Search the Backlog column Search for a specific feature by the Name field. Enter criteria
in the field at the top of the column and select Search

or press Enter.

Card Actions

Action What it does

Quickly view a description Hovering over the FormattedID link on the card title (such as F7)
will display the Description field in a pop-out.

View the detail page of a work item The FormattedID link on the card title (such as F7) is a URL that
will take you to the detail page for the feature.

View or edit card details Displays the details of a feature. Hover
over the card, then select the Gear

and select Edit.
Change the name of a card Select the name in the middle of the card to enter inline editing

mode. Type in the new name, then select outside of the field.
Change the owner of a card Select the owner name in the header of the card to enter inline

editing mode. Use the drop-down to select a new owner, then
select outside of the card to save.

 1286



 Rally®

Action What it does

Add child Add a child to the feature directly from the
card. Hover over the card, then select the Gear

and select Add child.
Copy a card Creates a copy of the feature and any associated

work items. Hover over the card, then select the Gear

and select Copy.
Delete a card Removes the feature from the board and places it in the

Recycle Bin. Hover over the card, then select the Gear

and select Delete.
Mark a card ready-to-pull Highlights the card with a green border, indicating

the feature is ready to move to the next stage.
Hover over a card, and then select the Check Mark

at the bottom to mark it ready. Use this same method to remove a
ready status.

Release Scope Change
The Release Scope Change app displays all work (user stories, defects, and defect suites) that have been added or
removed from a release, giving a succinct view of whether scope is changing during the course of a release.

Interpreting the report is an important part of the scrum master's role to understand why work is removed or added, and
how it is affecting the team's commitments.

For example, scheduling work at the end of the release may occur because the team pulled in more work than originally
planned; this is a very positive scenario. At the same time, removing work at the end of the release may mean the team
committed to too much work, and indicates a poor practice. Unfinished work should not be removed from an iteration or
release. Instead, there should be a record of overcommitment, so that it may be avoided in future releases.

NOTE

• A shared release schedule exists when releases have the same name, start date, and end date. The
Release drop-down shows all releases for the currently-selected workspace and projects. If releases with the

 1287



 Rally®

same name but different dates are found, the drop-down will show the dates in parentheses after the name.
Otherwise, only release names are displayed.

• Avoid hyphens (–) in your release names. Using a hyphen in the name prevents data from this release from
displaying correctly in the Release Scope Change apps. A dash (-) is an acceptable character.

Source code is available: Release Scope Change app source code

Features include:

• View a day-by-day report of work items added or removed from the release.
• Select a work item name or FormattedID to navigate to the item's detail page.
• Filter the report by work added or removed.
• Print the report from the App Tools menu.

Release Summary
The Release Summary app provides your team a view of the stories and defects accepted in a release. Current project
scoping settings are obeyed in the app. For example, if project scope down is true, stories and defects in child projects
with the same selected release name are included.

Links are included for quick access to the detail pages of the included release, stories, and defects.

Using the app, you can:

• View all accepted user stories and defects in a given release.
• View FormattedID and Name values for each work item.
• Select the FormattedID of user stories and defects to navigate to the item's detail page.
• View contents of the release's Notes field in the app.
• The About this release section is populated from the Notes field of the selected release. Select the Additional

information link to view the release details.
• Use the Release drop-down menu to view past and future releases.
• Print the app contents from the app gear menu.
• The app content can be copied and pasted into an email to quickly create a release summary message.

Source code is available: Release Summary app source code

Source Code Check-In
The Source Code Check-In app shows changeset and check-in details for the last 20 check-ins for your projects in scope.

 1288

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/ReleaseScopeChangeApp.html
https://github.com/RallyApps/ReleaseSummary


 Rally®

Rally offers source code connectors for Subversion, Git, and Microsoft TFS. Generally, each of these connectors creates
a relationship between a Rally work item and a source code check-in (or changeset) and creates a list of affected files (or
changes).

Features include:

• URL fragments link directly to source code files. Each file is marked with the type of change: (A) for Addition, (D) for
Deletion, (U) for Update and (M) for Modification (this depends on the convention used by your SCM software).

• Work item IDs link to defects, user stories, and tasks.
• Revisions link to changesets for Git integrations.
• If you have older versions of connectors installed, or if you are using a TFS connector, you will still see details for

artifacts that have SCM information in their discussions.

Source code is available: Source Code Check-In app source code

Story Deep Copy
This app is designed to help you make copies of a story that include copied versions of all of that story's children and their
tasks.

One of the uses for this app is to help create templates for epic stories. Some teams have similar structures for each of
their features. These teams can make a template for complicated stories and reuse them.

 1289

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/SourceCodeCheckinApp.html


 Rally®

Source code is available: Story Deep Copy source code

Fields Excluded from Story Deep Copy

These fields will not be copied to the new story or task. All other fields and custom fields that are not read-only will be
copied.

• Discussion
• Rank
• LastUpdateDate
• Attachments
• AcceptedDate
• Blocker
• Defects
• TaskActualTotal
• TaskEstimateTotal
• TaskRemainingTotal
• TaskEstimateTotal
• FormattedID
• CreationDate
• Changesets
• ObjectID

 1290

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/StoryDeepCopyApp.html


 Rally®

Story Hierarchy
The Story Hierarchy app makes it easy for you to visualize and manage the relationships between parent and child user
stories.

With this app, you can:

• View story hierarchies and associated tasks.
• Filter the top level of the hierarchy by workspace and project.
• Re-parent stories and tasks with drag-and-drop.
• Select the FormattedID to see the details of a story or task.
• Edit, copy, or delete work items directly from the app.

 1291



 Rally®

Users can see work that is not associated with a portfolio item, indicating work that may not be in alignment with the
portfolio.

Source code is available: Story Hierarchy source code

Re-Parent a Story

You can add multiple copies of the app to a custom page and re-parent between the apps. This is useful for viewing and
modifying hierarchies that exist in different projects. This feature also works when the Portfolio Hierarchy app is installed.

NOTE
Project settings apply only to the top level of the hierarchy. You cannot re-parent across workspaces.

1. Add multiple copies of the Story Hierarchy app to your custom page.
2. Add the Portfolio Hierarchy app to your custom page.
3. Drag a user story or hierarchy of user stories into a portfolio item in the app.

If there isn't a feature for a story, it displays in the Story Hierarchy app. If the story has a feature, it displays under that
feature in the Portfolio Hierarchy app. In the Story Hierarchy app, you can see which stories need features (orphaned
stories). You can also drag a story (from the Story Hierarchy app) and drop it to a feature in the Portfolio Hierarchy app
to parent it to that feature.

Story Map
The Story Map app helps you build a backlog of work based on the activities your users need to accomplish.

The app shows all of the high-level themes your users need to do, broken down into the smaller stories a user would do
as part of each theme. For example, a simple auction site might use a story map like this:

In Rally, all of the activities are stored as user stories, so you can prioritize, plan, and track them. Learn more about Story
Maps.

We do not recommend using the Story Map app to work with existing story hierarchies, as it only manages the first parent
and child pair. Instead, consider adding the Story Hierarchy app to your page to take advantage of many more features.

Source code is available: Story Map source code

Create a Story Map

NOTE
You can also add an existing story and its children to the Story Map. Edit the parent story, then apply the Theme
tag to it.

1. Add your high-level themes first. These will automatically be created as stories tagged with Theme in Rally.

 1292

https://github.com/RallyApps/app-catalog/tree/master/src/apps/storyhierarchy
http://www.jpattonassociates.com/user-story-mapping/
https://github.com/RallyApps/app-catalog/blob/master/src/legacy/StoryMapApp.html


 Rally®

2. Select the theme you want to elaborate.
3. Add some children to list the stories your users need to do as part of the larger theme. These will be stored as child

stories on the theme story.

4. Re-rank child stories by dragging them. You can also move them under different parent themes by dragging.

Super Customizable Iteration Chart
The Super Customizable Iteration Chart provides you with the ability to review iteration burndown data from several types
of views.

Source code is available: Super Customizable Iteration Chart app source code

To use the Super Customizable Iteration Chart app:

1. Add the Super Customizable Iteration Chart app to a custom page or dashboard.

2. Select the iteration from the Iteration drop-down menu.

3. In the Chart Type section, select one of the chart icons to change the view. The types are:

• Stacked Bar
• Bar
• Line
• Area
• Burndown

 1293

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/SuperCustomizableIterationChart.html


 Rally®

4. In the Data Options section, select the check box next to each Schedule State field value to display on the chart. Next
to the schedule state name is a drop-down menu to select what color the value uses. The Trend check box to the right
of each schedule state draws a line on the chart based on past daily statistics, showing you the rate at which work is
being moved into that state.

5. In the Ideal Lines section, select one of the check boxes to display a line that shows the ideal rate of completing work
during the course of the iteration. The line calculates the total amount of story or task work scheduled in the iteration,
and divides that figure by the total number of days.

This is helpful during the middle of an iteration to see if your team is completing and accepting work at a rate sufficient
to finish by the iteration end date.

• The Burndown To Do option trends downward left to right.
• The Burnup Accepted option trends in the opposite direction.

6. Select the Units to use for displaying the amount of work in the chart. Select one of the radio buttons to change the
scope of the y-axis:

NOTE
When the Burndown chart type is selected, the unit type is defaulted to To Do, as a burndown displays both
remaining to do task hours and accepted story estimate points in the same chart.

• Story: Draws the chart using the Plan Estimate field of user stories.
• Task: Draws the chart using the Task Estimate field of tasks.
• To Do: Draws the chart using the To Do field of tasks.

7. Select the Show Data Table check box to display a day-by-day breakdown of work in each schedule state in a table
format. All schedule states will display. Data in the table adjusts according to your unit option selection.

8. Print the chart by selecting the Print option from the Actions drop-down menu.

Super Customizable Release Chart
The Super Customizable Release Chart app provides you with the ability to review release burndown data from several
types of views.

Source code is available: Super Customizable Release Chart app source code

 1294

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/SuperCustomizableReleaseChart.html


 Rally®

To use the Super Customizable Release Chart app:

1. Add the Super Customizable Release Chart app to a custom page or dashboard.

2. Select the release from the Release drop-down menu.

3. In the Chart Type section, select one of the chart icons to change the view. The types are:

• Stacked Bar
• Bar
• Line
• Area
• Burndown

4. In the Data Options section, select the check box next to each Schedule State field value to display on the chart. Next
to the schedule state name is a drop-down menu to select what color the value uses. The Trend check box to the right
of each schedule state draws a line on the chart based on past daily statistics, showing you the rate at which work is
being moved into that state.

5. In the Ideal Lines section, select one of the check boxes to display a line that shows the ideal rate of completing work
during the course of the release. The line calculates the total amount of story or task work scheduled in the release,
and divides that figure by the total number of days.

This is helpful during the middle of a release to see if your team is completing and accepting work at a rate sufficient to
finish by the release end date.

• The Burndown To Do option trends downward left to right.
• The Burnup Accepted option trends in the opposite direction.

6. Select the Units to use for displaying the amount of work in the chart. Select one of the radio buttons to change the
scope of the y-axis:

NOTE
When the Burndown chart type is selected, the unit type is defaulted to To Do, as a burndown displays both
remaining to do task hours and accepted story estimate points in the same chart.

• Story: Draws the chart using the Plan Estimate field of user stories.
• Task: Draws the chart using the Task Estimate field of tasks.
• To Do: Draws the chart using the To Do field of tasks.

7. Select the Show Data Table check box to display a day-by-day breakdown of work in each schedule state in a table
format. All schedule states will display. Data in the table adjusts according to your unit option selection.

8. Print the chart by selecting the Print option from the Actions drop-down menu.

System Requirement Validation Document
If you work in a high-assurance environment, you may need to generate documents that prove requirements have been
implemented and print or export those documents to repositories in order to pass audits.

The System Requirements Validation Document App shows how functional and nonfunctional requirements are
implemented by generating a printable report.

This app should be considered as a starting point to meet your organization's unique requirements. You may need to
modify the app code further to implement specific features that best help your team. For more information on customizing
apps, see our developer portal, or open a new support case.

This app uses tags. To get started, you need to tag user stories that represent your System Requirements as SRS.

When printed, a signature line and printed date are appended to the bottom of the document.

 1295

https://www.broadcom.com/products/software/value-stream-management/rally
https://rally1.rallydev.com/slm/help.sp?pp=contact


 Rally®

Source code is available: System Requirement Validation Document app source code

Product Requirement Section

• Market Requirement: Specified SRS-tagged story's parent link and name
• System Requirement: Specified SRS-tagged story link and name
• Acceptance Date: Specified SRS-tagged story acceptance date

System Requirement Description Section

• Specification: Specified SRS-tagged story link and name
• Description: Specified SRS-tagged story description
• Functional Stories: Specified SRS-tagged story's children links and names

Test Case Section

This section loops through the test cases of the specified SRS story and its child stories. If no test cases exist, this section
does not display.

• Test Case: Link and name of test case
• Story: Story that attaches to this test case
• Test Case Description: Description for this test case
• Last Run: Date that this test case was last ran
• Steps: Table of steps defined for this test case

Task Board
The Task Board app provides you with a way to view and update tasks during your daily standup meeting.

The board can easily be updated during your daily meeting or standup. During your standup, the scrum master or any
team member can update task status by dragging the task from state to state.

 1296

https://github.com/RallyApps/app-catalog/blob/master/src/legacy/SystemRequirementValidationDocumentApp.html


 Rally®

NOTE
This page was written using buffered rendering to improve performance. Sometimes work items listed on the
page do not load completely. To force all the items to load, drag the scroll bar on the right to the bottom of the
page.

The app includes the following features:

• Add tasks to existing work items on the board
• Use drag-and-drop controls to quickly change the state of a task
• Add new work items (such as user stories) to the board
• Easily accept a task from the front of the card
• Easily block a task and include a reason from the front of the card
• Customize the fields you see on task cards
• Edit fields directly from the front of the task card
• Change the color of the task card
• Display tasks filtered by iteration

Source code is available: Task Board app source code

Configure the Task Board App

Note that settings through this app are per project. Project administrators may only change app settings in projects they
administer.

1. From the app gear menu, select Settings.

 1297

https://github.com/RallyApps/TaskBoard


 Rally®

2. Select the project scope.

You can set the board to change its data with your global project picker, or you can choose a specific project or group
of projects to work from. If you select the Follow Global Project Setting, then the contents of the board will change
according to your global project picker. Select Choose a Specific Project if you want to see another project's work,
regardless of your global project setting.

3. If your board is installed on a shared custom page, check the Default Settings check box to use the settings selected
in the lower section of the menu for all projects in the workspace. Changes you make to columns, fields displayed on
cards, and other options will be used when viewing the board from any project.

NOTE

• If you have previously saved settings for the app while viewing it from a specific project, those settings
will not be overwritten when checking the Default Settings check box. Any changes you save while this
check box is empty will be project-specific.

• When the app resides on a custom page shared with an entire workspace, only workspace administrators
and subscription administrators may edit global settings.

4. Select Hide accepted work to stop accepted work from displaying on the Task Board.

Update States in the Task Board App

Each card resides in a column according to its current state.

Move the task card into the appropriate column.

View or Edit Task Details in the Task Board App

1. Select an editable field on the card and edit. For example, you can edit the name, the Estimate, To Do, and Owner
fields on a task card.

2. To view or edit more details on a card:

Selecting the FormattedID also takes you to the editable view of the task.

a) Hover over the card.

 1298



 Rally®

b) Select the gear (Actions) menu, and select Edit.

3. Changes are automatically saved when you click away from the card.

Add a New Task with the Task Board App

1. Select Add New from the toolbar.

2. To quickly add a task (without details), enter a Name and select a Parent and select Add.

To add a task with details, select Add with Details.

 1299



 Rally®

Filter Cards in the Task Board App

You can filter cards by owner, or you can use the advanced filtering option.

1. To filter by owner, select the user from the drop-down list.

2. To filter by other fields, select Filter

.

3. To add a filter, select the field to filter on, the operator, and the value. Select Apply.

Select Fields to Show on Cards within the Task Board App

You can show or hide fields on cards.

1. Select Show on Cards.

2. Search or scroll to select fields to display on the cards. Clear fields that you do not want to display.

NOTE
ID, Name, and Owner are grayed-out in the list because they are always displayed.

3. Select Apply to save your changes.

Mark Task Board App Cards as Blocked or Ready-to-Pull

If you cannot work on a card, or a task associated with a card, you can mark it as blocked to notify your team of a
problem. Blocked cards display on the board with a red border.

When a card is ready to move to the next stage of development, you can mark it as ready-to-pull to update your product
owner or other team members. The card displays on the board with a green border.

 1300



 Rally®

1. Hover over a card to display the menu at the bottom of the card.

2. To mark a card as blocked, select the Blocked
.

a) After the icon is selected, the Blocked Reason field displays. Type the reason for the blocked status, then select
outside of the card to save. You can edit the Blocked Reason by selecting the field on the card. When a blocked
status is removed, the Blocked Reason field is cleared.

3. To mark a card as ready-to-pull, select the Check Mark
.

Choose a Color for Cards in the Task Board App

Use the color picker to change the top border of the card.

This icon is located by hovering on the bottom of the card.

 1301



 Rally®

Copy or Delete a Card in the Task Board App

You may copy or delete a work item by hovering over a card and selecting the gear

.

Task Board Actions

Action How To

Change task status Drag-and-drop a task card from one state column to another.
Expand or collapse rows Select the arrows on the right side of the story to expand or

collapse the row.
View user stories and tasks from another iteration Select the Iteration drop-down menu and select an available

iteration from the list.
Add new work items Select + Add New at the top of the board.
Filter cards on the board Select the Filter

.
You can select Field, Operator and Values.

Filter by owner Select the Search all users drop-down menu and choose a team
member name. User stories and tasks in the iteration owned by
the team member display.

Show additional fields on cards Select Show on cards and select or clear check boxes for fields
you want to show on the cards on the board.

 1302



 Rally®

Action How To

View or edit fields Select an editable field on the card. You can edit the
Name, Estimate, To Do, and Owner fields. Changes
are automatically saved when you select away from the
card. You can also hover over a card, select the Gear

and select Edit.
Delete a card Hover over the card, then select the Gear

from the bar at the bottom of the card and select Delete. The task
is recoverable from the Recycle Bin.

Hide accepted work In Settings, select the Hide accepted work check box.
Block and unblock tasks Hover over the card and select Blocked

.
To unblock, select Blocked

again.
Mark as ready Hover over the card and select the Check Mark

.
The card will display a green border along with a green check
mark when marked ready to pull.

View associated story details Hover over the user story ID to view the Percent Done, Owner and
State fields. Select the user story ID to open the detail page for
that story.

Add a discussion Hover over the card, then select the

to add or respond to a discussion.

Team Member Board
The Team Member Board app gives you a view of the team members for each of your projects.

Team members are assigned to a project from the Project Users page.

 1303



 Rally®

The top section of the board includes:

• The project name, which is a link to the Users page for that project.
• An iteration selector.
• All portfolio items assigned to the selected iteration.

The lower section of the board includes cards for each user on the team:

• The color bar at the top of a user's card is based on the user's role, as defined in their profile. Learn more.
• The card background is white if the person is part of the team, and gray if they are not part of the team but they are the

owner of tasks in the selected iteration.

Source code is available: Team Member Board source code

To configure the Team Member Board app:

1. From the app gear

menu, select Settings.
2. You can set the board to change its data with your global project picker, or you can choose a specific project or group

of projects to work from.

 1304

https://github.com/RallyApps/app-catalog/tree/master/src/apps/teamboard


 Rally®

– If you select Follow Global Project Setting, the contents of the board will change according to your global project
picker.

– Select Choose Specific Project if you want to see another project's work, regardless of your global project setting.
3. Select one or more Teams to display, each in their own column on the board.
4. Select the Card Fields to show on each team member's card.
5. Select Group By to determine how the cards are grouped in each team.
6. Select Save.

Throughput
The Throughput app displays a count of work items accepted in a given interval such as weeks, months, quarters.

The chart displays the number of accepted work items for the specified time period. If defects are displayed on the chart,
both defects associated to user stories and standalone defects that have been accepted will be included. However, if a
defect is associated to an accepted user story, but the defect itself is not accepted, it will not be counted.

Data displayed in the app is in the same format as the Throughput chart. Select the chart to go to the Reports tab, where
you may view additional information including a key and summary metrics.

NOTE
The data roll up for the Throughput chart occurs at the end of the time period, while the legend label indicates
the beginning of the time period. You will not see data for a time period while it is still being collected.

To configure the data displayed in the chart:

1. From the app gear menu, select Settings.
2. Set the Date Range amount and term (weeks, months, or quarters) fields to set the boundaries of the chart.
3. Select the check boxes next to the Series field to control what type of work items are charted.
4. Select Tags to filter on a group of user stories or defects marked with a specific tag.
5. To enable the legend for the app, select Show Legend.
6. Select Save.

 1305



 Rally®

Tip of the Day
The Tip of the Day app provides you with a short piece of Agile advice each time you visit your dashboard or custom
page.

The tip will change each time you navigate to or refresh the page.

Source code is available: Tip of the Day source code

Traceability Matrix
The Traceability Matrix app allows you to show traceability from product requirements to the test cases that prove their
implementation and the corresponding results.

This app uses tags. To get started, you need to tag user stories that represent your Product Requirements Documents by
tagging them PRD.

This app also requires two custom fields for user stories: Risk and Source. An administrator can add these fields.

When printed, a signature line and printed date are appended to the bottom of the document. This document prints best
from Firefox or Internet Explorer 8+ browsers with landscape orientation selected.

 1306

https://github.com/RallyApps/app-catalog/tree/master/src/apps/tipoftheday


 Rally®

When you first open the Traceability Matrix app, a chooser with only stories tagged as PRD displays. When you select a
story, it closes the chooser and displays two tables with data related to the chosen story.

NOTE
This app should be considered as a starting point to meet your organization's unique requirements. You
may need to modify the app code further to implement specific features that best help your team. For more
information on customizing apps, open a new support case.

Source code is available: Traceability Matrix app source code

Unassigned Tasks for Current Iteration
The Unassigned Tasks for Current Iteration app displays tasks with no owner in the current iteration.

This app is helpful for product owners, scrum masters, and other organizers who want to ensure that all tasks in the
iteration are assigned after planning.

Features include:

 1307

https://rally1.rallydev.com/slm/help.sp?pp=contact
https://github.com/RallyApps/app-catalog/blob/master/src/legacy/TraceabilityMatrixApp.html


 Rally®

• View task FormattedID, Name, Estimate, and Owner fields.
• Hover over the FormattedID of a task to see description details.
• Select the FormattedID of a task to navigate to the item's detail page.
• Select inside of fields to edit details.
• Sort data by selecting column names.
• Select Fields, Operators and Values to display on the app by selecting the Filter

.
• Use the Filter by Owner drop-down menu to find tasks assigned to you. You can also clear the filter or select No

Owner to display tasks that are not currently owned by anyone.
• Select Show Columns

and select the check boxes to customize the columns displayed on the app.
• You can import tasks, export to CSV and print by selecting Import/Export/Print

.
• Enter a query via the Settings menu.
• Bulk edit task fields.
• Bulk associate tasks to user stories and defects.

User Lookup
The User Lookup app provides easy access to user details. You can view all users, filter by a
specific letter, or enter a search string filter. Additionally, you can edit a user by selecting Edit

.

 1308



 Rally®

NOTE

• Before installing this app, we recommend you review the Users pages in Rally (Setup, Users page, or
Setup, Workspaces & Projects, Project detail page, Users page). If this app provides unique functionality
you would like to see in Rally, please let us know by contacting Support.

• This app requires subscription or workspace permissions to view or edit user details.

Source code is available: User Lookup app source code

Find a User

There are two lookup methods:

• Type an entry into the Search box. When you use the search text box, only users that meet the search criteria in
any of the four name fields display. For example, if you typed mark into the search box, any user with mark in the
Username, First, Last, or Display Name displays. This search is case insensitive.

• Select any of the A-Z letters to show only users whose Username, First, Last, or Display Name begin with that letter.
To return to seeing all users, select All.

Edit a User

To edit the user, select Edit

in the Action column. See Administer Users for more information.

 1309

https://support.broadcom.com/group/ecx/my-dashboard?
https://github.com/RallyApps/app-catalog/blob/master/src/legacy/UserLookup.html


 Rally®

Velocity Chart
The Velocity Chart app displays trends in value delivery, including completed work not yet accepted. The volume of
accepted work for an iteration is not updated in the Velocity Chart after the end of the iteration.

For example, if you accept a story or defect during the iteration and then re-open it after the iteration has ended, the
Velocity Chart will not update with the corrected volume of accepted work in the past iteration. This may cause data in
the Velocity Chart to be inconsistent with reports elsewhere in the application, such as the Iteration Status and Release
Tracking pages, which display the volume of accepted work for an iteration and update that information based on changes
that occur to work items after an iteration ends.

Data displayed in the app is in the same format as the Iteration Velocity chart. Select the chart to go to the Reports tab,
where you may view additional information including a key and summary of velocity averages.

Velocity charts are dynamic. If you move a story out of the iteration after it ends, the results of the chart will change.

 1310



 Rally®

Build App Queries
You can control what criteria to filter work items by with the Query field in the app settings menu. Use SQL-style syntax to
add multiple conditions to a query so that you can generate specific results. For example, you can create a query to find
all user stories in project X, completed in iteration Y, owned by user Z, with a tag of A.

NOTE
Queries will not return work items that reside in projects you are not scoped to or do not have permission to
view. Ensure that you have permissions in the projects you want to query.

The Query field is available in the following apps:

• Custom List
• Custom List 2.0
• Portfolio Kanban Board
• Portfolio Hierarchy
• My Tasks
• My Defects
• My Test Cases
• Story Hierarchy

NOTE
The My Defects, My Tasks, and My Test Cases apps have data pre-populated in the Query field, making them
unique versions of the Custom List app. You may edit or replace these existing queries.

General App Query Rules and Considerations

There are a few general rules to remember when creating queries as well as considerations for project settings, user
permissions, and case sensitivity.

NOTE
Remember that project scoping and user permissions are applied when using queries. Your query won't return
work items that reside in projects that you are not scoped to or do not have permission to view.

When creating a custom query, remember the following rules:

• Note that field values must be queried using the correct case. For example, if a username in Rally is capitalized as
George@Vandelay.com, a query formatted as (Owner.UserName = "george@vandelay.com") will not work. The
value must match exactly in the query.

• Queries require correct field names. These are found in your Web Services API documentation.
• Use case-sensitive field names and values such as Owner.UserName and State .
• Boolean field values must be in the form of True or False.
• When querying a custom field, include "c_", before the field name, as noted in the WSAPI documentation. For

example, (c_MyCustomField = "MyCustomValue") .
• Use a space between the field name, the operator, and the value. For example, use (Project.Name = "Acme")

rather than (Project.Name="Acme") .
• Use the format "Tags.Name = X" when you want to include a tag in a query.
• Do not use spaces in field names; for example, plan estimate should be  PlanEstimate.
• You may only write queries that contain a field name on the left of the operator, and a value or date variable on the

right side of the operator. For example, the query (CreationDate < AcceptedDate) is invalid, because both
CreationDate and AcceptedDate are queryable fields listed in the Web Services API documentation.

• A username variable is also available to assist you with querying for items you own:

 1311

https://rally1.rallydev.com/slm/doc/webservice


 Rally®

((Project.Name = "Orange Team") AND (Owner = "currentuser"))

• For custom field names, refer to the Object Model listings in the Web Services API documentation.
• Filter field options are the union of all fields for parent items, including hidden items.
• Order is a sort string which determines the order of the data returned. For example, entering desc will present the data

in descending order.

App Query Operators

Chain expressions cannot be linked together with operators, like this:

(Name contains "tito") AND (Notes contains "randy") AND (Description contains "germaine")

The expression must be formed as follows (note the extra set of parentheses around the first two expressions):

(((Name contains "tito") AND (Notes contains "randy")) AND (Description contains "germaine"))

The following is an example of how to correctly use AND with multiple ORs.

You want to find work items in a specific release that have one of the following values in the Plan Estimate field: No entry,
1, 2, 4, 8, or 16.

This grouping will not return the correct results:

Release.Name = "Release One" AND (PlanEstimate = "null" OR PlanEstimate = "1" OR PlanEstimate = "2" OR

 PlanEstimate = "4")

This version has been corrected to use the proper parentheses rules, but will not return all results:

(((((Release.Name = "Release One") OR (PlanEstimate = "1")) OR (PlanEstimate = "2")) OR (PlanEstimate = "4"))

 AND (PlanEstimate = "null"))

Writing the query like this forces all of the OR conditions to be met first, and returns all data:

((((((PlanEstimate = "null") OR (PlanEstimate = "1")) OR (PlanEstimate = "4")) OR (PlanEstimate = "8")) OR

 (PlanEstimate = "16" )) AND (Release.Name = "Release One"))

App Query Parentheses Rules

When writing a query, parentheses rules can get complex as each clause needs to be enclosed with parentheses.

You can add as many conditions as you need. Each condition that you add needs to be surrounded by parentheses. The
full expression also needs parentheses.

• A single condition query should look like this:
(Project.Name = "Blue Team")

• A standard, two-condition query looks like this:
((Project.Name = "Blue Team") AND (Owner.UserName = "tom@acme.com"))

• In this more complex example, each clause is surrounded by parentheses, including the final complete clause. This
query will return all work items in the Blue Team project that are also assigned to tom@acme that are also tagged
"critical" and in the October Phase One iteration.
((((Project.Name = "Blue Team") AND (Owner.UserName = "tom@acme.com")) AND (Iteration.Name = "October Phase

 One")) AND (Tags.Name = "Critical"))

Null Queries in Apps

You may search for work items with empty attribute fields by using "null" in most queries. Quotation marks may be used,
but are not required:

 1312



 Rally®

(PlanEstimate = null)

(Parent = "null")

When building a query against a rating or drop-down field, use quotation marks instead:

(Priority = "")

Note that custom drop-down fields may use either method, especially if work items were created before the custom fields.
To ensure you capture all results, include both sets of syntax:

((c_CustomState = null) OR (c_CustomState = ""))

Unsupported Nouns in App Queries

Unsupported nouns can be used with curly-brace substitution in custom lists only. These are not supported and may not
be present on any given revision:

• {projectName}
• {projectOid}
• {user}

Dates in App Queries

Date Variables in App Queries

When writing a query against a date field, such as the end of an iteration, you can use variables to automatically update
your app as time progresses.

Date variables are case-insensitive. You can write "lastyear" or "NEXTMONTH" or "NextWeek" or "Today+60".

Variable Meaning Timezone associated
with your... Length

Today current date user account 1 day

Yesterday the day before today workspace 1 day

Tomorrow the day after today workspace 1 day

LastWeek 7 days before today workspace through the end of today

NextWeek 7 days after today workspace from the start of today

LastMonth 30 days before today workspace through the end of today

NextMonth 30 days after today workspace from the start of today to...

LastQuarter 90 days before today workspace through the end of today

NextQuarter 90 days today workspace from the start of today to...

LastYear 365 days before today workspace through the end of today

NextYear 365 days after today workspace from the start of the day to...

App Query Examples
using Date Variables

• To filter for iterations that were modified at any time today in the timezone associated with your user
account:
(LastUpdateDate = "today")

• To filter stories that were accepted yesterday but exclude stories accepted today:
(AcceptedDate = "yesterday")

• To include only iterations that have changed in the past week:

 1313



 Rally®

(LastUpdateDate >= "lastweek")

• To view portfolio Items that are expected to start development in the next 30 days:
((PlannedStartDate >= "today") AND (PlannedStartDate <= "nextmonth"))

App Query Date Expressions

You can write simple date expressions to query against a date range that is a certain number of days ahead or behind
today's date. All date expressions are relative to today, and are written as "today + " or "today - ". Be aware that because
date expressions are date ranges, they behave differently than single dates. See the chart below for exact behavior.

"today-1" and "yesterday" (and "today+1" and "tomorrow") are not precisely equivalent. "today-1", when interpreted as a
range, goes from the start of yesterday to the end of today. "yesterday", when interpreted as a range, goes only from the
start of yesterday to the end of yesterday.

"today+0" and "today" are not precisely equivalent. "today" is interpreted relative to the timezone associated with your
user account, while "today+0" is interpreted relative to the timezone associated with your workspace.

White space is optional in date expressions. For example, "today-30" and "today - 30" are equivalent, and mean the same
thing as "last month".

Assuming today is Nov 25, 2019:

Expression Meaning

(AcceptedDate <= "today-7") Gets dates before and including Nov 25, 2019

(AcceptedDate < "today-7") Gets dates before Nov 18, 2019

(AcceptedDate >= “today-7”) Gets dates after and on Nov 18, 2019

(AcceptedDate > “today-7”) Gets dates after Nov 25, 2019

(AcceptedDate = “today-7”) Gets dates between and including Nov 18, 2019 and Nov 25,
2019

(AcceptedDate != “today-7”) Gets dates not between and not including Nov 18, 2019 and Nov
25, 2019

App Query Examples
Using Date Expressions

• To show iterations that were modified at any time in the last two weeks:
(LastUpdateDate = "today-14")

• To show iterations that have not been updated in the last two weeks:
(LastUpdateDate < "today-14")

• To exclude iterations that were last changed more than two months ago:
(LastUpdateDate = "today-60")

• To view portfolio items that are expected to start development in the next six months:
(PlannedStartDate = "today + 180")

Literal Dates

To query using a specific date and time, use the format YYYY-MM-DDTHH:MM:SS.SSSZ .

(AcceptedDate > "2019-01-01T23:59:59.000Z")

 1314



 Rally®

General Query Examples
The Query field, available in the Custom List and other list-style apps, provides you with a way to filter the data displayed
using multiple criteria. You can enter SQL-style queries into the field to find specific work items based on their state,
owner, or other fields.

Learn more about formatting syntax in the Query field.

Note that field values must be queried using the correct case. For example, if a username in Rally is capitalized as
George@Vandelay.com, a query formatted as (Owner.UserName = "george@vandelay.com") will not work. The
value must match exactly in the query.

NOTE
Queries will not return work items that reside in projects you are not scoped to or do not have permission to
view. Ensure that you have permissions in the projects you want to query.

Examples of General Queries

See the following examples for common queries.

Work Items with
Specific Text
in the Name

This example is useful if you use various naming conventions to identify different groups of work items:
(Name contains "Technical Debt")

Work Items in a
Specific Iteration (by ID)

You must know the iteration OID to use the following query. You can locate the OID by the
number that displays at the end of the URL when viewing the detail page of an iteration, such as
rally1.rallydev.com/#/483229521d/detail/iteration/6082450599 .
(Iteration.OID = "6082450599")

Work Items in a Specific
Iteration (by Name)

(Iteration.Name = "September Sprint 2")

Work Items with
No Value Selected

on a Custom
Drop-Down Field

(DropDownField = "")

User Stories Without
Parent User Stories

(Parent = null)

User Stories that Have
Parents That Are

Not Portfolio Items

((PortfolioItem = null) AND (Parent != null))

User Stories that
Have Parents Which

Are Either User
Stories or Feature-

Level Portfolio Items

((PortfolioItem != null) OR (Parent != null))

Open Defects (State < "Closed")

User Stories Associated
with a Parent

(Parent.FormattedID = 18)

User Stories
Needing Estimates

((PlanEstimate = null) AND (ScheduleState = "Defined"))

User Stories
in an Iteration

Needing Estimates

(((PlanEstimate = null) AND (ScheduleState = "Defined")) AND (Iteration != null))

User Stories With
a Schedule State

((ScheduleState > "Defined") AND (ScheduleState < "Accepted"))

 1315



 Rally®

Value Between
Defined and Accepted

User Stories
Without Defects

(Defects.ObjectID = null)

User Stories
With Defects

(Defects.ObjectID != null)

Defects that are
in Submitted

or Open States

(State IN "Submitted,Open")

Retrospective Notes For this query, use the Notes field on the Iteration object to store your retrospective feedback. If you display
just the Notes column, the app will expand to show all of the rich text content. Be sure to select Iteration as
the object in the app settings.
(Notes != null)

Set the order to Descending and the page size to 1 to only display the most recent iteration's notes.

My Tasks in the
Current Iteration

This query uses the "today" syntax to show only work in the currently active iteration.
(((Owner.UserName = "paul@acme.com") AND (Iteration.StartDate <= today)) AND

 (Iteration.EndDate >= today))

Standalone Defects
Reported by More

Than One Customer

This example uses a custom field called Reporting Customers. The Requirement field is used to identify the
user story a defect may be associated to.
(((ReportingCustomers > 1) and (State < "Closed")) and (Requirement = null))

Open Defects, Owned
by Bob, Associated with

a Specific User Story

(((Owner.UserName = "bob@dobalina.com") and (State < "Closed")) and (Requirement.Name

 = "Story 2"))

Open Defects that
George Found

((SubmittedBy.UserName = "george@vandelayindustries.com") and (State != "Closed"))

Open Customer-
Specific Defects

This example uses a custom field named Affected Customers.
((AffectedCustomers contains "ShotzBrewery") AND (State != "Closed"))

Defects Without Tags (Tags.ObjectID = null)

Defects that Have Tags (Tags.ObjectID != null)

Popular Fields for General Queries

These are some fields that can help you build a specific query. Not all fields are listed.

NOTE
To see a list of all fields available for each type of work item, check your Web Services API documentation.

Syntax Description

AcceptedDate The date a work item's schedule state is changed to Accepted.

Blocked Identifies if a work item is marked as blocked.

Description Searches contents of the Description field. You may use
contains or !contains conditions.

DirectChildrenCount The number of direct children (does not include grandchildren or
deeper levels) associated to a user story.

Iteration The iteration a work item is scheduled in. You must know the
iteration OID when using this field.

PlanEstimate The value present in the work item's Plan Estimate field.

 1316

https://rally1.rallydev.com/slm/doc/webservice


 Rally®

Syntax Description

Release The release a work item is scheduled in. You must know the
release OID when using this field.

ScheduleState The state of a work item scheduled in an iteration or release.
Standard values are Defined, In-Progress, Completed, and
Accepted.

State The state of a defect. Not to be confused with the Schedule State
field.

TaskEstimateTotal The total number of estimate hours of tasks associated to a work
item.

TaskRemainingTotal The total number of remaining to do hours of tasks associated to a
work item.

Common Problems with General Queries

If your query is not returning the data you expect, see the suggestions below.

Correct Parentheses
Syntax in Queries

Parentheses used in queries with multiple conditions must be balanced. For every condition in the query,
you must add one ( to the front of the string. You must also end each condition beyond the first with )) .

Incorrect
((Name = "A") AND (Name = "B") AND (Name = "C"))

Correct
(((Name = "A") AND (Name = "B")) AND (Name = "C"))

Correct Field Name
Syntax in Queries

While reviewing the Web Services API documentation, be sure to remember that many fields are objects,
which contain child elements. For example, Tags are an object in Rally, but have an element to locate the
Name.

May return inconsistent results

((Tags = "Blue") AND (Tags = "Green"))

Correct syntax

((Tags.Name = "Blue") AND (Tags.Name = "Green"))

Ensure that the correct field name is placed to the left of the operator, and the value or date variable is to
the right of the operator. A query such as (AcceptedDate < InProgressDate) is invalid, because
it contains field names on both sides of the operator.

Query Fields that do not
Contain Specified Text

When using the !contains (does not contain) condition against a text or string field, you may see fewer
results than expected.

For example, the query below will find work items that both have a non-empty Notes field, and do not
contain the word "blue":
(Notes !contains "blue")

To find work items that contain text other than "blue" and work items with empty fields, structure your query
like this:
((Notes !contains "blue") OR (Notes = null))

Portfolio Item Query Examples
The Query field provides you with a way to filter the data displayed using multiple criteria. You can enter queries into the
field to find specific portfolio items or their associated work items.

 1317

https://rally1.rallydev.com/slm/doc/webservice


 Rally®

The Query field is available in the Custom List and Portfolio Kanban Board apps as well as the Portfolio Kanban page.

Note that field values must be queried using the correct case. For example, if a username in Rally is capitalized as
George@Vandelay.com, a query formatted as (Owner.UserName = "george@vandelay.com") will not work. The
value must match exactly in the query.

Learn more about formatting syntax in the Query field.

NOTE
Queries will not return work items that reside in projects you are not scoped to or do not have permission to
view. Ensure that you have permissions in the projects you want to query.

Examples of Queries for Portfolio Items
Portfolio Items
With Specific

Text in the Name

This example is useful if you use various naming conventions to identify different groups of portfolio items:
(Name contains "Technical Debt")

Portfolio Items
With a Specific

Investment Category

(InvestmentCategory = "Cost Savings")

Portfolio Items
With a Specific

Custom Field Value

(c_MyCustomField = "MyCustomValue")

Create a Custom
List That Shows
All Leaf Stories

Attached to a Feature

((Feature.FormattedID = F3550) AND (DirectChildrenCount = 0))

Unscheduled Features (Release = null)

Features in
Current Release

((Release.ReleaseStartDate <= today) AND (Release.ReleaseDate >= today))

Leaf User Stories
Attached to Features

in Current Release

(((Feature.Release.ReleaseStartDate <= today) AND (Feature.Release.ReleaseDate >=

 today)) AND (DirectChildrenCount = 0))

Scheduled for a Release (Release.Name = "PSI 2013.Q1")

Portfolio Items with
a Specific Parent

(Parent.Name = "Design new login page")

Portfolio Items
with No Parent

(Parent = null)

Portfolio Items With
No Child Portfolio

Items or User Stories

(DirectChildrenCount = "0")

Portfolio Items
in Backlog or

Implementing States

(State.Name IN "Backlog,Implementing")

Portfolio Items That
Have a State Other Than

Discovering or Done

((State.Name !="Discovering") AND (State.Name !="Done"))

NOTE
Querying in WSAPI for a portfolio item state, such as a state of Done, results in an error. To view
results based on portfolio item state, you can use the filter field on the Custom List app.

 1318



 Rally®

Portfolio Items That
Have a State Between
Discovering and Done

In this example, the State field on portfolio items uses an ordered value to identify the custom states.
Discovering is the first available state, and has a value of 1. Done is the final state, and has a value of 4:
((State.OrderIndex > 1) AND (State.OrderIndex < 4))

Portfolio Items That
Have Total Completion

Percent (by Story
Count) of 50% or Less

(PercentDoneByStoryCount <= ".50")

Portfolio Items That
Do Not Have Tags That
Contain Specific Text

(Tags.Name !contains "Blue")

Portfolio Items With
Two Tags: Red and Blue

((Tags.Name = "Blue") AND (Tags.Name = "Red"))

Portfolio Items With
Three Tags: Red,
Blue, and Green

(((Tags.Name = "Blue") AND (Tags.Name = "Red")) AND (Tags.Name = "Green"))

Portfolio Items Owned
by Mike or Sally

((Owner.UserName = "mike@acme.com") OR (Owner.UserName = "sally@acme.com"))

Portfolio Items That
Have an Actual
Start Date After

November 5, 2019

(ActualStartDate > "2019-11-05")

Portfolio Items That
Have a Planned
Start Date Later
Than Last Week

(PlannedStartDate > "lastweek")

Portfolio Items
That Have Planned
Dates, But Not All
Associated User

Stories are Finished

(((PlannedStartDate != null) AND (PlannedEndDate != null)) AND

 (PercentDoneByStoryCount <= ".50"))

All Child Stories Under
a Specific Portfolio Item

Set a custom list app to view user stories, then enter the FormattedID of the parent portfolio item in the
query:
(PortfolioItem.FormattedID = "F123")

Query on Stories in
a Story Hierarchy

That Rollup to a Leaf
Portfolio Item Allocated

to a Specific Release

In this example, we display a custom list showing leaf stories not allocated to an iteration that roll up to a
leaf level PI (Feature) assigned to release 2014.Q2:
(((Feature.Release.Name = "2014.Q2") AND (Iteration.Name = null)) AND

 (DirectChildrenCount = 0))

Filter Out Features
With No State or

Archived Features

((Tags.Name = "RPM") AND (State.Name != null) AND (State.Name != "Archived"))

Portfolio Items
In Progress

This includes portfolio items that have had at least one story accepted.

((PercentDoneByStoryCount > 0) AND (PercentDoneByStoryCount < 1))

OR

This includes portfolio items that have stories in progress but nothing has been accepted yet.

((ActualStartDate != null) AND (ActualEndDate = null))

Finished Portfolio Items ((ActualStartDate != null) AND (ActualEndDate != null))

 1319



 Rally®

Recent Portfolio
Items and Portfolio
Items In Progress

(((ActualStartDate != null) AND (ActualEndDate = null)) OR ((ActualStartDate != null)

 AND (ActualEndDate = LastQuarter)))

Useful Fields for Portfolio Item Queries

Below are some fields that may help you build a specific query. Not all fields are listed. To see if a field is available for use,
check your Web Services API documentation.

Syntax Description

AcceptedLeafStoryCount The number of user stories (without children) associated to a
portfolio item with a state of Accepted.

ActualStartDate The date work actually began on a portfolio item, generated when
the first lowest-level story associated to a portfolio item is set with
a state of In-Progress.

Archived A Boolean field which indicates whether or not a portfolio item is
archived.

Description Searches contents of the Description field. You can use contains
or !contains conditions.

LastUpdateDate The last date the portfolio item was edited or created, which can
also be updated when associated work items are edited.

LeafStoryCount The number of user stories (without children) associated to a
portfolio item.

Parent The next level up in your portfolio item hierarchy. Use this field to
locate a group of portfolio items with a common parent.

PercentDoneByStoryCount The percentage of user stories (without children) associated to a
portfolio item that have a state of Accepted.

PercentDoneByStoryPlanEstimate The percentage of user story (without children) plan estimates
associated to a portfolio item that have a state of Accepted.

PlannedStartDate The date work is anticipated to begin on the portfolio item.

State The Kanban state of a portfolio item. Not to be confused with the
Schedule State field of associated user stories.

Common Problems with Portfolio Item Queries

If your query is not returning the data you expect, see the suggestions below.

Correct Parentheses
Syntax in Queries

Parentheses used in queries with multiple conditions must be balanced. For every condition in the query,
you must add one ( to the front of the string. You must also end each condition beyond the first with )) .

Incorrect
((Name = "A") AND (Name = "B") AND (Name = "C"))

Correct
(((Name = "A") AND (Name = "B")) AND (Name = "C"))

Correct Field Name
Syntax in Queries

While reviewing the Web Services API documentation, be sure to remember that many fields are objects,
which contain child elements. For example, Tags are an object in Rally, but have an element to locate the
Name.

May Return Inconsistent results

 1320

https://rally1.rallydev.com/slm/doc/webservice
https://rally1.rallydev.com/slm/doc/webservice


 Rally®

((Tags = "Blue") AND (Tags = "Green"))

Correct Syntax

((Tags.Name = "Blue") AND (Tags.Name = "Green"))

Ensure that the correct field name is placed to the left of the operator, and the value or date variable is to
the right of the operator. A query such as (AcceptedDate < InProgressDate) is invalid, because it contains
field names on both sides of the operator.

Query Fields That
Do Not Contain
Specified Text

When using the !contains (does not contain) condition against a text or string field, you may see fewer
results than expected. For example, the query below will find work items that both have a non-empty Notes
field, and do not contain the word "blue":

(Notes !contains "blue")

To find work items that contain text other than "blue" and work items with empty fields, structure your query
like this:

((Notes !contains "blue") OR (Notes = null))

Community App Catalog
The Rally Community App Catalog contains apps that were created outside of Rally. They have been carefully selected
and reviewed by the Rally engineering team.

Rally provides limited support for these applications, and they are subject to Beta terms.

NOTE
Community applications are subject to the terms for Beta products set forth in the SaaS Listing for Rally and to
any additional terms included with such applications. By accessing or using community applications, you agree
that these terms for Beta products govern your access to and use of the community applications in conjunction
with Rally.

If you experience issues with these apps, you are encouraged to open an issue in GitHub (links to the GitHub repository
are provided with each community app in the app catalog) or to correct the issue yourself and create a pull request
for it. While we will do our best to keep apps up to date, updates in the GitHub repository will not be automatically or
immediately reflected in the app catalog, and we will not guarantee pulling in these updates. You can also create a
custom HTML app on your custom page or in your subscription app catalog using the source code from GitHub to make
modifications to suit your needs. Support will only be able to assist customers with critical issues with these apps, such as
a failure to load, data loss, or similar issues.

Some older apps are being moved to the community app catalog. Subscriptions that do not have the community app
catalog enabled will not be able to add these apps to custom pages. If these apps already exist on custom pages, they will
not be affected.

The Community App Catalog can only be turned on by a subscription administrator for an entire subscription. This
provides access to all community apps for all users in the subscription.

If the subscription administrator has not enabled community apps, the Add button is grayed-out on the App Catalog page.

Rally On-Premises Considerations

Community apps may be updated after a Rally on-premises release. If you are experiencing issues with a community app,
try one of the following:

• Download the HTML code from GitHub and install it in a Custom HTML app.
• Have your subscription administrator add the app to the Subscription App Catalog.

 1321

https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Subscription Level App Catalog
The Rally App Catalog includes your subscription level apps, enabling easier adoption, updates, and distribution of those
apps.

You can view and download apps unique to your subscription from the Rally App Catalog under Source, Subscription
after the subscription administrator has enabled apps. Learn more.

If you experience issues with subscription apps, you are encouraged to open an issue in GitHub, or to correct the issue
yourself and create a pull request for it. Rally support can assist you with issues with the subscription catalog itself but not
with any of the apps in the catalog.

To learn more about creating apps, see Rally App SDK 2.1.

App Deprecation
What does app deprecation mean? It means that Rally is removing the app from the app catalog in order to make room for
new apps and to reduce clutter. Our goal is to always provide the most valuable apps to our customers, and that means
occasionally removing existing apps, especially ones that are negatively impacting performance.

The deprecated apps will no longer appear in the app catalog. Additionally, the help descriptions for these apps will be
removed. Instances of these apps on custom pages and dashboards will also be removed as part of the deprecation.

These apps are reliant on the deprecated WSAPI ADHOC endpoint ( /slm/webservice/1.x/adhoc.js ). This
endpoint has been deprecated for several years and retiring it will improve performance for all Rally users. If you are using
any built-in or custom apps that are using the adhoc endpoint, we strongly recommend moving to other apps or pages
that do not use it, which includes all of the recommended apps or pages provided in the following table.

 1322

https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/


 Rally®

Here is the list of deprecated apps, along with recommendations for alternatives.

App Deprecation Date Recommended Alternatives

Active Defects Chart October 15, 2018 Use a Custom Chart (from the Community
App Catalog), or add the Custom Chart
source (from GitHub) to a Custom HTML
app.

Blocking History September 18, 2018 Use a Custom List with
a WSAPI query (Gear

,
Settings) to search for blocked tasks.

Build Dashboard October 8, 2018 Use a Custom List, plus the Build Health
app.

Build Traceability September 18, 2018 Use a Custom List, Work Views, or the
Iteration Status page.

Completed Stories and Defects per Iteration September 24, 2018 Use a Custom List or Work Views.

Defects by Closer September 18, 2018 Use a Custom List or Work Views.

Defects By Package July 24, 2018 Use a Custom List with the Package
column, or use the Work Views page.

Enhanced Burndown Chart October 15, 2018 Use a Program Increment Scope Change
Chart (from the Community App Catalog).

Enhanced Velocity Chart October 22, 2018 Use the Velocity Chart app.

Epic Progress September 24, 2018 Use Portfolio Items instead of epic stories.

Estimation Board (Legacy) September 24, 2018 Use the Estimation Board app.

Iteration Traceability October 8, 2018 Use a Custom List app.

Last Result by Test Set September 24, 2018 Use a Custom List with
a WSAPI query (Gear

,
Settings).

Open Stories, Defects, and Tasks October 8, 2018 Use Work Views or a set of Custom List
apps.

Personal Burndown Chart October 15, 2018 None. Tracking personal burndown is not
recommended.

Productivity Chart October 15, 2018 None. Tracking productivity in this manner
is not recommended.

Project Status October 22, 2018 Use a Custom Chart (from the Community
App Catalog), or add the Custom Chart
source (from GitHub) to a Custom HTML
app.

Recently Changed October 8, 2018 Use a Custom List, or use the Work Views
page with the Last Updated date filter.

Release Traceability October 8, 2018 Use a Custom List.

 1323



 Rally®

App Deprecation Date Recommended Alternatives

Stories by Creator September 18, 2018 Use a Custom List, or use the Work Views
page.

Story Board October 15, 2018 Use the Team Board, or use the Kanban
Board app.

Test Case Estimation September 24, 2018 Use a Custom List or Work Views.

Test Case Pass/Fail History October 8, 2018 Use a Custom List or Work Views.

Utilization Chart September 24, 2018 None. Monitoring utilization in this manner
is not recommended.

Weekly Actuals Report October 22, 2018 Use the Time Tracker menu options.

Building Apps for Rally
With Rally’s platform extension capabilities, you can build custom apps of any complexity to tailor Rally to your specific
needs that you can make available on custom HTML pages within Rally.

Through a combination of HTML and JavaScript, you can write your own views, reports, and interactive apps to share
across custom pages in Rally. You can choose to apply simple improvements to an existing open source app, or dive in
and design your own app from scratch. Our powerful, yet easy to use Rally App SDK 2.1 is supported by a versioned web
services API and features a rich component library. Rally also provides a variety of apps from our App Catalog that are
available directly in your Rally subscription. Learn more.

You may create extensions or new integrations and connectors to Rally, directly via HTTP using our REST-based Web
Services APIs as well as our language-specific Enterprise Integrations Framework and data access (REST) toolkits. Learn
more.

NOTE
You can connect your custom apps and Integrations to Rally with the Rally Application Manager.

App Building Resources

• App SDK 2.1
• Web Services API

NOTE
The Rally Web Services API documentation is available directly from the Rally main Help menu. Select the
Help menu

and then select Rally Web Services API Documentation.
• Beta: Lookback API
• App SDK 1.x (deprecated)

 1324

https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/
https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/
https://rally1.rallydev.com/slm/doc/webservice/
https://rally1.rallydev.com/analytics/doc/#/manual
https://knowledge.broadcom.com/external/article?articleId=196400


 Rally®

App Building for Beginners

• The Anatomy of an App
• Find your favorite App in our App Catalog - get the source code and start developing.
• Video Playlist: An Intro to Building Rally Apps
• Getting Started with the App SDK 2.1
• The Rally App Builder can be used to create a skeleton Rally app for use with the Rally App SDK. You must have

node.js installed.

Advanced App Building

• Read the GitHub guide for Mac or Windows.
• Go to Rally Software Apps on GitHub

– GitHub showcases all of our most recent Apps. Use GitHub to fork an App and share your changes with the
community.

• Rally App Builder
– The Rally App Builder can be used to create a skeleton Rally app for use with the Rally App SDK. You must have

node.js installed.
• App SDK 2.1
• Remember to read our Standards and Policies for writing and sharing an app.

The possibilities for what you can create are virtually endless. We've posted some examples (including working code)
that you can use directly or that you can build upon.

Share Your Work

You can contribute to code and Rally Apps.

The vibrant Rally App Developer Community is powered by GitHub, which provides a social coding environment for
collaborative development and sharing of Rally Apps. Rally offers open source access to Rally Apps both directly from the
Rally Developer Portal as well as GitHub. In addition, a technical forum at Stack Overflow facilitates community discussion
of technical questions relating to the usage and customization of the Rally Agile ALM platform.

NOTE
You must have a GitHub and/or Stack Overflow login to participate in the developer communities.

• Go to Rally Software Apps on GitHub which showcases all of our most recent apps. Use GitHub to fork an app and
share your changes with the community.

• View questions from the developer community
• Ask the developer community
• Standards and Policies for writing and sharing an app.

App SDK 2.1

The Rally App SDK 2.1 allows you to write apps that extend and customize your Rally subscription. Apps are written in
JavaScript and deployed to your Rally subscription within a custom page.

The App SDK is based on Sencha's Ext JS and uses the same components as found in Rally itself.

RallyApp SDK 2.1

Rally Custom Apps Video Tutorials

Watch the YouTube video series below for a tutorial on building custom apps with the Rally App SDK.

 1325

https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/index.html#!/guide/getting_started
https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/index.html#!/guide/getting_started
https://github.com/RallyApps/rally-app-builder
https://nodejs.org/en/
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/UsingGitHubforRallyAppsMacversion_0.pdf
https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/UsingGitHubforRallyAppsWindowsversion_0.pdf
https://github.com/Rallyapps
https://docs.github.com/en/get-started/quickstart/fork-a-repo
https://github.com/RallyApps/rally-app-builder
https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/
https://github.com/Rallyapps
https://docs.github.com/en/get-started/quickstart/fork-a-repo
https://stackoverflow.com/questions/tagged/rally
http://stackoverflow.com/questions/ask?tags=rally
https://rally1.rallydev.com/docs/en-us/saas/apps/2.1/doc/


 Rally®

• Build Rally Apps: Intro and Kickstart (22 minutes)
• API and SDK Docs (20 minutes)
• Dev Environment and Custom Grid (40 minutes)
• Interactive Grid (61 minutes)
• Interactive Grid Refactored (96 minutes)
• Tips, Tricks and Patterns (25 minutes)
• Dave T's Dev Environment (7 minutes)
• Dave T's Hackathon Environment (24 minutes)

Rally Apps on GitHub
Rally has a working relationship with GitHub to enable customer collaboration in developing and evolving apps. As the
largest social coding platform, GitHub provides a collective space where you can access and adapt current apps to fit your
own specific needs with Rally. Or take it a step further and harness your inspiration to develop and share apps of your
own.

Rally Apps in GitHub are located in three different locations based on level of support.

Rally Apps Rally Apps is home to Rally's core set of Apps, comprising the most powerful portions of our user interface.

As Rally continues to create Apps for our core product, the source will be shared here so that our developer
community can create derivative works suited to their internal business processes. As time goes on and
new features are added to these Apps, you will see our newest components in action along with cool new
ways to use them.

Browse Rally Apps here

Rally Commmunity
Apps

High quality apps that are not yet included in Rally’s catalog are stored in Rally Community.

Community Apps are usually customer submitted or the result of an internal experiment on how to better
display data. These cutting-edge Apps are not yet fully tested or directly supported by Rally, and thus may
not always provide an ideal experience in all environments. Rally Community Apps usually offer a glimpse
at the future of the core Rally interface, and can provide a basis for improvement in advanced functionality.

 1326

https://youtu.be/w7XCy90hLWI
https://youtu.be/X7KvNWAqJY4
https://youtu.be/cSV6gCuev8U
https://youtu.be/LIOMRWNTnZw
https://youtu.be/gUzn_zQqD5k
https://youtu.be/8yqNv6blX_g
https://youtu.be/pXXKtDs--Rs
https://youtu.be/E7RRUBKeEYg
https://github.com/Rallyapps


 Rally®

Ready to work on an app of your own? Browse Rally Community apps here.

Remember to read our Standards and Policies for App Sharing.

Rally Hackathon Apps The apps contained in Rally Hackathon are rough examples resulting from a Hackathon or a short-lived
experiment by a Rally engineer.

These apps are not ready for prime time but in many cases will make a great starting point. Rally
Hackathon Apps provide a basis for custom App development or illustrate the possibilities of Rally’s
AppSDK.

Browse Rally Hackathon apps.

Standards and Policies for App Sharing
Rally recommends adhering to the following standards and policies when sharing apps.

• Apps should be written using the Rally App SDK, which is built on Sencha’s Ext JS 4. Given the power and
completeness of Ext JS, we generally discourage the use of other JavaScript libraries, like jQuery, MooTools, and
so on. If you do choose to use some other JavaScript library, we require loading it from an external Content Delivery
Network (CDN).

• Apps should use the components in the App SDK whenever possible, rather than introducing new components - yet
another combobox, for example.

• Apps should be tested on Firefox, Chrome, Internet Explorer, and Safari. Rally’s policy is to support the latest browser
version plus the next most recent version.

• There should be nothing “hard coded” that is specific to your company or subscription - for example, project names,
URLs, and Object IDs of Rally objects.

• Where possible, requests to the Rally server for data should be bounded. In other words, they should not try to retrieve
all available objects where the total result count or response payload would be excessively large. For example,

 1327

https://github.com/rallycommunity/
https://github.com/rallyhackathon


 Rally®

retrieving revision history for all stories in a workspace, or all test case results for a subscription with tens of thousands
of results, are unbounded queries.

• Your app should include a descriptive name using the name property in the call to Rally.launchApp . If you used
the Rake build system in the App SDK Starter Kit to build your app, this will happen automatically. If you started with an
existing app in HTML form and modified it, you’ll need to make this change manually.

• The app should pass JSLint without complaints. There is a Rake task in the App SDK Starter Kit that will help you
ensure this.

 1328



 Rally®

Rally On-Premises Edition
The Rally On-Premises Edition provides you with all the great features of Rally, running in your own IT environment. While
our SaaS products are constantly updated, the Rally On-Premises Edition is released on a periodic basis.

Use the links below to view a list of features and defect fixes included in the most recent releases of Rally On-Premises.

• What's New in Rally On-Premises
• Rally On-Premises versus SaaS
• Rally On-Premises Release Notes

What's New in Rally On-Premises
Rally released new and exciting updates, including a new look-and-feel, and enhancements that will offer a more
consistent and modern user experience. These changes are designed to promote ease of use and reduce complexity,
ultimately improving the way you  deliver value with speed, quality, and efficiency.

The new Rally includes the return of our familiar brand name as well as the following changes:

• Redesigned Login Page
• Modern User Experience
• Shared and Saved Views Migrated
• Navigation Update
• Redesigned List Pages
• Redesigned Board Pages
• Printing from the Updated Pages
• Toolbar Update
• User Interface Only Upgrades

Redesigned Login Page

We released a new Rally Software login page. Use the same credentials to log in as you did before.

You can add an announcements banner to the login page. Learn more.

Modern User Experience

Rally has released some exciting updates, including a new look-and-feel, and enhancements that offer a more consistent
and modern user experience. These changes are designed to promote ease of use and reduce complexity, ultimately
improving the way you work. Aside from a refreshed look, there are some additional benefits that come with this update:

• Older pages (User Stories, Backlog, etc.) were upgraded to optimize performant behaviors
• Consistent list and board experiences
• Better accessibility support
• Consistent toolbar actions

Saved and Shared Views Migration

As part of installing version 2.1.0 of Rally, saved and shared views will be migrated from the older style and format to the
new filter and views.

Predefined Quick Views that existed on pages like User Stories and Defects are not part of the migration and can be
easily recreated as saved views at your discretion. This gives you full autonomy and control over which personal saved

 1329



 Rally®

and shared views appear in your drop-down list. Saved and shared views will be powered by the familiar component that
already exists on our Team Board, Work Views, and Collection pages. Please note that saved views do not have a distinct
URL. Shared views will appear in the drop-down list based on a user’s permissions.

Learn more about recreating quick views.

This migration will impact your views for the following pages:

• Backlog
• User Stories
• Iteration Status
• Defects
• Portfolio Items
• Portfolio Kanban
• Work Views
• Team Board
• Collection Pages accessible through the detail editor

Navigation Update

The new Rally navigation helps you quickly distinguish between core pages and custom pages. The Rally core pages are
displayed in bold font. Custom pages you created to support your specialized workflow are displayed in regular font. Edit

lets you set your start page, as well as hide pages from your view.

Redesigned List Pages

We've updated most list pages with a new look-and-feel. Learn more about customizing a list view.

NOTE
The outlined changes only impact the listed Rally core pages. Custom pages and our App SDK / App Catalog
are not changing.

Mot list pages have been upgraded to our new design, offering consistent toolbar and list actions.

NOTE

The following list pages were not upgraded:

• Recycle Bin
• Release Metrics
• Release Status
• Team Status
• Work Product Status

The User Stories page is available in both the updated and the legacy user interface.

List page highlights:

• Consistency
– All listed list pages will have the same look-and-feel
– New toolbar implemented for all upgraded list pages

• Row level gear menu replaced by checkbox that will activate all available toolbar actions when selected
– Continued support for single edit and bulk edit
– Available toolbar actions update according to the # of selected rows

• List pages will be limited to:

 1330



 Rally®

– 3 required columns (Rank, ID, Name)
– 15 custom columns that the user can configure

• Improved in-context collection handling through tooltips (Tasks, Defects, Discussions, etc.)
– Ability to view details for a collection within the context of the list
– Edit will take the user to the full page editor collection tab
– One click to close the collection and return to list context

Redesigned Board Pages

We've updated most board pages with a new look-and-feel. Learn more about customizing a board view.

NOTE
The outlined changes only impact the listed Rally core pages. Custom pages and our App SDK / App Catalog
are not changing.

These board pages have been upgraded to our new design, offering consistent toolbar, and board actions:

• Team Board
• Portfolio Kanban
• Iteration Status (board view)

Board page highlights:

• Consistency
– All listed board pages will have the same look-and-feel
– New toolbar implemented for all upgraded board pages

• Easy access to Exit Agreements from the front of the board
• Collapsible columns that display total item count. Item count turns red when WIP limits have been exceeded
• Collapsible swimlanes that display total item count
• Drag-and-drop between columns will update state, but not lead to re-ranking.
• Simplified Owner assignment from front of card
• Improved in-context collection handling through tooltips (Tasks, Defects, Discussions, etc.)

– Ability to view details for a collection within the context of the board
– Edit will take the user to the full page editor collection tab
– One click to close the collection and return to board context

Printing from the Updated Pages

The print functionality is not available on the pages in the new UI (Backlog, Defects, Iteration Status, Portfolio Items, User
Stories, Work Views). To print the contents of these pages:

1. Select Import/Export

and select one of the following:
– Download CSV of this view: Create a CSV file using the fields currently selected on your window
– Download CSV with more columns: Select additional fields to include in the CSV file

2. Use an application such as Microsoft Excel to view the downloaded CSV file.
3. Use the application to print the list.

Toolbar

We have implemented a new toolbar that powers all of our upgraded pages. This further simplifies the application and
adds another level of consistency across our list, board, and work pages. Highlights:

 1331



 Rally®

• Consistency
– New toolbar is used across all upgraded pages

• Filters
– Indicator if filters are active on the page
– Add filters to your page through multi-select
– Multi-select quick filters (for example, filter by Schedule States at the same time)
– Switching between Quick Filters and Advanced Filters will persist populated filters

User Interface Only Upgrades

These pages received a user interface upgrade only. Except for look-and-feel upgrades, no functional changes were
implemented.

• Team Planning
• Release Tracking
• Quality Management
• Detail Editor

Saved and Shared Views Migration
Most Rally pages allow you to create custom views that filter and sort on your chosen criteria. This enables you to show
only a select group of work items, rearrange columns, or remove items that are not applicable.

This section includes the following:

• Quick Views
• Shared and Saved Views

Quick Views
In some cases, Rally supplied predefined quick views. Quick Views are not a part of the new UI. However, we've provided
instructions for how to recreate them. Quick Views cannot be managed, updated, or deleted.

Below is a list of all Quick Views, and their settings, so that you can recreate any Quick Views important to your work.

User Stories - Quick Views

All User Stories

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Filters: none

Has Parent

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters: Parent != --No Entry--

Has Children

 1332



 Rally®

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters: Direct Children Count > 0

No Children

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters: Direct Children Count = 0

Scheduled User Stories

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Iteration !=  Unscheduled
– Release !=  Unscheduled
– Match Filters - Any

Unscheduled User Stories

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Iteration =  Unscheduled
– Release =  Unscheduled
– Match Filters - All

 1333



 Rally®

Assigned to Selected Release

NOTE
The Release Filter does not dynamically update.

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Filters: Release (Release drop-down list displays only Releases stated as Active or Planning with dates in

descending order)

 1334



 Rally®

Assigned to Selected Iteration

NOTE
The Iteration Filter does not dynamically update.

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Iteration != Unscheduled
– Iteration = “Choose from Iterations drop-down the ones with end dates greater or equal today’s date”
– Match Filters - All

 1335



 Rally®

Has Test Cases

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Test Case Status != --No Entry--
– Test Case Status != None
– Match Filters - All

No Test Cases

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Test Case Status = --No Entry--
– Test Case Status = None
– Match Filters - Any

Test Cases Passing

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Test Case Status != --No Entry--, None
– Test Case Status = All Run All Passing
– Match Filters - All

 1336



 Rally®

Test Cases Not Passing

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Test Case Status != --No Entry--, None
– Test Case Status = None Run, All Run None Passing
– Match Filters - All

Has Active Defects

NOTE
It will include defects states as Open or Submitted.

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Defect Status = None Closed

No Active Defects

• Columns: Rank, ID, Name, Release, Iteration, State, Plan Estimate, Task Estimate, To Do, Owner, Package
• Advanced Filters:

– Defect Status = --No Entry--
– Defect Status = All Closed
– Match Filters - Any

 1337



 Rally®

Defects - Quick Views

All Defects

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Filters: None

High Priority (p1 - p3)

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters:

– Priority = Normal, Resolve Immediately, High Attention

Scheduled Defects

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters:

– Iteration != Unscheduled
– Release != Unscheduled
– Match Filters - Any

Unscheduled Defects

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters:

– Iteration = Unscheduled
– Release = Unscheduled
– Match Filters - All

 1338



 Rally®

Found During Selected Iteration

NOTE
Iteration Filter does not dynamically update.

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters: (Defects where creation date is greater or equal first Iteration where end date is greater than today’s

date)
– Creation Date >= 09/16/2019 (start date of first iteration where end date is greater than today’s date)

Found During Selected Release

NOTE
Release Filter does not dynamically update.

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters: (Defects where creation date is greater or equal current Release start date)

– Creation Date >= 10/01/19

Doc or Release Note

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters: Release Note = Yes

Passing Test Cases

• Columns: ID, Name, Requirement, Severity, Priority, State, Fixed In, Submitted By, Owner, Package
• Advanced Filters: Test Case Status = All Run All Passing

 1339



 Rally®

Iteration Status - Quick Views

Defect Status

• Columns: Rank, ID, Name, Schedule State, Discussions, Priority, Severity, Found In Build, Fixed In Build, Owner
• Filters: None

Tasks Status

• Columns: Rank, ID, Name, Schedule State, Plan Estimate, Task Estimate, Actuals, To Do, Owner
• Filters: None

Test Status

• Columns: Rank, ID, Name, Schedule State, Discussions, Last Verdict, Last Build, Last Run, Defects, Priority, Owner
• Filters: None

Shared and Saved Views
In rare cases, we have seen some issues with a view migration. The following information lists workaround for these
cases.

Saved and Shared Views are grouped into two categories:

• My Views: These views are created by an individual user and are visible only to the user that created them.
• Shared Views: These views are shared either at the project or workspace level and are visible to users of the

indicated project or workspace, with the right level of permissions.

Migration Issues

If you experience issues with your migration, these scenarios may apply to you:

• Rank Column for Migrated Views
• Date Fields for Migrated Views
• "No Entry" Filters for Migrated Views
• Saved Views that Trigger a Whoops! Page

 1340



 Rally®

Rank Column for Migrated Views

Our legacy pages had different column default settings and Rank was not always required.

Our migration added the Rank column for most migrated views, but there might be edge cases where this column is
missing. You can add the Rank column to an existing view.

1. Select your migrated view from the Saved and Shared Views drop down menu.

2. Select the Show Fields button and select Apply. The Rank column appears.

3. Select the Saved and Shared Views drop-down menu.

4. Select Manage Saved Views.

5. Select the check box of the migrated view that is currently displayed.

6. Select Update with Current View.

Your migrated view will now include the Rank column.

Date Fields for Migrated Views

Our old pages saved a different format for date filters and the migration is not able to properly update this format.

You might come across the following error message when rendering a view that contains a date filter. You can fix Saved
and Shared Views that contain dates.

1. Select the date again from the date picker for all date fields.

2. Select Manage Saved Views.

3. Select the check box of the migrated view that is currently displayed.

4. Select Update with Current View.

Your migrated view will now properly filter by the selected date field(s).
"No Entry" Filters for Migrated Views

Migrated Views that show No Entry selected for a given filter will not properly migrate for the following pages: User
Stories, Defects, Tasks, and Test Cases.

The implementation of these older pages limits our ability to proper migrate these views.

The drop-down list values are saved as such:

TPS value

          null -> NULL_VALUE

-- no entry -- -> NULL_VALUE

 1341



 Rally®

Because the -- no entry -- field gets mapped to the same value, we are not able to tell, after the migration, whether the
source value was initially null, or whether it was -- No Entry --.

Filters for these migrated views will show with no selected value. A user will have to select the correct value and update
the migrated view with the new filter settings.

We apologize for the limitations related to migrating views from our older technology pages.

Saved Views that Trigger a Whoops! Page

We have discovered views that did not render in the older version of a page. Unless these views are purged prior to the
migration, these views will migrate "as is" and trigger a Whoops! page in the new UI.

Refreshing the page will clear the Whoops! message, and then you can delete the broken Saved and Shared View.

Rally On-Premises versus SaaS
The Rally On-Premises Edition provides you with many of the features of Rally, running in your own IT environment.

While our SaaS products are constantly updated, the Rally On-Premises Edition is released on a periodic basis.

 1342



 Rally®

Feature Differences of Rally On-Premises versus SaaS

Service On-Premises Features SaaS Features

Feature Updates and Bug Fixes • Major releases may require a
new VM install and require migration
process and brief downtime.

• Minor releases occur through
the Admin Panel. Will require brief
downtime.

Continuous Delivery, with multiple releases
per day including:
• New Features
• Defect Fixes
• Early preview of upcoming features in

beta pages with availability to provide
direct feedback.

Data Backup/Restore • Ability to schedule automated and ad
hoc backups to a SFTP/S3 location or
local VM.

• Restore
• Migrate data directly to Rally On-

Premises v2.1.0 from:
– Rally On-Premises 2018.1
– Rally On-Premises v2.0
– Rally On-Premises v2.0.2
To migrate from Rally On-Premises
v2.0.1, first patch to v2.0.2.

• Real-time data replication within each
data center across multiple hosts.

• Real-time data replication between
multiple data centers in unique
geographic locations.

• Ability to switch from hot to
warm datacenter in the event of a major
incident.

• Test data centers switches on a
quarterly basis.

• Ability to request an ad hoc subscription
export (doesn’t include certain data).

Administration and Security • Ability to conduct vulnerability security
scanning.

• Ability to review releases before
upgrading.

• LDAP synchronization.
• Ability to restrict network access by

controlling your IT infrastructure and
environment.

• Ability to restrict certain attachment
types.

• Supports basic authentication
for WSAPI API and integrations.

• Single Sign-On with SAML 2.0 Support
• Ability to restrict certain attachment

types.
• Ability to restrict access to IP range.
• Supports basic authentication

and API Keys for WSAPI API and
integrations.

• Customer Managed Keys (CMK) is
a premium enterprise feature that
provides our customers with complete
control of their data in Rally using
encryption keys.

Team Productivity • Team Planning
• Team Iteration Status (Scrum Teams)
• Detail Editor (anchored and full view

modes)
• Detail Editor Collections
• Team Board
• Work Views
• Quality Management

On-Premises features and additionally:
• Personalized Navigation
• @mentions
• Watches

Team Reporting and Insights • Team Status, Velocity, and Metrics
• Iteration and Release Burnups and

Cumulative Flow Diagrams

On-Premises features and additionally:
• Insights
• Cumulative Flow, Cycle Time, and

Throughput reporting

 1343



 Rally®

Service On-Premises Features SaaS Features

Portfolio Planning and Execution • Release Timeboxes
• Portfolio Backlog
• Portfolio Kanban
• Portfolio Release Tracking
• Milestones
• Dependencies
• Risks

On-Premises features and additionally:
• Portfolio Capacity Planning
• Portfolio Plan Progression
• Portfolio Funding Increments

Portfolio Reporting • Iteration and Release Burnup and
Cumulative Flow Diagram reporting

• Epic Story Burnup and Cumulative Flow
Diagram reporting

Rally On-Premises features and
additionally:
• Portfolio Items Burnup and Cumulative

Flow Diagram reporting
• Release Burnup with Plan vs. Actual

Trend reporting
• Milestone Burnup and Cumulative Flow

Diagram reporting
• Time series reporting API

Custom Pages and Apps • Community App Catalog and hundreds
of apps. Some SaaS apps are not
available in Rally On-Premises.

• Community App Catalog and hundreds
of apps.

Languages and I18N Support • English • English and German

Integrations • Supports 3rd party integrations
via WSAPI API

• Third Party Context
• Supports basic authentication

for WSAPI API and integrations
• Does not support integration with Clarity

On-Premises features and additionally:
• Webhooks
• Integrations Administration and Metrics
• Supports integration with Clarity

Administration and User Communication • Can set a custom banner displayed on
all pages for the subscription after log
in.

• Can set a custom banner displayed on
all pages for the subscription after log
in.

 1344



 Rally®

Features Not Included in Rally On-Premises v2.1.0

• Customer Managed Keys (CMK)
• Integration with Clarity (formerly CA PPM)
• Plan Progression
• Capacity Planning
• Investments
• Watches
• Webhooks
• Personalized Navigation
• New search
• @mentions
• Rally Application Manager and API Keys
• Integration Metrics
• Single Sign-On
• Insights
• Ability to disable sessions
• Non-English languages (such as German)
• The following apps are not available to Rally On-Premises customers because they use Lookback API:

– Cycle Time Chart (Community)
– Cycle Time Data (Community)
– Milestone Burnup
– Milestone Cumulative Flow
– Portfolio Item Burnup
– Portfolio Item Cumulative Flow
– Portfolio Item Scope Change Chart (Community)
– Project Cumulative Flow
– PSI Feature Burnup (Community)
– Release & Iteration Burndown
– Super Customizable CFD (Community)

Rally On-Premises Release Notes
For your reference, here are the most recent release notes for Rally On-Premises releases:

• Rally On-Premises 2.1.0 Release Notes
• Rally On-Premises 2.0 Release Notes

– Rally On-Premises 2.0.2 Patch Notes
– Rally On-Premises 2.0.1 Patch Notes

Rally On-Premises Version 2.1.0 Release Notes
These release notes provide pertinent information regarding the additions for the Rally On-Premises Version 2.1.0
release, including hardware and software requirements, compatibility, defect fixes, and known issues for the Rally
Enterprise and Unlimited Editions. All features, changes, and defect fixes were periodically released to Rally SaaS from
January 1st, 2019 to September 25, 2020.

This topic includes the following:

 1345



 Rally®

• Airgap and Non-Airgap Differences
• New Features
• Known Issues
• Improvements
• Hardware and Software Requirements
• Build Details
• Features Not Available

Please refer to the Rally On-Premises v2.1.0 Installation and Administrator Guide for installation and configuration
information.

NOTE
The Rally On-Premises v2.1.0 Installation and Administrator Guide has been updated to include:

• Additional status values that may display in the Service Status tile.
• Instructions to stop and restart the Rally On-Premises services after making changes to the console settings.

NOTE
If you do not have internet access, offline help is not available for this release. The online help for users that
have internet access can be accessed at: https://techdocs.broadcom.com

On-premises releases are now communicated via the Rally Community, where you can also ask your most pressing
questions.

Airgap and Non-Airgap Differences in Rally On-Premises Version 2.1.0

NOTE
An "airgap" environment is a network that has no path to inbound or outbound internet traffic.

Airgap Non-Airgap

Environment VM that is on a server that does not have
access to the Internet.

VM that is on a server that can have access
to the Internet.

License Updates License file is received from the
Provisioning department and uploaded into
the VM. The sync is then performed from
the Admin Console Gear menu with the
License Sync selection.

License information is periodically
synchronized and reflects the latest license
information without user intervention.

Software Updates The Airgap software bundle has to be
downloaded from the Download portal and
copied to your VM. Software updates are
also received through unique download
links and must be copied to the virtual
machine at the same location as the
original installation files. An update is
performed through the Dashboard's Check
Now button.

You can check for and install updates
through the Dashboard with a click of a
button.
You can also automatically check for
software updates on a cadence.

Initial Installation After VM and license installation through
vSphere, manual steps are performed
to download the Airgap bundle from the
Download portal and copy to the VM to
finish the Install process.

After VM and license installation, services
are downloaded automatically from the
Download portal.

 1346

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/Rally_on-prem_admin-v2.1_20221013.pdf
https://techdocs.broadcom.com
https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e
https://support.broadcom.com/group/ecx/productdownloads?subfamily=RALLY%20ON%20PREMISE


 Rally®

New Features in Rally On-Premises Version 2.1.0
New Rally UI We have updated the Rally UI. For information about these changes, see What's New in Rally On-

Premises.

Information in these release notes refers to the new UI.

Determining Size of
Loss for Risk Items

The Size of Loss value on a risk work item is not limited to a number of days delayed or lost. It may also
be a monetary value or a relative value agreed to by the organization (similar to story points). Learn more.

Rally Footer Removed In classic navigation, we removed the footer from Rally. The Support and About links are now available
from the profile menu at the upper-right of all pages. The Recycle Bin is now available at Home, Recycle
Bin. Learn more about the Recycle Bin.

New Menu for
Custom Reports

Custom reports are available from the Reports, Custom Reports menu.

High Volume
Attachments

When a work item has attachments, the list of attachments is sorted from newest to oldest. If you have
200 or more attachments, only the newest 200 display on the page. Older attachments still exist in Rally;
however, you must delete newer ones to view those hidden from view on the page.

User Stories The User Stories page behavior has changed for Rally users who use epics (user stories containing other
user stories). As a result, there are cases where epic stories display information differently in the new UI
than they did previously. Learn more about the differences.

Plan Estimate and
Task Estimate

For accessibility ease-of-use, the Plan Estimate and Task Estimate labels are now spelled out, rather than
abbreviated. This does not apply to the Release Status page, which still uses the abbreviations.

Owner Filter Filtering by the Owner field works differently on the Iteration Status page than on other pages.

• Iteration Status page: The Owner filter considers the owner of the top-level work item (User Story,
Defect, Defect Suite, Test Set), as well as the owner of any associated child work items (Task, Test
Cases).

• Other pages: The Owner filter considers the top-level work item only.

Learn more about the Iteration Status page.

Saved and
Shared Views

The way you save and share views has changed. You can now save a view directly from the page. Working
with saved views has been simplified. Learn more.

On the Portfolio Item and Portfolio Kanban pages, the available saved views are filtered based on the
selected Portfolio Item Type. Learn more.

Last Rollup Date Field
in Portfolio Items

Portfolio items now include the Last Rollup Date field. When changes are made to accepted child user
stories or when user stories are removed from a feature, the calculations of the Percent Done values may
be delayed. You can check the Last Rollup Date to see when the values were last updated. Learn more.

Increased Number
of Display Columns

You can now display up to 50 columns on some list pages. Learn more.

Inline Editing of
Rich Text Fields

You can directly edit text fields, such as Notes and Description, on list view pages.

Export Columns You can export your work item list to a CSV file, using your current view or selecting additional fields not
displayed in your view. Learn more.

Rally Administrator
Guide (online only)

To improve your experience with Rally help, we have reorganized the information most commonly used
by Rally administrators into the Rally Administrator Guide. This guide consolidates information that Rally
administrators (Subscription, Workspace, and Project) can use to set up and maintain Rally. Learn more.

The Rally administrator video tutorials have been moved to the Rally Administrator Guide. Learn more.

WARNING
Many help topics were moved as part of the Rally Administrator Guide reorganization. If you
bookmarked pages that are now part of the reorganized section, you may need to update your
links to the new location.

Rally Scrum Master
Guide (online only)

Rally help now includes a Scrum Master Guide. The guide introduces some of the most useful features in
Rally to help scrum masters facilitate successful Agile teams. Learn more.

 1347

https://community.broadcom.com/enterprisesoftware/communities/community-home/digestviewer/viewthread?GroupId=2437&MessageKey=c264587d-4d20-40f4-ad19-ff72ea3ddc05&CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e&tab=digestviewer&ReturnUrl=%2fenterprisesoftware%2fcommunities%2fcommunity-home%2fdigestviewer%3fcommunitykey%3df303f769-8d4c-44d9-924c-3845bba6444e%26tab%3ddigestviewer


 Rally®

Known Issues in Rally On-Premises Version 2.1.0
End of Support for
Microsoft Internet
Explorer 11 and

Microsoft Legacy Edge

IMPORTANT
As of November 30, 2020,  Rally no longer supports the IE11 or Legacy Edge browser versions.
Functionality and performance in those browsers will likely degrade over time as  Rally removes
the code implemented to support them.

Migrating saved and
shared views may

take anywhere from
a few minutes to 12

hours, depending on
the number of views
in your subscription.

During migration, Rally will be available, but any views that have not yet been migrated will not be available.

Restore from snapshot
functionality is
not available on

existing VMs.

Snapshot restore will only work on fresh VM installations.

FTP is no longer an
option that will be

available within the
new Administration

Control Panel.

It is available manually through the command line through the Services VM.

Improvements in Rally On-Premises Version 2.1.0

What has changed between Rally On-Premises version 2.0 and v2.1.0?

• You can upgrade to Rally On-Premises v2.1.0 directly from Rally On-Premises 2018.1, Rally On-Premises v2.0, or
Rally On-Premises v2.0.2.

• "Email all users" functionality that was present in the old Control Panel is available in the new Administration Control
Panel. Select Settings, then select Email All Users. It is also available from the command line.

• Currently, you cannot do a restore from snapshot unless it is on a fresh VM installation. You cannot restore into an
existing VM; you need to install a new VM in order to run a restore.

• LDAP GUI settings in Rally On-Premises v2.1.0:
– Group Filters are now a required field.
– SMTP host and port are required (in case external SMTP is used).
– Advanced Mode is hidden and only shows advanced mode Group Filters.

• User Query (required)
• Restricted User Group Query (required)

– Group filters, when changed, disable all current users in the database and enables/creates all users in the new
group filter.

• The Admin email alert (optional field) was added. It will send an email to the admin in case a backup database process
fails. It is available in both manual and from-snapshot modes.

• We have added a script to renew the Docker swarm certificate, in the event that it expires or has already expired.
– If the certificate has not expired, the script displays the current expiration date, but does not renew the certificate.
– If the certificate has expired, it is renewed for the same duration specified in the last swarm initialization. The current

default is 3 years.
• Test Database Connection was added to the Settings page (tab). It checks the following:

 1348



 Rally®

– The IP is reachable (can be pinged).
– The port entered is open.
– The Oracle SID entered is f4wp1 .
– A connection with Oracle can be established.

• The Management console settings (Gear menu) now includes a Security section. You can specify the Management
console hostname, change the console password, or change console security settings.

• You can post custom information in a login banner (from Settings, Set Announcements Banner on Login Page).
• Oracle Backup/Restore Commands and Processes

We added options to caac oracle_backup and caac oracle_restore commands. They no longer run without
an argument.
– Oracle Backup Command

• caac oracle_backup --size-estimate estimates the database dumpfile size and free space on both
VMs. The output displays in the terminal.

• caac oracle_backup /mnt/db-dump/<filename> runs a manual database backup to filename. The
filename may be changed by the user, but the path /mnt/db-dump/ is hardcoded, so it cannot be changed. The
application is not restarted or stopped.

• caac oracle_backup --help prints usage help.
In some situations, there may be two or more dumpfiles on the Services VM. It is your responsibility to remove any
that you manually generated.
We have added a check so two concurrent backup processes may not be executed at the same time. In rare
situations, backup may be triggered from a cron job (manual backup customized by the user) and from Snapshot
functionality (scheduled).
In case of any issue during backup (not during restore), email will be sent to AdminAlertEmail .

– Oracle Restore Command
• caac oracle_restore /mnt/db-dump/<filename> runs a manual database restore from filename. The

filename may be changed by the user, but the path /mnt/db-dump/ is hardcoded, so it cannot be changed. The
application is stopped during restore.

NOTE
All existing data is removed and replaced with the data from the dumpfile.

• caac oracle_restore --help prints usage help.
• caac oracle_restore --from-snapshot manually restores from a snapshot. In this instance, the

dumpfile.dmp will be taken from a snapshot.

Hardware and Software Requirements for Rally On-Premises Version 2.1.0

• VMware platform with 64-bit support, including ESX 6.5 (vSphere) or later
If you are using a version of ESX later than 6.5, 6.5 compatibility mode should be used

• 64-bit capable processors with hardware virtualization (Intel® VT-d, AMD AMD-V)
• See the complete checklist for 64-bit guest support
• Memory:

– At least 16 GB of RAM for the Database VM
– At least 12 GB of RAM for the Services VM

• Disk Space: 410 GB for each VM (we recommend using SSD storage)
• Number of Cores:

– Database VM: Two CPUs
– Services VM: Four CPUs minimum, with six recommended

• Google Chrome is required for the Rally Admin Console

 1349

https://kb.vmware.com/s/article/1003945


 Rally®

Build Details for Rally On-Premises Version 2.1.0

• Rally On-Premises Build: 2.1.0
• Rally ALM Build: 25113
• WSAPI: v2.0

Features Not Available in Rally On-Premises v2.1.0

The following features are only available in Rally SaaS, and are not available in On-Premises v2.1.0:

• Customer Managed Keys (CMK)
• Integration with Clarity (formerly CA PPM)
• Plan Progression
• Capacity Planning
• Investments
• Watches
• Webhooks
• Personalized Navigation
• New search
• @mentions
• Rally Application Manager and API Keys
• Integration Metrics
• Single Sign-On
• Insights
• Ability to disable sessions
• Non-English languages (such as German)
• The following apps are not available to Rally On-Premises customers because they use Lookback API:

– Cycle Time Chart (Community)
– Cycle Time Data (Community)
– Milestone Burnup
– Milestone Cumulative Flow
– Portfolio Item Burnup
– Portfolio Item Cumulative Flow
– Portfolio Item Scope Change Chart (Community)
– Project Cumulative Flow
– PSI Feature Burnup (Community)
– Release & Iteration Burndown
– Super Customizable CFD (Community)

Rally On-Premises Version 2.1.1 Patch Notes
For customers who have upgraded to 2.1.0, you can use the 2.1.1 patch bundle to apply this patch. For customers who
have not upgraded to 2.1.0, you can use the 2.1.1 patch bundle instead of the 2.1.0 bundle to upgrade and apply the
patch simultaneously. You do not need to run the 2.1.0 upgrade separately.

You can download Rally On-Premises 2.1.1 from the Download Center on the Rally Support website.

NOTE

Do not apply patches directly to your production systems without first verifying in a test environment. Run
a Snapshot prior to applying the patch in the rare event that there are any issues. If any issues arise in the

 1350

https://support.broadcom.com/group/ecx/productdownloads?subfamily=RALLY%20ON%20PREMISE


 Rally®

installation or use of this patch, contact Rally Support. Plan for up to an hour of downtime when you want to
apply the patch.

This section includes the following:

• Change Summary Rally On-Premises 2.1.1 Patch Release
• Install the Rally On-Premises 2.1.1 Patch on a Non-Airgap Installation
• Install the Rally On-Premises 2.1.1 Patch on an Airgap Installation
• Possible Issues with Rally On-Premises 2.1.1 Patch Release

Change Summary Rally On-Premises 2.1.1 Patch Release

The 2.1.1 patch for  Rally On-Premises addresses a major defect in the analytics reporting service that prevents several
charting and reporting apps from collecting data or displaying properly. The Charting apps that are affected by this defect
include, but are not limited to:

• Iteration Burndown
• Iteration Burnup
• Iteration Cumulative Flow
• Release Burnup
• Defect Trend
• Cycle/Lead Time

Install the Rally On-Premises 2.1.1 Patch on a Non-Airgap Installation

When you are installing the update, all services will be down. Plan accordingly. It is recommended that you install and test
the patch in a test environment, before you install it in your production environment.

1. In the Admin Dashboard Version Status tile, select Check Now.

2. If an update is available, install it.

 1351



 Rally®

Install the Rally On-Premises 2.1.1 Patch on an Airgap Installation

When you are installing the update, all services will be down. Plan accordingly. It is recommended that you install and test
the patch in a test environment, before you install it in your production environment.

1. Download the RALLY ON-PREMISES PATCH V2.1.1 package from support.broadcom.com.
This zip package includes the following file:
– vm_rally_onprem_bundle_2_1_1.airgap

2. Copy the following file to the Services VM.
a. SCP the vm_ac_onprem_bundle_2_1_1.airgap file to the location specified in the Gear menu, Console

Settings, Airgapped Settings, Update Path.
3. In the Admin Dashboard Version Status tile, select Check Now.

 1352

https://support.broadcom.com/


 Rally®

4. If an update is available, install it.

 1353



 Rally®

5. Reboot the Services VM.
6. Start services from the Admin Dashboard Service Status tile.

Possible Issues with Rally On-Premises 2.1.1 Patch Release

• Docker containers may fail to get correct IP assignment. If so, cycle the power on the Services VM.

Rally On-Premises Version 2.0 Release Notes
These release notes provide pertinent information regarding the additions for the Rally On-Premises Version 2.0 release,
including hardware and software requirements, compatibility, defect fixes, and known issues for the Rally Enterprise and
Unlimited Editions. All features, changes, and defect fixes were periodically released to Rally On-Demand from February
22nd, 2018 to January 1st, 2019.

This section includes the following topics:

• Available Patches
• Architecture
• Airgap and Non-Airgap Differences
• New Features
• Connectors
• Known Issues
• Improvements
• Hardware and Software Requirements
• Build Details
• Not Available in v2.0

Please refer to the Rally On-Premises v2.0 Administrator Guide for setup and configuration information.

NOTE
If you do not have internet access, offline help is not available for this release. The online help for users that
have internet access can be accessed at: https://techdocs.broadcom.com

On-premises releases are now communicated via the Rally Community, where you can also ask your most pressing
questions.

Available Patches

The following patch releases are available for Rally On-Premises Version 2.0:

• Rally On-Premises Version 2.0.1
• Rally On-Premises Version 2.0.2

Rally On-Premises Version 2.0 Architecture

The Rally On-Premises re-architected system will allow us to deliver a SaaS-like offering to hosted environments through
containerized microservices:

• Leveraging PaaS-like application platform
• Leveraging container-based virtualization
• Easy customer installs
• Ability to run metrics and backups
• New license required

– Contact Support and select "Licensing" under product

 1354

https://techdocs.broadcom.com/content/dam/broadcom/techdocs/us/en/dita/ca-enterprise-software/agile-development-and-management/attachments/CAAC_on-prem_admin-c_v2.0.pdf
https://techdocs.broadcom.com
https://community.broadcom.com/enterprisesoftware/communities/communityhomeblogs?CommunityKey=f303f769-8d4c-44d9-924c-3845bba6444e
https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

Airgap and Non-Airgap Differences

NOTE
An "airgapped" environment is a network that has no path to inbound or outbound internet traffic.

Airgap Non-Airgap

Environment VM that is on a server that does not have
access to the Internet.

VM that is on a server that can have access
to the Internet.

License Updates License file received from Provisioning
department and uploaded into the VM. The
sync is then performed from the Dashboard
with the License Sync button.

License information is periodically
synchronized and reflects the latest license
information without user intervention.

Software Updates The customer's unique Airgap software
bundle has to be downloaded from the
Download portal and copied to their VM.
Software updates are also received through
unique download links and must be copied
to the virtual machine at the same location
as the original installation files. An update is
performed through the Dashboard's Check
Now button.

Customers can check for and install
updates through the Dashboard with a click
of a button.
Customers can also automatically check for
software updates on a cadence.

Initial Installation After VM and license installation through
vSphere, manual steps are performed
to download the Airgap bundle from the
Download portal and copy to the VM to
finish the Install process.

After VM and license installation, services
are downloaded automatically from the
Download portal.

New Features
Team Board Card
Age and Archive

The Team Board is easy to set up and empowers teams to own their process. Team Board is the great new
Kanban experience for teams that will allow them to work in their own processes as they see fit as a team,
but still have that great organizational rollup so you can see what’s happening across teams of teams,
programs and entire organization. Learn more.

Work Views The Work Views page is your one-stop shop to view all the work items relevant to one or more teams/
projects. The page allows you to easily view and find your work and manage it in one place. You can
manage multiple levels of work items for multiple teams and create work views. Views can be saved for
quick access. Learn more.

Quality Management The Quality Management page provides you with a single location to organize and manage test cases into
test folders. When planning your test effort, assemble test cases in a hierarchy of folders, then see the
summarized results. Learn more.

Saved and
Shared Views

The ability to save and share a view has been added to the Team Board and Work Views pages. This
allows you to set up the page as you like, and save that view for future use. You can also share the view
with others.

Advanced Filters Advanced filters are now available on the Work Views, Team Board, Quality Management, and Team
Planning pages. Advanced filters allow you to specify date ranges and have more comparison operators
than quick filters.

Editing Your Profile So that you can more efficiently edit the settings that are relevant to you, the look and feel of the Edit
Profile pane has been updated. Learn more.

Risks Risks are a new work item type. This allows you to track risks inside Rally along with your other work. You
can link risks to your portfolio items, add risks to a release, or add tasks to address actions related to the
risk. Learn more.

 1355



 Rally®

Dependencies Use Portfolio, Release Tracking to view all features in a selected release that have dependencies on
other features, even if the other feature is not assigned to the selected release. Learn more.

Third-Party Context As an on-premises user, you can see and navigate to all of the context related to a work item, even if that
context is outside of Rally. The connections data for a work item gives you this information. You can also
see the changesets on your work items along with pull requests. Learn more.

Excel 2016 / Office 365 The Excel 2016 / Office 365 Add-In can be installed on Rally On-Premises version 2.0 and above. Learn
more.

Connectors

• Updates to Rally Database Connector (Postgres).
• Updates to Rally Database Connector (MS SQL Server).
• Updates to Installation and User Guide for Rally Connector to Micro Focus ALM/Quality Center.
• IBM Clearquest support has been discontinued.
• Bugzilla support has been discontinued.

Known Issues

• Docker swarm certificate error causes installation to fail - There is an existing bug in Rally On-Premises version 2.0
where new installations taking place after June 5, 2019 will fail to initialize the Docker swarm. This is due to a Docker
swarm SSL certificate expiration.
Before installing version 2.0, you need to rollback the system date, restart the Docker swarm, reset the system date to
the "real" date, and generate a new certificate and key.
Execute the following commands from the command line on the application server as the ops user.
REAL_DATE=$(date +%Y%m%d)

sudo date +%Y%m%d -s "20190604"

sudo systemctl restart docker

sudo date +%Y%m%d -s "$REAL_DATE"

docker swarm ca --rotate

After successfully executing these commands, continue with the installation from the main dashboard panel
(<application_VM_IP_address>:8800). From this point on the system will auto-renew its certificates and the steps
should not be executed again, unless the same 2.0 system is shutdown and not restarted for an extended period of
time (usually more than 60 days).

• A defect is currently impacting the use of custom apps that use the SDK and community apps. The Rally On-Premises
version 2.0.1 patch includes the fix.

• Important: We strongly suggest using a specific Group filter for LDAP settings, to include all of the Rally users.
Otherwise, if no Group filter is entered, all of the users under the Base DN will be synchronized with Rally.

• LDAP - On a brand-new installation, LDAP User Synchronization happens only once, after the initial LDAP settings
are entered into the Admin Control Panel and settings are saved and applied. Confirm that your LDAP settings are
accurate prior to saving it for the first time.
– If a user is removed from the Group in Active Directory, they are no longer able to login to Rally. An admin will need

to login to Rally and disable the removed user in order to free up the license user count.
• "Email all users" functionality that was present in the old Control Panel is currently not available in the new

Administration Control Panel. It will be included in a future release.
• Login Banner functionality that was present in the old Control Panel is currently not available in the new Administration

Control Panel. It will be included in a future release.
• Restore functionality is not available on existing VMs. Restore will only work on fresh VM installations.
• FTP is no longer an option that will be available within the new Administration Control Panel. It is available manually

though the command line through the Services VM.

 1356



 Rally®

Improvements

What has changed between v2018.1 and Rally On-Premises version 2.0?

• You must upgrade to 2018.1 prior to moving to the On-Premises v2.0 release.
• "Email all users" is currently not available in the Administration Control Panel. It will be included in a future release.
• Currently, you cannot do a restore unless it is on a fresh VM installation. You cannot restore into an existing VM; you

need to install a new VM in order to run a restore.
• LDAP synchronization report is not an option at this moment. The information can be found in the support bundle of all

users whether they were added or not.
• Oracle Internet Directory service is now partially supported - synchronization of new users is not supported, only

authentication of existing users is supported.

Hardware and Software Requirements

• VMware platform with 64-bit support, including ESX 6.0 & 6.5 (vSphere)
• 64-bit capable processors with hardware virtualization (Intel® VT-d, AMD AMD-V)
• See the complete checklist for 64-bit guest support
• Memory: At least 12 GB of RAM for the Services VM and at least 16 GB of RAM for the Database VM for Rally On-

Premises
• Disk Space: 410 GB for each VM (we recommend using SSD storage)
• Number of Cores:

– Database VM: Two CPUs
– Services VM: Four CPUs minimum, with six recommended

• Google Chrome is required for the Rally Control Panel

Build Details

• On-Premises Build: 2.0
• Rally ALM Build: 23677
• WSAPI: v2.0

Not Available in Rally On-Premises v2.0

The following features are only available in Rally SaaS, and are not currently available in On-Premises v2.0:

 1357

https://kb.vmware.com/s/article/1003945


 Rally®

• Integration with Clarity PPM
• Plan Progression
• Capacity Planning
• Investments
• Watches
• Webhooks
• Personalized Navigation
• New search
• @mentions
• Rally Application Manager and API Keys
• Integration Metrics
• Single Sign On
• Insights
• Ability to disable sessions
• Non-English languages (such as German)
• The following apps are not available to Rally On-Premises customers because they use Lookback API:

– Cycle Time Chart (Community)
– Cycle Time Data (Community)
– Milestone Burnup
– Milestone Cumulative Flow
– Portfolio Item Burnup
– Portfolio Item Cumulative Flow
– Portfolio Item Scope Change Chart (Community)
– Project Cumulative Flow
– PSI Feature Burnup (Community)
– Release & Iteration Burndown
– Super Customizable CFD (Community)

Rally On-Premises Version 2.0.2 Patch Notes
This Rally On-Premises 2.0.2 patch release is only for Rally On-Premises 2.0.1. The patch only updates your existing
2.0.1 installation and does not include the full product.

If you are running any release prior to Rally On-Premises 2.0, you must first upgrade to 2.0 and then apply the 2.0.1 patch
before applying the 2.0.2 patch.

• You can download Rally On-Premises 2.0 from the Download Center on the Rally Support website.
• You can find the Rally On-Premises 2.0.1 patch release information here.

NOTE

Do not apply patches directly to your production systems without first verifying in a test environment. Run
a Snapshot prior to applying the patch in the rare event that there are any issues. If any issues arise in the
installation or use of this patch, contact Rally Support. Plan for up to an hour of downtime when you want to
apply the patch.

This section includes the following:

• Change Summary for Rally On-Premises 2.0.2 patch release
• Install the Rally On-Premises 2.0.2 Patch on a Non-Airgap Installation
• Install the Rally On-Premises 2.0.2 Patch on an Airgap Installation

 1358

https://support.broadcom.com/group/ecx/productdownloads?subfamily=RALLY%20ON%20PREMISE


 Rally®

Change Summary Rally On-Premises 2.0.2 Patch Release

The 2.0.2 patch for Rally On-Premises addresses a Replicated API security update.

Install the Rally On-Premises 2.0.2 Patch on a Non-Airgap Installation

While you are installing the update, all services will be down. Plan accordingly. It is recommended that you install and test
the patch in a test environment, before you install it in your production environment.

1. Download the RALLY ON-PREMISES PATCH V2.0.2 package from support.broadcom.com.
This zip package includes three files:
– update_replicated.sh
– vm_ac_onprem_bundle_2_0_2.airgap (not needed for a non-airgap installation)
– replicated-2.32.4.tar.gz (not needed for a non-airgap installation)

2. SCP the update_replicated.sh script to the ops user home directory on the Services VM and make it executable.
3. Run the update_replicated.sh script with the following required arguments:

./update_replicated.sh 2.32.4

4. In the Admin Dashboard Version Status tile, select Check Now.

5. If an update is available, install it.

 1359

https://support.broadcom.com/


 Rally®

Install the Rally On-Premises 2.0.2 Patch on an Airgap Installation

While you are installing the update, all services will be down. Plan accordingly. It is recommended that you install and test
the patch in a test environment, before you install it in your production environment.

1. Download the RALLY ON-PREMISES PATCH V2.0.2 package from support.broadcom.com.
This zip package includes three files:
– update_replicated.sh
– vm_ac_onprem_bundle_2_0_2.airgap
– replicated-2.32.4.tar.gz

2. Copy all three files to the Services VM.
a. SCP the update_replicated.sh script to the ops user home directory and make it executable.
b. SCP the vm_ac_onprem_bundle_2_0_2.airgap file to the location specified in the Gear menu, Console

Settings, Airgapped Settings, Update Path.
c. SCP the replicated-2.32.4.tar.gz file to the /tmp directory.

3. Run the update_replicated.sh script with the following required arguments:
update_replicated.sh airgap /tmp/replicated-2.32.4.tar.gz

4. In the Admin Dashboard Version Status tile, select Check Now.

 1360

https://support.broadcom.com/


 Rally®

5. If an update is available, install it.

 1361



 Rally®

6. Reboot the Services VM.
7. Start services from the Admin Dashboard Service Status tile.

Possible Issues with Rally On-Premises 2.0.2 Patch Release

• Docker containers may fail to get correct IP assignment. If so, cycle the power on the Services VM.
• LDAP Filter Field is empty - the App will not start until the field is filled.

The Restricted User Group on the LDAP Server Settings page is now a required field for installations that have LDAP
enabled. This field simplifies user management and allows you to synchronize to an LDAP Agile Central group so that
so that any new users added to the group will be added in Rally. If you do not already have an LDAP group for Rally
users, you can use a generic group filter such as the following:
(&(objectclass=person)(sAMAccountName={{username}}))

Rally On-Premises Version 2.0.1 Patch Notes
This patch release is only for Rally On-Premises 2.0. The patch only updates your existing 2.0 installation and does not
include the full product.

If you are running any release prior to 2.0, you must first upgrade to 2.0 before applying this patch. You can download
Rally On-Premises 2.0 from the Download Center on the Support website.

 1362

https://support.broadcom.com/group/ecx/productdownloads?subfamily=RALLY%20ON%20PREMISE
https://support.broadcom.com/group/ecx/my-dashboard?


 Rally®

NOTE
Do not apply patches directly to your production systems without first verifying in a test environment. Please
run a Snapshot prior to applying the patch in the rare event that there are any issues and if any issues arise in
the installation or use of this patch, contact CA Support. Plan for up to an hour of downtime when you want to
applying the patch.

Change Summary for Rally On-Premises 2.0.1 Patch Release

The 2.0.1 patch for Rally On-Premises enhances user management and enables use of the community and custom apps
within Rally On-Premises.

Required LDAP Group Filter

The Restricted User Group on the LDAP Server Settings page is now a required field for installations that have LDAP
enabled. This field simplifies user management and allows you to synchronize to an LDAP Agile Central group so that
so that any new users added to the group will be added in CA Agile Central. If you don't already have an LDAP group for
Rally users, you can use a generic group filter such as the following:

(&(objectclass=person)(sAMAccountName={{username}}))

CAUTION
If you have LDAP enabled, you must configure an LDAP Group Filter before performing the patch installation. If
you have not, Rally services will fail to start.

Issues Fixed in Rally On-Premises 2.0.1 Patch Release

DE48275 - Community and Custom Apps are not working.

Known Issues in Rally On-Premises 2.0.1 Patch Release

Restricted User Group Filter Query field not showing in 2.0.1

Install the Rally On-Premises 2.0.1 Patch to a Non-Airgap Installation

While you are installing the update, all services will be down. Please plan accordingly. It is recommended that you install
and test the patch in a test environment, before you install it in your production environment.

CAUTION
If you have LDAP enabled, you must configure an LDAP Group Filter before performing the patch installation. If
you have not, Rally services will fail to start.

1. If you have LDAP enabled, configure an LDAP filter.
2. Select the Check Now button and then select View Update.
3. Select Install Update.

Install the Rally On-Premises 2.0.1 Patch to an Airgap Installation

While you are installing the update, all services will be down. Please plan accordingly. It is recommended that you install
and test the patch in a test environment, before you install it in your production environment.

CAUTION
If you have LDAP enabled, you must configure an LDAP Group Filter before performing the patch installation. If
you have not, Rally services will fail to start.

1. Download the ‘CA AGILE CENTRAL ON-PREMISES PATCH V2.0.1 - AIRGAP’ bundle from Download Center on the
CA Support website.

 1363

https://support.broadcom.com/group/ecx/my-dashboard?
https://support.broadcom.com/group/ecx/productdownloads?subfamily=RALLY%20ON%20PREMISE


 Rally®

2. Import the patch bundle to the same location within the Services appliance where the current installation bundle is
located.
a. Determine where the current installation is located. You can do this through the Admin Console Settings page.
b. Log in to the Services appliance and import the patch bundle to the location where the current airgap bundle is

located on the Services appliance. (For example, /tmp/acpc-1.airgap )
3. If you have LDAP enabled, configure an LDAP Group Filter.
4. Navigate to the Admin Dashboard ( https://<IP-or-hostname>:8800/dashboard ) and select the Check Now

button and then View Update.
5. Select Install Update.

 1364



 Rally®

Rally for FedRAMP
Announcing Rally for FedRAMP: CA Technologies, a Broadcom Company successfully achieved Authorization to
Operate (ATO) status for federal agencies and departments procuring cloud services. Rally is FedRAMP authorized.

FedRAMP Overview

On September 26, 2022, Rally officially obtained the FedRAMP Authorization to Operate (ATO) designation, at the
Moderate level.

The Federal Risk and Authorization Management Program (FedRAMP) program provides a standard approach to security
assessment, authorization, and continuous monitoring for cloud products and services. This approach uses an efficient
framework saving time and costs previously associated with performing redundant agency security assessments.

• Security: Provides a standardized approach to security assessment, authorization, and continuous monitoring for
cloud products and services. Federal and government-based agencies are required to use highly secure cloud-based
solutions that adhere to stringent levels of security while meeting U.S. government compliance regulations.

• Mandatory: All federal agencies and departments are required to use FedRAMP authorized cloud services. FedRAMP
is mandatory for Federal Agency cloud deployments and service models at the low, moderate, and high-risk impact
levels. Agencies must submit a quarterly report showing any of their cloud services that do not meet FedRAMP
requirements with the appropriate rationale and proposed resolutions for achieving compliance. Private cloud
deployments intended for single organizations and implemented fully within federal facilities are the only exception.

• Value: The do-once, use-many-times framework saves cost, time, and staff required to conduct redundant agency
security assessments.

Rally Commercial vs. FedRAMP Feature Differences

The Rally for FedRAMP system will maintain parity with the commercial system to the degree that is technically feasible.

While the majority of capabilities are identical, there are a few differences between the two systems. Some differences will
exist temporarily, and some differences will be long term.

Broadcom updates both the Rally commercial and FedRAMP system frequently. Barring technical/security limitations, new
functionality that is introduced to the commercial instance will be delivered to the FedRAMP instance at the same time.
Beta functionality may be available in either system; this is on a capability-by-capability basis.

The following Rally commercial capabilities are currently not supported in Rally for FedRAMP:

• Insights
• Webhooks
• Personal Navigation
• CMK

The following Rally commercial capabilities are coming soon to Rally for FedRAMP:

• Lookback API (and Apps)
• Advanced Analytics (SMART CFD, Cycle Time, Flow Metrics)
• Pendo Informational Popups
• Feedback Icon

In addition, the Sandbox Environment is not available as a FedRAMP authorized service offering.

 1365



 Rally®

NOTE

• The URL for creating and editing API keys for FedRAMP users is https://gov.rallydev.com/login/. For more
information, see External API Keys.

• Any Rally or custom apps that make direct calls to the lookback API (LBAPI) are not supported in Rally for
FedRAMP.

• If your Rally subscription is set to SSO only, subscription administrators must use SSO to authenticate and
cannot log into Rally directly with a password. This is a FedRAMP security requirement.

Frequently Asked Questions
Why did Rally seek

FedRAMP certification?
FedRAMP certification is a key milestone for Rally Software as we continue to offer the Enterprise Agility
Platform to the federal government’s civilian, military, and intelligence agencies.

Who is Rally’s Third-
Party Assessment

Organization (3PAO)?

Schellman and Company, LLC.

Which agency
sponsored

Rally’s FedRAMP
certification process?

For more information about Rally’s FedRAMP certification and sponsorship, see the FedRAMP
Marketplace.

Benefits for Rally
Customers?

A FedRAMP certification makes it easier for new U.S. federal government customers to adopt our solution.

 1366

https://gov.rallydev.com/login/
https://marketplace.fedramp.gov/#!/product/rally?sort=productName&providers=Broadcom
https://marketplace.fedramp.gov/#!/product/rally?sort=productName&providers=Broadcom


 Rally®

Glossary
Brief explanations of terms used throughout Rally or related to Agile and SAFe practices.

A

acceptance criteria

The criteria that define the functionality, behavior, and performance required by the work item for it to be accepted by the
product owner or customer.

acceptance test-driven development

A method of test-driven development (TDD) that involves writing an executable test before the solution code. These tests
are typically developed in conjunction with the product owner or customer and are conducted to determine whether a
feature satisfies its acceptance criteria.

acceptance testing

The process by which a work item is accepted according to the details of the >acceptance criteria. Tests developed by
the customer, product manager, or their testing proxy that are conducted to determine whether a system satisfies its
acceptance criteria.

acceptance

An activity whereby the product owner or customer accepts the validity of a feature/enhancement based on its adherence
to the defined acceptance criteria.

active release

The release that has a state value of Active and whose release date is the earliest date.

actual end date

The actual completion date of a portfolio item when all user stories linked to the portfolio item have reached the Accepted
schedule state. The actual start date and actual end date values are calculated by associated user stories that are moved
from In-Progress to Released states and cannot be modified.

actual start date

A calendar date that reports when development teams actually started work on a portfolio item (when the first user story
linked to the portfolio item has reached the In-Progress schedule state). The actual start date and actual end date values
are calculated by associated user stories that are moved from In-Progress to Released states and cannot be modified.

agile manifesto

The origin of agile development methodologies. Crafted in 2001 by several software developers, the manifesto stresses
the value of individuals and interactions over processes and tools; working software over comprehensive documentation;
customer collaboration over contract negotiation; and responding to change over following a plan.

 1367



 Rally®

agile team

A small group of people, assigned to the same project or effort. Ideally, all members are wholly dedicated to the project,
with no obligations to other projects.

app

An app allows for the combination of data from more than one source into a single integrated page within Rally. Rally
allows you to use your own custom app code and provides a catalog of managed apps.

Application Program Interface (API)

A set of routines, protocols, and tools for building software applications. An API specifies how software components
should interact. APIs are used when programming graphical user interface (GUI) components.

artifact

Any work item in Rally. See work items.

associations

Associations are relationships that assist in managing work items. For example, a technical problem found while
developing new code can be documented as a defect associated to a user story.

attribute value

Information assigned to an attribute. For example, the State attribute could be assigned a value of Committed, Completed,
Approved, and so on.

attribute

An attribute represents a named property of a work item. An attribute has a type that defines the entry of its instances,
such as drop-down lists, text fields, and Boolean. Synonymous with field.

B

backlog refinement

An ongoing event whereby the product owner manages the product backlog based on information gathered in the
feedback cycles inherent to agile practices. The activities of backlog refinement can include:

• adjusting rank
• breaking down stories to be worked on in the next few iterations
• creating new stories
• estimation of user stories and defects
• prioritizing work
• updating existing stories
• deleting obsolete stories
• elaborating acceptance criteria

backlog

A collection of prioritized and unscheduled requests for work to be done.

 1368



 Rally®

build number

An operational version of a system or part of a system that identifies a subset of the capabilities to be provided in the final
product.

burndown

A type of chart that shows work remaining over time.

C

capacity planning

Matches business demand with available supply, so you can optimize your agile teams’ capacity towards the highest
business value within their capacity.

capacity

Amount of work a team can complete in a given time period.

card

A card is an object on a board, such as the Rally Team Board page. Cards can represent work items such as user stories,
portfolio items, tasks, and defects.

chicken

A term to describe a member of a scrum team, daily standup meeting, or any person on a project that does not have an
active stake in the work. Taken from the fable of the chicken and pig, a chicken is only involved, but a pig is committed.
See skin-in-the-game.

child story

A user story that represents the breakdown of a large feature or initiative into a smaller segment.

code review

A systematic examination of computer source code intended to find and fix mistakes overlooked in the initial development
phase, improving both the overall quality of software and the developers' skills.

continuous delivery

A type of software development methodology that allows new code to be released as soon as it is finished, instead of
holding to a defined release schedule. See Lean.

continuous integration

A software development practice where members of a team integrate their work frequently. Ideally, developers integrate
their code into the code base at least daily.

cross-functional

A team composed of people with varying skills and experience brought together to achieve a shared goal. Agile teams
should be cross-functional.

 1369



 Rally®

current iteration

The iteration that contains today's date. See sprint and iteration.

custom app

An application created from HTML or JavaScript that you create. Your subscription administrator must enable your
workspace to allow custom apps.

custom field

Custom fields may be created by a subscription or workspace administrator on most Rally work items.

custom page

A user-generated page that displays in Rally. Custom pages may contain an app from the Rally catalog, a
custom app built by a user, a dashboard page, or the contents of another webpage. Users can create custom pages for
themselves and those with the proper permissions can share custom pages with all users of a project, group of projects,
or workspace.

customer

The customer is the ultimate recipient of the developed product and its work items. See stakeholder.

cutline

A tool used to prioritize backlogs and set the capacity for a release or program increment (PI).

D

daily standup

A brief meeting held between the delivery team, product owner, and scrum master. While everyone stands (to keep the
meeting from running long) each team member reports on what work they did yesterday, what they plan to do today, and
alerts the scrum master of any issues that may be blocking them.

dashboard

A Rally page located under the Home menu. Panels on the dashboard display various information and charts. Users can
control what panels display and how they appear. You can create multiple dashboards as custom pages.

defect

A defect (also called bug or software bug) is an error, flaw, mistake, failure, or fault in a computer program that prevents it
from behaving as intended (such as producing an incorrect result).

defect suite

A grouping mechanism that allows you to compile and schedule a collection of defects as a single unit for resolution in an
assigned iteration or release.

definition of done

A living definition created and managed by the delivery team, defining their current standards for technical excellence.
The definition typically includes the requirements the team has to meet in order to declare any work item worked on in
an iteration done. These differ from acceptance criteria in that they are typically technical in nature and generalized to be

 1370



 Rally®

valid for most work items (such as unit tests complete, online help updated), as opposed to value-driven criteria specific to
a feature (such as website users should only be able to create one account per email address).

dependency

A relationship between two work items where the work defined in one user story must be done before the work for another
user story may begin.

drag-and-drop

A method for ranking work items when you select the work item and drag it to a desired prioritized position on the page.

E

epic story

Synonymous with parent story. See portfolio item.

F

feature

An improvement or capability of value to a stakeholder that can be developed in a potentially shippable increment or
release timebox (usually 10-12 weeks). A feature is typically the lowest-level portfolio item in Rally.

feature request

A description of a feature or function that does not currently exist in the software, requested by a customer or other
stakeholder.

field

Fields represent a named property of a work item. A field has a type that defines the entry of its instances, such as drop-
down lists, text fields, and Boolean. Synonymous with attribute.

filtering

A process by which you can constrain the amount of information displayed in a view. You can filter by specifying certain
distinct criteria for any or all attributes. For example, instead of displaying all work items, you might apply a filter to display
only work items having a high priority.

flow state

Flow states represent the stages of how work moves at different levels through Rally, such as a team (Team Board page)
or an organization (Portfolio Kanban page). Flow states can also be mapped to schedule states to ensure continuity
between how a team works and the overall schedule state used by your organization. See schedule state.

H

hackathon

An event in a scrum team where individual members are allowed to create their own code, features, or other materials of
their choosing. Hackathon work should be fun, but also relate to the system or product in some way. A hackathon is built
into a release schedule.

 1371



 Rally®

hierarchy

A collection of related work items. The project hierarchy is intended to model your organizational structure (how product
teams and delivery teams are organized in your company). The portfolio item hierarchy helps product teams organize
their strategic plans into large initiatives and smaller features. Consider a portfolio item hierarchy where the lowest level
portfolio items have user stories that are not parent stories (except in the case of defects).

I

ideal day

An estimation unit that considers the time it would take to complete a task without interruptions.

increment

The changing condition of the software product as it is developed, deployed, or released and is expressed in terms of
repeated iterations or milestones with specific start and end points.

incremental development

A type of iterative development strategy in which more and more functionality is added to an increment of the system
being built.

initiative

The largest portfolio item in a project hierarchy, which are split into large blocks of work. At Rally, an initiative is a set of
work with clear success criteria that can typically be completed in a few months. An initiative can be completed by one or
more teams, and might release software in a few increments.

insights

A report used to benchmark data and get detailed, diagnostic analytics to help understand and improve software
development performance.

investment category

A budget or investment area that a portfolio item supports. Define a list of investment categories possible for a portfolio
item. Each portfolio item can be associated with one investment category.

iteration

A brief, repeating timebox that produces intermediate, deployable code. Requests are worked on and accepted during
this timebox. It is defined in an iteration planning meeting and is completed with an iteration demo and review meeting.
See sprint.

iteration burnup

A chart that displays work delivered so far in an iteration to proactively anticipate whether the iteration scope will be
delivered. This chart may be displayed in an app.

iteration plan

A plan to achieve a specified level of functionality and meet additional specific criteria with a particular timebox.

 1372



 Rally®

iteration status

Provides your team with a view of all work items within an iteration or sprint timebox organized by scheduled state.

J

JavaScript

A software development language that can interact with HTML to deliver various web-based content. Custom Rally
applications can be written in JavaScript.

K

kanban

A method of work where you pull the next highest priority work item and complete it through the team-defined stages (flow
states) of delivery.

kanban board

A system of tracking work across various stages or flow states of development. Work is represented by cards and stages
are represented by columns on a board. A card is moved to the next column when it enters the next stage.

L

leaf node

Refers to any user story that has no children.

Lean software development

Software development practices adapted from the Lean Manufacturing principles developed by Toyota. The focus of Lean
methodology is to eliminate waste, amplify learning, decide as late as possible, deliver as fast as possible, build integrity,
empower the team, and see the whole.

M

managed app

A catalog of managed apps is available to Rally users. These managed apps can be easily installed on the dashboard
or custom pages within Rally. These apps combine the information you have stored in Rally with HTML, JavaScript, and
an API to render and manipulate data to suit your specific needs. Managed apps include core apps, which are maintained
by Rally, and community-provided apps which have limited support from Rally and may change.

milestones

The target events, deployments, deadlines, or dates that are important to the business. Setting these milestones is
beneficial to program, product, project, and development managers, as well as product owners and engineering directors,
to track critical events.

MoSCoW

An acronym used to prioritize work, or aspects of a particular feature. Stands for must have, should have, can have, and
will not have. May be used to define the acceptance criteria of a user story.

 1373



 Rally®

N

navigation

The way you access pages in your workspace. You can customize your navigation to set a specific home page or hide
pages that are not a part of your workflow.

O

owner

The user responsible for developing or delivering a work item.

P

page

A location in Rally under any of the navigation tabs that provides summary views of work item data. You can also create
custom pages under Rally tabs. Custom pages are used to present one or many apps and can be copied, shared, and
customized.

parent story

A user story that represents a large set of work, which is further defined by related child stories. Parent stories cannot
be scheduled into an iteration or release, as they are considered too large. Rally recommends using portfolio items to
designate features and other higher-level sets of work. Synonymous with epic story.

permissions

Specific user rights for workspaces and projects. Permissions control abilities to administer, create, edit, and delete Rally
subscription data and settings.

pig

Term to describe a member of a scrum team or daily standup meeting that has an active stake in the work. Taken from the
fable of the chicken and pig, a pig is committed, but a chicken is only involved. See skin-in-the-game.

pinned items

A list of up to 15 work items accessible from Pinned Items

on the upper-right corner of any page in Rally.

plan estimate

The amount of effort estimated to complete a single user story. Plan estimates are represented by points, t-shirt sizes, or
other systems. They do not correspond to task or person-hours.

plan-level estimating

An estimating technique that uses an agreed-upon unit (typically story points or ideal days) to estimate the relative size of
a feature. This estimating is usually done to assist with release planning and to allow the team to determine its velocity.

 1374



 Rally®

planned end date

A calendar date to express the intended date when a portfolio item will be completed but not necessarily released.

planned start date

A calendar date to express the intended start date of a portfolio item.

planned velocity

The total number of story points (or other unit type) the team estimates they can complete within an iteration or release.
This total can be estimated by averaging the total number of story points completed in past iterations or releases.

planning poker

An approach to estimating the size of work among a team. Team members are given cards, each with a relative point
value. An example of point values is 0, 2, 5, 10, 20, 40, 100. The potential new work is presented to the team, and each
member holds up a card with their estimated point value. The largest and smallest point value holders explain their
position, and then the process is repeated until a consensus is reached.

points

The most common units used by agile teams to estimate relative size of stories or portfolio items such as features and
initiatives.

portfolio item

A Rally work item type used to capture features and initiatives. A top-level portfolio item may consist of several smaller
portfolio items, each of which consists of several user stories.

potentially shippable increment (PSI)

A timebox, usually a pre-defined number of weeks, in which a PSI of features is developed.

predecessor

Any user story that must be completed before another user story can start or finish.

preliminary estimate

An estimating technique that uses an agreed-upon unit (for example, S, M, L) to estimate the relative size of a portfolio
item (initiative or feature). This estimating is typically done to provide the product or portfolio manager with a high-level
effort estimate for the initial prioritization of strategic items. In early estimation discussions, we recommend you use
relative sizes (S, M, L) over numeric values.

product backlog

Synonymous with backlog.

product backlog item

Can be user stories, technical features, defects or any other item that will require the time of the delivery team to deliver
the feature.

 1375



 Rally®

product owner

A role on an agile delivery team that is responsible for collecting and ranking or prioritizing business requirements on the
product backlog and accepting completed work. A product owner does not manage a delivery team but communicates
what must be built in the next release or iteration. In exchange for the team's commitment to finish the top-most ranked
work in an iteration, the product owner agrees to protect the team from any changes in requirements during the iteration.

program

A collection of work, usually software projects, performed by a number of teams to deliver marketable value to the
company or to external stakeholders.

program increment (PI)

Timebox during which a program creates a deliverable. See program.

project

A container for a team, and their related work items. In Rally, it is helpful to think of projects as work areas for teams.

project picker

A menu found in the upper-left corner of any Rally page, used to select what project and related child (or parent) project
data is displayed. See scope.

page

A location in Rally under any of the navigation tabs that provides summary views of work item data. You can also create
custom pages under Rally tabs. Custom pages are used to present one or many apps and can be copied, shared, and
customized.

parent story

A user story that represents a large set of work, which is further defined by related child stories. Parent stories cannot
be scheduled into an iteration or release, as they are considered too large. Rally recommends using portfolio items to
designate features and other higher-level sets of work. Synonymous with epic story.

permissions

Specific user rights for workspaces and projects. Permissions control abilities to administer, create, edit, and delete Rally
subscription data and settings.

pig

Term to describe a member of a scrum team or daily standup meeting that has an active stake in the work. Taken from the
fable of the chicken and pig, a pig is committed, but a chicken is only involved. See skin-in-the-game.

pinned items

A list of up to 15 work items accessible from Pinned Items

on the upper-right corner of any page in Rally.

 1376



 Rally®

plan estimate

The amount of effort estimated to complete a single user story. Plan estimates are represented by points, t-shirt sizes, or
other systems. They do not correspond to task or person-hours.

plan-level estimating

An estimating technique that uses an agreed-upon unit (typically story points or ideal days) to estimate the relative size of
a feature. This estimating is usually done to assist with release planning and to allow the team to determine its velocity.

planned end date

A calendar date to express the intended date when a portfolio item will be completed but not necessarily released.

planned start date

A calendar date to express the intended start date of a portfolio item.

planned velocity

The total number of story points (or other unit type) the team estimates they can complete within an iteration or release.
This total can be estimated by averaging the total number of story points completed in past iterations or releases.

planning poker

An approach to estimating the size of work among a team. Team members are given cards, each with a relative point
value. An example of point values is 0, 2, 5, 10, 20, 40, 100. The potential new work is presented to the team, and each
member holds up a card with their estimated point value. The largest and smallest point value holders explain their
position, and then the process is repeated until a consensus is reached.

points

The most common units used by agile teams to estimate relative size of stories or portfolio items such as features and
initiatives.

portfolio item

A Rally work item type used to capture features and initiatives. A top-level portfolio item may consist of several smaller
portfolio items, each of which consists of several user stories.

potentially shippable increment (PSI)

A timebox, usually a pre-defined number of weeks, in which a PSI of features is developed.

predecessor

Any user story that must be completed before another user story can start or finish.

preliminary estimate

An estimating technique that uses an agreed-upon unit (for example, S, M, L) to estimate the relative size of a portfolio
item (initiative or feature). This estimating is typically done to provide the product or portfolio manager with a high-level
effort estimate for the initial prioritization of strategic items. In early estimation discussions, we recommend you use
relative sizes (S, M, L) over numeric values.

 1377



 Rally®

product backlog

Synonymous with backlog.

product backlog item

Can be user stories, technical features, defects or any other item that will require the time of the delivery team to deliver
the feature.

product owner

A role on an agile delivery team that is responsible for collecting and ranking or prioritizing business requirements on the
product backlog and accepting completed work. A product owner does not manage a delivery team but communicates
what must be built in the next release or iteration. In exchange for the team's commitment to finish the top-most ranked
work in an iteration, the product owner agrees to protect the team from any changes in requirements during the iteration.

program

A collection of work, usually software projects, performed by a number of teams to deliver marketable value to the
company or to external stakeholders.

program increment (PI)

Timebox during which a program creates a deliverable. See program.

project

A container for a team, and their related work items. In Rally, it is helpful to think of projects as work areas for teams.

project picker

A menu found in the upper-left corner of any Rally page, used to select what project and related child (or parent) project
data is displayed. See scope.

R

rank

An attribute of a work item that describes its importance or priority.

refactoring

Any change to software code that improves its readability, performance, or simplifies its structure without changing its
results.

release

A mid-range timebox where work occurs in support of an internal or external delivery of a working, tested version of the
system or software. In scrum, a release consists of multiple iterations to deliver new features or enhancements. See
program increment.

release backlog

Contains all stories that have been scheduled for a particular release, but not a particular iteration.

 1378



 Rally®

release planning

A commitment to a plan for delivering an increment of product value. It is a collaborative effort involving scrum masters,
product owners, delivery teams, and stakeholders. See program increment.

requirement

A software capability that must be met or possessed by the system or a system component to satisfy a contract, standard,
specification, stakeholder request, or other formally imposed documentation that takes the form of a declaration. User
stories and portfolio items are types of requirements.

result

A term used in describing the outcome of a test case.

revision

A change made to a work item, user, or workspace settings. Revision histories are provided on these objects to show a
log of changes.

risk

The level of impact on the successful outcome of a work item.

risk score

A relative number to express the level of risk for a portfolio item.

roadmap

A high-level or long-range projection of work to be completed by an organization. Roadmaps may be created for internal
planning or external communication to stakeholders. In agile organizations, roadmaps are subject to change with evolving
business priorities or needs.

rollup

The updating of status and progress from a lower-level work item or project in Rally up through the hierarchy. For
example, release work can be rolled up among several projects in a common hierarchy, when the releases in each project
share the same name and dates. Schedule state updates also rollup from tasks to user stories.

S

Scaled Agile Framework (SAFe)

A methodology created by Dean Leffingwell to implement Lean and Agile practices on an enterprise scale. Use
this proven methodology to scale agile from the team level to the enterprise level.

schedule state

A standard field in Rally with six possible values. Values that cannot be modified are Defined, In-Progress, Completed,
and Accepted. Custom 1, preceding Defined, and Custom 2, succeeding Accepted, can be renamed or disabled. User
stories, defects, and defect suites use this field to indicate progress and track performance. Not to be confused with the
State field, which can have different values depending on the type of work item.

 1379



 Rally®

scheduling

A time-ordered collection of activities that specify when important project events or milestones are planned to occur.

scope

The primary project (team) that you have designated as your focus within the current workspace, as well as related parent
and child projects that you have included in focus. See project picker.

scrum team

The collaborative team comprised of the product owner, the scrum master, and the delivery team.

skin-in-the-game

A term that represents an individual's commitment to a team or project. For example, if a pig and a chicken decide to open
a ham-and-eggs restaurant, the chicken is merely involved while the pig is committed; it has skin-in-the-game.

Software Development Life Cycle (SDLC)

The process used to plan, design, develop, test, and deploy software.

sprint

Synonymous with iteration.

stakeholder

An individual who is materially affected by the outcome of work.

state

A condition during the life of a work item where it satisfies given criteria. Not to be confused with schedule state.

subscription administrator

Has administrator privileges for the subscription and as such can add and set user permissions, create workspaces and
projects, and configure default subscription and workspace settings.

subscription

An agreement to give a set of named users access to use Rally.

successor

Any user story that cannot start or finish until another user story is completed.

swimlanes

Horizontal rows that can be applied to a board for a team to easily visualize work items by category or sub-process.

 1380



 Rally®

U

unified parent

A parent for a user story that is reflected in the user interface, the administration functions, and the WSAPI interface. A
unified parent can be either a user story or a portfolio item.

unit test

A method by which the developers write testing code to test their target code at the module (class, object, and interface)
level. Developers have access to the internals of the object, method, or interface that is being tested. They use a set of
open-source and commercial method frameworks to facilitate development, management, and execution of unit tests.

user

Represents a login for a person or role within a Rally subscription that can take on specific access privileges.

user story

A listing of acceptance criteria needed to deliver a new feature or piece of work. Generally written from the perspective of
a user of the system. A commonly used format is: As a X, I want to Y, so that Z.

username

The administrator-created identification used, in combination with a password, to access Rally. The username is in email
address format and is not case-sensitive.

V

validation

A validation action evaluates the status of the execution of a test case. Typical validation criteria include pass, fail, build
tested, and date tested.

value score

A number that indicates the worth of the portfolio item.

velocity

A measure of the amount of accepted amount of work delivered within a timebox. Agile teams typically use the sum of
story points associated with accepted user stories delivered in a timebox as their velocity calculation.

verdict

Test case results yield verdicts. Predefined verdict values may include pass, fail, inconclusive, and error, and can be user-
defined.

watches

The ability to follow the status of an individual work item and receive notifications when changes are made. Watches can
be used when you have a critical portfolio item, user story, defect, or task and need immediate notification when its details
are changed.

 1381



 Rally®

waterfall

A form of software development that Agile seeks to change. In waterfall environments, work may not begin on a project
until the work is fully documented (including the user interface, user stories, and all the features’ variations and outcomes),
stalling development. Waterfall projects typically take 2-3 times longer to complete than agile projects.

webhooks

A mechanism that creates a rule that sends information to an external server when the rule triggers. The destination of the
information is defined in the webhook rule where it was created.

work items

Items that help define the work or value to be delivered. Work items in Rally are user stories, tasks, portfolio items, test
cases, test sets, test case results, defects, and defect suites.

workspace

An organizational construct within a Rally subscription representing independent departments that contains work items,
projects (teams), and settings. Data cannot span from one workspace to another. Rally strongly recommends you
configure a single workspace.

workspace administrator

A user in Rally with permissions to manage a workspace, including adding users, teams, and projects. Workspace
administrators are delegated by subscription administrators.

workspace time zone

The single time zone used in a subscription, which allows for consistency among distributed teams. Dates display as a
fixed point in time, not a calendar date. The workspace time zone is set by the subscription administrator.

 1382



 Rally®

Documentation Legal Notice
This Documentation, which includes embedded help systems and electronically distributed materials, (hereinafter referred
to as the “Documentation”) is for your informational purposes only and is subject to change or withdrawal by Broadcom
at any time. This Documentation is proprietary information of Broadcom and may not be copied, transferred, reproduced,
disclosed, modified or duplicated, in whole or in part, without the prior written consent of Broadcom.

If you are a licensed user of the software product(s) addressed in the Documentation, you may print or otherwise make
available a reasonable number of copies of the Documentation for internal use by you and your employees in connection
with that software, provided that all Broadcom copyright notices and legends are affixed to each reproduced copy.

The right to print or otherwise make available copies of the Documentation is limited to the period during which the
applicable license for such software remains in full force and effect. Should the license terminate for any reason, it is your
responsibility to certify in writing to Broadcom that all copies and partial copies of the Documentation have been returned
to Broadcom or destroyed.

TO THE EXTENT PERMITTED BY APPLICABLE LAW, BROADCOM PROVIDES THIS DOCUMENTATION “AS
IS” WITHOUT WARRANTY OF ANY KIND, INCLUDING WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NONINFRINGEMENT. IN NO EVENT WILL
BROADCOM BE LIABLE TO YOU OR ANY THIRD PARTY FOR ANY LOSS OR DAMAGE, DIRECT OR INDIRECT,
FROM THE USE OF THIS DOCUMENTATION, INCLUDING WITHOUT LIMITATION, LOST PROFITS, LOST
INVESTMENT, BUSINESS INTERRUPTION, GOODWILL, OR LOST DATA, EVEN IF BROADCOM IS EXPRESSLY
ADVISED IN ADVANCE OF THE POSSIBILITY OF SUCH LOSS OR DAMAGE.

The use of any software product referenced in the Documentation is governed by the applicable license agreement and
such license agreement is not modified in any way by the terms of this notice.

The manufacturer of this Documentation is Broadcom Inc.

Provided with “Restricted Rights.” Use, duplication or disclosure by the United States Government is subject to the
restrictions set forth in FAR Sections 12.212, 52.227-14, and 52.227-19(c)(1) - (2) and DFARS Section 252.227-7014(b)
(3), as applicable, or their successors.

Copyright © 2005-2022 Broadcom. All Rights Reserved. The term “Broadcom” refers to Broadcom Inc. and/or its
subsidiaries. All trademarks, trade names, service marks, and logos referenced herein belong to their respective
companies.

 1383



 


	Rally®
	Table of Contents
	Release Notes
	Q1 2023 Release Notes
	Q1 2023 Closed Defects

	Q4 2022 Release Notes
	Q4 2022 Closed Defects

	Q3 2022 Release Notes
	Q2 2022 Release Notes
	Rally Deprecation Notices
	Product Accessibility Features

	Getting Started
	Log into Rally
	Choose a Role
	Set Up Your Profile
	Edit Your Profile
	Change Your Password
	Configure Your Settings
	Choose a Workspace or Project
	Disable Sessions

	Set Up Notifications
	Set Up Email Notifications
	Add the My Notifications App
	Set up an RSS Feed for Change Notification

	Creating Notification Rules
	Enable a Work Item Type Notification
	Create a New Notification Rule
	Delete a Notification Rule
	Make a Notification Rule Inactive


	Set Your Display Preferences
	Using Your Dashboard
	Create Custom Pages
	Create a Custom Page
	Edit a Custom Page
	Delete a Custom Page
	Copy a Custom Page
	Using a Shared Custom Page
	Filter a Custom Page by an Iteration, Release, or Milestone
	View a Custom Page Full Screen


	Learning Rally
	Rally Video Tutorials
	Rally Page Help
	Role-Based Help
	Tutorial: Learn Rally in Five Easy Steps
	Rally Quick Start for Team Members
	I Just Need to Update My Tasks
	How Do I Find My Work to Update?
	I Found a Bug While Working!
	I Have an Idea to Help Meet Our Team and Organization Goals
	What Settings Can I Configure?

	Rally Scrum Master Quick Start
	Setting Up Your Agile Team
	Customizing Your Scrum Master Dashboard
	Facilitating Team Standups with Rally
	Facilitating Planning Meetings
	Facilitating Retrospectives


	Learning Agile
	Agile Video Tutorials
	The Agile Primer
	The Daily Standup
	Definition of Done
	Create Meeting Agendas
	The Product Backlog
	Agile FAQ
	Top 10 Mistakes Made by New Agile Teams
	Story Estimation Timeline
	Agile Practices
	Write a Great User Story
	Break Down Stories
	Prioritize the Backlog
	Design a Portfolio Kanban Board
	Iteration Demo and Review Meetings
	Retrospect Your Iterations
	Cancel an Iteration

	Enterprise Scale Agile
	Agile Release Train (ART) Team Planning Dashboard
	PSI Program / Portfolio Dashboard
	Release Train Backlog Dashboard
	Weighted Shortest Job First (WSJF) Dashboard


	Administration
	IT Administration
	How Users Authenticate
	Set Up Single Sign-On (SSO)
	Using Rally Application Manager
	Authorized Applications
	API Keys
	Add OAuth Clients
	External API Keys


	Browser Support
	Configuring Your Windows DNS Server to Use Your Local ISP's DNS Server

	Rally Administrator Video Tutorials
	Configure Your Subscription
	View Your Subscription
	Customize Your Subscription
	Subscription Context Settings
	Subscription Email Settings
	Subscription Admin Capabilities Settings
	Subscription Password Policies

	Customizing User Fields
	Using Authentication
	SSO Authentication With Exceptions
	Custom Log Out Landing Page

	Manage Webhooks
	View or Delete Webhooks
	Enable or Disable Webhooks
	Set Up an HMAC Secret

	Share Custom Pages
	Managing Workspaces in Your Subscription
	Print a Report of all Workspaces
	Create a New Workspace
	Timebox Administration

	Managing Apps in Your Subscription
	Enable Custom URL or Custom HTML Apps
	Enable Community Apps in the App Catalog
	Managing Subscription Apps

	Customer Managed Keys (CMK)
	Maintaining CMK

	Using Mutual TLS (mTLS) with Rally
	Using Cross-Origin Resource Sharing

	Managing Your Workspace
	View the Workspace Summary Page
	Print Workspace Details
	Customizing a Workspace
	Work Rules
	Create a Work Rule
	Edit a Work Rule
	Disable a Work Rule
	Delete a Work Rule
	View Revision History for Work Rules

	Creating and Customizing Work Item Fields
	View Fields
	Edit Fields
	Delete Fields
	Manage Field Visibility for Workspaces and Projects
	Create Custom Fields
	Auditing Custom Field Usage

	Configuring Objectives for Your Workspace
	Enable OKRs for Your Workspace
	Create OKR Administrators
	Customize Objective Levels
	Customize the State Field for Objective Hierarchy Levels
	Create Custom Fields for Objectives

	Customizing Portfolio Item Types
	Portfolio Item Types
	Rename Portfolio Item Types
	Customizing Fields for Portfolio Item Types
	Customizing the Portfolio Item Preliminary Estimate Field
	Customizing the Portfolio Item Investment Category Field
	Customizing the Portfolio Item State Field
	Default Portfolio Item Fields


	Managing Tags
	Modifying Schedule States
	Close Projects and Workspaces
	Enable Build and SCM Traceability
	Automatically Unblock Portfolio Items

	Understanding the Rally Project Hierarchy
	Set Up Your Projects (Teams)
	View a Single Project
	View All Projects as a Workspace Administrator or Subscription Administrator
	Create a Project
	Edit a Project
	Create a Child Project
	Change an Existing Project to a Child Project
	Managing Project (Team) Membership
	Change Project Permissions for an Existing User
	Add an Existing User to a Project
	Copy a Set of Users From an Existing Project

	Project Fields

	Administer Programs
	Use Project Scoping and Rollups
	Use Portfolio Items

	Managing Users
	Viewing Users
	Creating and Editing Users
	Create a New User
	User Fields
	Set User Access Permissions
	Change a User Name
	Copy a User
	Bulk Edit Multiple Users
	Disable, Delete, or Unlock a User

	Resetting User Passwords
	Monitoring Usage and Licenses
	Resolve User Name Conflicts in Rally
	Invite Users

	Administer Rally Integrations
	Data Moves
	Subscription Merge
	Workspace Move

	Sandbox Requests

	Using
	Work Efficiently in Rally
	Keyboard Navigation
	Keyboard Shortcuts

	Customizing Pages and Views
	Controlling What Projects You See
	Viewing Multiple Projects at Once
	Configure a Default Project to View
	Assign a Work Item to a Project
	Project Scoped Work Item Relationships

	Customizing How a Board Displays
	Select Fields to Display on Cards
	Add Swimlanes
	Document Exit Agreements
	Collapse Columns
	Set Display Preferences on Board Pages

	Customizing How a List Displays
	Customize Number of Columns to Display
	Customize the Number of Work Items Displayed
	Set Display Preferences on List Pages

	Customize Navigation
	Set Your Start Page
	Hide Pages
	Search for a Specific Page
	Personalized Navigation

	Saving and Sharing Views

	Common Tasks
	Common Actions
	Actions Button Menu Options
	Actions Icon Options
	Print List Views
	Save Work Items
	Row Action Icons

	Bulk Actions
	Edit Multiple Work Items
	Bulk Delete Work Items

	Using Filters
	Use Quick Filters
	Use Advanced Filters
	Filter Operators List
	Custom Filter Examples

	Convert Work Items
	Search Work Items
	Search Globally
	Search Tips
	Search Specific Pages

	Watching Work Items
	Creating Watches
	Managing Watches
	Removing Watches
	Fields Displayed in Watch Notifications

	Using HTML Tags in Text Fields

	Common Pages and Elements
	Using the Work Item Toolbar to Create and Delete Work Items
	Quickly Create Work Items Using the Work Item Toolbar
	Create Work Items with the Detail Editor
	Edit Work Items Using the Work Item Toolbar
	Delete a Work Item Using a Toolbar Action

	Using the Toolbar to Modify Work Items
	Access the Work Item Toolbar from a List Page
	Add a Peer Work Item with a Toolbar Action
	Add a Child Work Item with a Toolbar Action
	Link an Existing Work Item as a Child Work Item Using a Toolbar Action
	Remove a Work Item from a Collection or Association
	Rank a Work Item with a Toolbar Action
	Copy Tasks from Another Work Item Using a Toolbar Action
	Copy a Work Item Using a Toolbar Action
	Watch a Work Item with a Toolbar Action
	Split a User Story with a Toolbar Action

	Pinned and Recent Item Lists
	Pinned Items
	Recent Items

	Recycle Bin
	Viewing the Recycle Bin Page
	Restore Work Items from the Recycle Bin
	Delete Work Items from the Recycle Bin

	Detail Editor
	Customizing the Detail Editor
	Show Fields in the Detail Editor
	Drag-and-Drop Fields in the Detail Editor

	Using the Detail Editor
	Description and Notes Fields in the Detail Editor
	Add an Attachment to a Work Item
	Use Discussions

	Copy a Link to a Work Item
	Detail Editor Actions Menu
	Copy a Work Item from the Detail Editor

	Collections
	Detail Editor FAQ

	Work Views Page
	Create a Work View
	Group Work Items on the Work Views Page

	Work Item Templates
	Create a Template
	Modify a Template
	Change the Default Template
	Apply a Template

	Viewing Collections
	Customize a Collections Page
	Add a New Work Item in a Collection
	Bulk Edit Work Items with a Collection
	Collections Summary


	Missing Work Items
	File a Feature Request

	Building Your Backlog
	Managing the Backlog
	Customizing the Backlog Page
	Creating Backlog Items
	Add a Backlog Item
	Add a Backlog Item at a Specific Place
	Add a Child User Story to a Backlog Item

	Editing Backlog Items

	Sizing and Estimates Overview
	Size and Estimate for Your Team
	What is an Estimate?
	Sizing and Estimates
	How Do We Estimate?
	When Do We Estimate?
	Who Estimates Work?
	What if an Estimate is Large?
	What Does the Estimation Cycle of a New Story Look Like?


	User Stories
	Viewing User Stories
	Creating User Stories
	Create a User Story from the Toolbar
	Create a User Story from the Detail Editor

	Creating Child User Stories
	Create a Child Story from a List View
	Add a New Child User Story from the Detail Editor
	Add an Existing Story as Child User Story

	User Story Fields

	Prioritizing Work
	Drag-and-Drop Ranking
	Rank a List with a Toolbar Action
	Manual Ranking
	Change Your Ranking Method

	Creating Parent-Child Relationships Between Stories
	Manage Parent-Child Story Hierarchies
	Associate Existing User Stories as Children
	Associate Multiple Stories as Children with the Story Hierarchy App
	Remove Parent-Child Associations
	Delete User Story Hierarchies

	View Parent-Child Hierarchies
	Track Hierarchy Completion

	Identifying Dependencies
	Parent-Child Relationships
	Predecessor-Successor Relationships (Dependencies)
	View Dependencies on a List Page
	View Dependencies from a Detail Editor
	Adding User Stories as Predecessors or Successors
	Remove User Story Predecessors or Successors


	Team Planning Page
	Changing Your View of the Team Planning Page
	Reviewing the Backlog on the Team Planning Page
	Scheduling Work Into Iterations Using the Team Planning Page
	Identify Issues on the Team Planning Page
	View Dependencies in the Team Planning Page
	Manage Tasks in the Team Planning Page

	Defining Tasks
	Task State Updates Parent Schedule State
	Viewing Your Tasks
	Creating Tasks
	Create a Task from the Iteration Status Page
	Create a Task from the Release Status Page
	Add a New Task from the Tasks Page
	Add a Task from the Detail Editor
	Add a Task from the Team Board
	Add a Task from a Board-Style App

	Editing Tasks
	Copying Tasks
	Copy Tasks from Another Work Item
	Make a Copy of a Task
	Copy Tasks from a Work Item from the Release Status Page
	Copy Tasks from Detail Pages

	Assign Tasks
	Importing Tasks
	Import Tasks

	Task Fields

	Using Tags
	Create a New Tag
	Assign an Existing Tag to a Work Item
	Remove a Tag from a Work Item

	Using Tags in Saved Views
	Tagging Multiple Items at Once


	Use Timeboxes
	Timebox-Based Planning
	Working with Iterations
	Iteration Planning
	Planning Process
	Iteration Planning Agenda

	Managing Iterations
	Add an Iteration
	Edit an Iteration
	Cascade Iteration Settings
	Update Multiple Iterations
	Delete an Iteration
	View Velocity Chart
	Estimate Velocity for an Iteration
	Schedule Work

	Iteration Fields

	Working with Releases
	Release Planning
	Release Planning Meeting Agenda

	Managing Releases
	Add a Release
	Edit a Release
	Cascade Release Settings
	Update Multiple Releases
	Delete a Release

	Release Fields

	Working with Milestones
	Managing Milestones
	Add a Milestone
	Edit a Milestone
	Update Multiple Milestones
	Associate Artifacts with a Milestone
	Choose an Existing Work Item to Associate to a Milestone
	Add a Work Item to Associate to a Milestone
	Delete Milestones
	View Revisions of a Milestone

	Viewing Milestone Charts
	Milestone Examples


	Timebox-Based Tracking
	Iteration Status Page
	Set Up the Iteration Status Page
	Using the Iteration Progress Banner
	Updating Schedule States from the Iteration Status Page
	Adding Work Items
	Add New Work Items from the Iteration Status Page
	Add New Child or Peer Work Items from the Iteration Status Page
	Ranking Work Items from the Iteration Status Page

	Use the Card Actions Menu
	Print Work Items

	Release Tracking Page
	View Overall Release Status
	Track Features and Work
	Track Across Iterations in a Single Release
	View the Release Burnup Chart

	Release Status Page
	Work Product Status Page
	Release Metrics Page
	Managing Unfinished Work
	Manage Unfinished User Stories
	Move an Unfinished User Story
	Split an Unfinished User Story
	Manage Unfinished Tests



	Use Flow-Based Boards (Kanban)
	Kanban Metrics
	Kanban Principles
	Additional Concepts
	Flow-Based Planning
	Flow-Based Tracking
	Team Board Page
	Set Up Your Team Board
	Customize the Flow State Columns on your Team Board
	Set Up Work In Progress (WIP) Limits
	View Work Rules
	Work with Cards on the Team Board

	Portfolio Kanban Board
	Add a New Work Item from the Portfolio Kanban Board Page
	Mark Cards as Blocked on the Portfolio Kanban Board
	Filter Options
	Add Display Fields to the Cards on the Portfolio Kanban Board
	Change State
	Inline Edit
	Update Cards
	Portfolio Item Discussions
	Visualize Dependencies
	Use the Card Actions Menu

	View Charts
	Smart Cumulative Flow Diagram
	View the Smart Cumulative Flow Diagram
	Settings for the Smart Cumulative Flow Diagram
	Using the Smart Cumulative Flow Diagram to Analyze Your Workflow
	Smart Cumulative Flow Diagram Frequently Asked Questions

	Cycle Time Chart
	Cycle Time and Software Flow Efficiency (SFE)
	Using the Cycle Time Chart
	Cycle Time Report Fields

	Flow Metrics Charts



	Using Portfolio Items
	Finding Portfolio Items
	Portfolio Best Practices
	Structuring Your Project Tree
	Managing Your Portfolio Items

	Portfolio Item Planning
	Creating Portfolio Items
	Create Portfolio Items
	Create a Portfolio From an Existing User Story Hierarchy
	Associate Multiple User Stories and Portfolio Items
	Manually Ranking Portfolio Items
	Drag-and-Drop Rank Portfolio Items
	Block Portfolio Items
	Portfolio Item Fields

	Manage Portfolio Dependencies
	Create New Dependencies
	Link Existing Dependencies
	Edit Dependencies
	Remove Dependencies
	Review Dependencies from Summary Views

	Release Planning Page
	Setting or Updating Planned Velocity
	View Card Details on the Release Planning Page
	Schedule Portfolio Items
	Add and Update Lowest Level Portfolio Items

	Capacity Planning Page
	Designate Planners
	Working with Capacity Plans
	Select Work for the Backlog
	Select Teams and Allocate Work
	Share Portfolio Items
	View the Plan Summary
	Publish a Plan
	Viewing Plan Progression

	Using Investments
	Create a New Investment
	Create and Associate a Portfolio Item with an Investment
	Associate an Existing Work Item with an Investment
	Remove a Portfolio Item from an Investment
	Tracking the Status of an Investment
	View Dependencies


	Portfolio Item Tracking
	Using the Portfolio Items Page
	Using the Portfolio Kanban Board
	Using the Custom List App to Track Portfolio Items

	Using the Timeline Page
	View Portfolio Item Progress on the Timeline Page
	Filter the Timeline Page
	Adjust Portfolio Item Date Ranges on the Timeline Page
	Adjusting Your Timeline Page View
	View Milestones on the Timeline Page
	View Dependencies on the Timeline Page
	Use Edit Mode on the Timeline Page
	Move Portfolio Items on the Timeline Page


	Using Objectives and Key Results (OKRs) in Rally
	Associating OKRs with Work
	Creating OKRs
	Create an Objective
	Add Key Results to an Objective
	Enter a Confidence Score

	Viewing OKRs
	Associate Work with an OKR
	Add a Sub-Objective to an Objective
	Manage Objectives from the Toolbar
	Add a Discussion to an Objective
	Import Objectives for OKRs
	Import OKRs Using the Template
	Example CSV Formats for Importing OKRs


	Creating an OKR Hierarchy in Rally
	Examples of OKR Hierarchies


	Check Status
	Collaborate With Team Members
	@mentions
	Discussions
	Attachments
	Dashboards
	Shared Views, Pages, and Apps

	Report Blocked Work
	Mark a Work Item or Portfolio Item as Blocked
	View Blocked Work Items

	View Build Status
	View Changesets Associated with a Work Item
	Display Build Reports on Your Dashboard or Custom Page
	Build Status Analytics

	View Revision History
	View Team Status Page

	Managing Defects and Defect Suites
	Defects
	Viewing Defects
	Creating Defects
	Editing Defects
	Managing Duplicate Defects
	Delete a Defect
	Defect Fields

	Defect Suites
	Viewing Defect Suites
	Create a Defect Suite
	Adding Defects to a Defect Suite
	Editing Defect Suites
	Delete a Defect Suite
	Defect Suite Fields


	Managing Tests
	Rally Test Management Overview
	Test Management Related Rally Pages

	Test Cases
	Creating Test Cases
	Create and Associate a Test Case with a Work Item
	Associate an Existing Test Case with a Work Item
	Associate an Existing Test Case with a Test Plan (Test Folder)
	Create a Standalone Test Case
	Associate an Existing Standalone Test Case with a Work Item

	Add Test Case Details
	Adding Defects to Test Cases
	Edit a Test Case
	Delete a Test Case
	Import Test Cases
	Example CSV Formats for Importing Test Cases

	Export Test Cases
	Test Case Fields

	Test Plans
	Creating Test Folders
	Edit a Test Folder
	Delete Test Folders
	Adding Test Cases to Test Folders
	Rank Test Cases in a Test Folder
	Remove a Test Case from a Test Folder
	View the Status of Test Cases in a Test Folder
	View a Test Run from a Plan

	Test Case Results
	Set Up the Test Cases Page to View Test Case Results
	Add a New Test Case Result
	Edit a Test Case Result
	Delete a Test Case Result
	Test Case Result Fields

	Test Runs
	View a Test Run Associated with a Work Item
	View a Test Run Associated with a Test Case
	View a Test Run from a Test Set
	View a Test Run from a Test Plan

	Test Sets
	Create a Test Set
	Add Test Cases to a Test Set
	Edit a Test Set
	Re-Order Test Cases in a Test Set
	Copy a Test Set
	View a Test Run
	Delete a Test Set
	Remove a Test Case From a Test Set
	Test Set Fields

	Quality Management
	Using the Quality Management Page
	Create a Test Folder or Test Case
	Edit a Test Case or Test Folder with the Detail Editor
	Edit Multiple Fields in a Test Case or Test Folder
	Delete Test Folders or Test Cases

	Test Folders
	Test Cases


	Managing Risks
	Create a Risk in Work Views
	Create a Risk on a Work Item
	Link a Risk to a Work Item
	Risk Fields
	Viewing and Editing Risks
	How to ROAM Risks With a Custom Board

	Importing and Exporting Data
	Import Data
	Export Data
	Exporting Data as XML


	Reporting
	Rally Reports and Charts
	Burndown / Burnup Charts
	Iteration Burndown Chart
	Iteration Burnup Chart
	Release Burnup Chart
	Story Burnup Chart
	Story Burndown Chart
	Tagged Story Burndown Chart

	Cumulative Flow Charts
	Iteration Cumulative Flow Diagram Chart
	Release Cumulative Flow Diagram Chart
	Story Cumulative Flow Diagram Chart

	Throughput and Velocity Charts
	Cycle/Lead Time Chart
	Throughput Chart
	Velocity Chart

	Defect Analysis Charts
	Iteration Defects by Priority Chart
	Iteration Defects by State Chart
	Defects by Priority Chart
	Defects by State Chart
	Defect Trend Chart
	Release Defect Trend Chart
	Top Files by Defects Chart

	Build Health Charts
	Build Health Chart
	Build Health by Iteration Chart
	Top Files by Changes Chart

	Custom Reports
	How to Troubleshoot Chart-Related Issues

	Track and Report Billable Time
	Enter Your Time
	Add Timesheet Entries
	Enter Hours on a Timesheet
	Remove Timesheet Entries

	Generate Timesheet Reports
	Generate a Timesheet Report
	Save a Timesheet Report
	Generate a Capitalization Report
	Generate a Billing Report
	Report Time Spent on Top-Level Stories
	Generate Weekly Time Cards
	Export Timesheet Reports


	Rally Insights
	Tour of Rally Insights
	Rally Insights Metrics
	Make Data Work for You
	Set Up Rally Insights
	Viewing Metrics
	Virtual Workspaces within the Rally Insights Page

	View Your Overall Performance
	View the Different Dimensions
	View Full Time Equivalent (FTE) Values on the Insights Page

	Use the Individual Dimensions
	Performance Index Calculation
	SDPI Measurements

	Insights Frequently Asked Questions
	Capturing Data Correctly for Insights
	How to View Rally Insights
	Differences in Quarterly Percentile Scores and Monthly Scores
	Closed or Reparented Projects and Historical Data
	Expected Differences in the Number of Items in Throughput and Time In Process Drill Downs



	Integrating with Rally
	Rally Integrations Best Practices
	Getting Started with Enterprise Integration Framework
	Using Create and Update Services
	Managing the Logger and Log Files
	Multiple Configuration Files
	Using Field Handlers
	Upgrading a Rally Connector on a Windows Machine
	Upgrading a Rally Connector on a Non-Windows Machine
	How to Map Fields
	Connector Lockfile
	Running as a Scheduled Task on Windows
	Email Notification of Errors and Warnings
	Finding XML Syntax Errors
	Known Limitations of the EIF Connectors
	Generic Errors Generated by the EIF Connectors

	Supported Versions for Rally Connectors
	Download Rally Connectors
	Deprecated Connectors
	Rally Integrations
	Agile Requirements Designer
	Applitools Eyes (Third-Party Integration)
	Atlassian Jira (OpsHub)
	Blueprint (OpsHub)
	BMC Release Process Management (Third-Party Integration)
	BMC Remedy (Kovair Omnibus)
	BMC Remedy (OpsHub)
	Caliber (OpsHub)
	Centrify
	Clarity™
	CloudBees (Third-Party Integration)
	Digite SwiftKanban (OpsHub)
	Enterprise Integration Framework (EIF) Connectors
	Enterprise Tester (Third-Party Integration)
	Fog Creek FogBugz (OpsHub)
	Git
	Rally VCS Connector for Git Installation and User Guide
	Set Up Git
	Set Up Rally for the Git Connector
	Configure the Git to Rally Connector
	Run the Git to Rally Connector
	Extensions
	Troubleshooting the Git to Rally Connector
	Git to Rally Connector Revision History

	Git (OpsHub)

	IBM ClearQuest (OpsHub)
	IBM DOORS (OpsHub)
	IBM Rational ClearCase (OpsHub)
	IBM Rational Team Concert (OpsHub)
	IBM RequisitePro (OpsHub)
	Jama Connect (Jama Connect Integrations)
	Jenkins
	Rally Build Connector for Jenkins Installation and User Guide
	Run the Rally Build Connector for Jenkins
	Troubleshooting the Rally Build Connector for Jenkins
	Appendix A - Configuration File for the Rally Build Connector for Jenkins
	Appendix B - Handling Duplicate Names in Jenkins
	Appendix C - Rally Project Specification
	Rally Build Connector for Jenkins Revision History


	Jenkins Integration with Rally Software and GitHub (OpsHub)
	Mercurial
	Rally VCS Connector for Mercurial Installation and User Guide
	Install the Mercurial to Rally Connector
	Configure Mercurial
	Configure Rally for the Mercurial Connector
	Configure the Mercurial to Rally Connector
	Run the Mercurial to Rally Connector
	Extend the Connector
	Troubleshoot the Mercurial to Rally Connector
	Rally VCS Connector for Mercurial Revision History


	Micro Focus
	Micro Focus ALM/QC Integration with Rally Software (OpsHub)
	Micro Focus ALM/Quality Center
	Installation and User Guide for the Rally Connector for Micro Focus ALM/Quality Center
	Install the Rally Connector for Micro Focus ALM/Quality Center
	Connector Setup
	Rally Setup for the Micro Focus ALM/Quality Center Connector
	Rally Connector for Micro Focus ALM/Quality Center Configuration
	Work Item Mode
	Test Mode
	Field Mapping
	CopySelector and UpdateSelector
	Selectors and Requirements
	Map Micro Focus ALM/Quality Center Markup Fields
	Map Micro Focus ALM/Quality Center Attachments
	Map Dates
	Map TS_NAME
	Map RQ_REQ_NAME
	Map TS_LINKED_REQ and BG_LINKED_REQ
	Map Reference Fields from Micro Focus ALM/Quality Center
	Map Rally Test Result to Test Case (Required for Runs)
	Map Run Dates (Required for Runs)
	Map Rally Test Case to Rally Story (Optional for Tests)
	Multiple Configuration Files

	XML Tags
	Run the Connector
	Manage Tests and Test Cases Using the Rally Connector for Micro Focus ALM/Quality Center
	Copy Tests and Runs from Micro Focus ALM/Quality Center to Rally
	Copy Test Cases from Rally to Micro Focus ALM/Quality Center
	Update Test Cases from Rally to Micro Focus ALM/Quality Center
	Update Test Cases from Micro Focus ALM/Quality Center to Rally
	Link Rally Stories to Micro Focus ALM/Quality Center Test Cases

	Troubleshoot the Rally Connector for Micro Focus ALM/Quality Center
	Best Practices
	Rally Connector for Micro Focus ALM/Quality Center Revision History

	Sample Configuration Files for Micro Focus ALM/Quality Center

	Microsoft Team Foundation Server (Team Foundation Version Control)
	Rally VCS Connector for TFS (TFVC) Installation Guide
	Install the Rally VCS Connector for TFS (TFVC)
	Configure TFS
	Configure Rally for the TFS (TFVC) Connector
	Rally VCS Connector for TFS (TFVC) Setup
	Run the Connector
	Extend the Connector
	Troubleshoot the Rally VCS Connector for TFS (TFVC)
	Rally VCS Connector for TFS (TFVC) Revision History

	Sample Configuration Files for VCS TFS

	Microsoft TFS/VSTS for Work Items
	Work Item Connector for Microsoft TFS/VSTS Installation and User Guide
	Install the Work Item Connector for Microsoft TFS/VSTS
	TFS Setup
	Rally Setup for Microsoft TFS/VSTS
	Connector for Microsoft TFS/VSTS Configuration
	XML Tags
	Run the Work Item Connector for Microsoft TFS/VSTS
	Copy Story-Task Bundles from Rally to TFS
	Troubleshooting the Work Item Connector for Microsoft TFS/VSTS
	Revision History


	Okta
	Ping Identity
	piplanning App (Third-Party Integration)
	Planisware (Third-Party Integration)
	Policy-Based VCS Connectors
	Azure DevOps Server (OpsHub)
	Rally VCS Connector for Bitbucket
	Install the Rally VCS Connector for Bitbucket
	Setup the Rally VCS Connector for Bitbucket
	Operation of the Rally VCS Connector for Bitbucket
	Troubleshooting the Rally VCS Connector for Bitbucket
	Appendix A - Configuration File for the Rally VCS Connector for Bitbucket
	Rally VCS Connector for Bitbucket Revision History

	Rally VCS Connector for GitHub and GitHub Enterprise
	Install the Rally VCS Connector for GitHub and GitHub Enterprise
	Setup the Rally VCS Connector for GitHub and GitHub Enterprise
	Configure the Rally VCS Connector for GitHub and GitHub Enterprise
	Operation of the Rally VCS Connector for GitHub and GitHub Enterprise
	Extensions
	Troubleshooting the Rally VCS Connector for GitHub and GitHub Enterprise
	Appendix A - Configuration File for the Rally VCS Connector for GitHub and GitHub Enterprise
	Rally VCS Connector for GitHub and GitHub Enterprise Revision History

	Rally VCS Connector for TFS/VSTS (Git)
	Install the Rally VCS Connector for TFS 2017/VSTS 2017
	Setup the Rally VCS Connector for TFS 2017/VSTS 2017
	Operation of the Rally VCS Connector for TFS 2017/VSTS 2017
	Troubleshooting the Rally VCS Connector for TFS 2017/VSTS 2017
	Appendix A - Configuration File for the Rally VCS Connector for TFS 2017/VSTS 2017
	Rally VCS Connector for VSTS 2017/TFS 2017 Revision History


	PractiTest (Third-Party Integration)
	ProdPad (Third-Party Integration)
	QMetry (Third-Party Integration)
	qTest (Third-Party Integration)
	Rally Adapter for Jira
	Rally Adapter for Jira Functionality
	Adapter Functionality Limitations
	Rich Text Field Formatting
	Adapter Functionality Frequently Asked Questions

	Rally Adapter for Jira Release Notes
	Rally Adapter for Jira Release and Support Lifecycle Dates
	Installing the Rally Adapter for Jira
	Setting Up the Rally Adapter for Jira
	Maintaining the Rally Adapter for Jira
	Backup/Restore (Snapshots)
	Backup/Restore (Scripts)
	Troubleshooting (Support Bundle)
	Update the KOTS Application

	Rally Adapter for Jira Configuration Guide
	Syncing Rally Tags and Jira Labels
	Adapter Database Options
	Rally Adapter for Jira Dashboard Apps
	Adapter Security

	Troubleshooting the Rally Adapter for Jira

	Rally-Jira Work Item Connector (WIC)
	Rally-Jira Work Item Connector Installation and User Guide
	Install the Rally-Jira WIC
	Setup Jira for the Rally-Jira WIC
	Rally Setup for the Rally-Jira WIC
	Set Up Rally States and Resolutions

	Configure the Rally-Jira WIC
	Edit the Configuration File
	Field Handlers for the Rally-Jira WIC

	Rally-Jira WIC Configuration File Tags Using YML
	Rally-Jira WIC Configuration File Tags Using XML
	Run the Rally-Jira WIC
	Rally-Jira WIC Workflows
	Rally-Jira WIC Best Practices
	Troubleshoot the Rally-Jira WIC
	Rally-Jira WIC Revision History


	Rally Add-in for Excel 2016 and Excel for Microsoft 365
	Rally Add-In for Excel 2016 and Excel for Microsoft 365 Installation and User Guide
	Install the Microsoft Excel 2016 Add-In
	Uninstall the Microsoft Excel 2016 Add-In
	Authentication for the Microsoft Excel 2016 Add-In
	Export Data from Rally to Excel
	Refresh Exported Data
	Import Data from Microsoft Excel to Rally
	Troubleshooting the Microsoft Excel 2016 Add-In
	Microsoft Excel 2016 Add-In Revision History


	Rally Add-in for Microsoft Excel 2010 and 2013
	Rally Add-in for Excel 2010 and 2013 Installation and User Guide
	Install the Excel Add-In
	Uninstall the Excel Add-In
	Set up the Add-In in Excel
	Authentication for the Excel Add-In
	Export Data from Rally to Excel
	Import Data from Excel to Rally
	Troubleshooting the Excel Add-In
	Excel Add-In Revision History


	Rally Bot GitHub App Integration
	Install the Rally Bot GitHub App Integration
	Update the Rally Bot GitHub App Integration Settings
	Remove the Rally Bot GitHub App Integration
	Using the Rally Bot GitHub App Integration
	View Rally Bot Connections from a Work Item
	View Rally Bot Connections on a Board or List View
	View a Rally Bot Connection in GitHub


	Rally Build Connector for Bamboo
	Rally Build Connector for Bamboo Operation
	Troubleshooting the Rally Build Connector for Bamboo
	Appendix A - Editing the Rally Build Connector for Bamboo Configuration File
	Appendix B - Bamboo Plan Specification
	Appendix C - AgileCentral Project Specification
	Appendix D - Protect Credentials
	Rally Build Connector for Bamboo Revision History

	Rally Database Connector (Microsoft SQL Server)
	Install the Rally Database Connector (Microsoft SQL Server)
	Setup the Rally Database Connector (Microsoft SQL Server)
	Rally Database Connector (Microsoft SQL Server) Operation
	Troubleshooting the Rally Database Connector (Microsoft SQL Server)
	Appendix A - Rally Database Connector (Microsoft SQL Server) Configuration File
	Appendix B - Rally Project Specification for the Rally Database Connector (Microsoft SQL Server)
	Rally Database Connector (Microsoft SQL Server) Revision History

	Rally Database Connector (Postgres)
	Install the Rally Database Connector (Postgres)
	Setup the Rally Database Connector (Postgres)
	Rally Database Connector (Postgres) Operation
	Troubleshooting the Rally Database Connector (Postgres)
	Appendix A - Rally Database Connector (Postgres) Configuration File
	Appendix B - Rally Project Specification for the Rally Database Connector (Postgres)
	Appendix C - Postgres Database User Privileges
	Rally Database Connector (Postgres) Revision History

	Rally Integration with ServiceNow DevOps (Third-Party Integration)
	Salesforce (OpsHub)
	SD Elements (Third-Party Integration)
	Serena Business Manager (OpsHub)
	ServiceNow (OpsHub)
	Silk Central Test Manager (Third-Party Integration)
	Subversion to Rally
	Rally VCS Connector for Subversion Installation and User Guide
	Set Up Rally for the Subversion Connector
	Set Up the Subversion Connector
	Install the Subversion Connector
	Run the Rally VCS Connector for Subversion
	Extend the Rally VCS Connector for Subversion
	Install the Rally VCS Connector for Subversion on Linux
	Troubleshoot the Rally VCS Connector for Subversion
	Rally VCS Connector for Subversion Revision History


	TestRail (Third-Party Integration)
	Testuff (Third-Party Integration)
	Third-Party Context
	UX360 (Third-Party Integration)
	ValueOps Connectors Powered by Tasktop
	Vim (Third-Party Integration)
	Work Item Connector API Key Support
	ZAPTEST (Third-Party Integration)
	Zendesk (OpsHub)

	Building Rally Integrations
	Web Services API (WSAPI)
	Advanced WSAPI Rally Topics
	Java Toolkit for Accessing the Rally Web Services API
	.NET Toolkit for Accessing the Rally Web Services API
	Node.js Toolkit for Accessing the Rally Web Services API
	Python Toolkit for Accessing the Rally Web Services API
	Ruby Toolkit for Accessing the  Rally Web Services API


	Idea Manager
	Rally Idea Manager for End Users
	Find Ideas
	View Others' Ideas
	View Idea Status
	Comment on an Idea
	Vote on a Idea
	Select Favorite Ideas
	Subscribe to an Idea

	Rally Idea Manager for Administrators
	Manage Ideas
	Change the Status of an Idea
	Edit an Idea
	Organize Ideas
	Promote an Idea to a Work Item
	Specify Idea Details
	Update or Hide an Idea
	View a User's Ideas
	Reports
	Share Idea Links

	Manage Your Site and Users
	Set Up Your Site Features
	Add Users
	Manage Users
	Set Up User Guidance

	Rally Idea Manager Integration Setup
	Create a User in Rally for Rally Idea Manager
	Create Custom Fields in Rally
	Define the Parameters for the Connection to Rally

	Manage Multiple WebStorms
	Multi-WebStorm Navigation
	Customize Your WebStorm
	Manage Users and Groups
	Monitor WebStorm Usage
	Create a New WebStorm
	Manage Webstorms
	Authenticate Users

	Set Up Site Features
	API Access



	Extending Rally with Apps
	Using Rally Apps
	App Basics
	Customizable Apps
	Apps Not Available for Rally On-Premises
	App Catalog
	Agile EVM
	Blocked Work
	Build Health
	Build Health by Iteration
	Clarity Timesheet
	Adding and Configuring the Clarity Timesheet App
	Using the Clarity Timesheet App

	Cross-Workspace Release Status
	Custom Board
	Configure the Custom Board App
	Custom Board Cards
	Custom Board App Actions

	Custom HTML
	Custom List
	Configure the Custom List App
	Add New Work Items in a Custom List App
	Add a Peer or Child Inline in a Custom List App
	Sort Items in a Custom List App
	Use Filters and Custom Queries in a Custom List App
	Saved and Shared Views in a Custom List App
	Select Columns to Show in a Custom List App
	Pagination in a Custom List App
	Import, Export, and Print
	Bulk Edit in a Custom List App
	Bulk Tagging in a Custom List App
	Bulk Parent or Associate in a Custom List App
	Custom List Examples

	Custom List 2.0 App
	Configure the Custom List 2.0 App
	Create New Work Items Using the Custom List 2.0 App
	View Work Items Using the Custom List 2.0 App
	Edit Work Items in the Custom List 2.0 App

	Custom URL
	Cycle/Lead Time
	Defect Summary Matrix
	Defect Trend
	Defects by Priority
	Defects by State
	Dependency Status Dashboard
	Dependency Status Dashboard #2
	Estimation Board
	Getting Started for Contributors
	Getting Started for Executives
	Getting Started for Organizers
	Incomplete Stories for Current Iteration
	Iteration Burndown
	Iteration Burnup
	Iteration Cumulative Flow
	Iteration Dashboard
	Iteration Defects by Priority
	Iteration Defects by State
	Iteration Planning Board App
	Set Up the Iteration Planning Board App
	Scheduling Work Items In the Iteration Planning Board App
	Filter Cards in the Iteration Planning Board App
	Update Work Items in the Iteration Planning Board App
	Create and Update Tasks with the Iteration Planning Board App
	View and Update Discussions in the Iteration Status Board App
	View and Update Associated Defects in the Iteration Planning Board App
	Available Iteration Planning Board App Actions

	Iteration Scope Change
	Iteration Summary
	Iteration Summary App Data

	Iteration Tracking
	Configure the Iteration Tracking App
	View Iteration Tracking Information
	Import and Export Options
	Switch Between Board and List Views
	Use the List View
	Use the Board View of the Iteration Tracking App


	Kanban Board
	Set Up the Kanban Board App
	Using Cards on the Kanban Board App
	View and Update Discussions within the Kanban Board App
	View and Update Tasks within the Kanban Board App
	Viewing and Updating Associated Defects
	Filter by Tag
	Filter by Owner
	Exit Agreements in the Kanban Board App
	Available Kanban Board Actions

	Milestone Burnup
	Milestone Cumulative Flow
	My Availability
	My Defects
	My Notifications
	My Tasks
	My Test Cases
	Open Defect Age
	Planned vs. Actual Burndown Chart
	Portfolio Hierarchy
	Portfolio Item Burnup
	Portfolio Item Cumulative Flow
	Portfolio Item Timeline
	Portfolio Kanban Board App
	Set Up the Portfolio Kanban Board App
	Portfolio Kanban Board App Filter Options
	Select Fields to Show on Cards in the Portfolio Kanban Board App
	Select the Portfolio Item Type to View
	Save and Share Views in the Portfolio Kanban Board App
	Change the State of a Portfolio Item in the Portfolio Kanban Board App
	Inline Edit Fields in the Portfolio Kanban Board App
	Collapse or Expand Columns in the Portfolio Kanban Board App
	Card Actions
	Portfolio Item Discussions in the Portfolio Kanban Board App
	Visualize Dependencies in the Portfolio Kanban App
	Multiple Kanban Boards

	Work-in-Progress (WIP) Limits in the Portfolio Kanban Board App
	Create Exit Policies for the Portfolio Kanban Board App

	Print Story Cards
	Print Task Cards
	Project Cumulative Flow
	Ready to Accept
	Recent Activity
	Release & Iteration Burndown
	Release Burnup
	Release Cumulative Flow
	Release Dashboard
	Release Defect Trend
	Release Dependencies
	Release Planning Board
	Configure Project Scope
	Schedule Portfolio Items
	Add and Update Lowest Level Portfolio Items
	Filter Cards
	Save and Share Views
	Available Release Planning Board Actions

	Release Scope Change
	Release Summary
	Source Code Check-In
	Story Deep Copy
	Story Hierarchy
	Story Map
	Super Customizable Iteration Chart
	Super Customizable Release Chart
	System Requirement Validation Document
	Task Board
	Configure the Task Board App
	Update States in the Task Board App
	View or Edit Task Details in the Task Board App
	Add a New Task with the Task Board App
	Filter Cards in the Task Board App
	Select Fields to Show on Cards within the Task Board App
	Mark Task Board App Cards as Blocked or Ready-to-Pull
	Choose a Color for Cards in the Task Board App
	Copy or Delete a Card in the Task Board App
	Task Board Actions

	Team Member Board
	Throughput
	Tip of the Day
	Traceability Matrix
	Unassigned Tasks for Current Iteration
	User Lookup
	Velocity Chart

	Build App Queries
	Dates in App Queries
	General Query Examples
	Portfolio Item Query Examples

	Community App Catalog
	Subscription Level App Catalog
	App Deprecation

	Building Apps for Rally
	Rally Apps on GitHub
	Standards and Policies for App Sharing


	Rally On-Premises Edition
	What's New in Rally On-Premises
	Saved and Shared Views Migration
	Quick Views
	Shared and Saved Views
	Migration Issues
	Rank Column for Migrated Views
	Date Fields for Migrated Views
	"No Entry" Filters for Migrated Views
	Saved Views that Trigger a Whoops! Page



	Rally On-Premises versus SaaS
	Rally On-Premises Release Notes
	Rally On-Premises Version 2.1.0 Release Notes
	Rally On-Premises Version 2.1.1 Patch Notes

	Rally On-Premises Version 2.0 Release Notes
	Rally On-Premises Version 2.0.2 Patch Notes
	Rally On-Premises Version 2.0.1 Patch Notes



	Rally for FedRAMP
	Glossary
	Documentation Legal Notice

